topic,paper_ID,sentence_ID,sentence,words,BIO,POS,length
constituency_parsing,8,2,Constituency Parsing with a Self - Attentive Encoder,"['Constituency', 'Parsing', 'with', 'a', 'Self', '-', 'Attentive', 'Encoder']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', 'IN', 'DT', 'NNP', ':', 'JJ', 'NN']",8
constituency_parsing,8,16,"In this paper , we introduce a parser that combines an encoder built using this kind of self - attentive architecture with a decoder customized for parsing ( ) .","['In', 'this', 'paper', ',', 'we', 'introduce', 'a', 'parser', 'that', 'combines', 'an', 'encoder', 'built', 'using', 'this', 'kind', 'of', 'self', '-', 'attentive', 'architecture', 'with', 'a', 'decoder', 'customized', 'for', 'parsing', '(', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'VBN', 'VBG', 'DT', 'NN', 'IN', 'NN', ':', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBN', 'IN', 'VBG', '(', ')', '.']",30
constituency_parsing,8,24,"We also present a version of our model that uses a character LSTM , which performs better than other lexical representationseven if word embeddings are removed from the model .","['We', 'also', 'present', 'a', 'version', 'of', 'our', 'model', 'that', 'uses', 'a', 'character', 'LSTM', ',', 'which', 'performs', 'better', 'than', 'other', 'lexical', 'representationseven', 'if', 'word', 'embeddings', 'are', 'removed', 'from', 'the', 'model', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBD', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'NNP', ',', 'WDT', 'VBZ', 'JJR', 'IN', 'JJ', 'JJ', 'NN', 'IN', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', '.']",30
constituency_parsing,8,163,6 Results,"['6', 'Results']","['O', 'B-n']","['CD', 'NNS']",2
constituency_parsing,8,164,English ( WSJ ),"['English', '(', 'WSJ', ')']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', '(', 'NNP', ')']",4
constituency_parsing,8,168,"The test score of 93.55 F1 for our CharLSTM parser exceeds the previous best numbers for single - system parsers trained on the Penn Treebank ( without the use of any external data , such as pre-trained word embeddings ) .","['The', 'test', 'score', 'of', '93.55', 'F1', 'for', 'our', 'CharLSTM', 'parser', 'exceeds', 'the', 'previous', 'best', 'numbers', 'for', 'single', '-', 'system', 'parsers', 'trained', 'on', 'the', 'Penn', 'Treebank', '(', 'without', 'the', 'use', 'of', 'any', 'external', 'data', ',', 'such', 'as', 'pre-trained', 'word', 'embeddings', ')', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'IN', 'CD', 'NNP', 'IN', 'PRP$', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', 'JJS', 'NNS', 'IN', 'JJ', ':', 'NN', 'NNS', 'VBD', 'IN', 'DT', 'NNP', 'NNP', '(', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', ',', 'JJ', 'IN', 'JJ', 'NN', 'NNS', ')', '.']",41
constituency_parsing,8,169,"When our parser is augmented with ELMo word representations , it achieves a new state - of - the - art score of 95.13 F1 on the WSJ test set .","['When', 'our', 'parser', 'is', 'augmented', 'with', 'ELMo', 'word', 'representations', ',', 'it', 'achieves', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'score', 'of', '95.13', 'F1', 'on', 'the', 'WSJ', 'test', 'set', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['WRB', 'PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'NNP', 'NN', 'NNS', ',', 'PRP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'CD', 'NNP', 'IN', 'DT', 'NNP', 'NN', 'NN', '.']",31
constituency_parsing,8,171,Multilingual ( SPMRL ),"['Multilingual', '(', 'SPMRL', ')']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', '(', 'NNP', ')']",4
constituency_parsing,8,178,"Development set results show that the addition of word embeddings to a model that uses a character LSTM has a mixed effect : it improves performance for some languages , but hurts for others .","['Development', 'set', 'results', 'show', 'that', 'the', 'addition', 'of', 'word', 'embeddings', 'to', 'a', 'model', 'that', 'uses', 'a', 'character', 'LSTM', 'has', 'a', 'mixed', 'effect', ':', 'it', 'improves', 'performance', 'for', 'some', 'languages', ',', 'but', 'hurts', 'for', 'others', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O']","['NNP', 'VBD', 'NNS', 'VBP', 'IN', 'DT', 'NN', 'IN', 'NN', 'NNS', 'TO', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'PRP', 'VBZ', 'NN', 'IN', 'DT', 'NNS', ',', 'CC', 'NNS', 'IN', 'NNS', '.']",35
constituency_parsing,8,180,"On 8 of the 9 languages , our test set result exceeds the previous best - published numbers from any system we are aware of .","['On', '8', 'of', 'the', '9', 'languages', ',', 'our', 'test', 'set', 'result', 'exceeds', 'the', 'previous', 'best', '-', 'published', 'numbers', 'from', 'any', 'system', 'we', 'are', 'aware', 'of', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'CD', 'IN', 'DT', 'CD', 'NNS', ',', 'PRP$', 'NN', 'VBN', 'NN', 'VBZ', 'DT', 'JJ', 'JJS', ':', 'VBN', 'NNS', 'IN', 'DT', 'NN', 'PRP', 'VBP', 'JJ', 'IN', '.']",26
constituency_parsing,1,2,Cloze - driven Pretraining of Self - attention Networks,"['Cloze', '-', 'driven', 'Pretraining', 'of', 'Self', '-', 'attention', 'Networks']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'JJ', 'NNP', 'IN', 'NNP', ':', 'NN', 'NNS']",9
constituency_parsing,1,4,We present a new approach for pretraining a bi-directional transformer model that provides significant performance gains across a variety of language understanding problems .,"['We', 'present', 'a', 'new', 'approach', 'for', 'pretraining', 'a', 'bi-directional', 'transformer', 'model', 'that', 'provides', 'significant', 'performance', 'gains', 'across', 'a', 'variety', 'of', 'language', 'understanding', 'problems', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NN', 'JJ', 'NNS', '.']",24
constituency_parsing,1,9,Language model pretraining has recently been shown to provide significant performance gains for a range of challenging language understanding problems .,"['Language', 'model', 'pretraining', 'has', 'recently', 'been', 'shown', 'to', 'provide', 'significant', 'performance', 'gains', 'for', 'a', 'range', 'of', 'challenging', 'language', 'understanding', 'problems', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'VBN', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'VBG', 'NN', 'JJ', 'NNS', '.']",21
constituency_parsing,1,11,"In this paper , we show that even larger performance gains are possible by jointly pretraining both directions of a large language - model - inspired self - attention cloze model .","['In', 'this', 'paper', ',', 'we', 'show', 'that', 'even', 'larger', 'performance', 'gains', 'are', 'possible', 'by', 'jointly', 'pretraining', 'both', 'directions', 'of', 'a', 'large', 'language', '-', 'model', '-', 'inspired', 'self', '-', 'attention', 'cloze', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'IN', 'RB', 'JJR', 'NN', 'NNS', 'VBP', 'JJ', 'IN', 'RB', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', ':', 'NN', ':', 'VBN', 'PRP', ':', 'NN', 'NN', 'NN', '.']",32
constituency_parsing,1,12,Our bi-directional transformer architecture predicts every token in the training data ( ) .,"['Our', 'bi-directional', 'transformer', 'architecture', 'predicts', 'every', 'token', 'in', 'the', 'training', 'data', '(', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['PRP$', 'JJ', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '(', ')', '.']",14
constituency_parsing,1,13,We achieve this by introducing a cloze - style training objective where the model must predict the center word given left - to - right and right - to - left context representations .,"['We', 'achieve', 'this', 'by', 'introducing', 'a', 'cloze', '-', 'style', 'training', 'objective', 'where', 'the', 'model', 'must', 'predict', 'the', 'center', 'word', 'given', 'left', '-', 'to', '-', 'right', 'and', 'right', '-', 'to', '-', 'left', 'context', 'representations', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'IN', 'VBG', 'DT', 'JJ', ':', 'NN', 'NN', 'NN', 'WRB', 'DT', 'NN', 'MD', 'VB', 'DT', 'NN', 'NN', 'VBN', 'VBD', ':', 'TO', ':', 'NN', 'CC', 'JJ', ':', 'TO', ':', 'NN', 'JJ', 'NNS', '.']",34
constituency_parsing,1,14,Our model separately computes both forward and backward states with * Equal contribution . :,"['Our', 'model', 'separately', 'computes', 'both', 'forward', 'and', 'backward', 'states', 'with', '*', 'Equal', 'contribution', '.', ':']","['B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP$', 'NN', 'RB', 'VBZ', 'DT', 'RB', 'CC', 'VB', 'NNS', 'IN', 'NNP', 'NNP', 'NN', '.', ':']",15
constituency_parsing,1,110,Experimental setup,"['Experimental', 'setup']","['B-n', 'I-n']","['JJ', 'NN']",2
constituency_parsing,1,128,"CNN models use an adaptive softmax in the output : the headband contains the 60K most frequent types with dimensionality 1024 , followed by a 160 K band with dimensionality 256 . with a momentum of 0.99 and we renormalize gradients if their norm exceeds 0.1 .","['CNN', 'models', 'use', 'an', 'adaptive', 'softmax', 'in', 'the', 'output', ':', 'the', 'headband', 'contains', 'the', '60K', 'most', 'frequent', 'types', 'with', 'dimensionality', '1024', ',', 'followed', 'by', 'a', '160', 'K', 'band', 'with', 'dimensionality', '256', '.', 'with', 'a', 'momentum', 'of', '0.99', 'and', 'we', 'renormalize', 'gradients', 'if', 'their', 'norm', 'exceeds', '0.1', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'DT', 'NN', 'VBZ', 'DT', 'CD', 'JJS', 'JJ', 'NNS', 'IN', 'NN', 'CD', ',', 'VBN', 'IN', 'DT', 'CD', 'NNP', 'NN', 'IN', 'NN', 'CD', '.', 'IN', 'DT', 'NN', 'IN', 'CD', 'CC', 'PRP', 'VBP', 'NNS', 'IN', 'PRP$', 'NN', 'VBZ', 'CD', '.']",47
constituency_parsing,1,129,The learning rate is linearly warmed up from 10 ? 7 to 1 for 16 K steps and then annealed using a cosine learning rate schedule with a single phase to 0.0001 .,"['The', 'learning', 'rate', 'is', 'linearly', 'warmed', 'up', 'from', '10', '?', '7', 'to', '1', 'for', '16', 'K', 'steps', 'and', 'then', 'annealed', 'using', 'a', 'cosine', 'learning', 'rate', 'schedule', 'with', 'a', 'single', 'phase', 'to', '0.0001', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'RP', 'IN', 'CD', '.', 'CD', 'TO', 'CD', 'IN', 'CD', 'NNP', 'NNS', 'CC', 'RB', 'VBD', 'VBG', 'DT', 'NN', 'VBG', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'CD', '.']",33
constituency_parsing,1,130,We run experiments on DGX - 1 machines with 8 NVIDIA V100 GPUs and machines are interconnected by Infiniband .,"['We', 'run', 'experiments', 'on', 'DGX', '-', '1', 'machines', 'with', '8', 'NVIDIA', 'V100', 'GPUs', 'and', 'machines', 'are', 'interconnected', 'by', 'Infiniband', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['PRP', 'VBP', 'NNS', 'IN', 'NNP', ':', 'CD', 'NNS', 'IN', 'CD', 'NNP', 'NNP', 'NNP', 'CC', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', '.']",20
constituency_parsing,1,131,We also use the NCCL2 library and the torch .,"['We', 'also', 'use', 'the', 'NCCL2', 'library', 'and', 'the', 'torch', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NNP', 'NN', 'CC', 'DT', 'NN', '.']",10
constituency_parsing,1,135,Results,['Results'],['B-n'],['NNS'],1
constituency_parsing,1,136,GLUE,['GLUE'],['B-n'],['NN'],1
constituency_parsing,1,151,"All our models outperform the uni-directional transformer ( OpenAI GPT ) of , however , our model is about 50 % larger than their model .","['All', 'our', 'models', 'outperform', 'the', 'uni-directional', 'transformer', '(', 'OpenAI', 'GPT', ')', 'of', ',', 'however', ',', 'our', 'model', 'is', 'about', '50', '%', 'larger', 'than', 'their', 'model', '.']","['B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'PRP$', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'NNP', 'NNP', ')', 'IN', ',', 'RB', ',', 'PRP$', 'NN', 'VBZ', 'IN', 'CD', 'NN', 'JJR', 'IN', 'PRP$', 'NN', '.']",26
constituency_parsing,1,153,"Our CNN base model performs as well as STILTs in aggregate , however , on some tasks involving sentence - pairs , STILTs performs much better ( MRPC , RTE ) ; there is a similar trend for BERT .","['Our', 'CNN', 'base', 'model', 'performs', 'as', 'well', 'as', 'STILTs', 'in', 'aggregate', ',', 'however', ',', 'on', 'some', 'tasks', 'involving', 'sentence', '-', 'pairs', ',', 'STILTs', 'performs', 'much', 'better', '(', 'MRPC', ',', 'RTE', ')', ';', 'there', 'is', 'a', 'similar', 'trend', 'for', 'BERT', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNP', 'NN', 'NN', 'NNS', 'RB', 'RB', 'IN', 'NNP', 'IN', 'NN', ',', 'RB', ',', 'IN', 'DT', 'NNS', 'VBG', 'NN', ':', 'NN', ',', 'NNP', 'VBZ', 'RB', 'JJR', '(', 'NNP', ',', 'NNP', ')', ':', 'EX', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNP', '.']",40
constituency_parsing,1,163,Named Entity Recognition,"['Named', 'Entity', 'Recognition']","['B-n', 'I-n', 'I-n']","['VBN', 'NNP', 'NNP']",3
constituency_parsing,1,167,"shows the results , with comparison to previous published ELMo BASE results the art , but fine tuning gives the biggest gain .","['shows', 'the', 'results', ',', 'with', 'comparison', 'to', 'previous', 'published', 'ELMo', 'BASE', 'results', 'the', 'art', ',', 'but', 'fine', 'tuning', 'gives', 'the', 'biggest', 'gain', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBZ', 'DT', 'NNS', ',', 'IN', 'NN', 'TO', 'JJ', 'VBN', 'NNP', 'NNP', 'NNS', 'DT', 'NN', ',', 'CC', 'JJ', 'NN', 'VBZ', 'DT', 'JJS', 'NN', '.']",23
constituency_parsing,1,168,Constituency Parsing,"['Constituency', 'Parsing']","['B-n', 'I-n']","['NN', 'VBG']",2
constituency_parsing,1,180,This results in the bilm loss dominating the triplet loss and we found that scaling the bilm term by a factor of 0.15 results in better performance .,"['This', 'results', 'in', 'the', 'bilm', 'loss', 'dominating', 'the', 'triplet', 'loss', 'and', 'we', 'found', 'that', 'scaling', 'the', 'bilm', 'term', 'by', 'a', 'factor', 'of', '0.15', 'results', 'in', 'better', 'performance', '.']","['O', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'DT', 'NN', 'NN', 'CC', 'PRP', 'VBD', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'NNS', 'IN', 'JJR', 'NN', '.']",28
constituency_parsing,1,181,shows that the cloze loss performs significantly better than the bilm loss and that combining the two loss types does not improve over the cloze loss by itself .,"['shows', 'that', 'the', 'cloze', 'loss', 'performs', 'significantly', 'better', 'than', 'the', 'bilm', 'loss', 'and', 'that', 'combining', 'the', 'two', 'loss', 'types', 'does', 'not', 'improve', 'over', 'the', 'cloze', 'loss', 'by', 'itself', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['NNS', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'RB', 'JJR', 'IN', 'DT', 'JJ', 'NN', 'CC', 'IN', 'VBG', 'DT', 'CD', 'NN', 'NNS', 'VBZ', 'RB', 'VB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'PRP', '.']",29
constituency_parsing,5,2,In- Order Transition - based Constituent Parsing,"['In-', 'Order', 'Transition', '-', 'based', 'Constituent', 'Parsing']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', ':', 'VBN', 'NNP', 'VBG']",7
constituency_parsing,5,4,Both bottom - up and top - down strategies have been used for neural transition - based constituent parsing .,"['Both', 'bottom', '-', 'up', 'and', 'top', '-', 'down', 'strategies', 'have', 'been', 'used', 'for', 'neural', 'transition', '-', 'based', 'constituent', 'parsing', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'SYM', ':', 'RB', 'CC', 'JJ', ':', 'IN', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'JJ', 'NN', ':', 'VBN', 'NN', 'NN', '.']",20
constituency_parsing,5,32,"In this paper , we propose a novel transition system for constituent parsing , mitigating issues of both bottom - up and top - down systems by finding a compromise between bottom - up constituent information and top - down lookahead information .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'transition', 'system', 'for', 'constituent', 'parsing', ',', 'mitigating', 'issues', 'of', 'both', 'bottom', '-', 'up', 'and', 'top', '-', 'down', 'systems', 'by', 'finding', 'a', 'compromise', 'between', 'bottom', '-', 'up', 'constituent', 'information', 'and', 'top', '-', 'down', 'lookahead', 'information', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'VBG', 'NNS', 'IN', 'DT', 'SYM', ':', 'RB', 'CC', 'JJ', ':', 'RB', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'IN', 'NN', ':', 'RB', 'JJ', 'NN', 'CC', 'JJ', ':', 'RB', 'JJ', 'NN', '.']",43
constituency_parsing,5,49,We release our code at https://github.com/LeonCrashCode/InOrderParser .,"['We', 'release', 'our', 'code', 'at', 'https://github.com/LeonCrashCode/InOrderParser', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'IN', 'NN', '.']",7
constituency_parsing,5,131,Reranking experiments,"['Reranking', 'experiments']","['B-n', 'I-n']","['VBG', 'NNS']",2
constituency_parsing,5,133,The bottom - up system performs slightly better than the top - down system .,"['The', 'bottom', '-', 'up', 'system', 'performs', 'slightly', 'better', 'than', 'the', 'top', '-', 'down', 'system', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', ':', 'RB', 'NN', 'NNS', 'RB', 'JJR', 'IN', 'DT', 'JJ', ':', 'RB', 'NN', '.']",15
constituency_parsing,5,134,The inorder system outperforms both the bottom - up and the top - down system .,"['The', 'inorder', 'system', 'outperforms', 'both', 'the', 'bottom', '-', 'up', 'and', 'the', 'top', '-', 'down', 'system', '.']","['O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CC', 'DT', 'NN', ':', 'RB', 'CC', 'DT', 'JJ', ':', 'RB', 'NN', '.']",16
constituency_parsing,5,136,"We find that the bottom - up parser and the top - down parser have similar results under the greedy setting , and the in - order parser outperforms both of them .","['We', 'find', 'that', 'the', 'bottom', '-', 'up', 'parser', 'and', 'the', 'top', '-', 'down', 'parser', 'have', 'similar', 'results', 'under', 'the', 'greedy', 'setting', ',', 'and', 'the', 'in', '-', 'order', 'parser', 'outperforms', 'both', 'of', 'them', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', ':', 'IN', 'NN', 'CC', 'DT', 'JJ', ':', 'RB', 'RB', 'VBP', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'DT', 'IN', ':', 'NN', 'NN', 'VBZ', 'DT', 'IN', 'PRP', '.']",33
constituency_parsing,5,138,English constituent results,"['English', 'constituent', 'results']","['B-n', 'I-n', 'I-n']","['JJ', 'NN', 'NNS']",3
constituency_parsing,5,140,"With the fully - supervise setting 5 , the inorder parser outperforms the state - of - the - art discrete parser , the state - of - the - art neural parsers","['With', 'the', 'fully', '-', 'supervise', 'setting', '5', ',', 'the', 'inorder', 'parser', 'outperforms', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'discrete', 'parser', ',', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'neural', 'parsers']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['IN', 'DT', 'RB', ':', 'NN', 'VBG', 'CD', ',', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'NN', ',', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'NNS']",33
constituency_parsing,5,145,Chinese dependency results,"['Chinese', 'dependency', 'results']","['B-n', 'I-n', 'I-n']","['JJ', 'NN', 'NNS']",3
constituency_parsing,5,146,"As shown in , by converting the results to dependencies 6 , our final model achieves the best results among transitionbased parsing , and obtains comparable results to the state - of - the - art graph - based models . 85.5 84.0 87.7 86.2","['As', 'shown', 'in', ',', 'by', 'converting', 'the', 'results', 'to', 'dependencies', '6', ',', 'our', 'final', 'model', 'achieves', 'the', 'best', 'results', 'among', 'transitionbased', 'parsing', ',', 'and', 'obtains', 'comparable', 'results', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'graph', '-', 'based', 'models', '.', '85.5', '84.0', '87.7', '86.2']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'IN', 'VBG', 'DT', 'NNS', 'TO', 'NNS', 'CD', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'JJ', 'NN', ',', 'CC', 'VBZ', 'JJ', 'NNS', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', ':', 'VBN', 'NNS', '.', 'CD', 'CD', 'CD', 'CD']",45
constituency_parsing,7,2,What Do Recurrent Neural Network Grammars Learn About Syntax ?,"['What', 'Do', 'Recurrent', 'Neural', 'Network', 'Grammars', 'Learn', 'About', 'Syntax', '?']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['WP', 'VBP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', '.']",10
constituency_parsing,7,4,Recurrent neural network grammars ( RNNG ) area recently proposed probabilistic generative modeling family for natural language .,"['Recurrent', 'neural', 'network', 'grammars', '(', 'RNNG', ')', 'area', 'recently', 'proposed', 'probabilistic', 'generative', 'modeling', 'family', 'for', 'natural', 'language', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'JJ', 'NN', 'NNS', '(', 'NNP', ')', 'NN', 'RB', 'VBD', 'JJ', 'JJ', 'VBG', 'NN', 'IN', 'JJ', 'NN', '.']",18
constituency_parsing,7,12,"We focus on RNNGs as generative probabilistic models over trees , as summarized in 2 .","['We', 'focus', 'on', 'RNNGs', 'as', 'generative', 'probabilistic', 'models', 'over', 'trees', ',', 'as', 'summarized', 'in', '2', '.']","['O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'NNP', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'NNS', ',', 'IN', 'VBN', 'IN', 'CD', '.']",16
constituency_parsing,7,21,This paper manipulates the inductive bias of RNNGs to test linguistic hypotheses .,"['This', 'paper', 'manipulates', 'the', 'inductive', 'bias', 'of', 'RNNGs', 'to', 'test', 'linguistic', 'hypotheses', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'TO', 'VB', 'JJ', 'NNS', '.']",13
constituency_parsing,7,22,We begin with an ablation study to discover the importance of the composition function in 3 .,"['We', 'begin', 'with', 'an', 'ablation', 'study', 'to', 'discover', 'the', 'importance', 'of', 'the', 'composition', 'function', 'in', '3', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",17
constituency_parsing,7,23,"Based on the findings , we augment the RNNG composition function with a novel gated attention mechanism ( leading to the GA - RNNG ) to incorporate more interpretability into the model in 4 .","['Based', 'on', 'the', 'findings', ',', 'we', 'augment', 'the', 'RNNG', 'composition', 'function', 'with', 'a', 'novel', 'gated', 'attention', 'mechanism', '(', 'leading', 'to', 'the', 'GA', '-', 'RNNG', ')', 'to', 'incorporate', 'more', 'interpretability', 'into', 'the', 'model', 'in', '4', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBN', 'NN', 'NN', '(', 'VBG', 'TO', 'DT', 'NNP', ':', 'NN', ')', 'TO', 'VB', 'JJR', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', '.']",35
constituency_parsing,7,24,"Using the GA - RNNG , we proceed by investigating the role that individual heads play in phrasal representation ( 5 ) and the role that nonterminal category labels play ( 6 ) .","['Using', 'the', 'GA', '-', 'RNNG', ',', 'we', 'proceed', 'by', 'investigating', 'the', 'role', 'that', 'individual', 'heads', 'play', 'in', 'phrasal', 'representation', '(', '5', ')', 'and', 'the', 'role', 'that', 'nonterminal', 'category', 'labels', 'play', '(', '6', ')', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', 'IN', 'VBG', 'DT', 'NN', 'WDT', 'JJ', 'NNS', 'VBP', 'IN', 'NN', 'NN', '(', 'CD', ')', 'CC', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'VBP', '(', 'CD', ')', '.']",34
constituency_parsing,7,88,"The RNNG with only a stack is the strongest of the ablations , and it even outperforms the "" full "" RNNG with all three data structures .","['The', 'RNNG', 'with', 'only', 'a', 'stack', 'is', 'the', 'strongest', 'of', 'the', 'ablations', ',', 'and', 'it', 'even', 'outperforms', 'the', '""', 'full', '""', 'RNNG', 'with', 'all', 'three', 'data', 'structures', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'IN', 'RB', 'DT', 'NN', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'NNS', ',', 'CC', 'PRP', 'RB', 'VBZ', 'DT', 'NNP', 'JJ', 'NNP', 'NNP', 'IN', 'DT', 'CD', 'NNS', 'NNS', '.']",28
constituency_parsing,7,89,Ablating the stack gives the worst among the new results .,"['Ablating', 'the', 'stack', 'gives', 'the', 'worst', 'among', 'the', 'new', 'results', '.']","['B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'NN', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'JJ', 'NNS', '.']",11
constituency_parsing,7,93,"A similar performance degradation is seen in language modeling : the stack - only RNNG achieves the best performance , and ablating the stack is most harmful .","['A', 'similar', 'performance', 'degradation', 'is', 'seen', 'in', 'language', 'modeling', ':', 'the', 'stack', '-', 'only', 'RNNG', 'achieves', 'the', 'best', 'performance', ',', 'and', 'ablating', 'the', 'stack', 'is', 'most', 'harmful', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'NN', 'NN', ':', 'DT', 'NN', ':', 'RB', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', ',', 'CC', 'VBG', 'DT', 'NN', 'VBZ', 'RBS', 'JJ', '.']",28
constituency_parsing,7,94,"Indeed , modeling syntax without explicit composition ( the stackablated RNNG ) provides little benefit over a sequential LSTM language model .","['Indeed', ',', 'modeling', 'syntax', 'without', 'explicit', 'composition', '(', 'the', 'stackablated', 'RNNG', ')', 'provides', 'little', 'benefit', 'over', 'a', 'sequential', 'LSTM', 'language', 'model', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'VBG', 'NN', 'IN', 'JJ', 'NN', '(', 'DT', 'VBN', 'NNP', ')', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'NN', '.']",22
constituency_parsing,7,95,We remark that the stack - only results are the best published PTB results for both phrasestructure and dependency parsing among supervised models .,"['We', 'remark', 'that', 'the', 'stack', '-', 'only', 'results', 'are', 'the', 'best', 'published', 'PTB', 'results', 'for', 'both', 'phrasestructure', 'and', 'dependency', 'parsing', 'among', 'supervised', 'models', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', ':', 'RB', 'NNS', 'VBP', 'DT', 'JJS', 'VBN', 'NNP', 'NNS', 'IN', 'DT', 'NN', 'CC', 'NN', 'NN', 'IN', 'JJ', 'NNS', '.']",24
constituency_parsing,7,96,Gated Attention RNNG,"['Gated', 'Attention', 'RNNG']","['B-n', 'I-n', 'I-n']","['VBN', 'NNP', 'NNP']",3
constituency_parsing,7,134,"It is clear that the model outperforms the baseline RNNG with all three structures present and achieves competitive performance with the strongest , stack - only , RNNG variant .","['It', 'is', 'clear', 'that', 'the', 'model', 'outperforms', 'the', 'baseline', 'RNNG', 'with', 'all', 'three', 'structures', 'present', 'and', 'achieves', 'competitive', 'performance', 'with', 'the', 'strongest', ',', 'stack', '-', 'only', ',', 'RNNG', 'variant', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'JJ', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'NNP', 'IN', 'DT', 'CD', 'NNS', 'JJ', 'CC', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'JJS', ',', 'NN', ':', 'RB', ',', 'NNP', 'NN', '.']",30
constituency_parsing,7,135,Headedness in Phrases,"['Headedness', 'in', 'Phrases']","['B-n', 'I-n', 'I-n']","['NNP', 'IN', 'NNP']",3
constituency_parsing,7,173,The model has a higher overlap with the conversion using Collins head rules ( 49.8 UAS ) rather than the Stanford head rules ( 40.4 UAS ) .,"['The', 'model', 'has', 'a', 'higher', 'overlap', 'with', 'the', 'conversion', 'using', 'Collins', 'head', 'rules', '(', '49.8', 'UAS', ')', 'rather', 'than', 'the', 'Stanford', 'head', 'rules', '(', '40.4', 'UAS', ')', '.']","['O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJR', 'NN', 'IN', 'DT', 'NN', 'VBG', 'NNP', 'NN', 'NNS', '(', 'CD', 'NNP', ')', 'RB', 'IN', 'DT', 'NNP', 'NN', 'NNS', '(', 'CD', 'NNP', ')', '.']",28
constituency_parsing,7,175,"In general , the attention - based tree output has a high error rate ( ? 90 % ) when the dependent is a verb , since the constituent with the highest attention weight in a verb phrase is often the noun phrase instead of the verb , as discussed above .","['In', 'general', ',', 'the', 'attention', '-', 'based', 'tree', 'output', 'has', 'a', 'high', 'error', 'rate', '(', '?', '90', '%', ')', 'when', 'the', 'dependent', 'is', 'a', 'verb', ',', 'since', 'the', 'constituent', 'with', 'the', 'highest', 'attention', 'weight', 'in', 'a', 'verb', 'phrase', 'is', 'often', 'the', 'noun', 'phrase', 'instead', 'of', 'the', 'verb', ',', 'as', 'discussed', 'above', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'DT', 'NN', ':', 'VBN', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', '(', '.', 'CD', 'NN', ')', 'WRB', 'DT', 'NN', 'VBZ', 'DT', 'NN', ',', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJS', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'DT', 'JJ', 'NN', 'RB', 'IN', 'DT', 'NN', ',', 'IN', 'VBN', 'IN', '.']",52
constituency_parsing,7,176,"The conversion accuracy is better for nouns ( ? 50 % error ) , and much better for determiners ( 30 % ) and particles ( 6 % ) with respect to the Collins head rules .","['The', 'conversion', 'accuracy', 'is', 'better', 'for', 'nouns', '(', '?', '50', '%', 'error', ')', ',', 'and', 'much', 'better', 'for', 'determiners', '(', '30', '%', ')', 'and', 'particles', '(', '6', '%', ')', 'with', 'respect', 'to', 'the', 'Collins', 'head', 'rules', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RBR', 'IN', 'NNS', '(', '.', 'CD', 'NN', 'NN', ')', ',', 'CC', 'RB', 'JJR', 'IN', 'NNS', '(', 'CD', 'NN', ')', 'CC', 'NNS', '(', 'CD', 'NN', ')', 'IN', 'NN', 'TO', 'DT', 'NNP', 'NN', 'NNS', '.']",37
constituency_parsing,7,183,The Role of Nonterminal Labels,"['The', 'Role', 'of', 'Nonterminal', 'Labels']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'NNP', 'IN', 'NNP', 'NNP']",5
constituency_parsing,7,192,"On test data ( with the usual split ) , the GA - RNNG achieves 94.2 % , while the U - GA - RNNG achieves 93.5 % .","['On', 'test', 'data', '(', 'with', 'the', 'usual', 'split', ')', ',', 'the', 'GA', '-', 'RNNG', 'achieves', '94.2', '%', ',', 'while', 'the', 'U', '-', 'GA', '-', 'RNNG', 'achieves', '93.5', '%', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', 'NNS', '(', 'IN', 'DT', 'JJ', 'NN', ')', ',', 'DT', 'NNP', ':', 'NNP', 'VBZ', 'CD', 'NN', ',', 'IN', 'DT', 'NNP', ':', 'NNP', ':', 'NNP', 'VBZ', 'CD', 'NN', '.']",29
constituency_parsing,4,4,Recent work has proposed several generative neural models for constituency parsing that achieve state - of - the - art results .,"['Recent', 'work', 'has', 'proposed', 'several', 'generative', 'neural', 'models', 'for', 'constituency', 'parsing', 'that', 'achieve', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'VBZ', 'VBN', 'JJ', 'JJ', 'JJ', 'NNS', 'IN', 'NN', 'VBG', 'IN', 'VBP', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",22
constituency_parsing,4,10,Recent work on neural constituency parsing has found multiple cases where generative scoring models for which inference is complex outperform base models for which inference is simpler .,"['Recent', 'work', 'on', 'neural', 'constituency', 'parsing', 'has', 'found', 'multiple', 'cases', 'where', 'generative', 'scoring', 'models', 'for', 'which', 'inference', 'is', 'complex', 'outperform', 'base', 'models', 'for', 'which', 'inference', 'is', 'simpler', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'JJ', 'NNS', 'WRB', 'JJ', 'NN', 'NNS', 'IN', 'WDT', 'NN', 'VBZ', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'WDT', 'NN', 'VBZ', 'VBN', '.']",28
constituency_parsing,4,35,"In this paper , we present experiments to isolate the degree to which each gain occurs for each of two state - of - the - art generative neural parsing models : the Recurrent Neural Network Grammar generative parser ( RG ) of , and the LSTM language modeling generative parser ( LM ) of .","['In', 'this', 'paper', ',', 'we', 'present', 'experiments', 'to', 'isolate', 'the', 'degree', 'to', 'which', 'each', 'gain', 'occurs', 'for', 'each', 'of', 'two', 'state', '-', 'of', '-', 'the', '-', 'art', 'generative', 'neural', 'parsing', 'models', ':', 'the', 'Recurrent', 'Neural', 'Network', 'Grammar', 'generative', 'parser', '(', 'RG', ')', 'of', ',', 'and', 'the', 'LSTM', 'language', 'modeling', 'generative', 'parser', '(', 'LM', ')', 'of', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNS', 'TO', 'VB', 'DT', 'NN', 'TO', 'WDT', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'IN', 'CD', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'JJ', 'NN', 'NNS', ':', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', 'NN', '(', 'NNP', ')', 'IN', ',', 'CC', 'DT', 'NNP', 'NN', 'VBG', 'JJ', 'NN', '(', 'NNP', ')', 'IN', '.']",56
constituency_parsing,4,36,"In particular , we present and use a beam - based search procedure with an augmented state space that can search directly in the generative models , allowing us to explore A ?","['In', 'particular', ',', 'we', 'present', 'and', 'use', 'a', 'beam', '-', 'based', 'search', 'procedure', 'with', 'an', 'augmented', 'state', 'space', 'that', 'can', 'search', 'directly', 'in', 'the', 'generative', 'models', ',', 'allowing', 'us', 'to', 'explore', 'A', '?']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'PRP', 'VBP', 'CC', 'VBP', 'DT', 'NN', ':', 'VBN', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'MD', 'VB', 'RB', 'IN', 'DT', 'JJ', 'NNS', ',', 'VBG', 'PRP', 'TO', 'VB', 'DT', '.']",33
constituency_parsing,4,43,"We find that this is indeed the case : simply taking a weighted average of the scores of both models when selecting a parse from the base parser 's candidate list improves over using only the score of the generative model , in many cases substantially ( Section 3.2 ) .","['We', 'find', 'that', 'this', 'is', 'indeed', 'the', 'case', ':', 'simply', 'taking', 'a', 'weighted', 'average', 'of', 'the', 'scores', 'of', 'both', 'models', 'when', 'selecting', 'a', 'parse', 'from', 'the', 'base', 'parser', ""'s"", 'candidate', 'list', 'improves', 'over', 'using', 'only', 'the', 'score', 'of', 'the', 'generative', 'model', ',', 'in', 'many', 'cases', 'substantially', '(', 'Section', '3.2', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'VBZ', 'RB', 'DT', 'NN', ':', 'RB', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'WRB', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'POS', 'JJ', 'NN', 'VBZ', 'RP', 'VBG', 'RB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'IN', 'JJ', 'NNS', 'RB', '(', 'NNP', 'CD', ')', '.']",51
constituency_parsing,4,90,Augmenting the candidate set,"['Augmenting', 'the', 'candidate', 'set']","['B-n', 'I-n', 'I-n', 'I-n']","['VBG', 'DT', 'NN', 'NN']",4
constituency_parsing,4,98,RG decreases performance from 93.45 F1 to 92.78 F1 on the development set .,"['RG', 'decreases', 'performance', 'from', '93.45', 'F1', 'to', '92.78', 'F1', 'on', 'the', 'development', 'set', '.']","['B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NNP', 'VBZ', 'NN', 'IN', 'CD', 'NNP', 'TO', 'CD', 'NNP', 'IN', 'DT', 'NN', 'NN', '.']",14
constituency_parsing,4,107,Score combination,"['Score', 'combination']","['B-n', 'I-n']","['NN', 'NN']",2
constituency_parsing,4,111,"We find that combining the scores of both models improves on using the score of either model alone , regardless of the source of candidates .","['We', 'find', 'that', 'combining', 'the', 'scores', 'of', 'both', 'models', 'improves', 'on', 'using', 'the', 'score', 'of', 'either', 'model', 'alone', ',', 'regardless', 'of', 'the', 'source', 'of', 'candidates', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'VBP', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'RB', ',', 'RB', 'IN', 'DT', 'NN', 'IN', 'NNS', '.']",26
constituency_parsing,4,119,Strengthening model combination,"['Strengthening', 'model', 'combination']","['B-n', 'I-n', 'I-n']","['VBG', 'NN', 'NN']",3
constituency_parsing,4,123,"2 Combining candidates and scores from all three models ( row 9 ) , we obtain 93.94 F1 . :","['2', 'Combining', 'candidates', 'and', 'scores', 'from', 'all', 'three', 'models', '(', 'row', '9', ')', ',', 'we', 'obtain', '93.94', 'F1', '.', ':']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O']","['CD', 'NNP', 'NNS', 'CC', 'NNS', 'IN', 'DT', 'CD', 'NNS', '(', 'VB', 'CD', ')', ',', 'PRP', 'VB', 'CD', 'NNP', '.', ':']",20
constituency_parsing,4,131,"Ensembling Finally , we compare to another commonly used model combination method : ensembling multiple instances of the same model type trained from different random initializations .","['Ensembling', 'Finally', ',', 'we', 'compare', 'to', 'another', 'commonly', 'used', 'model', 'combination', 'method', ':', 'ensembling', 'multiple', 'instances', 'of', 'the', 'same', 'model', 'type', 'trained', 'from', 'different', 'random', 'initializations', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'RB', ',', 'PRP', 'VBP', 'TO', 'DT', 'RB', 'VBN', 'NN', 'NN', 'NN', ':', 'VBG', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', '.']",27
constituency_parsing,4,134,"Performance when using only the ensembled RD models ( row 10 ) is lower than rescoring a single RD model with score combinations of single models , either RD + RG ( row 3 ) or RD + LM ( row 6 ) .","['Performance', 'when', 'using', 'only', 'the', 'ensembled', 'RD', 'models', '(', 'row', '10', ')', 'is', 'lower', 'than', 'rescoring', 'a', 'single', 'RD', 'model', 'with', 'score', 'combinations', 'of', 'single', 'models', ',', 'either', 'RD', '+', 'RG', '(', 'row', '3', ')', 'or', 'RD', '+', 'LM', '(', 'row', '6', ')', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'WRB', 'VBG', 'RB', 'DT', 'JJ', 'NNP', 'NNS', '(', 'VB', 'CD', ')', 'VBZ', 'JJR', 'IN', 'VBG', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'CC', 'NNP', 'NNP', 'NNP', '(', 'VB', 'CD', ')', 'CC', 'NNP', 'NNP', 'NNP', '(', 'VB', 'CD', ')', '.']",44
constituency_parsing,4,135,"In the PTB setting , ensembling with score combination achieves the best over all result of 94.25 ( row 13 ) .","['In', 'the', 'PTB', 'setting', ',', 'ensembling', 'with', 'score', 'combination', 'achieves', 'the', 'best', 'over', 'all', 'result', 'of', '94.25', '(', 'row', '13', ')', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'VBG', 'IN', 'NN', 'NN', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'NN', 'IN', 'CD', '(', 'VB', 'CD', ')', '.']",22
constituency_parsing,6,2,Parsing as Language Modeling,"['Parsing', 'as', 'Language', 'Modeling']","['B-n', 'O', 'O', 'O']","['VBG', 'IN', 'NNP', 'VBG']",4
constituency_parsing,6,4,"We recast syntactic parsing as a language modeling problem and use recent advances in neural network language modeling to achieve a new state of the art for constituency Penn Treebank parsing - 93.8 F 1 on section 23 , using 2 - 21 as training , 24 as development , plus tri-training .","['We', 'recast', 'syntactic', 'parsing', 'as', 'a', 'language', 'modeling', 'problem', 'and', 'use', 'recent', 'advances', 'in', 'neural', 'network', 'language', 'modeling', 'to', 'achieve', 'a', 'new', 'state', 'of', 'the', 'art', 'for', 'constituency', 'Penn', 'Treebank', 'parsing', '-', '93.8', 'F', '1', 'on', 'section', '23', ',', 'using', '2', '-', '21', 'as', 'training', ',', '24', 'as', 'development', ',', 'plus', 'tri-training', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', 'CC', 'VB', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NNP', 'NNP', 'VBG', ':', 'CD', 'NNP', 'CD', 'IN', 'NN', 'CD', ',', 'VBG', 'CD', ':', 'CD', 'IN', 'NN', ',', 'CD', 'IN', 'NN', ',', 'CC', 'NN', '.']",53
constituency_parsing,6,7,"Recent work on deep learning syntactic parsing models has achieved notably good results , e.g. , with 92.4 F 1 on Penn Treebank constituency parsing and with 92.8 F 1 .","['Recent', 'work', 'on', 'deep', 'learning', 'syntactic', 'parsing', 'models', 'has', 'achieved', 'notably', 'good', 'results', ',', 'e.g.', ',', 'with', '92.4', 'F', '1', 'on', 'Penn', 'Treebank', 'constituency', 'parsing', 'and', 'with', '92.8', 'F', '1', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'IN', 'JJ', 'NN', 'JJ', 'NN', 'NNS', 'VBZ', 'VBN', 'RB', 'JJ', 'NNS', ',', 'NN', ',', 'IN', 'CD', 'NNP', 'CD', 'IN', 'NNP', 'NNP', 'NN', 'VBG', 'CC', 'IN', 'CD', 'NNP', 'CD', '.']",31
constituency_parsing,6,8,"In this paper we borrow from the approaches of both of these works and present a neural - net parse reranker that achieves very good results , 93.8 F 1 , with a comparatively simple architecture .","['In', 'this', 'paper', 'we', 'borrow', 'from', 'the', 'approaches', 'of', 'both', 'of', 'these', 'works', 'and', 'present', 'a', 'neural', '-', 'net', 'parse', 'reranker', 'that', 'achieves', 'very', 'good', 'results', ',', '93.8', 'F', '1', ',', 'with', 'a', 'comparatively', 'simple', 'architecture', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'IN', 'DT', 'NNS', 'IN', 'DT', 'IN', 'DT', 'NNS', 'CC', 'VB', 'DT', 'JJ', ':', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'RB', 'JJ', 'NNS', ',', 'CD', 'NNP', 'CD', ',', 'IN', 'DT', 'RB', 'JJ', 'NN', '.']",37
constituency_parsing,6,51,"The model has three LSTM layers with 1,500 units and gets trained with truncated backpropagation through time with mini-batch size 20 and step size 50 .","['The', 'model', 'has', 'three', 'LSTM', 'layers', 'with', '1,500', 'units', 'and', 'gets', 'trained', 'with', 'truncated', 'backpropagation', 'through', 'time', 'with', 'mini-batch', 'size', '20', 'and', 'step', 'size', '50', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'CD', 'NNP', 'NNS', 'IN', 'CD', 'NNS', 'CC', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'IN', 'NN', 'IN', 'JJ', 'NN', 'CD', 'CC', 'VB', 'NN', 'CD', '.']",26
constituency_parsing,6,52,We initialize starting states with previous minibatch 's last hidden states .,"['We', 'initialize', 'starting', 'states', 'with', 'previous', 'minibatch', ""'s"", 'last', 'hidden', 'states', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'VBG', 'NNS', 'IN', 'JJ', 'NN', 'POS', 'JJ', 'JJ', 'NNS', '.']",12
constituency_parsing,6,53,"The forget gate bias is initialized to be one and the rest of model parameters are sampled from U ( ? 0.05 , 0.05 ) .","['The', 'forget', 'gate', 'bias', 'is', 'initialized', 'to', 'be', 'one', 'and', 'the', 'rest', 'of', 'model', 'parameters', 'are', 'sampled', 'from', 'U', '(', '?', '0.05', ',', '0.05', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'CD', 'CC', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', '(', '.', 'CD', ',', 'CD', ')', '.']",26
constituency_parsing,6,54,Dropout is applied to non-recurrent connections and gradients are clipped when their norm is bigger than 20 .,"['Dropout', 'is', 'applied', 'to', 'non-recurrent', 'connections', 'and', 'gradients', 'are', 'clipped', 'when', 'their', 'norm', 'is', 'bigger', 'than', '20', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'VBZ', 'VBN', 'TO', 'JJ', 'NNS', 'CC', 'NNS', 'VBP', 'VBN', 'WRB', 'PRP$', 'NN', 'VBZ', 'JJR', 'IN', 'CD', '.']",18
constituency_parsing,6,55,The learning rate is 0.25 0.85 max where is an epoch number .,"['The', 'learning', 'rate', 'is', '0.25', '0.85', 'max', 'where', 'is', 'an', 'epoch', 'number', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', 'CD', 'NN', 'WRB', 'VBZ', 'DT', 'JJ', 'NN', '.']",13
constituency_parsing,6,56,"For simplicity , we use vanilla softmax over an entire vocabulary as opposed to hierarchical softmax or noise contrastive estimation ( Gutmann and Hyvrinen , 2012 ) .","['For', 'simplicity', ',', 'we', 'use', 'vanilla', 'softmax', 'over', 'an', 'entire', 'vocabulary', 'as', 'opposed', 'to', 'hierarchical', 'softmax', 'or', 'noise', 'contrastive', 'estimation', '(', 'Gutmann', 'and', 'Hyvrinen', ',', '2012', ')', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'VBN', 'TO', 'JJ', 'NN', 'CC', 'NN', 'JJ', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', '.']",28
constituency_parsing,6,72,Results,['Results'],['B-n'],['NNS'],1
constituency_parsing,6,77,"A single LSTM - LM ( GS ) together with Charniak ( GS ) reaches 93.6 and an ensemble of eight LSTM - LMs ( GS ) with Charniak ( GS ) achieves a new state of the art , 93.8 F 1 .","['A', 'single', 'LSTM', '-', 'LM', '(', 'GS', ')', 'together', 'with', 'Charniak', '(', 'GS', ')', 'reaches', '93.6', 'and', 'an', 'ensemble', 'of', 'eight', 'LSTM', '-', 'LMs', '(', 'GS', ')', 'with', 'Charniak', '(', 'GS', ')', 'achieves', 'a', 'new', 'state', 'of', 'the', 'art', ',', '93.8', 'F', '1', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNP', ':', 'NNP', '(', 'NNP', ')', 'RB', 'IN', 'NNP', '(', 'NNP', ')', 'VBZ', 'CD', 'CC', 'DT', 'NN', 'IN', 'CD', 'NNP', ':', 'NNP', '(', 'NNP', ')', 'IN', 'NNP', '(', 'NNP', ')', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'CD', 'NNP', 'CD', '.']",44
constituency_parsing,6,78,"When trees are converted to Stanford dependencies , 5 UAS and LAS are 95.9 % and 94.1 % , 6 more than 1 % higher than those of the state of the art dependency parser .","['When', 'trees', 'are', 'converted', 'to', 'Stanford', 'dependencies', ',', '5', 'UAS', 'and', 'LAS', 'are', '95.9', '%', 'and', '94.1', '%', ',', '6', 'more', 'than', '1', '%', 'higher', 'than', 'those', 'of', 'the', 'state', 'of', 'the', 'art', 'dependency', 'parser', '.']","['B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['WRB', 'NNS', 'VBP', 'VBN', 'TO', 'NNP', 'NNS', ',', 'CD', 'NNP', 'CC', 'NNP', 'VBP', 'CD', 'NN', 'CC', 'CD', 'NN', ',', 'CD', 'JJR', 'IN', 'CD', 'NN', 'JJR', 'IN', 'DT', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",36
constituency_parsing,2,2,An Empirical Study of Building a Strong Baseline for Constituency Parsing,"['An', 'Empirical', 'Study', 'of', 'Building', 'a', 'Strong', 'Baseline', 'for', 'Constituency', 'Parsing']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['DT', 'NNP', 'NNP', 'IN', 'VBG', 'DT', 'JJ', 'NNP', 'IN', 'NNP', 'NNP']",11
constituency_parsing,2,13,Our aim is to update the Seq2seq approach proposed in as a stronger baseline of constituency parsing .,"['Our', 'aim', 'is', 'to', 'update', 'the', 'Seq2seq', 'approach', 'proposed', 'in', 'as', 'a', 'stronger', 'baseline', 'of', 'constituency', 'parsing', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'IN', 'DT', 'JJR', 'NN', 'IN', 'NN', 'NN', '.']",18
constituency_parsing,2,111,( 1 ) Smaller mini-batch size M and gradient clipping G provided the better performance .,"['(', '1', ')', 'Smaller', 'mini-batch', 'size', 'M', 'and', 'gradient', 'clipping', 'G', 'provided', 'the', 'better', 'performance', '.']","['O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['(', 'CD', ')', 'NNP', 'NN', 'NN', 'NNP', 'CC', 'JJ', 'VBG', 'NNP', 'VBD', 'DT', 'JJR', 'NN', '.']",16
constituency_parsing,2,113,"( 2 ) Larger layer size , hidden state dimension , and beam size have little impact on the performance ; our setting , L = 2 , H = 200 , and B = 5 looks adequate in terms of speed / performance trade - off .","['(', '2', ')', 'Larger', 'layer', 'size', ',', 'hidden', 'state', 'dimension', ',', 'and', 'beam', 'size', 'have', 'little', 'impact', 'on', 'the', 'performance', ';', 'our', 'setting', ',', 'L', '=', '2', ',', 'H', '=', '200', ',', 'and', 'B', '=', '5', 'looks', 'adequate', 'in', 'terms', 'of', 'speed', '/', 'performance', 'trade', '-', 'off', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'CD', ')', 'NNP', 'NN', 'NN', ',', 'JJ', 'NN', 'NN', ',', 'CC', 'NN', 'NN', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'PRP$', 'NN', ',', 'NNP', 'NNP', 'CD', ',', 'NNP', 'NNP', 'CD', ',', 'CC', 'NNP', 'NNP', 'CD', 'VBZ', 'JJ', 'IN', 'NNS', 'IN', 'NN', 'NNP', 'NN', 'NN', ':', 'NN', '.']",48
constituency_parsing,2,115,"As often demonstrated in the NMT literature , using subword split as input token unit instead of standard tokenized word unit has potential to improve the performance .","['As', 'often', 'demonstrated', 'in', 'the', 'NMT', 'literature', ',', 'using', 'subword', 'split', 'as', 'input', 'token', 'unit', 'instead', 'of', 'standard', 'tokenized', 'word', 'unit', 'has', 'potential', 'to', 'improve', 'the', 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['IN', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'NN', ',', 'VBG', 'JJ', 'NN', 'IN', 'NN', 'IN', 'NN', 'RB', 'IN', 'JJ', 'VBN', 'NN', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'NN', '.']",28
constituency_parsing,2,119,"Thus , using subword information as features is one promising approach for leveraging subword information into constituency parsing .","['Thus', ',', 'using', 'subword', 'information', 'as', 'features', 'is', 'one', 'promising', 'approach', 'for', 'leveraging', 'subword', 'information', 'into', 'constituency', 'parsing', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'VBG', 'JJ', 'NN', 'IN', 'NNS', 'VBZ', 'CD', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'NN', 'NN', '.']",19
constituency_parsing,2,126,Our Seq2seq approach successfully achieved the competitive level as the current top - notch methods : RNNG and its variants .,"['Our', 'Seq2seq', 'approach', 'successfully', 'achieved', 'the', 'competitive', 'level', 'as', 'the', 'current', 'top', '-', 'notch', 'methods', ':', 'RNNG', 'and', 'its', 'variants', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNP', 'NN', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'JJ', ':', 'NN', 'NNS', ':', 'NNP', 'CC', 'PRP$', 'NNS', '.']",21
constituency_parsing,3,4,Syntactic constituency parsing is a fundamental problem in natural language processing and has been the subject of intensive research and engineering for decades .,"['Syntactic', 'constituency', 'parsing', 'is', 'a', 'fundamental', 'problem', 'in', 'natural', 'language', 'processing', 'and', 'has', 'been', 'the', 'subject', 'of', 'intensive', 'research', 'and', 'engineering', 'for', 'decades', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'CC', 'VBZ', 'VBN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'CC', 'NN', 'IN', 'NNS', '.']",24
constituency_parsing,3,21,"We found this model to work poorly when we trained it on standard human - annotated parsing datasets ( 1M tokens ) , so we constructed an artificial dataset by labelling a large corpus with the BerkeleyParser .","['We', 'found', 'this', 'model', 'to', 'work', 'poorly', 'when', 'we', 'trained', 'it', 'on', 'standard', 'human', '-', 'annotated', 'parsing', 'datasets', '(', '1M', 'tokens', ')', ',', 'so', 'we', 'constructed', 'an', 'artificial', 'dataset', 'by', 'labelling', 'a', 'large', 'corpus', 'with', 'the', 'BerkeleyParser', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'TO', 'VB', 'RB', 'WRB', 'PRP', 'VBD', 'PRP', 'IN', 'JJ', 'JJ', ':', 'VBD', 'VBG', 'NNS', '(', 'CD', 'NNS', ')', ',', 'IN', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', '.']",38
constituency_parsing,3,25,"We trained a sequence - to - sequence model with attention on the small human - annotated parsing dataset and were able to achieve an F 1 score of 88.3 on section 23 of the WSJ without the use of an ensemble and 90.5 with an ensemble , which matches the performance of the BerkeleyParser ( 90.4 ) when trained on the same data .","['We', 'trained', 'a', 'sequence', '-', 'to', '-', 'sequence', 'model', 'with', 'attention', 'on', 'the', 'small', 'human', '-', 'annotated', 'parsing', 'dataset', 'and', 'were', 'able', 'to', 'achieve', 'an', 'F', '1', 'score', 'of', '88.3', 'on', 'section', '23', 'of', 'the', 'WSJ', 'without', 'the', 'use', 'of', 'an', 'ensemble', 'and', '90.5', 'with', 'an', 'ensemble', ',', 'which', 'matches', 'the', 'performance', 'of', 'the', 'BerkeleyParser', '(', '90.4', ')', 'when', 'trained', 'on', 'the', 'same', 'data', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'JJ', ':', 'VBD', 'JJ', 'NN', 'CC', 'VBD', 'JJ', 'TO', 'VB', 'DT', 'NNP', 'CD', 'NN', 'IN', 'CD', 'IN', 'NN', 'CD', 'IN', 'DT', 'NNP', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'CC', 'CD', 'IN', 'DT', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NNP', '(', 'CD', ')', 'WRB', 'VBN', 'IN', 'DT', 'JJ', 'NN', '.']",65
constituency_parsing,3,26,"Finally , we constructed a second artificial dataset consisting of only high - confidence parse trees , as measured by the agreement of two parsers .","['Finally', ',', 'we', 'constructed', 'a', 'second', 'artificial', 'dataset', 'consisting', 'of', 'only', 'high', '-', 'confidence', 'parse', 'trees', ',', 'as', 'measured', 'by', 'the', 'agreement', 'of', 'two', 'parsers', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBD', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'RB', 'JJ', ':', 'NN', 'NN', 'NNS', ',', 'IN', 'VBN', 'IN', 'DT', 'NN', 'IN', 'CD', 'NNS', '.']",26
constituency_parsing,3,27,We trained a sequence - to - sequence model with attention on this data and achieved an F 1 score of 92.5 on section 23 of the WSJ - a new state - of - the - art .,"['We', 'trained', 'a', 'sequence', '-', 'to', '-', 'sequence', 'model', 'with', 'attention', 'on', 'this', 'data', 'and', 'achieved', 'an', 'F', '1', 'score', 'of', '92.5', 'on', 'section', '23', 'of', 'the', 'WSJ', '-', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', 'IN', 'NN', 'IN', 'DT', 'NN', 'CC', 'VBD', 'DT', 'NNP', 'CD', 'NN', 'IN', 'CD', 'IN', 'NN', 'CD', 'IN', 'DT', 'NNP', ':', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', '.']",39
constituency_parsing,3,67,"In our experiments we used a model with 3 LSTM layers and 256 units in each layer , which we call LSTM + A .","['In', 'our', 'experiments', 'we', 'used', 'a', 'model', 'with', '3', 'LSTM', 'layers', 'and', '256', 'units', 'in', 'each', 'layer', ',', 'which', 'we', 'call', 'LSTM', '+', 'A', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'PRP$', 'NNS', 'PRP', 'VBD', 'DT', 'NN', 'IN', 'CD', 'NNP', 'NNS', 'CC', 'CD', 'NNS', 'IN', 'DT', 'NN', ',', 'WDT', 'PRP', 'VBP', 'NNP', 'VBZ', 'NNP', '.']",25
constituency_parsing,3,70,"Training on a small dataset we additionally used 2 dropout layers , one between LSTM 1 and LSTM 2 , and one between LSTM 2 and LSTM 3 .","['Training', 'on', 'a', 'small', 'dataset', 'we', 'additionally', 'used', '2', 'dropout', 'layers', ',', 'one', 'between', 'LSTM', '1', 'and', 'LSTM', '2', ',', 'and', 'one', 'between', 'LSTM', '2', 'and', 'LSTM', '3', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'IN', 'DT', 'JJ', 'NN', 'PRP', 'RB', 'VBD', 'CD', 'NN', 'NNS', ',', 'CD', 'IN', 'NNP', 'CD', 'CC', 'NNP', 'CD', ',', 'CC', 'CD', 'IN', 'NNP', 'CD', 'CC', 'NNP', 'CD', '.']",29
constituency_parsing,3,82,The embedding layer for our 90K vocabulary can be initialized randomly or using pre-trained word - vector embeddings .,"['The', 'embedding', 'layer', 'for', 'our', '90K', 'vocabulary', 'can', 'be', 'initialized', 'randomly', 'or', 'using', 'pre-trained', 'word', '-', 'vector', 'embeddings', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBG', 'NN', 'IN', 'PRP$', 'CD', 'NN', 'MD', 'VB', 'VBN', 'RB', 'CC', 'VBG', 'JJ', 'NN', ':', 'NN', 'NNS', '.']",19
constituency_parsing,3,83,We pre-trained skip - gram embeddings of size 512 using word2vec [ 6 ] on a 10B - word corpus .,"['We', 'pre-trained', 'skip', '-', 'gram', 'embeddings', 'of', 'size', '512', 'using', 'word2vec', '[', '6', ']', 'on', 'a', '10B', '-', 'word', 'corpus', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'JJ', ':', 'JJ', 'NNS', 'IN', 'NN', 'CD', 'VBG', 'JJ', '$', 'CD', 'NN', 'IN', 'DT', 'CD', ':', 'NN', 'NN', '.']",21
constituency_parsing,3,118,But a single attention model gets to 88.3 and an ensemble of 5 LSTM + A+D models achieves 90.5 matching a single - model BerkeleyParser on WSJ 23 .,"['But', 'a', 'single', 'attention', 'model', 'gets', 'to', '88.3', 'and', 'an', 'ensemble', 'of', '5', 'LSTM', '+', 'A+D', 'models', 'achieves', '90.5', 'matching', 'a', 'single', '-', 'model', 'BerkeleyParser', 'on', 'WSJ', '23', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O']","['CC', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'TO', 'CD', 'CC', 'DT', 'NN', 'IN', 'CD', 'NNP', 'NNP', 'NNP', 'NNS', 'VBZ', 'CD', 'VBG', 'DT', 'JJ', ':', 'NN', 'NNP', 'IN', 'NNP', 'CD', '.']",29
constituency_parsing,3,119,"When trained on the large high - confidence corpus , a single LSTM + A model achieves 92.5 and so outperforms not only the best single model , but also the best ensemble result reported previously .","['When', 'trained', 'on', 'the', 'large', 'high', '-', 'confidence', 'corpus', ',', 'a', 'single', 'LSTM', '+', 'A', 'model', 'achieves', '92.5', 'and', 'so', 'outperforms', 'not', 'only', 'the', 'best', 'single', 'model', ',', 'but', 'also', 'the', 'best', 'ensemble', 'result', 'reported', 'previously', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['WRB', 'VBN', 'IN', 'DT', 'JJ', 'JJ', ':', 'NN', 'NN', ',', 'DT', 'JJ', 'NNP', 'VBZ', 'NNP', 'NN', 'VBZ', 'CD', 'CC', 'RB', 'VBZ', 'RB', 'RB', 'DT', 'JJS', 'JJ', 'NN', ',', 'CC', 'RB', 'DT', 'JJS', 'JJ', 'NN', 'VBD', 'RB', '.']",37
constituency_parsing,3,120,An ensemble of 5 LSTM+ A models further improves this score to 92.8 .,"['An', 'ensemble', 'of', '5', 'LSTM+', 'A', 'models', 'further', 'improves', 'this', 'score', 'to', '92.8', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'CD', 'NNP', 'NNP', 'NNS', 'RBR', 'VBZ', 'DT', 'NN', 'TO', 'CD', '.']",14
constituency_parsing,3,122,"The LSTM + A model trained on WSJ dataset only produced malformed trees for 25 of the 1700 sentences in our development set ( 1.5 % of all cases ) , and the model trained on full high - confidence dataset did this for 14 sentences ( 0.8 % ) .","['The', 'LSTM', '+', 'A', 'model', 'trained', 'on', 'WSJ', 'dataset', 'only', 'produced', 'malformed', 'trees', 'for', '25', 'of', 'the', '1700', 'sentences', 'in', 'our', 'development', 'set', '(', '1.5', '%', 'of', 'all', 'cases', ')', ',', 'and', 'the', 'model', 'trained', 'on', 'full', 'high', '-', 'confidence', 'dataset', 'did', 'this', 'for', '14', 'sentences', '(', '0.8', '%', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'VBZ', 'NNP', 'NN', 'VBN', 'IN', 'NNP', 'NN', 'RB', 'VBD', 'VBN', 'NNS', 'IN', 'CD', 'IN', 'DT', 'CD', 'NNS', 'IN', 'PRP$', 'NN', 'VBN', '(', 'CD', 'NN', 'IN', 'DT', 'NNS', ')', ',', 'CC', 'DT', 'NN', 'VBD', 'IN', 'JJ', 'JJ', ':', 'NN', 'NN', 'VBD', 'DT', 'IN', 'CD', 'NNS', '(', 'CD', 'NN', ')', '.']",51
constituency_parsing,3,130,"The difference between the F 1 score on sentences of length upto 30 and that upto 70 is 1.3 for the BerkeleyParser , 1.7 for the baseline LSTM , and 0.7 for LSTM + A .","['The', 'difference', 'between', 'the', 'F', '1', 'score', 'on', 'sentences', 'of', 'length', 'upto', '30', 'and', 'that', 'upto', '70', 'is', '1.3', 'for', 'the', 'BerkeleyParser', ',', '1.7', 'for', 'the', 'baseline', 'LSTM', ',', 'and', '0.7', 'for', 'LSTM', '+', 'A', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NNP', 'CD', 'NN', 'IN', 'NNS', 'IN', 'NN', 'JJ', 'CD', 'CC', 'IN', 'JJ', 'CD', 'VBZ', 'CD', 'IN', 'DT', 'NNP', ',', 'CD', 'IN', 'DT', 'NN', 'NNP', ',', 'CC', 'CD', 'IN', 'NNP', 'NNP', 'NNP', '.']",36
constituency_parsing,3,157,LSTM + A trained on the high - confidence corpus ( which only includes text from news ) achieved an F 1 score of 95.7 on QTB and 84.6 on WEB .,"['LSTM', '+', 'A', 'trained', 'on', 'the', 'high', '-', 'confidence', 'corpus', '(', 'which', 'only', 'includes', 'text', 'from', 'news', ')', 'achieved', 'an', 'F', '1', 'score', 'of', '95.7', 'on', 'QTB', 'and', '84.6', 'on', 'WEB', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O']","['NNP', 'VBZ', 'NNP', 'VBN', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', '(', 'WDT', 'RB', 'VBZ', 'NN', 'IN', 'NN', ')', 'VBD', 'DT', 'NNP', 'CD', 'NN', 'IN', 'CD', 'IN', 'NNP', 'CC', 'CD', 'IN', 'NNP', '.']",32
constituency_parsing,0,2,Recurrent Neural Network Grammars,"['Recurrent', 'Neural', 'Network', 'Grammars']","['O', 'O', 'O', 'B-n']","['NNP', 'NNP', 'NNP', 'NNP']",4
constituency_parsing,0,12,"In this paper , we introduce recurrent neural network grammars ( RNNGs ; 2 ) , a new generative probabilistic model of sentences that explicitly models nested , hierarchical relationships among words and phrases .","['In', 'this', 'paper', ',', 'we', 'introduce', 'recurrent', 'neural', 'network', 'grammars', '(', 'RNNGs', ';', '2', ')', ',', 'a', 'new', 'generative', 'probabilistic', 'model', 'of', 'sentences', 'that', 'explicitly', 'models', 'nested', ',', 'hierarchical', 'relationships', 'among', 'words', 'and', 'phrases', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'JJ', 'NN', 'NNS', '(', 'NNP', ':', 'CD', ')', ',', 'DT', 'JJ', 'JJ', 'JJ', 'NN', 'IN', 'NNS', 'WDT', 'RB', 'NNS', 'VBN', ',', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'NNS', '.']",35
constituency_parsing,0,13,"RNNGs operate via a recursive syntactic process reminiscent of probabilistic context - free grammar generation , but decisions are parameterized using RNNs that condition on the entire syntactic derivation history , greatly relaxing context - free independence assumptions .","['RNNGs', 'operate', 'via', 'a', 'recursive', 'syntactic', 'process', 'reminiscent', 'of', 'probabilistic', 'context', '-', 'free', 'grammar', 'generation', ',', 'but', 'decisions', 'are', 'parameterized', 'using', 'RNNs', 'that', 'condition', 'on', 'the', 'entire', 'syntactic', 'derivation', 'history', ',', 'greatly', 'relaxing', 'context', '-', 'free', 'independence', 'assumptions', '.']","['B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', ':', 'JJ', 'NN', 'NN', ',', 'CC', 'NNS', 'VBP', 'VBN', 'VBG', 'NNP', 'WDT', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', ',', 'RB', 'VBG', 'JJ', ':', 'JJ', 'NN', 'NNS', '.']",39
constituency_parsing,0,15,"We give two variants of the algorithm , one for parsing ( given an observed sentence , transform it into a tree ) , and one for generation .","['We', 'give', 'two', 'variants', 'of', 'the', 'algorithm', ',', 'one', 'for', 'parsing', '(', 'given', 'an', 'observed', 'sentence', ',', 'transform', 'it', 'into', 'a', 'tree', ')', ',', 'and', 'one', 'for', 'generation', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'IN', 'DT', 'NN', ',', 'CD', 'IN', 'NN', '(', 'VBN', 'DT', 'JJ', 'NN', ',', 'VB', 'PRP', 'IN', 'DT', 'NN', ')', ',', 'CC', 'CD', 'IN', 'NN', '.']",29
constituency_parsing,0,24,"The discriminative model also lets us use ancestor sampling to obtain samples of parse trees for sentences , and this is used to solve a second practical challenge with RNNGs : approximating the marginal likelihood and MAP tree of a sentence under the generative model .","['The', 'discriminative', 'model', 'also', 'lets', 'us', 'use', 'ancestor', 'sampling', 'to', 'obtain', 'samples', 'of', 'parse', 'trees', 'for', 'sentences', ',', 'and', 'this', 'is', 'used', 'to', 'solve', 'a', 'second', 'practical', 'challenge', 'with', 'RNNGs', ':', 'approximating', 'the', 'marginal', 'likelihood', 'and', 'MAP', 'tree', 'of', 'a', 'sentence', 'under', 'the', 'generative', 'model', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'RB', 'VBZ', 'PRP', 'VB', 'NN', 'VBG', 'TO', 'VB', 'NNS', 'IN', 'NN', 'NNS', 'IN', 'NNS', ',', 'CC', 'DT', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NNP', ':', 'VBG', 'DT', 'JJ', 'NN', 'CC', 'NNP', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",46
constituency_parsing,0,25,We present a simple importance sampling algorithm which uses samples from the discriminative parser to solve inference problems in the generative model ( 5 ) .,"['We', 'present', 'a', 'simple', 'importance', 'sampling', 'algorithm', 'which', 'uses', 'samples', 'from', 'the', 'discriminative', 'parser', 'to', 'solve', 'inference', 'problems', 'in', 'the', 'generative', 'model', '(', '5', ')', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'VBG', 'NN', 'WDT', 'VBZ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'TO', 'VB', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'CD', ')', '.']",26
constituency_parsing,0,160,"For the discriminative model , we used hidden dimensions of 128 and 2 - layer LSTMs ( larger numbers of dimensions reduced validation set performance ) .","['For', 'the', 'discriminative', 'model', ',', 'we', 'used', 'hidden', 'dimensions', 'of', '128', 'and', '2', '-', 'layer', 'LSTMs', '(', 'larger', 'numbers', 'of', 'dimensions', 'reduced', 'validation', 'set', 'performance', ')', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBD', 'JJ', 'NNS', 'IN', 'CD', 'CC', 'CD', ':', 'NN', 'NNP', '(', 'JJR', 'NNS', 'IN', 'NNS', 'VBN', 'NN', 'VBN', 'NN', ')', '.']",27
constituency_parsing,0,161,"For the generative model , we used 256 dimensions and 2 layer LSTMs .","['For', 'the', 'generative', 'model', ',', 'we', 'used', '256', 'dimensions', 'and', '2', 'layer', 'LSTMs', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBD', 'CD', 'NNS', 'CC', 'CD', 'NN', 'NNP', '.']",14
constituency_parsing,0,162,"For both models , we tuned the dropout rate to maximize validation set likelihood , obtaining optimal rates of 0.2 ( discriminative ) and 0.3 ( generative ) .","['For', 'both', 'models', ',', 'we', 'tuned', 'the', 'dropout', 'rate', 'to', 'maximize', 'validation', 'set', 'likelihood', ',', 'obtaining', 'optimal', 'rates', 'of', '0.2', '(', 'discriminative', ')', 'and', '0.3', '(', 'generative', ')', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'VBD', 'DT', 'NN', 'NN', 'TO', 'VB', 'NN', 'VBN', 'NN', ',', 'VBG', 'JJ', 'NNS', 'IN', 'CD', '(', 'NN', ')', 'CC', 'CD', '(', 'JJ', ')', '.']",29
constituency_parsing,0,163,"For the sequential LSTM baseline for the language model , we also found an optimal dropout rate of 0.3 .","['For', 'the', 'sequential', 'LSTM', 'baseline', 'for', 'the', 'language', 'model', ',', 'we', 'also', 'found', 'an', 'optimal', 'dropout', 'rate', 'of', '0.3', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'PRP', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.']",20
constituency_parsing,0,164,For training we used stochastic gradient descent with a learning rate of 0.1 .,"['For', 'training', 'we', 'used', 'stochastic', 'gradient', 'descent', 'with', 'a', 'learning', 'rate', 'of', '0.1', '.']","['O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', 'PRP', 'VBD', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '.']",14
entity_linking,16,2,One Single Deep Bidirectional LSTM Network for Word Sense Disambiguation of Text Data,"['One', 'Single', 'Deep', 'Bidirectional', 'LSTM', 'Network', 'for', 'Word', 'Sense', 'Disambiguation', 'of', 'Text', 'Data']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['CD', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",13
entity_linking,16,5,"To mine these data properly , attributable to their innate ambiguity , a Word Sense Disambiguation ( WSD ) algorithm can avoid numbers of difficulties in Natural Language Processing ( NLP ) pipeline .","['To', 'mine', 'these', 'data', 'properly', ',', 'attributable', 'to', 'their', 'innate', 'ambiguity', ',', 'a', 'Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', 'algorithm', 'can', 'avoid', 'numbers', 'of', 'difficulties', 'in', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', 'pipeline', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'DT', 'NNS', 'RB', ',', 'JJ', 'TO', 'PRP$', 'JJ', 'NN', ',', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', 'MD', 'VB', 'NNS', 'IN', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', '.']",34
entity_linking,16,6,"However , considering a large number of ambiguous words in one language or technical domain , we may encounter limiting constraints for proper deployment of existing WSD models .","['However', ',', 'considering', 'a', 'large', 'number', 'of', 'ambiguous', 'words', 'in', 'one', 'language', 'or', 'technical', 'domain', ',', 'we', 'may', 'encounter', 'limiting', 'constraints', 'for', 'proper', 'deployment', 'of', 'existing', 'WSD', 'models', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['RB', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'CD', 'NN', 'CC', 'JJ', 'NN', ',', 'PRP', 'MD', 'VB', 'VBG', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'NNP', 'NNS', '.']",29
entity_linking,16,16,"In this effort , we develop our supervised WSD model that leverages a Bidirectional Long Short - Term Memory ( BLSTM ) network .","['In', 'this', 'effort', ',', 'we', 'develop', 'our', 'supervised', 'WSD', 'model', 'that', 'leverages', 'a', 'Bidirectional', 'Long', 'Short', '-', 'Term', 'Memory', '(', 'BLSTM', ')', 'network', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'PRP$', 'JJ', 'NNP', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', '.']",24
entity_linking,16,17,"This network works with neural sense vectors ( i.e. sense embeddings ) , which are learned during model training , and employs neural word vectors ( i.e. word embeddings ) , which are learned through an unsupervised deep learning approach called GloVe ( Global Vectors for word representation ) for the context words .","['This', 'network', 'works', 'with', 'neural', 'sense', 'vectors', '(', 'i.e.', 'sense', 'embeddings', ')', ',', 'which', 'are', 'learned', 'during', 'model', 'training', ',', 'and', 'employs', 'neural', 'word', 'vectors', '(', 'i.e.', 'word', 'embeddings', ')', ',', 'which', 'are', 'learned', 'through', 'an', 'unsupervised', 'deep', 'learning', 'approach', 'called', 'GloVe', '(', 'Global', 'Vectors', 'for', 'word', 'representation', ')', 'for', 'the', 'context', 'words', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'JJ', 'NN', 'NNS', '(', 'JJ', 'NN', 'NNS', ')', ',', 'WDT', 'VBP', 'VBN', 'IN', 'NN', 'NN', ',', 'CC', 'VBZ', 'JJ', 'NN', 'NNS', '(', 'JJ', 'NN', 'NNS', ')', ',', 'WDT', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'VBN', 'NNP', '(', 'NNP', 'NNP', 'IN', 'NN', 'NN', ')', 'IN', 'DT', 'NN', 'NNS', '.']",54
entity_linking,16,110,Between - all - models comparisons,"['Between', '-', 'all', '-', 'models', 'comparisons']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'DT', ':', 'NNS', 'NNS']",6
entity_linking,16,114,"We show our single model sits among the 5 top - performing algorithms , considering that in other algorithms for each ambiguous word one separate classifier is trained ( i.e. in the same number of ambiguous words in a language there have to be classifiers ; which means 57 classifiers for this specific task ) .","['We', 'show', 'our', 'single', 'model', 'sits', 'among', 'the', '5', 'top', '-', 'performing', 'algorithms', ',', 'considering', 'that', 'in', 'other', 'algorithms', 'for', 'each', 'ambiguous', 'word', 'one', 'separate', 'classifier', 'is', 'trained', '(', 'i.e.', 'in', 'the', 'same', 'number', 'of', 'ambiguous', 'words', 'in', 'a', 'language', 'there', 'have', 'to', 'be', 'classifiers', ';', 'which', 'means', '57', 'classifiers', 'for', 'this', 'specific', 'task', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'CD', 'JJ', ':', 'VBG', 'NN', ',', 'VBG', 'IN', 'IN', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CD', 'NN', 'NN', 'VBZ', 'VBN', '(', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'RB', 'VBP', 'TO', 'VB', 'NNS', ':', 'WDT', 'VBZ', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'NN', ')', '.']",56
entity_linking,16,115,shows the results of the top - performing and low - performing supervised algorithms .,"['shows', 'the', 'results', 'of', 'the', 'top', '-', 'performing', 'and', 'low', '-', 'performing', 'supervised', 'algorithms', '.']","['B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBZ', 'DT', 'NNS', 'IN', 'DT', 'JJ', ':', 'NN', 'CC', 'JJ', ':', 'NN', 'VBD', 'NN', '.']",15
entity_linking,16,128,Within - our - model comparisons,"['Within', '-', 'our', '-', 'model', 'comparisons']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['IN', ':', 'PRP$', ':', 'NN', 'NNS']",6
entity_linking,16,136,"We observe if reverse the sequential follow of information into our Bidirectional LSTM , we shuffle the order of the context words , or even replace our Bidirectional LSTMs with two different fully - connected networks of the same size 50 ( the size of the LSTMs outputs ) , the achieved results were notably less than 72.5 % .","['We', 'observe', 'if', 'reverse', 'the', 'sequential', 'follow', 'of', 'information', 'into', 'our', 'Bidirectional', 'LSTM', ',', 'we', 'shuffle', 'the', 'order', 'of', 'the', 'context', 'words', ',', 'or', 'even', 'replace', 'our', 'Bidirectional', 'LSTMs', 'with', 'two', 'different', 'fully', '-', 'connected', 'networks', 'of', 'the', 'same', 'size', '50', '(', 'the', 'size', 'of', 'the', 'LSTMs', 'outputs', ')', ',', 'the', 'achieved', 'results', 'were', 'notably', 'less', 'than', '72.5', '%', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN', 'IN', 'PRP$', 'NNP', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', ',', 'CC', 'RB', 'VB', 'PRP$', 'NNP', 'NNP', 'IN', 'CD', 'JJ', 'RB', ':', 'VBN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'CD', '(', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NNS', ')', ',', 'DT', 'VBN', 'NNS', 'VBD', 'RB', 'JJR', 'IN', 'CD', 'NN', '.']",60
entity_linking,13,2,Word Sense Disambiguation using a Bidirectional LSTM,"['Word', 'Sense', 'Disambiguation', 'using', 'a', 'Bidirectional', 'LSTM']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'VBG', 'DT', 'NNP', 'NNP']",7
entity_linking,13,14,"The task of assigning a word token in a text , e.g. rock , to a well defined word sense in a lexicon is called word sense disambiguation ( WSD ) .","['The', 'task', 'of', 'assigning', 'a', 'word', 'token', 'in', 'a', 'text', ',', 'e.g.', 'rock', ',', 'to', 'a', 'well', 'defined', 'word', 'sense', 'in', 'a', 'lexicon', 'is', 'called', 'word', 'sense', 'disambiguation', '(', 'WSD', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'NN', 'NN', ',', 'TO', 'DT', 'NN', 'VBN', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'VBN', 'NN', 'NN', 'NN', '(', 'NNP', ')', '.']",32
entity_linking,13,19,"Improved WSD would be beneficial to many natural language processing ( NLP ) problems , e.g. machine translation , information Retrieval , information Extraction , and sense aware word representations .","['Improved', 'WSD', 'would', 'be', 'beneficial', 'to', 'many', 'natural', 'language', 'processing', '(', 'NLP', ')', 'problems', ',', 'e.g.', 'machine', 'translation', ',', 'information', 'Retrieval', ',', 'information', 'Extraction', ',', 'and', 'sense', 'aware', 'word', 'representations', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'NNP', 'MD', 'VB', 'JJ', 'TO', 'JJ', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NNS', ',', 'FW', 'NN', 'NN', ',', 'NN', 'NNP', ',', 'NN', 'NNP', ',', 'CC', 'NN', 'JJ', 'NN', 'NNS', '.']",31
entity_linking,13,23,"We aim to mitigate these problems by ( 1 ) modeling the sequence of words surrounding the target word , and ( 2 ) refrain from using any hand crafted features or external resources and instead represent the words using real valued vector representation , i.e. word embeddings .","['We', 'aim', 'to', 'mitigate', 'these', 'problems', 'by', '(', '1', ')', 'modeling', 'the', 'sequence', 'of', 'words', 'surrounding', 'the', 'target', 'word', ',', 'and', '(', '2', ')', 'refrain', 'from', 'using', 'any', 'hand', 'crafted', 'features', 'or', 'external', 'resources', 'and', 'instead', 'represent', 'the', 'words', 'using', 'real', 'valued', 'vector', 'representation', ',', 'i.e.', 'word', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'TO', 'VB', 'DT', 'NNS', 'IN', '(', 'CD', ')', 'VBG', 'DT', 'NN', 'IN', 'NNS', 'VBG', 'DT', 'NN', 'NN', ',', 'CC', '(', 'CD', ')', 'NN', 'IN', 'VBG', 'DT', 'NN', 'VBN', 'NNS', 'CC', 'JJ', 'NNS', 'CC', 'RB', 'VB', 'DT', 'NNS', 'VBG', 'JJ', 'VBN', 'NN', 'NN', ',', 'FW', 'NN', 'NNS', '.']",49
entity_linking,13,83,"The source code , implemented using TensorFlow , has been released as open source 1 .","['The', 'source', 'code', ',', 'implemented', 'using', 'TensorFlow', ',', 'has', 'been', 'released', 'as', 'open', 'source', '1', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', ',', 'VBN', 'VBG', 'NNP', ',', 'VBZ', 'VBN', 'VBN', 'IN', 'JJ', 'NN', 'CD', '.']",16
entity_linking,13,87,The embeddings are initialized using a set of freely available 2 Glo Ve vectors trained on Wikipedia and Gigaword .,"['The', 'embeddings', 'are', 'initialized', 'using', 'a', 'set', 'of', 'freely', 'available', '2', 'Glo', 'Ve', 'vectors', 'trained', 'on', 'Wikipedia', 'and', 'Gigaword', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'VBG', 'DT', 'NN', 'IN', 'RB', 'JJ', 'CD', 'NNP', 'NNP', 'NNS', 'VBD', 'IN', 'NNP', 'CC', 'NNP', '.']",20
entity_linking,13,88,"Words not included in this set are initialized from N ( 0 , 0.1 ) .","['Words', 'not', 'included', 'in', 'this', 'set', 'are', 'initialized', 'from', 'N', '(', '0', ',', '0.1', ')', '.']","['B-n', 'B-p', 'I-p', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'RB', 'VBN', 'IN', 'DT', 'NN', 'VBP', 'VBN', 'IN', 'NNP', '(', 'CD', ',', 'CD', ')', '.']",16
entity_linking,13,106,Our proposed model achieves the top score on SE2 and are tied with IMS + adapted CW on SE3 .,"['Our', 'proposed', 'model', 'achieves', 'the', 'top', 'score', 'on', 'SE2', 'and', 'are', 'tied', 'with', 'IMS', '+', 'adapted', 'CW', 'on', 'SE3', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP$', 'VBN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'CC', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'VBD', 'NNP', 'IN', 'NNP', '.']",20
entity_linking,13,107,"Moreover , we see that dropword consistently improves the results on both SE2 and SE3 .","['Moreover', ',', 'we', 'see', 'that', 'dropword', 'consistently', 'improves', 'the', 'results', 'on', 'both', 'SE2', 'and', 'SE3', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'IN', 'NN', 'RB', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', '.']",16
entity_linking,13,108,"Randomizing the order of the input words yields a substantially worse result , which provides evidence for our hypothesis that the order of the words are significant .","['Randomizing', 'the', 'order', 'of', 'the', 'input', 'words', 'yields', 'a', 'substantially', 'worse', 'result', ',', 'which', 'provides', 'evidence', 'for', 'our', 'hypothesis', 'that', 'the', 'order', 'of', 'the', 'words', 'are', 'significant', '.']","['B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'VBZ', 'DT', 'RB', 'JJR', 'NN', ',', 'WDT', 'VBZ', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', 'VBP', 'JJ', '.']",28
entity_linking,13,109,We also see that the system effectively makes use of the information in the pre-trained word embeddings and that they are essential to the performance of our system on these datasets .,"['We', 'also', 'see', 'that', 'the', 'system', 'effectively', 'makes', 'use', 'of', 'the', 'information', 'in', 'the', 'pre-trained', 'word', 'embeddings', 'and', 'that', 'they', 'are', 'essential', 'to', 'the', 'performance', 'of', 'our', 'system', 'on', 'these', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'RB', 'VBZ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'CC', 'IN', 'PRP', 'VBP', 'JJ', 'TO', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NNS', '.']",32
entity_linking,8,5,"Language modeling tasks , in which words , or word - pieces , are predicted on the basis of a local context , have been very effective for learning word embeddings and context dependent representations of phrases .","['Language', 'modeling', 'tasks', ',', 'in', 'which', 'words', ',', 'or', 'word', '-', 'pieces', ',', 'are', 'predicted', 'on', 'the', 'basis', 'of', 'a', 'local', 'context', ',', 'have', 'been', 'very', 'effective', 'for', 'learning', 'word', 'embeddings', 'and', 'context', 'dependent', 'representations', 'of', 'phrases', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'VBG', 'NNS', ',', 'IN', 'WDT', 'NNS', ',', 'CC', 'NN', ':', 'NNS', ',', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'VBP', 'VBN', 'RB', 'JJ', 'IN', 'VBG', 'NN', 'NNS', 'CC', 'JJ', 'JJ', 'NNS', 'IN', 'NNS', '.']",38
entity_linking,8,21,"We present RELIC ( Representations of Entities Learned in Context ) , a table of independent entity embeddings that have been trained to match fixed length vector representations of the textual context in which those entities have been seen .","['We', 'present', 'RELIC', '(', 'Representations', 'of', 'Entities', 'Learned', 'in', 'Context', ')', ',', 'a', 'table', 'of', 'independent', 'entity', 'embeddings', 'that', 'have', 'been', 'trained', 'to', 'match', 'fixed', 'length', 'vector', 'representations', 'of', 'the', 'textual', 'context', 'in', 'which', 'those', 'entities', 'have', 'been', 'seen', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'NNP', '(', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP', ')', ',', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'WDT', 'VBP', 'VBN', 'VBN', 'TO', 'VB', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'WDT', 'DT', 'NNS', 'VBP', 'VBN', 'VBN', '.']",40
entity_linking,8,22,"We apply RELIC to entity typing ( mapping each entity to its properties in an external , curated , ontology ) ; entity linking ( identifying which entity is referred to by a textual context ) , and trivia question answering ( retrieving the entity that best answers a question ) .","['We', 'apply', 'RELIC', 'to', 'entity', 'typing', '(', 'mapping', 'each', 'entity', 'to', 'its', 'properties', 'in', 'an', 'external', ',', 'curated', ',', 'ontology', ')', ';', 'entity', 'linking', '(', 'identifying', 'which', 'entity', 'is', 'referred', 'to', 'by', 'a', 'textual', 'context', ')', ',', 'and', 'trivia', 'question', 'answering', '(', 'retrieving', 'the', 'entity', 'that', 'best', 'answers', 'a', 'question', ')', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'NNP', 'TO', 'VB', 'VBG', '(', 'VBG', 'DT', 'NN', 'TO', 'PRP$', 'NNS', 'IN', 'DT', 'JJ', ',', 'VBN', ',', 'NN', ')', ':', 'NN', 'VBG', '(', 'VBG', 'WDT', 'NN', 'VBZ', 'VBN', 'TO', 'IN', 'DT', 'JJ', 'NN', ')', ',', 'CC', 'JJ', 'NN', 'NN', '(', 'VBG', 'DT', 'NN', 'WDT', 'JJS', 'VBZ', 'DT', 'NN', ')', '.']",52
entity_linking,8,98,"To train RELIC , we obtain data from the 2018 - 10 - 22 dump of English Wikipedia .","['To', 'train', 'RELIC', ',', 'we', 'obtain', 'data', 'from', 'the', '2018', '-', '10', '-', '22', 'dump', 'of', 'English', 'Wikipedia', '.']","['O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'NNP', ',', 'PRP', 'VB', 'NNS', 'IN', 'DT', 'CD', ':', 'CD', ':', 'CD', 'NN', 'IN', 'JJ', 'NNP', '.']",19
entity_linking,8,101,We limit each context sentence to 128 tokens .,"['We', 'limit', 'each', 'context', 'sentence', 'to', '128', 'tokens', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'CD', 'NNS', '.']",9
entity_linking,8,104,We set the entity embedding size to d = 300 .,"['We', 'set', 'the', 'entity', 'embedding', 'size', 'to', 'd', '=', '300', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'VBG', 'NN', 'TO', 'VB', 'JJ', 'CD', '.']",11
entity_linking,8,105,We train the model using Tensor Flow,"['We', 'train', 'the', 'model', 'using', 'Tensor', 'Flow']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n']","['PRP', 'VBP', 'DT', 'NN', 'VBG', 'NNP', 'NNP']",7
entity_linking,8,113,ENTITY LINKING,"['ENTITY', 'LINKING']","['B-n', 'I-n']","['NNP', 'NNP']",2
entity_linking,8,124,"However , when we do adopt the standard CoNLL - Aida training set and alias table , RELIC matches the state of the art on this benchmark , despite using far fewer hand engineered resources use the large Wikidata knowledge base to create entity representations ) .","['However', ',', 'when', 'we', 'do', 'adopt', 'the', 'standard', 'CoNLL', '-', 'Aida', 'training', 'set', 'and', 'alias', 'table', ',', 'RELIC', 'matches', 'the', 'state', 'of', 'the', 'art', 'on', 'this', 'benchmark', ',', 'despite', 'using', 'far', 'fewer', 'hand', 'engineered', 'resources', 'use', 'the', 'large', 'Wikidata', 'knowledge', 'base', 'to', 'create', 'entity', 'representations', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'WRB', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'NNP', ':', 'NNP', 'NN', 'NN', 'CC', 'NN', 'NN', ',', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'IN', 'VBG', 'RB', 'JJR', 'NN', 'VBD', 'NNS', 'VBP', 'DT', 'JJ', 'NNP', 'NN', 'NN', 'TO', 'VB', 'NN', 'NNS', ')', '.']",47
entity_linking,8,134,"Finally , we believe that RELIC 's entity linking performance could be boosted even higher through the adoption of commonly used entity linking features .","['Finally', ',', 'we', 'believe', 'that', 'RELIC', ""'s"", 'entity', 'linking', 'performance', 'could', 'be', 'boosted', 'even', 'higher', 'through', 'the', 'adoption', 'of', 'commonly', 'used', 'entity', 'linking', 'features', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'IN', 'NNP', 'POS', 'NN', 'VBG', 'NN', 'MD', 'VB', 'VBN', 'RB', 'JJR', 'IN', 'DT', 'NN', 'IN', 'RB', 'VBN', 'NN', 'VBG', 'NNS', '.']",25
entity_linking,8,141,"RELIC outperforms prior work , even with only 5 % of the training data .","['RELIC', 'outperforms', 'prior', 'work', ',', 'even', 'with', 'only', '5', '%', 'of', 'the', 'training', 'data', '.']","['B-n', 'B-n', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NN', 'NNS', 'JJ', 'NN', ',', 'RB', 'IN', 'RB', 'CD', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",15
entity_linking,8,142,ENTITY - LEVEL FINE TYPING,"['ENTITY', '-', 'LEVEL', 'FINE', 'TYPING']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'NNP', 'NN']",5
entity_linking,8,146,show that RELIC significantly outperforms prior results on both datasets .,"['show', 'that', 'RELIC', 'significantly', 'outperforms', 'prior', 'results', 'on', 'both', 'datasets', '.']","['B-p', 'O', 'B-n', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', 'IN', 'NNP', 'RB', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'NNS', '.']",11
entity_linking,8,148,"For TypeNet , aggregate mention - level types and train with a structured loss based on the TypeNet hierarchy , but is still outperformed by our flat classifier of binary labels .","['For', 'TypeNet', ',', 'aggregate', 'mention', '-', 'level', 'types', 'and', 'train', 'with', 'a', 'structured', 'loss', 'based', 'on', 'the', 'TypeNet', 'hierarchy', ',', 'but', 'is', 'still', 'outperformed', 'by', 'our', 'flat', 'classifier', 'of', 'binary', 'labels', '.']","['B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NNP', ',', 'JJ', 'NN', ':', 'NN', 'NNS', 'CC', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'VBZ', 'RB', 'VBN', 'IN', 'PRP$', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",32
entity_linking,8,151,EFFECT OF MASKING,"['EFFECT', 'OF', 'MASKING']","['B-n', 'I-n', 'I-n']","['NN', 'IN', 'NN']",3
entity_linking,8,154,"It is clear that masking mentions during training is beneficial for entity typing tasks , but detrimental for entity linking .","['It', 'is', 'clear', 'that', 'masking', 'mentions', 'during', 'training', 'is', 'beneficial', 'for', 'entity', 'typing', 'tasks', ',', 'but', 'detrimental', 'for', 'entity', 'linking', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'JJ', 'IN', 'VBG', 'NNS', 'IN', 'NN', 'VBZ', 'JJ', 'IN', 'NN', 'VBG', 'NNS', ',', 'CC', 'NN', 'IN', 'NN', 'NN', '.']",21
entity_linking,8,159,"A higher mask rate leads to better performance , both in low and high - data situations .","['A', 'higher', 'mask', 'rate', 'leads', 'to', 'better', 'performance', ',', 'both', 'in', 'low', 'and', 'high', '-', 'data', 'situations', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJR', 'NN', 'NN', 'VBZ', 'TO', 'RBR', 'NN', ',', 'DT', 'IN', 'JJ', 'CC', 'JJ', ':', 'NN', 'NNS', '.']",18
entity_linking,8,162,"However , we would like to point out that that a mask rate of 10 % , RELIC nears optimum performance on most tasks .","['However', ',', 'we', 'would', 'like', 'to', 'point', 'out', 'that', 'that', 'a', 'mask', 'rate', 'of', '10', '%', ',', 'RELIC', 'nears', 'optimum', 'performance', 'on', 'most', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'MD', 'VB', 'TO', 'VB', 'RP', 'IN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'NN', ',', 'NNP', 'VBZ', 'JJ', 'NN', 'IN', 'JJS', 'NNS', '.']",25
entity_linking,8,164,FEW - SHOT CATEGORY COMPLETION,"['FEW', '-', 'SHOT', 'CATEGORY', 'COMPLETION']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', ':', 'NNP', 'NNP', 'NNP']",5
entity_linking,8,166,"Furthermore , due to the incompleteness of the the FIGMENT and TypeNet type systems , we also believe that RELIC 's performance is approaching the upper bound on both of these supervised tasks .","['Furthermore', ',', 'due', 'to', 'the', 'incompleteness', 'of', 'the', 'the', 'FIGMENT', 'and', 'TypeNet', 'type', 'systems', ',', 'we', 'also', 'believe', 'that', 'RELIC', ""'s"", 'performance', 'is', 'approaching', 'the', 'upper', 'bound', 'on', 'both', 'of', 'these', 'supervised', 'tasks', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'JJ', 'TO', 'DT', 'NN', 'IN', 'DT', 'DT', 'NNP', 'CC', 'NNP', 'NN', 'NNS', ',', 'PRP', 'RB', 'VBP', 'IN', 'NNP', 'POS', 'NN', 'VBZ', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'IN', 'DT', 'VBN', 'NNS', '.']",34
entity_linking,8,181,TRIVIA QUESTION ANSWERING,"['TRIVIA', 'QUESTION', 'ANSWERING']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
entity_linking,8,196,We observe that the retrieve - then - read approach taken by ORQA outperforms the direct answer retrieval approach taken by RELIC .,"['We', 'observe', 'that', 'the', 'retrieve', '-', 'then', '-', 'read', 'approach', 'taken', 'by', 'ORQA', 'outperforms', 'the', 'direct', 'answer', 'retrieval', 'approach', 'taken', 'by', 'RELIC', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', ':', 'RB', ':', 'VB', 'NN', 'VBN', 'IN', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'VBN', 'IN', 'NNP', '.']",23
entity_linking,8,197,"However , ORQA runs a BERT based reading comprehension model over multiple evidence passages at inference time and we are encouraged to see that RELIC 's much faster nearest neighbor lookup captures 80 % of ORQA 's performance .","['However', ',', 'ORQA', 'runs', 'a', 'BERT', 'based', 'reading', 'comprehension', 'model', 'over', 'multiple', 'evidence', 'passages', 'at', 'inference', 'time', 'and', 'we', 'are', 'encouraged', 'to', 'see', 'that', 'RELIC', ""'s"", 'much', 'faster', 'nearest', 'neighbor', 'lookup', 'captures', '80', '%', 'of', 'ORQA', ""'s"", 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'VBZ', 'DT', 'NNP', 'VBN', 'NN', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'NN', 'NN', 'CC', 'PRP', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'NNP', 'POS', 'JJ', 'RBR', 'JJS', 'NN', 'NN', 'VBZ', 'CD', 'NN', 'IN', 'NNP', 'POS', 'NN', '.']",39
entity_linking,8,198,"It is also significant that RELIC outperforms 's reading comprehension baseline by 20 points , despite the fact that the baseline has access to a single document that is known to and TypeNet , even when only training on a small fraction of the task - specific training data .","['It', 'is', 'also', 'significant', 'that', 'RELIC', 'outperforms', ""'s"", 'reading', 'comprehension', 'baseline', 'by', '20', 'points', ',', 'despite', 'the', 'fact', 'that', 'the', 'baseline', 'has', 'access', 'to', 'a', 'single', 'document', 'that', 'is', 'known', 'to', 'and', 'TypeNet', ',', 'even', 'when', 'only', 'training', 'on', 'a', 'small', 'fraction', 'of', 'the', 'task', '-', 'specific', 'training', 'data', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'RB', 'JJ', 'IN', 'NNP', 'VBP', 'POS', 'VBG', 'NN', 'NN', 'IN', 'CD', 'NNS', ',', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'NN', 'TO', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'VBN', 'TO', 'CC', 'NNP', ',', 'RB', 'WRB', 'RB', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'JJ', 'NN', 'NNS', '.']",50
entity_linking,9,2,Joint Learning of the Embedding of Words and Entities for Named Entity Disambiguation,"['Joint', 'Learning', 'of', 'the', 'Embedding', 'of', 'Words', 'and', 'Entities', 'for', 'Named', 'Entity', 'Disambiguation']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'IN', 'DT', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",13
entity_linking,9,4,"Named Entity Disambiguation ( NED ) refers to the task of resolving multiple named entity mentions in a document to their correct references in a knowledge base ( KB ) ( e.g. , Wikipedia ) .","['Named', 'Entity', 'Disambiguation', '(', 'NED', ')', 'refers', 'to', 'the', 'task', 'of', 'resolving', 'multiple', 'named', 'entity', 'mentions', 'in', 'a', 'document', 'to', 'their', 'correct', 'references', 'in', 'a', 'knowledge', 'base', '(', 'KB', ')', '(', 'e.g.', ',', 'Wikipedia', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', 'TO', 'DT', 'NN', 'IN', 'VBG', 'NN', 'VBN', 'NN', 'NNS', 'IN', 'DT', 'NN', 'TO', 'PRP$', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '(', 'NNP', ')', '(', 'UH', ',', 'NNP', ')', '.']",36
entity_linking,9,5,"In this paper , we propose a novel embedding method specifically designed for NED .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'embedding', 'method', 'specifically', 'designed', 'for', 'NED', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'VBG', 'NN', 'RB', 'VBN', 'IN', 'NNP', '.']",15
entity_linking,9,21,"In this paper , we propose a method to construct a novel embedding that jointly maps words and entities into the same continuous vector space .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'method', 'to', 'construct', 'a', 'novel', 'embedding', 'that', 'jointly', 'maps', 'words', 'and', 'entities', 'into', 'the', 'same', 'continuous', 'vector', 'space', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'WDT', 'RB', 'VBZ', 'NNS', 'CC', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', '.']",26
entity_linking,9,22,"In this model , similar words and entities are placed close to one another in a vector space .","['In', 'this', 'model', ',', 'similar', 'words', 'and', 'entities', 'are', 'placed', 'close', 'to', 'one', 'another', 'in', 'a', 'vector', 'space', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'JJ', 'NNS', 'CC', 'NNS', 'VBP', 'VBN', 'RB', 'TO', 'CD', 'DT', 'IN', 'DT', 'NN', 'NN', '.']",19
entity_linking,9,23,"Hence , we can measure the similarity between any pair of items ( i.e. , words , entities , and a word and an entity ) by simply computing their cosine similarity .","['Hence', ',', 'we', 'can', 'measure', 'the', 'similarity', 'between', 'any', 'pair', 'of', 'items', '(', 'i.e.', ',', 'words', ',', 'entities', ',', 'and', 'a', 'word', 'and', 'an', 'entity', ')', 'by', 'simply', 'computing', 'their', 'cosine', 'similarity', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'MD', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', '(', 'FW', ',', 'NNS', ',', 'NNS', ',', 'CC', 'DT', 'NN', 'CC', 'DT', 'NN', ')', 'IN', 'RB', 'VBG', 'PRP$', 'NN', 'NN', '.']",33
entity_linking,9,25,"Our model is based on the skip - gram model , a recently proposed embedding model that learns to predict each context word given the target word .","['Our', 'model', 'is', 'based', 'on', 'the', 'skip', '-', 'gram', 'model', ',', 'a', 'recently', 'proposed', 'embedding', 'model', 'that', 'learns', 'to', 'predict', 'each', 'context', 'word', 'given', 'the', 'target', 'word', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', ',', 'DT', 'RB', 'VBN', 'VBG', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'NN', 'VBN', 'DT', 'NN', 'NN', '.']",28
entity_linking,9,26,Our model consists of the following three models based on the skip - gram model :,"['Our', 'model', 'consists', 'of', 'the', 'following', 'three', 'models', 'based', 'on', 'the', 'skip', '-', 'gram', 'model', ':']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'CD', 'NNS', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', ':']",16
entity_linking,9,27,"1 ) the conventional skip - gram model that learns to predict neighboring words given the target word in text corpora , 2 ) the KB graph model that learns to estimate neighboring entities given the target entity in the link graph of the KB , and 3 ) the anchor context model that learns to predict neighboring words given the target entity using anchors and their context words in the KB .","['1', ')', 'the', 'conventional', 'skip', '-', 'gram', 'model', 'that', 'learns', 'to', 'predict', 'neighboring', 'words', 'given', 'the', 'target', 'word', 'in', 'text', 'corpora', ',', '2', ')', 'the', 'KB', 'graph', 'model', 'that', 'learns', 'to', 'estimate', 'neighboring', 'entities', 'given', 'the', 'target', 'entity', 'in', 'the', 'link', 'graph', 'of', 'the', 'KB', ',', 'and', '3', ')', 'the', 'anchor', 'context', 'model', 'that', 'learns', 'to', 'predict', 'neighboring', 'words', 'given', 'the', 'target', 'entity', 'using', 'anchors', 'and', 'their', 'context', 'words', 'in', 'the', 'KB', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['CD', ')', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'JJ', 'NNS', 'VBN', 'DT', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'CD', ')', 'DT', 'NNP', 'NN', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'JJ', 'NNS', 'VBN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNP', ',', 'CC', 'CD', ')', 'DT', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'JJ', 'NNS', 'VBN', 'DT', 'NN', 'NN', 'VBG', 'NNS', 'CC', 'PRP$', 'NN', 'NNS', 'IN', 'DT', 'NNP', '.']",73
entity_linking,9,29,"Based on our proposed embedding , we also develop a straightforward NED method that computes two contexts using the proposed embedding : textual context similarity , and coherence .","['Based', 'on', 'our', 'proposed', 'embedding', ',', 'we', 'also', 'develop', 'a', 'straightforward', 'NED', 'method', 'that', 'computes', 'two', 'contexts', 'using', 'the', 'proposed', 'embedding', ':', 'textual', 'context', 'similarity', ',', 'and', 'coherence', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O']","['VBN', 'IN', 'PRP$', 'VBN', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'NN', 'NNP', 'NN', 'WDT', 'VBZ', 'CD', 'NN', 'VBG', 'DT', 'VBN', 'NN', ':', 'JJ', 'NN', 'NN', ',', 'CC', 'NN', '.']",29
entity_linking,9,32,"Our NED method combines these contexts with several standard features ( e.g. , prior probability ) using supervised machine learning .","['Our', 'NED', 'method', 'combines', 'these', 'contexts', 'with', 'several', 'standard', 'features', '(', 'e.g.', ',', 'prior', 'probability', ')', 'using', 'supervised', 'machine', 'learning', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNP', 'NN', 'NNS', 'DT', 'NNS', 'IN', 'JJ', 'NN', 'NNS', '(', 'NN', ',', 'JJ', 'NN', ')', 'VBG', 'VBN', 'NN', 'NN', '.']",21
entity_linking,9,215,Our method successfully achieved enhanced performance on both the CoNLL and the TAC 2010 datasets .,"['Our', 'method', 'successfully', 'achieved', 'enhanced', 'performance', 'on', 'both', 'the', 'CoNLL', 'and', 'the', 'TAC', '2010', 'datasets', '.']","['B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'RB', 'VBD', 'JJ', 'NN', 'IN', 'CC', 'DT', 'NNP', 'CC', 'DT', 'NNP', 'CD', 'NNS', '.']",16
entity_linking,9,216,"Moreover , we found that the choice of candidate generation method considerably affected performance on the CoNLL dataset .","['Moreover', ',', 'we', 'found', 'that', 'the', 'choice', 'of', 'candidate', 'generation', 'method', 'considerably', 'affected', 'performance', 'on', 'the', 'CoNLL', 'dataset', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBD', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', 'NN', 'RB', 'VBD', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",19
entity_linking,9,218,Our method outperformed all the state - of - the - art methods on both datasets .,"['Our', 'method', 'outperformed', 'all', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'on', 'both', 'datasets', '.']","['O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBD', 'PDT', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'NNS', '.']",17
entity_linking,1,2,Pre-training of Deep Contextualized Embeddings of Words and Entities for Named Entity Disambiguation,"['Pre-training', 'of', 'Deep', 'Contextualized', 'Embeddings', 'of', 'Words', 'and', 'Entities', 'for', 'Named', 'Entity', 'Disambiguation']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NN', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",13
entity_linking,1,5,"In this paper , we propose a new contextualized embedding model of words and entities for named entity disambiguation ( NED ) .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'new', 'contextualized', 'embedding', 'model', 'of', 'words', 'and', 'entities', 'for', 'named', 'entity', 'disambiguation', '(', 'NED', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'VBG', 'NN', 'IN', 'NNS', 'CC', 'NNS', 'IN', 'VBN', 'NN', 'NN', '(', 'NNP', ')', '.']",23
entity_linking,1,9,We evaluated our model by addressing NED using a simple NED model based on the trained contextualized embeddings .,"['We', 'evaluated', 'our', 'model', 'by', 'addressing', 'NED', 'using', 'a', 'simple', 'NED', 'model', 'based', 'on', 'the', 'trained', 'contextualized', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'PRP$', 'NN', 'IN', 'VBG', 'NNP', 'VBG', 'DT', 'JJ', 'NNP', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'JJ', 'NNS', '.']",19
entity_linking,1,18,"In this paper , we describe a new contextualized embedding model for words and entities for NED .","['In', 'this', 'paper', ',', 'we', 'describe', 'a', 'new', 'contextualized', 'embedding', 'model', 'for', 'words', 'and', 'entities', 'for', 'NED', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'NNS', 'CC', 'NNS', 'IN', 'NNP', '.']",18
entity_linking,1,19,"Following , the proposed model is based on the bidirectional transformer encoder .","['Following', ',', 'the', 'proposed', 'model', 'is', 'based', 'on', 'the', 'bidirectional', 'transformer', 'encoder', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['VBG', ',', 'DT', 'VBN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",13
entity_linking,1,20,"It takes a sequence of words and entities in the input text , and produces a contextualized embedding for each word and entity .","['It', 'takes', 'a', 'sequence', 'of', 'words', 'and', 'entities', 'in', 'the', 'input', 'text', ',', 'and', 'produces', 'a', 'contextualized', 'embedding', 'for', 'each', 'word', 'and', 'entity', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NN', '.']",24
entity_linking,1,21,"Inspired by MLM , we propose masked entity prediction , a new task that aims to train the embedding model by predicting randomly masked entities based on words and non-masked entities in the input text .","['Inspired', 'by', 'MLM', ',', 'we', 'propose', 'masked', 'entity', 'prediction', ',', 'a', 'new', 'task', 'that', 'aims', 'to', 'train', 'the', 'embedding', 'model', 'by', 'predicting', 'randomly', 'masked', 'entities', 'based', 'on', 'words', 'and', 'non-masked', 'entities', 'in', 'the', 'input', 'text', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBN', 'IN', 'NNP', ',', 'PRP', 'VBP', 'JJ', 'NN', 'NN', ',', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'DT', 'VBG', 'NN', 'IN', 'VBG', 'RB', 'VBN', 'NNS', 'VBN', 'IN', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",36
entity_linking,1,22,We trained the model using texts and their entity annotations retrieved from Wikipedia .,"['We', 'trained', 'the', 'model', 'using', 'texts', 'and', 'their', 'entity', 'annotations', 'retrieved', 'from', 'Wikipedia', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'VBG', 'NNS', 'CC', 'PRP$', 'NN', 'NNS', 'VBD', 'IN', 'NNP', '.']",14
entity_linking,1,113,"As shown , our models outperformed all previously proposed models .","['As', 'shown', ',', 'our', 'models', 'outperformed', 'all', 'previously', 'proposed', 'models', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', ',', 'PRP$', 'NNS', 'VBN', 'DT', 'RB', 'VBN', 'NNS', '.']",11
entity_linking,1,114,"Furthermore , using pseudo entity annotations boosted the accuracy by 0.3 % .","['Furthermore', ',', 'using', 'pseudo', 'entity', 'annotations', 'boosted', 'the', 'accuracy', 'by', '0.3', '%', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'VBG', 'JJ', 'NN', 'NNS', 'VBD', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",13
entity_linking,1,118,"Our models achieved new state - of - the - art results on four of the five datasets , namely MSNBC , AQUAINT , ACE2004 , and WNED - WIKI , and performed competitive on the WNED - CLUEWEB dataset .","['Our', 'models', 'achieved', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'on', 'four', 'of', 'the', 'five', 'datasets', ',', 'namely', 'MSNBC', ',', 'AQUAINT', ',', 'ACE2004', ',', 'and', 'WNED', '-', 'WIKI', ',', 'and', 'performed', 'competitive', 'on', 'the', 'WNED', '-', 'CLUEWEB', 'dataset', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBN', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'CD', 'IN', 'DT', 'CD', 'NNS', ',', 'RB', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', ':', 'NNP', ',', 'CC', 'VBD', 'JJ', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', '.']",41
entity_linking,1,119,"Furthermore , using pseudo entity annotations improved the performance on the AQUAINT and ACE2004 datasets .","['Furthermore', ',', 'using', 'pseudo', 'entity', 'annotations', 'improved', 'the', 'performance', 'on', 'the', 'AQUAINT', 'and', 'ACE2004', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'VBG', 'JJ', 'NN', 'NNS', 'VBD', 'DT', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",16
entity_linking,5,2,Improving the Coverage and the Generalization Ability of Neural Word Sense Disambiguation through Hypernymy and Hyponymy Relationships,"['Improving', 'the', 'Coverage', 'and', 'the', 'Generalization', 'Ability', 'of', 'Neural', 'Word', 'Sense', 'Disambiguation', 'through', 'Hypernymy', 'and', 'Hyponymy', 'Relationships']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'NN', 'CC', 'DT', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'NNP']",17
entity_linking,5,4,"In Word Sense Disambiguation ( WSD ) , the predominant approach generally involves a supervised system trained on sense annotated corpora .","['In', 'Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', ',', 'the', 'predominant', 'approach', 'generally', 'involves', 'a', 'supervised', 'system', 'trained', 'on', 'sense', 'annotated', 'corpora', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'DT', 'JJ', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'NN', 'VBN', 'NN', '.']",22
entity_linking,5,7,"Our method leads to state of the art results on most WSD evaluation tasks , while improving the coverage of supervised systems , reducing the training time and the size of the models , without additional training data .","['Our', 'method', 'leads', 'to', 'state', 'of', 'the', 'art', 'results', 'on', 'most', 'WSD', 'evaluation', 'tasks', ',', 'while', 'improving', 'the', 'coverage', 'of', 'supervised', 'systems', ',', 'reducing', 'the', 'training', 'time', 'and', 'the', 'size', 'of', 'the', 'models', ',', 'without', 'additional', 'training', 'data', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'TO', 'NN', 'IN', 'DT', 'NN', 'NNS', 'IN', 'JJS', 'JJ', 'NN', 'NNS', ',', 'IN', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NNS', ',', 'VBG', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'IN', 'DT', 'NNS', ',', 'IN', 'JJ', 'NN', 'NNS', '.']",39
entity_linking,5,27,We propose a method for reducing the vocabulary of senses of Word Net by selecting the minimal set of senses required for differentiating the meaning of every word .,"['We', 'propose', 'a', 'method', 'for', 'reducing', 'the', 'vocabulary', 'of', 'senses', 'of', 'Word', 'Net', 'by', 'selecting', 'the', 'minimal', 'set', 'of', 'senses', 'required', 'for', 'differentiating', 'the', 'meaning', 'of', 'every', 'word', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'NNS', 'IN', 'NNP', 'NNP', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",29
entity_linking,5,31,The code for using our system or reproducing our results is available at the following URL : https://github.com/getalp/disambiguate,"['The', 'code', 'for', 'using', 'our', 'system', 'or', 'reproducing', 'our', 'results', 'is', 'available', 'at', 'the', 'following', 'URL', ':', 'https://github.com/getalp/disambiguate']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['DT', 'NN', 'IN', 'VBG', 'PRP$', 'NN', 'CC', 'VBG', 'PRP$', 'NNS', 'VBZ', 'JJ', 'IN', 'DT', 'JJ', 'NN', ':', 'NN']",18
entity_linking,5,181,"In subsection 3.2 , we showed that our vocabulary reduction method improves the coverage of supervised systems overall WordNet vocabulary .","['In', 'subsection', '3.2', ',', 'we', 'showed', 'that', 'our', 'vocabulary', 'reduction', 'method', 'improves', 'the', 'coverage', 'of', 'supervised', 'systems', 'overall', 'WordNet', 'vocabulary', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', 'CD', ',', 'PRP', 'VBD', 'IN', 'PRP$', 'JJ', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'JJ', 'NNP', 'NN', '.']",21
entity_linking,5,182,"In , we can see that this coverage improvement holds true on the evaluation tasks , for both training sets .","['In', ',', 'we', 'can', 'see', 'that', 'this', 'coverage', 'improvement', 'holds', 'true', 'on', 'the', 'evaluation', 'tasks', ',', 'for', 'both', 'training', 'sets', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', ',', 'PRP', 'MD', 'VB', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'NN', 'NNS', ',', 'IN', 'DT', 'VBG', 'NNS', '.']",21
entity_linking,5,185,"Now if we look at the results in , the difference of scores obtained by our system using the sense vocabulary reduction or not is overall not significant ( regarding the "" ALL "" column ) .","['Now', 'if', 'we', 'look', 'at', 'the', 'results', 'in', ',', 'the', 'difference', 'of', 'scores', 'obtained', 'by', 'our', 'system', 'using', 'the', 'sense', 'vocabulary', 'reduction', 'or', 'not', 'is', 'overall', 'not', 'significant', '(', 'regarding', 'the', '""', 'ALL', '""', 'column', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'IN', 'PRP', 'VBP', 'IN', 'DT', 'NNS', 'IN', ',', 'DT', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'PRP$', 'NN', 'VBG', 'DT', 'NN', 'JJ', 'NN', 'CC', 'RB', 'VBZ', 'JJ', 'RB', 'JJ', '(', 'VBG', 'DT', 'NN', 'NNP', 'NNP', 'NN', ')', '.']",37
entity_linking,5,186,"However we can notice a very large gap on the SemEval 2013 task , especially when the SemCor is used alone for training .","['However', 'we', 'can', 'notice', 'a', 'very', 'large', 'gap', 'on', 'the', 'SemEval', '2013', 'task', ',', 'especially', 'when', 'the', 'SemCor', 'is', 'used', 'alone', 'for', 'training', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['RB', 'PRP', 'MD', 'VB', 'DT', 'RB', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', ',', 'RB', 'WRB', 'DT', 'NNP', 'VBZ', 'VBN', 'RB', 'IN', 'NN', '.']",24
entity_linking,5,190,"When we add the WordNet Gloss Tagged to the training data however , we obtain systematically state of the art results on all tasks except on SensEval 3 .","['When', 'we', 'add', 'the', 'WordNet', 'Gloss', 'Tagged', 'to', 'the', 'training', 'data', 'however', ',', 'we', 'obtain', 'systematically', 'state', 'of', 'the', 'art', 'results', 'on', 'all', 'tasks', 'except', 'on', 'SensEval', '3', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['WRB', 'PRP', 'VBP', 'DT', 'NNP', 'NNP', 'NNP', 'TO', 'DT', 'NN', 'NNS', 'RB', ',', 'PRP', 'VB', 'RB', 'NN', 'IN', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'IN', 'NNP', 'CD', '.']",29
entity_linking,5,191,"Once again , the sense reduction method does not consistently improves or decreases the score on every task , and in overall ( task "" ALL "" ) , the result is roughly the same as without sense reduction applied .","['Once', 'again', ',', 'the', 'sense', 'reduction', 'method', 'does', 'not', 'consistently', 'improves', 'or', 'decreases', 'the', 'score', 'on', 'every', 'task', ',', 'and', 'in', 'overall', '(', 'task', '""', 'ALL', '""', ')', ',', 'the', 'result', 'is', 'roughly', 'the', 'same', 'as', 'without', 'sense', 'reduction', 'applied', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['RB', 'RB', ',', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'RB', 'VB', 'NNS', 'CC', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'CC', 'IN', 'JJ', '(', 'NN', 'IN', 'NNP', 'NNP', ')', ',', 'DT', 'NN', 'VBZ', 'RB', 'DT', 'JJ', 'IN', 'IN', 'NN', 'NN', 'VBN', '.']",41
entity_linking,5,193,"As we can see , ensembling is a very efficient method in WSD as it improves systematically all our results .","['As', 'we', 'can', 'see', ',', 'ensembling', 'is', 'a', 'very', 'efficient', 'method', 'in', 'WSD', 'as', 'it', 'improves', 'systematically', 'all', 'our', 'results', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', ',', 'VBG', 'VBZ', 'DT', 'RB', 'JJ', 'NN', 'IN', 'NNP', 'IN', 'PRP', 'VBZ', 'RB', 'DT', 'PRP$', 'NNS', '.']",21
entity_linking,5,194,"Interestingly , with ensembles , the scores are significantly higher when applying the vocabulary reduction algorithm .","['Interestingly', ',', 'with', 'ensembles', ',', 'the', 'scores', 'are', 'significantly', 'higher', 'when', 'applying', 'the', 'vocabulary', 'reduction', 'algorithm', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'IN', 'NNS', ',', 'DT', 'NNS', 'VBP', 'RB', 'JJR', 'WRB', 'VBG', 'DT', 'JJ', 'NN', 'NN', '.']",17
entity_linking,11,2,Sense Vocabulary Compression through the Semantic Knowledge of WordNet for Neural Word Sense Disambiguation,"['Sense', 'Vocabulary', 'Compression', 'through', 'the', 'Semantic', 'Knowledge', 'of', 'WordNet', 'for', 'Neural', 'Word', 'Sense', 'Disambiguation']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['NN', 'NNP', 'NNP', 'IN', 'DT', 'NNP', 'NNP', 'IN', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",14
entity_linking,11,5,"We propose two different methods that greatly reduce the size of neural WSD models , with the benefit of improving their coverage without additional training data , and without impacting their precision .","['We', 'propose', 'two', 'different', 'methods', 'that', 'greatly', 'reduce', 'the', 'size', 'of', 'neural', 'WSD', 'models', ',', 'with', 'the', 'benefit', 'of', 'improving', 'their', 'coverage', 'without', 'additional', 'training', 'data', ',', 'and', 'without', 'impacting', 'their', 'precision', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', 'WDT', 'RB', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNP', 'NNS', ',', 'IN', 'DT', 'NN', 'IN', 'VBG', 'PRP$', 'NN', 'IN', 'JJ', 'NN', 'NNS', ',', 'CC', 'IN', 'VBG', 'PRP$', 'NN', '.']",33
entity_linking,11,6,"In addition to our methods , we present a WSD system which relies on pre-trained BERT word vectors in order to achieve results that significantly outperforms the state of the art on all WSD evaluation tasks .","['In', 'addition', 'to', 'our', 'methods', ',', 'we', 'present', 'a', 'WSD', 'system', 'which', 'relies', 'on', 'pre-trained', 'BERT', 'word', 'vectors', 'in', 'order', 'to', 'achieve', 'results', 'that', 'significantly', 'outperforms', 'the', 'state', 'of', 'the', 'art', 'on', 'all', 'WSD', 'evaluation', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'TO', 'PRP$', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'WDT', 'VBZ', 'IN', 'JJ', 'NNP', 'NN', 'NNS', 'IN', 'NN', 'TO', 'VB', 'NNS', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NNS', '.']",37
entity_linking,11,8,"Word Sense Disambiguation ( WSD ) is a task which aims to clarify a text by assigning to each of its words the most suitable sense labels , given a predefined sense inventory .","['Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', 'is', 'a', 'task', 'which', 'aims', 'to', 'clarify', 'a', 'text', 'by', 'assigning', 'to', 'each', 'of', 'its', 'words', 'the', 'most', 'suitable', 'sense', 'labels', ',', 'given', 'a', 'predefined', 'sense', 'inventory', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'DT', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'VBG', 'TO', 'DT', 'IN', 'PRP$', 'NNS', 'DT', 'RBS', 'JJ', 'NN', 'NNS', ',', 'VBN', 'DT', 'JJ', 'NN', 'NN', '.']",34
entity_linking,11,17,"In this work , the idea is to solve this issue by taking advantage of the semantic relationships between senses included in WordNet , such as the hypernymy , the hyponymy , the meronymy , the antonymy , etc .","['In', 'this', 'work', ',', 'the', 'idea', 'is', 'to', 'solve', 'this', 'issue', 'by', 'taking', 'advantage', 'of', 'the', 'semantic', 'relationships', 'between', 'senses', 'included', 'in', 'WordNet', ',', 'such', 'as', 'the', 'hypernymy', ',', 'the', 'hyponymy', ',', 'the', 'meronymy', ',', 'the', 'antonymy', ',', 'etc', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'VBG', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'NNS', 'VBN', 'IN', 'NNP', ',', 'JJ', 'IN', 'DT', 'NN', ',', 'DT', 'NN', ',', 'DT', 'NN', ',', 'DT', 'NN', ',', 'FW', '.']",40
entity_linking,11,18,"Our method is based on the observation that a sense and its closest related senses ( it s hypernym or it s hyponyms for instance ) all share a common idea or concept , and so a word can sometimes be disambiguated using only related concepts .","['Our', 'method', 'is', 'based', 'on', 'the', 'observation', 'that', 'a', 'sense', 'and', 'its', 'closest', 'related', 'senses', '(', 'it', 's', 'hypernym', 'or', 'it', 's', 'hyponyms', 'for', 'instance', ')', 'all', 'share', 'a', 'common', 'idea', 'or', 'concept', ',', 'and', 'so', 'a', 'word', 'can', 'sometimes', 'be', 'disambiguated', 'using', 'only', 'related', 'concepts', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'PRP$', 'NN', 'VBN', 'NNS', '(', 'PRP', 'VBZ', 'NN', 'CC', 'PRP', 'VBZ', 'NN', 'IN', 'NN', ')', 'DT', 'NN', 'DT', 'JJ', 'NN', 'CC', 'NN', ',', 'CC', 'RB', 'DT', 'NN', 'MD', 'RB', 'VB', 'VBN', 'VBG', 'RB', 'JJ', 'NNS', '.']",47
entity_linking,11,132,"For BERT , we used the model named "" bert - largecased "" of the PyTorch implementation 3 , which consists of vectors of dimension 1024 , trained on Book s Corpus and English Wikipedia .","['For', 'BERT', ',', 'we', 'used', 'the', 'model', 'named', '""', 'bert', '-', 'largecased', '""', 'of', 'the', 'PyTorch', 'implementation', '3', ',', 'which', 'consists', 'of', 'vectors', 'of', 'dimension', '1024', ',', 'trained', 'on', 'Book', 's', 'Corpus', 'and', 'English', 'Wikipedia', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ',', 'PRP', 'VBD', 'DT', 'NN', 'VBN', 'NNP', 'SYM', ':', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'CD', ',', 'WDT', 'VBZ', 'IN', 'NNS', 'IN', 'NN', 'CD', ',', 'VBN', 'IN', 'NNP', 'NN', 'NNP', 'CC', 'NNP', 'NNP', '.']",36
entity_linking,11,134,"For the Transformer encoder layers , we used the same parameters as the "" base "" model of , that is 6 layers with 8 attention heads , a hidden size of 2048 , and a dropout of 0.1 .","['For', 'the', 'Transformer', 'encoder', 'layers', ',', 'we', 'used', 'the', 'same', 'parameters', 'as', 'the', '""', 'base', '""', 'model', 'of', ',', 'that', 'is', '6', 'layers', 'with', '8', 'attention', 'heads', ',', 'a', 'hidden', 'size', 'of', '2048', ',', 'and', 'a', 'dropout', 'of', '0.1', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'O']","['IN', 'DT', 'NNP', 'NN', 'NNS', ',', 'PRP', 'VBD', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'NN', 'IN', ',', 'WDT', 'VBZ', 'CD', 'NNS', 'IN', 'CD', 'NN', 'NNS', ',', 'DT', 'JJ', 'NN', 'IN', 'CD', ',', 'CC', 'DT', 'NN', 'IN', 'CD', '.']",40
entity_linking,11,164,"In the results in , we first observe that our systems that use the sense vocabulary compression through hypernyms or through all relations obtain scores that are overall equivalent to the systems that do not use it .","['In', 'the', 'results', 'in', ',', 'we', 'first', 'observe', 'that', 'our', 'systems', 'that', 'use', 'the', 'sense', 'vocabulary', 'compression', 'through', 'hypernyms', 'or', 'through', 'all', 'relations', 'obtain', 'scores', 'that', 'are', 'overall', 'equivalent', 'to', 'the', 'systems', 'that', 'do', 'not', 'use', 'it', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'O']","['IN', 'DT', 'NNS', 'IN', ',', 'PRP', 'RB', 'VBP', 'IN', 'PRP$', 'NNS', 'WDT', 'VBP', 'DT', 'NN', 'JJ', 'NN', 'IN', 'NN', 'CC', 'IN', 'DT', 'NNS', 'VB', 'NNS', 'WDT', 'VBP', 'JJ', 'JJ', 'TO', 'DT', 'NNS', 'WDT', 'VBP', 'RB', 'VB', 'PRP', '.']",38
entity_linking,11,169,"In comparison to the other works , thanks to the Princeton WordNet Gloss Corpus added to the training data and the use of BERT as input embeddings , we outperform systematically the state of the art on every task .","['In', 'comparison', 'to', 'the', 'other', 'works', ',', 'thanks', 'to', 'the', 'Princeton', 'WordNet', 'Gloss', 'Corpus', 'added', 'to', 'the', 'training', 'data', 'and', 'the', 'use', 'of', 'BERT', 'as', 'input', 'embeddings', ',', 'we', 'outperform', 'systematically', 'the', 'state', 'of', 'the', 'art', 'on', 'every', 'task', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'DT', 'JJ', 'NNS', ',', 'NNS', 'TO', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'VBD', 'TO', 'DT', 'NN', 'NNS', 'CC', 'DT', 'NN', 'IN', 'NNP', 'IN', 'NN', 'NNS', ',', 'PRP', 'VBP', 'RB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",40
entity_linking,11,180,"As we can see in , the additional training corpus ( WNGC ) and even more the use of BERT as input embeddings both have a major impact on our results and lead to scores above the state of the art .","['As', 'we', 'can', 'see', 'in', ',', 'the', 'additional', 'training', 'corpus', '(', 'WNGC', ')', 'and', 'even', 'more', 'the', 'use', 'of', 'BERT', 'as', 'input', 'embeddings', 'both', 'have', 'a', 'major', 'impact', 'on', 'our', 'results', 'and', 'lead', 'to', 'scores', 'above', 'the', 'state', 'of', 'the', 'art', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', 'IN', ',', 'DT', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'CC', 'RB', 'JJR', 'DT', 'NN', 'IN', 'NNP', 'IN', 'NN', 'NNS', 'DT', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'NNS', 'CC', 'JJ', 'TO', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",42
entity_linking,11,181,"Using BERT instead of ELMo or Glo Ve improves respectively the score by approximately 3 and 5 points in every experiment , and adding the WNGC to the training data improves it by approximately 2 points .","['Using', 'BERT', 'instead', 'of', 'ELMo', 'or', 'Glo', 'Ve', 'improves', 'respectively', 'the', 'score', 'by', 'approximately', '3', 'and', '5', 'points', 'in', 'every', 'experiment', ',', 'and', 'adding', 'the', 'WNGC', 'to', 'the', 'training', 'data', 'improves', 'it', 'by', 'approximately', '2', 'points', '.']","['B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'NNP', 'RB', 'IN', 'NNP', 'CC', 'NNP', 'NNP', 'VBZ', 'RB', 'DT', 'NN', 'IN', 'RB', 'CD', 'CC', 'CD', 'NNS', 'IN', 'DT', 'NN', ',', 'CC', 'VBG', 'DT', 'NNP', 'TO', 'DT', 'NN', 'NNS', 'VBZ', 'PRP', 'IN', 'RB', 'CD', 'NNS', '.']",37
entity_linking,11,182,"Finally , using ensembles adds roughly another 1 point to the final F1 score .","['Finally', ',', 'using', 'ensembles', 'adds', 'roughly', 'another', '1', 'point', 'to', 'the', 'final', 'F1', 'score', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'VBG', 'NNS', 'VBZ', 'RB', 'DT', 'CD', 'NN', 'TO', 'DT', 'JJ', 'NNP', 'NN', '.']",15
entity_linking,11,186,"However , the compression method through all relations seems to negatively impact the results in some cases ( when using ELMo or GloVe especially ) .","['However', ',', 'the', 'compression', 'method', 'through', 'all', 'relations', 'seems', 'to', 'negatively', 'impact', 'the', 'results', 'in', 'some', 'cases', '(', 'when', 'using', 'ELMo', 'or', 'GloVe', 'especially', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNS', 'VBZ', 'TO', 'RB', 'VB', 'DT', 'NNS', 'IN', 'DT', 'NNS', '(', 'WRB', 'VBG', 'NNP', 'CC', 'NNP', 'RB', ')', '.']",26
entity_linking,14,2,Knowledge - based Word Sense Disambiguation using Topic Models,"['Knowledge', '-', 'based', 'Word', 'Sense', 'Disambiguation', 'using', 'Topic', 'Models']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['NNP', ':', 'VBN', 'NNP', 'NNP', 'NNP', 'VBG', 'NNP', 'NNP']",9
entity_linking,14,4,Disambiguation is an open problem in Natural Language Processing which is particularly challenging and useful in the unsupervised setting where all the words in any given text need to be disambiguated without using any labeled data .,"['Disambiguation', 'is', 'an', 'open', 'problem', 'in', 'Natural', 'Language', 'Processing', 'which', 'is', 'particularly', 'challenging', 'and', 'useful', 'in', 'the', 'unsupervised', 'setting', 'where', 'all', 'the', 'words', 'in', 'any', 'given', 'text', 'need', 'to', 'be', 'disambiguated', 'without', 'using', 'any', 'labeled', 'data', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NNP', 'NNP', 'WDT', 'VBZ', 'RB', 'JJ', 'CC', 'JJ', 'IN', 'DT', 'JJ', 'NN', 'WRB', 'PDT', 'DT', 'NNS', 'IN', 'DT', 'VBN', 'NNS', 'VBP', 'TO', 'VB', 'VBN', 'IN', 'VBG', 'DT', 'VBN', 'NNS', '.']",37
entity_linking,14,5,Typically WSD systems use the sentence or a small window of words around the target word as the context for disambiguation because their computational complexity scales exponentially with the size of the context .,"['Typically', 'WSD', 'systems', 'use', 'the', 'sentence', 'or', 'a', 'small', 'window', 'of', 'words', 'around', 'the', 'target', 'word', 'as', 'the', 'context', 'for', 'disambiguation', 'because', 'their', 'computational', 'complexity', 'scales', 'exponentially', 'with', 'the', 'size', 'of', 'the', 'context', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'NNP', 'NNS', 'VBP', 'DT', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'IN', 'PRP$', 'JJ', 'NN', 'NNS', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",34
entity_linking,14,12,Word Sense Disambiguation ( WSD ) is the task of mapping an ambiguous word in a given context to its correct meaning .,"['Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', 'is', 'the', 'task', 'of', 'mapping', 'an', 'ambiguous', 'word', 'in', 'a', 'given', 'context', 'to', 'its', 'correct', 'meaning', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'VBN', 'NN', 'TO', 'PRP$', 'JJ', 'NN', '.']",23
entity_linking,14,22,"In this paper , we propose a novel knowledge - based WSD algorithm for the all - word WSD task , which utilizes the whole document as the context for a word , rather than just the current sentence used by most WSD systems .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'knowledge', '-', 'based', 'WSD', 'algorithm', 'for', 'the', 'all', '-', 'word', 'WSD', 'task', ',', 'which', 'utilizes', 'the', 'whole', 'document', 'as', 'the', 'context', 'for', 'a', 'word', ',', 'rather', 'than', 'just', 'the', 'current', 'sentence', 'used', 'by', 'most', 'WSD', 'systems', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', ':', 'VBN', 'NNP', 'NN', 'IN', 'DT', 'DT', ':', 'NN', 'NNP', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'RB', 'IN', 'RB', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'JJS', 'JJ', 'NNS', '.']",45
entity_linking,14,23,"In order to model the whole document for WSD , we leverage the formalism of topic models , especially Latent Dirichlet Allocation ( LDA ) .","['In', 'order', 'to', 'model', 'the', 'whole', 'document', 'for', 'WSD', ',', 'we', 'leverage', 'the', 'formalism', 'of', 'topic', 'models', ',', 'especially', 'Latent', 'Dirichlet', 'Allocation', '(', 'LDA', ')', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'NNS', ',', 'RB', 'JJ', 'NNP', 'NNP', '(', 'NNP', ')', '.']",26
entity_linking,14,24,Our method is a variant of LDA in which the topic proportions for a document are replaced by synset proportions for a document .,"['Our', 'method', 'is', 'a', 'variant', 'of', 'LDA', 'in', 'which', 'the', 'topic', 'proportions', 'for', 'a', 'document', 'are', 'replaced', 'by', 'synset', 'proportions', 'for', 'a', 'document', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNP', 'IN', 'WDT', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NN', 'VBP', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', '.']",24
entity_linking,14,25,We use a non-uniform prior for the synset distribution over words to model the frequency of words within a synset .,"['We', 'use', 'a', 'non-uniform', 'prior', 'for', 'the', 'synset', 'distribution', 'over', 'words', 'to', 'model', 'the', 'frequency', 'of', 'words', 'within', 'a', 'synset', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NNS', 'TO', 'VB', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', '.']",21
entity_linking,14,26,"Furthermore , we also model the relationships between synsets by using a logisticnormal prior for drawing the synset proportions of the document .","['Furthermore', ',', 'we', 'also', 'model', 'the', 'relationships', 'between', 'synsets', 'by', 'using', 'a', 'logisticnormal', 'prior', 'for', 'drawing', 'the', 'synset', 'proportions', 'of', 'the', 'document', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['RB', ',', 'PRP', 'RB', 'VBP', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', '.']",23
entity_linking,14,169,"The proposed method , denoted by WSD - TM in the tables referring to WSD using topic models , outperforms the state - of - the - art WSD system by a significant margin ( pvalue < 0.01 ) by achieving an overall F1 - score of 66.9 as compared to Moro14 's score of 65.5 .","['The', 'proposed', 'method', ',', 'denoted', 'by', 'WSD', '-', 'TM', 'in', 'the', 'tables', 'referring', 'to', 'WSD', 'using', 'topic', 'models', ',', 'outperforms', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'WSD', 'system', 'by', 'a', 'significant', 'margin', '(', 'pvalue', '<', '0.01', ')', 'by', 'achieving', 'an', 'overall', 'F1', '-', 'score', 'of', '66.9', 'as', 'compared', 'to', 'Moro14', ""'s"", 'score', 'of', '65.5', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'VBN', 'NN', ',', 'VBN', 'IN', 'NNP', ':', 'NN', 'IN', 'DT', 'NNS', 'VBG', 'TO', 'NNP', 'VBG', 'NN', 'NNS', ',', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', '(', 'JJ', 'NNP', 'CD', ')', 'IN', 'VBG', 'DT', 'JJ', 'NNP', ':', 'NN', 'IN', 'CD', 'IN', 'VBN', 'TO', 'NNP', 'POS', 'NN', 'IN', 'CD', '.']",57
entity_linking,14,170,"We also observe that the performance of the proposed model is not much worse than the best supervised system , Melamud16 ( 69.4 ) .","['We', 'also', 'observe', 'that', 'the', 'performance', 'of', 'the', 'proposed', 'model', 'is', 'not', 'much', 'worse', 'than', 'the', 'best', 'supervised', 'system', ',', 'Melamud16', '(', '69.4', ')', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NN', 'VBZ', 'RB', 'JJ', 'JJR', 'IN', 'DT', 'JJS', 'JJ', 'NN', ',', 'NNP', '(', 'CD', ')', '.']",25
entity_linking,14,172,The proposed system outperforms all previous knowledgebased systems overall parts of speech .,"['The', 'proposed', 'system', 'outperforms', 'all', 'previous', 'knowledgebased', 'systems', 'overall', 'parts', 'of', 'speech', '.']","['O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'VBN', 'NN', 'VBZ', 'DT', 'JJ', 'VBN', 'NNS', 'JJ', 'NNS', 'IN', 'NN', '.']",13
entity_linking,7,2,Semi-supervised Word Sense Disambiguation with Neural Models,"['Semi-supervised', 'Word', 'Sense', 'Disambiguation', 'with', 'Neural', 'Models']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",7
entity_linking,7,4,Determining the intended sense of words in text - word sense disambiguation ( WSD ) - is a longstanding problem in natural language processing .,"['Determining', 'the', 'intended', 'sense', 'of', 'words', 'in', 'text', '-', 'word', 'sense', 'disambiguation', '(', 'WSD', ')', '-', 'is', 'a', 'longstanding', 'problem', 'in', 'natural', 'language', 'processing', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'JJ', ':', 'NN', 'NN', 'NN', '(', 'NNP', ')', ':', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",25
entity_linking,7,5,"Recently , researchers have shown promising results using word vectors extracted from a neural network language model as features in WSD algorithms .","['Recently', ',', 'researchers', 'have', 'shown', 'promising', 'results', 'using', 'word', 'vectors', 'extracted', 'from', 'a', 'neural', 'network', 'language', 'model', 'as', 'features', 'in', 'WSD', 'algorithms', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['RB', ',', 'NNS', 'VBP', 'VBN', 'JJ', 'NNS', 'VBG', 'NN', 'NNS', 'VBD', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'IN', 'NNS', 'IN', 'NNP', 'NN', '.']",23
entity_linking,7,20,"In this paper , we describe two novel WSD algorithms .","['In', 'this', 'paper', ',', 'we', 'describe', 'two', 'novel', 'WSD', 'algorithms', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'CD', 'JJ', 'NNP', 'NN', '.']",11
entity_linking,7,21,The first is based on a Long Short Term Memory ( LSTM ) ) .,"['The', 'first', 'is', 'based', 'on', 'a', 'Long', 'Short', 'Term', 'Memory', '(', 'LSTM', ')', ')', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'JJ', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ')', '.']",15
entity_linking,7,22,"Since this model is able to take into account word order when classifying , it performs significantly better than an algorithm based on a continuous bag of words model ( Word2 vec ) , especially on verbs .","['Since', 'this', 'model', 'is', 'able', 'to', 'take', 'into', 'account', 'word', 'order', 'when', 'classifying', ',', 'it', 'performs', 'significantly', 'better', 'than', 'an', 'algorithm', 'based', 'on', 'a', 'continuous', 'bag', 'of', 'words', 'model', '(', 'Word2', 'vec', ')', ',', 'especially', 'on', 'verbs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'IN', 'NN', 'NN', 'NN', 'WRB', 'NN', ',', 'PRP', 'VBZ', 'RB', 'JJR', 'IN', 'DT', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'NN', '(', 'NNP', 'NN', ')', ',', 'RB', 'IN', 'NNS', '.']",38
entity_linking,7,23,We then present a semi-supervised algorithm which uses label propagation to label unlabeled sentences based on their similarity to labeled ones .,"['We', 'then', 'present', 'a', 'semi-supervised', 'algorithm', 'which', 'uses', 'label', 'propagation', 'to', 'label', 'unlabeled', 'sentences', 'based', 'on', 'their', 'similarity', 'to', 'labeled', 'ones', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'JJR', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'VBN', 'IN', 'PRP$', 'NN', 'TO', 'VBN', 'NNS', '.']",22
entity_linking,7,130,Sem Eval Tasks,"['Sem', 'Eval', 'Tasks']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
entity_linking,7,136,Our proposed algorithms achieve the highest all - words F 1 scores except for Sem - Eval 2013 .,"['Our', 'proposed', 'algorithms', 'achieve', 'the', 'highest', 'all', '-', 'words', 'F', '1', 'scores', 'except', 'for', 'Sem', '-', 'Eval', '2013', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'VBN', 'NN', 'VBP', 'DT', 'JJS', 'DT', ':', 'NNS', 'NNP', 'CD', 'NNS', 'IN', 'IN', 'NNP', ':', 'NN', 'CD', '.']",19
entity_linking,7,138,"Unified WSD has the highest F 1 score on Nouns ( Sem - Eval - 7 Coarse ) , but our algorithms outperform Unified WSD on other part - of - speech tags .","['Unified', 'WSD', 'has', 'the', 'highest', 'F', '1', 'score', 'on', 'Nouns', '(', 'Sem', '-', 'Eval', '-', '7', 'Coarse', ')', ',', 'but', 'our', 'algorithms', 'outperform', 'Unified', 'WSD', 'on', 'other', 'part', '-', 'of', '-', 'speech', 'tags', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBN', 'NNP', 'VBZ', 'DT', 'JJS', 'JJ', 'CD', 'NN', 'IN', 'NNP', '(', 'NNP', ':', 'NNP', ':', 'CD', 'NNP', ')', ',', 'CC', 'PRP$', 'JJ', 'NN', 'NNP', 'NNP', 'IN', 'JJ', 'NN', ':', 'IN', ':', 'NN', 'NNS', '.']",34
entity_linking,7,148,Word2 Vec vectors Vs. LSTM,"['Word2', 'Vec', 'vectors', 'Vs.', 'LSTM']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNS', 'NNP', 'NNP']",5
entity_linking,7,150,"It performs similar to IMS + Word2 Vec ( T: SemCor ) , a SVM - based classifier studied in .","['It', 'performs', 'similar', 'to', 'IMS', '+', 'Word2', 'Vec', '(', 'T:', 'SemCor', ')', ',', 'a', 'SVM', '-', 'based', 'classifier', 'studied', 'in', '.']","['O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'JJ', 'TO', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', 'NNP', ')', ',', 'DT', 'NNP', ':', 'VBN', 'NN', 'VBN', 'IN', '.']",21
entity_linking,7,151,shows that the LSTM classifier outperforms the Word2 Vec classifier across the board .,"['shows', 'that', 'the', 'LSTM', 'classifier', 'outperforms', 'the', 'Word2', 'Vec', 'classifier', 'across', 'the', 'board', '.']","['B-p', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['NNS', 'IN', 'DT', 'NNP', 'NN', 'VBZ', 'DT', 'NNP', 'NNP', 'NN', 'IN', 'DT', 'NN', '.']",14
entity_linking,7,152,Sem Cor Vs. OMSTI,"['Sem', 'Cor', 'Vs.', 'OMSTI']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP']",4
entity_linking,7,153,"Contrary to the results observed in , the LSTM classifier trained with OMSTI performs worse than that trained with SemCor .","['Contrary', 'to', 'the', 'results', 'observed', 'in', ',', 'the', 'LSTM', 'classifier', 'trained', 'with', 'OMSTI', 'performs', 'worse', 'than', 'that', 'trained', 'with', 'SemCor', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['JJ', 'TO', 'DT', 'NNS', 'VBD', 'IN', ',', 'DT', 'NNP', 'NN', 'VBD', 'IN', 'NNP', 'NNS', 'JJR', 'IN', 'DT', 'JJ', 'IN', 'NNP', '.']",21
entity_linking,7,155,"While the SVM classifier studied in maybe able to learn a model which copes with this noise , our naive nearest neighbor classifiers do not have a learned model and deal less well with noisy labels .","['While', 'the', 'SVM', 'classifier', 'studied', 'in', 'maybe', 'able', 'to', 'learn', 'a', 'model', 'which', 'copes', 'with', 'this', 'noise', ',', 'our', 'naive', 'nearest', 'neighbor', 'classifiers', 'do', 'not', 'have', 'a', 'learned', 'model', 'and', 'deal', 'less', 'well', 'with', 'noisy', 'labels', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'RB', 'JJ', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'IN', 'DT', 'NN', ',', 'PRP$', 'JJ', 'JJS', 'NN', 'NNS', 'VBP', 'RB', 'VB', 'DT', 'VBN', 'NN', 'CC', 'NN', 'JJR', 'RB', 'IN', 'JJ', 'NNS', '.']",37
entity_linking,7,160,NOAD Eval,"['NOAD', 'Eval']","['B-n', 'I-n']","['NNP', 'NNP']",2
entity_linking,7,178,LSTM classifier,"['LSTM', 'classifier']","['B-n', 'I-n']","['NNP', 'NN']",2
entity_linking,7,180,Most frequent sense :,"['Most', 'frequent', 'sense', ':']","['B-n', 'I-n', 'I-n', 'O']","['JJS', 'JJ', 'NN', ':']",4
entity_linking,7,184,"LSTM outperforms Word2Vec by more than 10 % overall words , where most of the gains are from verbs and adverbs .","['LSTM', 'outperforms', 'Word2Vec', 'by', 'more', 'than', '10', '%', 'overall', 'words', ',', 'where', 'most', 'of', 'the', 'gains', 'are', 'from', 'verbs', 'and', 'adverbs', '.']","['B-n', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNS', 'NNP', 'IN', 'JJR', 'IN', 'CD', 'NN', 'JJ', 'NNS', ',', 'WRB', 'JJS', 'IN', 'DT', 'NNS', 'VBP', 'IN', 'NNS', 'CC', 'NNS', '.']",22
entity_linking,7,186,Change of training data,"['Change', 'of', 'training', 'data']","['B-n', 'I-n', 'I-n', 'I-n']","['NN', 'IN', 'NN', 'NNS']",4
entity_linking,7,191,The SemCor ( or MASC ) trained classifier is on a par with the NOAD trained classifier on F1 score .,"['The', 'SemCor', '(', 'or', 'MASC', ')', 'trained', 'classifier', 'is', 'on', 'a', 'par', 'with', 'the', 'NOAD', 'trained', 'classifier', 'on', 'F1', 'score', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', '(', 'CC', 'NNP', ')', 'VBD', 'JJR', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP', 'VBD', 'JJR', 'IN', 'NNP', 'NN', '.']",21
entity_linking,7,193,Change of language model capacity,"['Change', 'of', 'language', 'model', 'capacity']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'IN', 'NN', 'NN', 'NN']",5
entity_linking,7,196,"To balance the accuracy and resource usage , we use the second best LSTM model ( h = 2048 and p = 512 ) by default .","['To', 'balance', 'the', 'accuracy', 'and', 'resource', 'usage', ',', 'we', 'use', 'the', 'second', 'best', 'LSTM', 'model', '(', 'h', '=', '2048', 'and', 'p', '=', '512', ')', 'by', 'default', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'RBS', 'NNP', 'NN', '(', 'JJ', 'NN', 'CD', 'CC', 'VB', 'NNP', 'CD', ')', 'IN', 'NN', '.']",27
entity_linking,7,197,Semi-supervised WSD,"['Semi-supervised', 'WSD']","['B-n', 'I-n']","['JJ', 'NNP']",2
entity_linking,7,201,"As can be observed from , LP did not yield clear benefits when using the Word2 Vec language model .","['As', 'can', 'be', 'observed', 'from', ',', 'LP', 'did', 'not', 'yield', 'clear', 'benefits', 'when', 'using', 'the', 'Word2', 'Vec', 'language', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', ',', 'NNP', 'VBD', 'RB', 'VB', 'JJ', 'NNS', 'WRB', 'VBG', 'DT', 'NNP', 'NNP', 'NN', 'NN', '.']",20
entity_linking,7,202,"We did see significant improvements , 6.3 % increase on SemCor and 7.3 % increase on MASC , using LP with the LSTM language model .","['We', 'did', 'see', 'significant', 'improvements', ',', '6.3', '%', 'increase', 'on', 'SemCor', 'and', '7.3', '%', 'increase', 'on', 'MASC', ',', 'using', 'LP', 'with', 'the', 'LSTM', 'language', 'model', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'VB', 'JJ', 'NNS', ',', 'CD', 'NN', 'NN', 'IN', 'NNP', 'CC', 'CD', 'NN', 'NN', 'IN', 'NNP', ',', 'VBG', 'NNP', 'IN', 'DT', 'NNP', 'NN', 'NN', '.']",26
entity_linking,7,204,Change of seed data :,"['Change', 'of', 'seed', 'data', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'NN', 'NNS', ':']",5
entity_linking,7,205,"As can be seen in , LP substantially improves classifier F1 when the training datasets are SemCor + NOAD or MASC + NOAD .","['As', 'can', 'be', 'seen', 'in', ',', 'LP', 'substantially', 'improves', 'classifier', 'F1', 'when', 'the', 'training', 'datasets', 'are', 'SemCor', '+', 'NOAD', 'or', 'MASC', '+', 'NOAD', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', ',', 'NNP', 'RB', 'VBZ', 'JJR', 'NNP', 'WRB', 'DT', 'NN', 'NNS', 'VBP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', '.']",24
entity_linking,7,208,Change of graph density :,"['Change', 'of', 'graph', 'density', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'JJ', 'NN', ':']",5
entity_linking,7,209,"By default , we construct the LP graph by connecting two nodes if their affinity is above 95 % percentile .","['By', 'default', ',', 'we', 'construct', 'the', 'LP', 'graph', 'by', 'connecting', 'two', 'nodes', 'if', 'their', 'affinity', 'is', 'above', '95', '%', 'percentile', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'IN', 'VBG', 'CD', 'NNS', 'IN', 'PRP$', 'NN', 'VBZ', 'IN', 'CD', 'NN', 'NN', '.']",21
entity_linking,7,212,"The F1 scores are relatively stable when the percentile ranges between 85 to 98 , but decrease when the percentile drops to 80 .","['The', 'F1', 'scores', 'are', 'relatively', 'stable', 'when', 'the', 'percentile', 'ranges', 'between', '85', 'to', '98', ',', 'but', 'decrease', 'when', 'the', 'percentile', 'drops', 'to', '80', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NNP', 'NNS', 'VBP', 'RB', 'JJ', 'WRB', 'DT', 'NN', 'VBZ', 'IN', 'CD', 'TO', 'CD', ',', 'CC', 'NN', 'WRB', 'DT', 'NN', 'VBZ', 'TO', 'CD', '.']",24
entity_linking,4,2,Learning Distributed Representations of Texts and Entities from Knowledge Base,"['Learning', 'Distributed', 'Representations', 'of', 'Texts', 'and', 'Entities', 'from', 'Knowledge', 'Base']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', 'CC', 'NNS', 'IN', 'NNP', 'NNP']",10
entity_linking,4,26,"In particular , we propose Neural Text - Entity Encoder ( NTEE ) , a neural network model to jointly learn distributed representations of texts ( i.e. , sentences and paragraphs ) and KB entities .","['In', 'particular', ',', 'we', 'propose', 'Neural', 'Text', '-', 'Entity', 'Encoder', '(', 'NTEE', ')', ',', 'a', 'neural', 'network', 'model', 'to', 'jointly', 'learn', 'distributed', 'representations', 'of', 'texts', '(', 'i.e.', ',', 'sentences', 'and', 'paragraphs', ')', 'and', 'KB', 'entities', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['IN', 'JJ', ',', 'PRP', 'VBP', 'JJ', 'NNP', ':', 'NN', 'NNP', '(', 'NNP', ')', ',', 'DT', 'JJ', 'NN', 'NN', 'TO', 'RB', 'VB', 'JJ', 'NNS', 'IN', 'NN', '(', 'FW', ',', 'NNS', 'CC', 'NN', ')', 'CC', 'NNP', 'NNS', '.']",36
entity_linking,4,27,"For every text in the KB , our model aims to predict its relevant entities , and places the text and the relevant entities close to each other in a continuous vector space .","['For', 'every', 'text', 'in', 'the', 'KB', ',', 'our', 'model', 'aims', 'to', 'predict', 'its', 'relevant', 'entities', ',', 'and', 'places', 'the', 'text', 'and', 'the', 'relevant', 'entities', 'close', 'to', 'each', 'other', 'in', 'a', 'continuous', 'vector', 'space', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p']","['IN', 'DT', 'NN', 'IN', 'DT', 'NNP', ',', 'PRP$', 'NN', 'VBZ', 'TO', 'VB', 'PRP$', 'JJ', 'NNS', ',', 'CC', 'VBZ', 'DT', 'NN', 'CC', 'DT', 'JJ', 'NNS', 'RB', 'TO', 'DT', 'JJ', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",34
entity_linking,4,28,We use humanedited entity annotations obtained from Wikipedia ( see ) as supervised data of relevant entities to the texts containing these annotations .,"['We', 'use', 'humanedited', 'entity', 'annotations', 'obtained', 'from', 'Wikipedia', '(', 'see', ')', 'as', 'supervised', 'data', 'of', 'relevant', 'entities', 'to', 'the', 'texts', 'containing', 'these', 'annotations', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p', 'I-p']","['PRP', 'VBP', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'NNP', '(', 'VB', ')', 'IN', 'VBN', 'NN', 'IN', 'JJ', 'NNS', 'TO', 'DT', 'NN', 'VBG', 'DT', 'NNS', '.']",24
entity_linking,4,29,"Note that , KB entities have been conventionally used to model semantics of texts .","['Note', 'that', ',', 'KB', 'entities', 'have', 'been', 'conventionally', 'used', 'to', 'model', 'semantics', 'of', 'texts', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', ',', 'NNP', 'NNS', 'VBP', 'VBN', 'RB', 'VBN', 'TO', 'VB', 'NNS', 'IN', 'NN', '.']",15
entity_linking,4,30,"A representative example is Explicit Semantic Analysis ( ESA ) , which represents the semantics of a text using a sparse vector space , where each dimension corresponds to the relevance score of the text to each entity .","['A', 'representative', 'example', 'is', 'Explicit', 'Semantic', 'Analysis', '(', 'ESA', ')', ',', 'which', 'represents', 'the', 'semantics', 'of', 'a', 'text', 'using', 'a', 'sparse', 'vector', 'space', ',', 'where', 'each', 'dimension', 'corresponds', 'to', 'the', 'relevance', 'score', 'of', 'the', 'text', 'to', 'each', 'entity', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p']","['DT', 'JJ', 'NN', 'VBZ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'DT', 'NN', 'NN', 'NN', ',', 'WRB', 'DT', 'NN', 'VBZ', 'TO', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'TO', 'DT', 'NN', '.']",39
entity_linking,4,31,"Essentially , ESA shows that text can be accurately represented using a small set of its relevant entities .","['Essentially', ',', 'ESA', 'shows', 'that', 'text', 'can', 'be', 'accurately', 'represented', 'using', 'a', 'small', 'set', 'of', 'its', 'relevant', 'entities', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'NNP', 'VBZ', 'IN', 'NN', 'MD', 'VB', 'RB', 'VBN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'JJ', 'NNS', '.']",19
entity_linking,4,35,"Furthermore , we also consider that placing texts and entities into the same vector space enables us to easily compute the similarity between texts and entities , which can be beneficial for various KB - related tasks .","['Furthermore', ',', 'we', 'also', 'consider', 'that', 'placing', 'texts', 'and', 'entities', 'into', 'the', 'same', 'vector', 'space', 'enables', 'us', 'to', 'easily', 'compute', 'the', 'similarity', 'between', 'texts', 'and', 'entities', ',', 'which', 'can', 'be', 'beneficial', 'for', 'various', 'KB', '-', 'related', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p']","['RB', ',', 'PRP', 'RB', 'VBP', 'IN', 'VBG', 'NN', 'CC', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'PRP', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'NN', 'CC', 'NNS', ',', 'WDT', 'MD', 'VB', 'JJ', 'IN', 'JJ', 'NNP', ':', 'JJ', 'NNS', '.']",38
entity_linking,4,54,We release our code and trained models to the community at https://github.com/ studio-ousia /ntee to facilitate further academic research .,"['We', 'release', 'our', 'code', 'and', 'trained', 'models', 'to', 'the', 'community', 'at', 'https://github.com/', 'studio-ousia', '/ntee', 'to', 'facilitate', 'further', 'academic', 'research', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p']","['PRP', 'VBP', 'PRP$', 'NN', 'CC', 'JJ', 'NNS', 'TO', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'JJ', 'NN', '.']",20
entity_linking,4,125,BOW is a conventional approach using a logistic regression ( LR ) classifier trained with binary BOW features to predict the correct answer .,"['BOW', 'is', 'a', 'conventional', 'approach', 'using', 'a', 'logistic', 'regression', '(', 'LR', ')', 'classifier', 'trained', 'with', 'binary', 'BOW', 'features', 'to', 'predict', 'the', 'correct', 'answer', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p']","['NNP', 'VBZ', 'DT', 'JJ', 'NN', 'VBG', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'NN', 'VBN', 'IN', 'JJ', 'NNP', 'NNS', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",24
entity_linking,4,126,BOW - DT is based on the BOW baseline augmented with the feature set with dependency relation indicators .,"['BOW', '-', 'DT', 'is', 'based', 'on', 'the', 'BOW', 'baseline', 'augmented', 'with', 'the', 'feature', 'set', 'with', 'dependency', 'relation', 'indicators', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'DT', 'NN', 'VBN', 'IN', 'NN', 'NN', 'NNS', '.']",19
entity_linking,4,127,QANTA is an approach based on a recursive neural network to derive the distributed representations of questions .,"['QANTA', 'is', 'an', 'approach', 'based', 'on', 'a', 'recursive', 'neural', 'network', 'to', 'derive', 'the', 'distributed', 'representations', 'of', 'questions', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'VBZ', 'DT', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NNS', '.']",18
entity_linking,4,129,FTS - BRNN is based on the bidirectional recurrent neural network ( RNN ) with gated recurrent units ( GRU ) .,"['FTS', '-', 'BRNN', 'is', 'based', 'on', 'the', 'bidirectional', 'recurrent', 'neural', 'network', '(', 'RNN', ')', 'with', 'gated', 'recurrent', 'units', '(', 'GRU', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'VBN', 'NN', 'NNS', '(', 'NNP', ')', '.']",22
entity_linking,4,137,"In particular , despite the simplicity of the neural network architecture of our method compared to the state - of - the - art methods ( i.e. , QANTA and FTS - BRNN ) , our method clearly outperformed these methods .","['In', 'particular', ',', 'despite', 'the', 'simplicity', 'of', 'the', 'neural', 'network', 'architecture', 'of', 'our', 'method', 'compared', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', '(', 'i.e.', ',', 'QANTA', 'and', 'FTS', '-', 'BRNN', ')', ',', 'our', 'method', 'clearly', 'outperformed', 'these', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p']","['IN', 'JJ', ',', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'VBN', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '(', 'FW', ',', 'NNP', 'CC', 'NNP', ':', 'NNP', ')', ',', 'PRP$', 'NN', 'RB', 'VBN', 'DT', 'NNS', '.']",42
entity_linking,4,140,"Our observations indicated that our method mostly performed perfect in terms of predicting the types of target answers ( e.g. , locations , events , and people ) .","['Our', 'observations', 'indicated', 'that', 'our', 'method', 'mostly', 'performed', 'perfect', 'in', 'terms', 'of', 'predicting', 'the', 'types', 'of', 'target', 'answers', '(', 'e.g.', ',', 'locations', ',', 'events', ',', 'and', 'people', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p']","['PRP$', 'NNS', 'VBD', 'IN', 'PRP$', 'NN', 'RB', 'VBD', 'JJ', 'IN', 'NNS', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'NN', 'NNS', '(', 'NN', ',', 'NNS', ',', 'NNS', ',', 'CC', 'NNS', ')', '.']",29
entity_linking,6,2,Incorporating Glosses into Neural Word Sense Disambiguation,"['Incorporating', 'Glosses', 'into', 'Neural', 'Word', 'Sense', 'Disambiguation']","['O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",7
entity_linking,6,4,Word Sense Disambiguation ( WSD ) aims to identify the correct meaning of polysemous words in the particular context .,"['Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', 'aims', 'to', 'identify', 'the', 'correct', 'meaning', 'of', 'polysemous', 'words', 'in', 'the', 'particular', 'context', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",20
entity_linking,6,5,Lexical resources like WordNet which are proved to be of great help for WSD in the knowledge - based methods .,"['Lexical', 'resources', 'like', 'WordNet', 'which', 'are', 'proved', 'to', 'be', 'of', 'great', 'help', 'for', 'WSD', 'in', 'the', 'knowledge', '-', 'based', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'IN', 'NNP', 'WDT', 'VBP', 'VBN', 'TO', 'VB', 'IN', 'JJ', 'NN', 'IN', 'NNP', 'IN', 'DT', 'NN', ':', 'VBN', 'NNS', '.']",21
entity_linking,6,31,"In this paper , we propose a novel model GAS : a gloss - augmented WSD neural network which is a variant of the memory network .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'model', 'GAS', ':', 'a', 'gloss', '-', 'augmented', 'WSD', 'neural', 'network', 'which', 'is', 'a', 'variant', 'of', 'the', 'memory', 'network', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NNP', ':', 'DT', 'NN', ':', 'VBN', 'NNP', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",27
entity_linking,6,32,GAS jointly encodes the context and glosses of the target word and models the semantic relationship between the context and glosses in the memory module .,"['GAS', 'jointly', 'encodes', 'the', 'context', 'and', 'glosses', 'of', 'the', 'target', 'word', 'and', 'models', 'the', 'semantic', 'relationship', 'between', 'the', 'context', 'and', 'glosses', 'in', 'the', 'memory', 'module', '.']","['B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'RB', 'VBZ', 'DT', 'NN', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'NNS', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",26
entity_linking,6,33,"In order to measure the inner relationship between glosses and context more accurately , we employ multiple passes operation within the memory as the re-reading process and adopt two memory updating mechanisms .","['In', 'order', 'to', 'measure', 'the', 'inner', 'relationship', 'between', 'glosses', 'and', 'context', 'more', 'accurately', ',', 'we', 'employ', 'multiple', 'passes', 'operation', 'within', 'the', 'memory', 'as', 'the', 're-reading', 'process', 'and', 'adopt', 'two', 'memory', 'updating', 'mechanisms', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'NNS', 'CC', 'VB', 'RBR', 'RB', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'VB', 'CD', 'NN', 'VBG', 'NNS', '.']",33
entity_linking,6,196,"We use pre-trained word embeddings with 300 dimensions 10 , and keep them fixed during the training process .","['We', 'use', 'pre-trained', 'word', 'embeddings', 'with', '300', 'dimensions', '10', ',', 'and', 'keep', 'them', 'fixed', 'during', 'the', 'training', 'process', '.']","['O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'VBP', 'JJ', 'NN', 'NNS', 'IN', 'CD', 'NNS', 'CD', ',', 'CC', 'VB', 'PRP', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",19
entity_linking,6,197,"We employ 256 hidden units in both the gloss module and the context module , which means n = 256 .","['We', 'employ', '256', 'hidden', 'units', 'in', 'both', 'the', 'gloss', 'module', 'and', 'the', 'context', 'module', ',', 'which', 'means', 'n', '=', '256', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', 'IN', 'DT', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', ',', 'WDT', 'VBZ', 'JJ', '$', 'CD', '.']",21
entity_linking,6,198,"Orthogonal initialization is used for weights in LSTM and random uniform initialization with range [ - 0.1 , 0.1 ] is used for others .","['Orthogonal', 'initialization', 'is', 'used', 'for', 'weights', 'in', 'LSTM', 'and', 'random', 'uniform', 'initialization', 'with', 'range', '[', '-', '0.1', ',', '0.1', ']', 'is', 'used', 'for', 'others', '.']","['O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NN', 'VBZ', 'VBN', 'IN', 'NNS', 'IN', 'NNP', 'CC', 'VB', 'JJ', 'NN', 'IN', 'NN', 'NNP', ':', 'CD', ',', 'CD', 'NN', 'VBZ', 'VBN', 'IN', 'NNS', '.']",25
entity_linking,6,199,We assign gloss expansion depth K the value of 4 .,"['We', 'assign', 'gloss', 'expansion', 'depth', 'K', 'the', 'value', 'of', '4', '.']","['O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'VBP', 'JJ', 'NN', 'NN', 'NNP', 'DT', 'NN', 'IN', 'CD', '.']",11
entity_linking,6,200,"We also experiment with the number of passes | T M | from 1 to 5 in our framework , finding | T M | = 3 performs best .","['We', 'also', 'experiment', 'with', 'the', 'number', 'of', 'passes', '|', 'T', 'M', '|', 'from', '1', 'to', '5', 'in', 'our', 'framework', ',', 'finding', '|', 'T', 'M', '|', '=', '3', 'performs', 'best', '.']","['O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'IN', 'NNS', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'CD', 'TO', 'CD', 'IN', 'PRP$', 'NN', ',', 'VBG', 'JJ', 'NNP', 'NNP', 'NNP', 'VBD', 'CD', 'NNS', 'RB', '.']",30
entity_linking,6,201,We use Adam optimizer in the training process with 0.001 initial learning rate .,"['We', 'use', 'Adam', 'optimizer', 'in', 'the', 'training', 'process', 'with', '0.001', 'initial', 'learning', 'rate', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'JJ', 'VBG', 'NN', '.']",14
entity_linking,6,202,"In order to avoid overfitting , we use dropout regularization and set drop rate to 0.5 .","['In', 'order', 'to', 'avoid', 'overfitting', ',', 'we', 'use', 'dropout', 'regularization', 'and', 'set', 'drop', 'rate', 'to', '0.5', '.']","['O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['IN', 'NN', 'TO', 'VB', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'CC', 'VBN', 'NN', 'NN', 'TO', 'CD', '.']",17
entity_linking,6,203,Training runs for up to 100 epochs with early stopping if the validation loss does n't improve within the last 10 epochs .,"['Training', 'runs', 'for', 'up', 'to', '100', 'epochs', 'with', 'early', 'stopping', 'if', 'the', 'validation', 'loss', 'does', ""n't"", 'improve', 'within', 'the', 'last', '10', 'epochs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'NNS', 'IN', 'IN', 'TO', 'CD', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'VB', 'IN', 'DT', 'JJ', 'CD', 'NN', '.']",23
entity_linking,6,228,English all - words results,"['English', 'all', '-', 'words', 'results']","['O', 'O', 'O', 'O', 'O']","['VB', 'DT', ':', 'NNS', 'NNS']",5
entity_linking,6,233,GAS and GAS ext achieves the state - of - theart performance on the concatenation of all test datasets .,"['GAS', 'and', 'GAS', 'ext', 'achieves', 'the', 'state', '-', 'of', '-', 'theart', 'performance', 'on', 'the', 'concatenation', 'of', 'all', 'test', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'CC', 'NNP', 'VBP', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",20
entity_linking,6,237,". ways performs best on all the test sets 11 , we can find that GAS ext with concatenation memory updating strategy achieves the best results 70.6 on the concatenation of the four test datasets .","['.', 'ways', 'performs', 'best', 'on', 'all', 'the', 'test', 'sets', '11', ',', 'we', 'can', 'find', 'that', 'GAS', 'ext', 'with', 'concatenation', 'memory', 'updating', 'strategy', 'achieves', 'the', 'best', 'results', '70.6', 'on', 'the', 'concatenation', 'of', 'the', 'four', 'test', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['.', 'NNS', 'VBP', 'JJS', 'IN', 'PDT', 'DT', 'NN', 'VBZ', 'CD', ',', 'PRP', 'MD', 'VB', 'DT', 'NNP', 'NN', 'IN', 'NN', 'NN', 'VBG', 'NN', 'VBZ', 'DT', 'JJS', 'NNS', 'CD', 'IN', 'DT', 'NN', 'IN', 'DT', 'CD', 'NN', 'NNS', '.']",36
entity_linking,6,238,"Compared with other three neural - based methods in the fourth block , we can find that our best model outperforms the previous best neural network models on every individual test set .","['Compared', 'with', 'other', 'three', 'neural', '-', 'based', 'methods', 'in', 'the', 'fourth', 'block', ',', 'we', 'can', 'find', 'that', 'our', 'best', 'model', 'outperforms', 'the', 'previous', 'best', 'neural', 'network', 'models', 'on', 'every', 'individual', 'test', 'set', '.']","['O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBN', 'IN', 'JJ', 'CD', 'JJ', ':', 'VBN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'MD', 'VB', 'IN', 'PRP$', 'JJS', 'NN', 'VBZ', 'DT', 'JJ', 'JJS', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",33
entity_linking,6,240,"However , our best model can also beat IMS + emb on the SE3 , SE13 and SE15 test sets .","['However', ',', 'our', 'best', 'model', 'can', 'also', 'beat', 'IMS', '+', 'emb', 'on', 'the', 'SE3', ',', 'SE13', 'and', 'SE15', 'test', 'sets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['RB', ',', 'PRP$', 'JJS', 'NN', 'MD', 'RB', 'VB', 'NNP', 'NNP', 'NN', 'IN', 'DT', 'NNP', ',', 'NNP', 'CC', 'NNP', 'NN', 'NNS', '.']",21
entity_linking,6,241,Incorporating glosses into neural WSD can greatly improve the performance and extending the original gloss can further boost the results .,"['Incorporating', 'glosses', 'into', 'neural', 'WSD', 'can', 'greatly', 'improve', 'the', 'performance', 'and', 'extending', 'the', 'original', 'gloss', 'can', 'further', 'boost', 'the', 'results', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNS', 'IN', 'JJ', 'NNP', 'MD', 'RB', 'VB', 'DT', 'NN', 'CC', 'VBG', 'DT', 'JJ', 'NN', 'MD', 'RB', 'VB', 'DT', 'NNS', '.']",21
entity_linking,6,242,"Compared with the Bi - LSTM baseline which only uses labeled data , our proposed model greatly improves the WSD task by 2.2 % F1 - score with the help of gloss knowledge .","['Compared', 'with', 'the', 'Bi', '-', 'LSTM', 'baseline', 'which', 'only', 'uses', 'labeled', 'data', ',', 'our', 'proposed', 'model', 'greatly', 'improves', 'the', 'WSD', 'task', 'by', '2.2', '%', 'F1', '-', 'score', 'with', 'the', 'help', 'of', 'gloss', 'knowledge', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'WDT', 'RB', 'VBZ', 'VBN', 'NNS', ',', 'PRP$', 'VBN', 'NN', 'RB', 'VBZ', 'DT', 'NNP', 'NN', 'IN', 'CD', 'NN', 'NNP', ':', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",34
entity_linking,6,243,"Furthermore , compared with the GAS which only uses original gloss as the background knowledge , GAS ext can further improve the performance with the help of the extended glosses through the semantic relations .","['Furthermore', ',', 'compared', 'with', 'the', 'GAS', 'which', 'only', 'uses', 'original', 'gloss', 'as', 'the', 'background', 'knowledge', ',', 'GAS', 'ext', 'can', 'further', 'improve', 'the', 'performance', 'with', 'the', 'help', 'of', 'the', 'extended', 'glosses', 'through', 'the', 'semantic', 'relations', '.']","['O', 'O', 'O', 'O', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['RB', ',', 'VBN', 'IN', 'DT', 'NNP', 'WDT', 'RB', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'NNP', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NNS', '.']",35
entity_linking,10,2,Deep contextualized word representations,"['Deep', 'contextualized', 'word', 'representations']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'VBD', 'NN', 'NNS']",4
entity_linking,10,4,"We introduce a new type of deep contextualized word representation that models both ( 1 ) complex characteristics of word use ( e.g. , syntax and semantics ) , and ( 2 ) how these uses vary across linguistic contexts ( i.e. , to model polysemy ) .","['We', 'introduce', 'a', 'new', 'type', 'of', 'deep', 'contextualized', 'word', 'representation', 'that', 'models', 'both', '(', '1', ')', 'complex', 'characteristics', 'of', 'word', 'use', '(', 'e.g.', ',', 'syntax', 'and', 'semantics', ')', ',', 'and', '(', '2', ')', 'how', 'these', 'uses', 'vary', 'across', 'linguistic', 'contexts', '(', 'i.e.', ',', 'to', 'model', 'polysemy', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'NNS', 'DT', '(', 'CD', ')', 'JJ', 'NNS', 'IN', 'NN', 'NN', '(', 'NN', ',', 'NN', 'CC', 'NNS', ')', ',', 'CC', '(', 'CD', ')', 'WRB', 'DT', 'NNS', 'VBP', 'IN', 'JJ', 'NN', '(', 'JJ', ',', 'TO', 'VB', 'NN', ')', '.']",48
entity_linking,10,9,Pre-trained word representations are a key component in many neural language understanding models .,"['Pre-trained', 'word', 'representations', 'are', 'a', 'key', 'component', 'in', 'many', 'neural', 'language', 'understanding', 'models', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'JJ', 'NNS', '.']",14
entity_linking,10,12,"In this paper , we introduce a new type of deep contextualized word representation that directly addresses both challenges , can be easily integrated into existing models , and significantly improves the state of the art in every considered case across a range of challenging language understanding problems .","['In', 'this', 'paper', ',', 'we', 'introduce', 'a', 'new', 'type', 'of', 'deep', 'contextualized', 'word', 'representation', 'that', 'directly', 'addresses', 'both', 'challenges', ',', 'can', 'be', 'easily', 'integrated', 'into', 'existing', 'models', ',', 'and', 'significantly', 'improves', 'the', 'state', 'of', 'the', 'art', 'in', 'every', 'considered', 'case', 'across', 'a', 'range', 'of', 'challenging', 'language', 'understanding', 'problems', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'RB', 'VBZ', 'DT', 'NNS', ',', 'MD', 'VB', 'RB', 'VBN', 'IN', 'VBG', 'NNS', ',', 'CC', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'NN', 'JJ', 'NNS', '.']",49
entity_linking,10,13,Our representations differ from traditional word type embeddings in that each token is assigned a representation that is a function of the entire input sentence .,"['Our', 'representations', 'differ', 'from', 'traditional', 'word', 'type', 'embeddings', 'in', 'that', 'each', 'token', 'is', 'assigned', 'a', 'representation', 'that', 'is', 'a', 'function', 'of', 'the', 'entire', 'input', 'sentence', '.']","['B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBP', 'IN', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'DT', 'DT', 'NN', 'VBZ', 'VBN', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",26
entity_linking,10,14,We use vectors derived from a bidirectional LSTM that is trained with a coupled lan - guage model ( LM ) objective on a large text corpus .,"['We', 'use', 'vectors', 'derived', 'from', 'a', 'bidirectional', 'LSTM', 'that', 'is', 'trained', 'with', 'a', 'coupled', 'lan', '-', 'guage', 'model', '(', 'LM', ')', 'objective', 'on', 'a', 'large', 'text', 'corpus', '.']","['O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'WDT', 'VBZ', 'VBN', 'IN', 'DT', 'VBN', 'NN', ':', 'NN', 'NN', '(', 'NNP', ')', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",28
entity_linking,10,15,"For this reason , we call them ELMo ( Embeddings from Language Models ) representations .","['For', 'this', 'reason', ',', 'we', 'call', 'them', 'ELMo', '(', 'Embeddings', 'from', 'Language', 'Models', ')', 'representations', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'PRP', 'NNP', '(', 'NNS', 'IN', 'NNP', 'NNP', ')', 'NNS', '.']",16
entity_linking,10,16,"Unlike previous approaches for learning contextualized word vectors , ELMo representations are deep , in the sense that they are a function of all of the internal layers of the biLM .","['Unlike', 'previous', 'approaches', 'for', 'learning', 'contextualized', 'word', 'vectors', ',', 'ELMo', 'representations', 'are', 'deep', ',', 'in', 'the', 'sense', 'that', 'they', 'are', 'a', 'function', 'of', 'all', 'of', 'the', 'internal', 'layers', 'of', 'the', 'biLM', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O']","['IN', 'JJ', 'NNS', 'IN', 'VBG', 'VBN', 'NN', 'NNS', ',', 'NNP', 'NNS', 'VBP', 'JJ', ',', 'IN', 'DT', 'NN', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', '.']",32
entity_linking,10,17,"More specifically , we learn a linear combination of the vectors stacked above each input word for each end task , which markedly improves performance over just using the top LSTM layer .","['More', 'specifically', ',', 'we', 'learn', 'a', 'linear', 'combination', 'of', 'the', 'vectors', 'stacked', 'above', 'each', 'input', 'word', 'for', 'each', 'end', 'task', ',', 'which', 'markedly', 'improves', 'performance', 'over', 'just', 'using', 'the', 'top', 'LSTM', 'layer', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RBR', 'RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'VBD', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'WDT', 'RB', 'VBZ', 'NN', 'IN', 'RB', 'VBG', 'DT', 'JJ', 'NNP', 'NN', '.']",33
entity_linking,10,19,"Using intrinsic evaluations , we show that the higher - level LSTM states capture context - dependent aspects of word meaning ( e.g. , they can be used without modification to perform well on supervised word sense disambiguation tasks ) while lowerlevel states model aspects of syntax ( e.g. , they can be used to do part - of - speech tagging ) .","['Using', 'intrinsic', 'evaluations', ',', 'we', 'show', 'that', 'the', 'higher', '-', 'level', 'LSTM', 'states', 'capture', 'context', '-', 'dependent', 'aspects', 'of', 'word', 'meaning', '(', 'e.g.', ',', 'they', 'can', 'be', 'used', 'without', 'modification', 'to', 'perform', 'well', 'on', 'supervised', 'word', 'sense', 'disambiguation', 'tasks', ')', 'while', 'lowerlevel', 'states', 'model', 'aspects', 'of', 'syntax', '(', 'e.g.', ',', 'they', 'can', 'be', 'used', 'to', 'do', 'part', '-', 'of', '-', 'speech', 'tagging', ')', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'IN', 'DT', 'JJR', ':', 'NN', 'NNP', 'VBZ', 'NN', 'SYM', ':', 'JJ', 'NNS', 'IN', 'NN', 'NN', '(', 'UH', ',', 'PRP', 'MD', 'VB', 'VBN', 'IN', 'NN', 'TO', 'VB', 'RB', 'IN', 'VBN', 'NN', 'NN', 'NN', 'NNS', ')', 'IN', 'JJ', 'NNS', 'VBP', 'NNS', 'IN', 'NN', '(', 'UH', ',', 'PRP', 'MD', 'VB', 'VBN', 'TO', 'VB', 'NN', ':', 'IN', ':', 'NN', 'NN', ')', '.']",64
entity_linking,10,103,Question answering,"['Question', 'answering']","['B-n', 'I-n']","['NN', 'VBG']",2
entity_linking,10,107,"After adding ELMo to the baseline model , test set F 1 improved by 4.7 % from 81.1 % to 85.8 % , a 24.9 % relative error reduction over the baseline , and improving the overall single model state - of - the - art by 1.4 % .","['After', 'adding', 'ELMo', 'to', 'the', 'baseline', 'model', ',', 'test', 'set', 'F', '1', 'improved', 'by', '4.7', '%', 'from', '81.1', '%', 'to', '85.8', '%', ',', 'a', '24.9', '%', 'relative', 'error', 'reduction', 'over', 'the', 'baseline', ',', 'and', 'improving', 'the', 'overall', 'single', 'model', 'state', '-', 'of', '-', 'the', '-', 'art', 'by', '1.4', '%', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBG', 'NNP', 'TO', 'DT', 'NN', 'NN', ',', 'NN', 'VBN', 'NNP', 'CD', 'VBN', 'IN', 'CD', 'NN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', ',', 'DT', 'CD', 'NN', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'CC', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'IN', 'CD', 'NN', '.']",50
entity_linking,10,109,The increase of 4.7 % with ELMo is also significantly larger then the 1.8 % improvement from adding CoVe to a baseline model .,"['The', 'increase', 'of', '4.7', '%', 'with', 'ELMo', 'is', 'also', 'significantly', 'larger', 'then', 'the', '1.8', '%', 'improvement', 'from', 'adding', 'CoVe', 'to', 'a', 'baseline', 'model', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'CD', 'NN', 'IN', 'NNP', 'VBZ', 'RB', 'RB', 'JJR', 'RB', 'DT', 'CD', 'NN', 'NN', 'IN', 'VBG', 'NNP', 'TO', 'DT', 'NN', 'NN', '.']",24
entity_linking,10,112,Textual entailment,"['Textual', 'entailment']","['B-n', 'I-n']","['JJ', 'NN']",2
entity_linking,10,116,"Overall , adding ELMo to the ESIM model improves accuracy by an average of 0.7 % across five random seeds .","['Overall', ',', 'adding', 'ELMo', 'to', 'the', 'ESIM', 'model', 'improves', 'accuracy', 'by', 'an', 'average', 'of', '0.7', '%', 'across', 'five', 'random', 'seeds', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['JJ', ',', 'VBG', 'NNP', 'TO', 'DT', 'NNP', 'NN', 'VBZ', 'RP', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', 'IN', 'CD', 'NN', 'NNS', '.']",21
entity_linking,10,118,Semantic role labeling,"['Semantic', 'role', 'labeling']","['B-n', 'I-n', 'I-n']","['JJ', 'NN', 'NN']",3
entity_linking,10,124,"In our experiments with the OntoNotes coreference annotations from the CoNLL 2012 shared task , adding ELMo improved the average F 1 by 3.2 % from 67.2 to 70.4 , establishing a new state of the art , again improving over the previous best ensemble result by 1.6 % F 1 .","['In', 'our', 'experiments', 'with', 'the', 'OntoNotes', 'coreference', 'annotations', 'from', 'the', 'CoNLL', '2012', 'shared', 'task', ',', 'adding', 'ELMo', 'improved', 'the', 'average', 'F', '1', 'by', '3.2', '%', 'from', '67.2', 'to', '70.4', ',', 'establishing', 'a', 'new', 'state', 'of', 'the', 'art', ',', 'again', 'improving', 'over', 'the', 'previous', 'best', 'ensemble', 'result', 'by', '1.6', '%', 'F', '1', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'PRP$', 'NNS', 'IN', 'DT', 'NNP', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'CD', 'VBD', 'NN', ',', 'VBG', 'NNP', 'VBD', 'DT', 'JJ', 'NNP', 'CD', 'IN', 'CD', 'NN', 'IN', 'CD', 'TO', 'CD', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'RB', 'VBG', 'IN', 'DT', 'JJ', 'RBS', 'JJ', 'NN', 'IN', 'CD', 'NN', 'NNP', 'CD', '.']",52
entity_linking,10,125,Named entity extraction,"['Named', 'entity', 'extraction']","['B-n', 'I-n', 'I-n']","['VBN', 'NN', 'NN']",3
entity_linking,10,128,"As shown in , our ELMo enhanced biLSTM - CRF achieves 92. 22 % F 1 averaged over five runs .","['As', 'shown', 'in', ',', 'our', 'ELMo', 'enhanced', 'biLSTM', '-', 'CRF', 'achieves', '92.', '22', '%', 'F', '1', 'averaged', 'over', 'five', 'runs', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NNP', 'VBD', 'SYM', ':', 'NNP', 'VBZ', 'CD', 'CD', 'NN', 'NNP', 'CD', 'VBD', 'RB', 'CD', 'NNS', '.']",21
entity_linking,2,2,Neural Sequence Learning Models for Word Sense Disambiguation,"['Neural', 'Sequence', 'Learning', 'Models', 'for', 'Word', 'Sense', 'Disambiguation']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",8
entity_linking,2,9,"As one of the long - standing challenges in Natural Language Processing ( NLP ) , Word Sense Disambiguation , WSD ) has received considerable attention over recent years .","['As', 'one', 'of', 'the', 'long', '-', 'standing', 'challenges', 'in', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', ',', 'Word', 'Sense', 'Disambiguation', ',', 'WSD', ')', 'has', 'received', 'considerable', 'attention', 'over', 'recent', 'years', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'CD', 'IN', 'DT', 'JJ', ':', 'NN', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'NNP', 'NNP', 'NNP', ',', 'NNP', ')', 'VBZ', 'VBN', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",30
entity_linking,2,18,"In this paper our focus is on supervised WSD , but we depart from previous approaches and adopt a different perspective on the task : instead of framing a separate classification problem for each given word , we aim at modeling the joint disambiguation of the target text as a whole in terms of a sequence labeling problem .","['In', 'this', 'paper', 'our', 'focus', 'is', 'on', 'supervised', 'WSD', ',', 'but', 'we', 'depart', 'from', 'previous', 'approaches', 'and', 'adopt', 'a', 'different', 'perspective', 'on', 'the', 'task', ':', 'instead', 'of', 'framing', 'a', 'separate', 'classification', 'problem', 'for', 'each', 'given', 'word', ',', 'we', 'aim', 'at', 'modeling', 'the', 'joint', 'disambiguation', 'of', 'the', 'target', 'text', 'as', 'a', 'whole', 'in', 'terms', 'of', 'a', 'sequence', 'labeling', 'problem', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP$', 'NN', 'VBZ', 'IN', 'JJ', 'NNP', ',', 'CC', 'PRP', 'VBP', 'IN', 'JJ', 'NNS', 'CC', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'RB', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'VBN', 'NN', ',', 'PRP', 'VBP', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",59
entity_linking,2,20,"With this in mind , we design , analyze and compare experimentally various neural architectures of different complexities , ranging from a single bidirectional Long Short - Term Memory to a sequence - tosequence approach .","['With', 'this', 'in', 'mind', ',', 'we', 'design', ',', 'analyze', 'and', 'compare', 'experimentally', 'various', 'neural', 'architectures', 'of', 'different', 'complexities', ',', 'ranging', 'from', 'a', 'single', 'bidirectional', 'Long', 'Short', '-', 'Term', 'Memory', 'to', 'a', 'sequence', '-', 'tosequence', 'approach', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'IN', 'NN', ',', 'PRP', 'VBP', ',', 'JJ', 'CC', 'VB', 'RB', 'JJ', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'TO', 'DT', 'NN', ':', 'NN', 'NN', '.']",36
entity_linking,2,21,"Each architecture reflects a particular way of modeling the disambiguation problem , but they all share some key features that set them apart from previous supervised approaches to WSD : they are trained end - to - end from sense - annotated text to sense labels , and learn a single all - words model from the training data , without fine tuning or explicit engineering of local features .","['Each', 'architecture', 'reflects', 'a', 'particular', 'way', 'of', 'modeling', 'the', 'disambiguation', 'problem', ',', 'but', 'they', 'all', 'share', 'some', 'key', 'features', 'that', 'set', 'them', 'apart', 'from', 'previous', 'supervised', 'approaches', 'to', 'WSD', ':', 'they', 'are', 'trained', 'end', '-', 'to', '-', 'end', 'from', 'sense', '-', 'annotated', 'text', 'to', 'sense', 'labels', ',', 'and', 'learn', 'a', 'single', 'all', '-', 'words', 'model', 'from', 'the', 'training', 'data', ',', 'without', 'fine', 'tuning', 'or', 'explicit', 'engineering', 'of', 'local', 'features', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', ',', 'CC', 'PRP', 'DT', 'NN', 'DT', 'NN', 'NNS', 'WDT', 'VBP', 'PRP', 'RB', 'IN', 'JJ', 'VBN', 'NNS', 'TO', 'VB', ':', 'PRP', 'VBP', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'IN', 'NN', ':', 'VBN', 'NN', 'TO', 'NN', 'NNS', ',', 'CC', 'VB', 'DT', 'JJ', 'DT', ':', 'NNS', 'NN', 'IN', 'DT', 'NN', 'NNS', ',', 'IN', 'JJ', 'NN', 'CC', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",70
entity_linking,2,144,"To set a level playing field with comparison systems on English all - words WSD , we followed and , for all our models , we used a layer of word embeddings pre-trained 8 on the English uk WaC corpus as initialization , and kept them fixed during the training process .","['To', 'set', 'a', 'level', 'playing', 'field', 'with', 'comparison', 'systems', 'on', 'English', 'all', '-', 'words', 'WSD', ',', 'we', 'followed', 'and', ',', 'for', 'all', 'our', 'models', ',', 'we', 'used', 'a', 'layer', 'of', 'word', 'embeddings', 'pre-trained', '8', 'on', 'the', 'English', 'uk', 'WaC', 'corpus', 'as', 'initialization', ',', 'and', 'kept', 'them', 'fixed', 'during', 'the', 'training', 'process', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NNP', 'DT', ':', 'NNS', 'NNP', ',', 'PRP', 'VBD', 'CC', ',', 'IN', 'DT', 'PRP$', 'NNS', ',', 'PRP', 'VBD', 'DT', 'NN', 'IN', 'NN', 'NNS', 'JJ', 'CD', 'IN', 'DT', 'NNP', 'JJ', 'NNP', 'NN', 'IN', 'NN', ',', 'CC', 'VBD', 'PRP', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",52
entity_linking,2,145,For all architectures we then employed 2 layers of bidirectional LSTM with 2048 hidden units ( 1024 units per direction ) .,"['For', 'all', 'architectures', 'we', 'then', 'employed', '2', 'layers', 'of', 'bidirectional', 'LSTM', 'with', '2048', 'hidden', 'units', '(', '1024', 'units', 'per', 'direction', ')', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'O']","['IN', 'DT', 'NNS', 'PRP', 'RB', 'VBD', 'CD', 'NNS', 'IN', 'JJ', 'NNP', 'IN', 'CD', 'JJ', 'NNS', '(', 'CD', 'NNS', 'IN', 'NN', ')', '.']",22
entity_linking,2,155,"We report the F1 - score on each in - dividual test set , as well as the F1- score obtained on the concatenation of all four test sets , divided by part - of - speech tag .","['We', 'report', 'the', 'F1', '-', 'score', 'on', 'each', 'in', '-', 'dividual', 'test', 'set', ',', 'as', 'well', 'as', 'the', 'F1-', 'score', 'obtained', 'on', 'the', 'concatenation', 'of', 'all', 'four', 'test', 'sets', ',', 'divided', 'by', 'part', '-', 'of', '-', 'speech', 'tag', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', ':', 'NN', 'IN', 'DT', 'IN', ':', 'JJ', 'NN', 'NN', ',', 'RB', 'RB', 'IN', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'CD', 'NN', 'NNS', ',', 'VBN', 'IN', 'NN', ':', 'IN', ':', 'NN', 'NN', '.']",39
entity_linking,2,157,"As supervised systems , we considered Context2 Vec and It Makes Sense , both the original implementation and the best configuration reported by , which also integrates word embeddings using exponential decay .","['As', 'supervised', 'systems', ',', 'we', 'considered', 'Context2', 'Vec', 'and', 'It', 'Makes', 'Sense', ',', 'both', 'the', 'original', 'implementation', 'and', 'the', 'best', 'configuration', 'reported', 'by', ',', 'which', 'also', 'integrates', 'word', 'embeddings', 'using', 'exponential', 'decay', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'JJ', 'NNS', ',', 'PRP', 'VBD', 'NNP', 'NNP', 'CC', 'PRP', 'NNP', 'NNP', ',', 'VBD', 'DT', 'JJ', 'NN', 'CC', 'DT', 'JJS', 'NN', 'VBN', 'IN', ',', 'WDT', 'RB', 'VBZ', 'NN', 'NNS', 'VBG', 'JJ', 'NN', '.']",33
entity_linking,2,161,"11 Overall , both BLSTM and Seq2Seq achieved results that are either state - of - the - art or statistically equivalent ( unpaired t- test , p < 0.05 ) to the best supervised system in each benchmark , performing on par with word experts tuned over explicitly engineered features .","['11', 'Overall', ',', 'both', 'BLSTM', 'and', 'Seq2Seq', 'achieved', 'results', 'that', 'are', 'either', 'state', '-', 'of', '-', 'the', '-', 'art', 'or', 'statistically', 'equivalent', '(', 'unpaired', 't-', 'test', ',', 'p', '<', '0.05', ')', 'to', 'the', 'best', 'supervised', 'system', 'in', 'each', 'benchmark', ',', 'performing', 'on', 'par', 'with', 'word', 'experts', 'tuned', 'over', 'explicitly', 'engineered', 'features', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['CD', 'JJ', ',', 'DT', 'NNP', 'CC', 'NNP', 'VBD', 'NNS', 'WDT', 'VBP', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'CC', 'RB', 'JJ', '(', 'JJ', 'JJ', 'NN', ',', 'NN', 'NNP', 'CD', ')', 'TO', 'DT', 'JJS', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'VBG', 'IN', 'NN', 'IN', 'NN', 'NNS', 'VBD', 'RP', 'RB', 'VBN', 'NNS', '.']",52
entity_linking,2,162,"Interestingly enough , BLSTM models tended consistently to outperform their Seq2Seq counterparts , suggesting that an encoder - decoder architecture , despite being more powerful , might be suboptimal for WSD .","['Interestingly', 'enough', ',', 'BLSTM', 'models', 'tended', 'consistently', 'to', 'outperform', 'their', 'Seq2Seq', 'counterparts', ',', 'suggesting', 'that', 'an', 'encoder', '-', 'decoder', 'architecture', ',', 'despite', 'being', 'more', 'powerful', ',', 'might', 'be', 'suboptimal', 'for', 'WSD', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'RB', ',', 'NNP', 'NNS', 'VBD', 'RB', 'TO', 'VB', 'PRP$', 'NNP', 'NNS', ',', 'VBG', 'IN', 'DT', 'NN', ':', 'NN', 'NN', ',', 'IN', 'VBG', 'RBR', 'JJ', ',', 'MD', 'VB', 'JJ', 'IN', 'NNP', '.']",32
entity_linking,2,164,English All - words WSD,"['English', 'All', '-', 'words', 'WSD']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VB', 'DT', ':', 'NNS', 'VBP']",5
entity_linking,2,169,"It is worth noting that RNN - based architectures outperformed classical supervised approaches when dealing with verbs , which are shown to be highly ambiguous .","['It', 'is', 'worth', 'noting', 'that', 'RNN', '-', 'based', 'architectures', 'outperformed', 'classical', 'supervised', 'approaches', 'when', 'dealing', 'with', 'verbs', ',', 'which', 'are', 'shown', 'to', 'be', 'highly', 'ambiguous', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'JJ', 'VBG', 'IN', 'NNP', ':', 'VBN', 'NNS', 'VBD', 'JJ', 'VBD', 'NNS', 'WRB', 'VBG', 'IN', 'NNS', ',', 'WDT', 'VBP', 'VBN', 'TO', 'VB', 'RB', 'JJ', '.']",26
entity_linking,2,171,"Both BLSTM and Seq2Seq outperformed UKB and IMS trained on SemCor , as well as recent supervised approaches based on distributional semantics and neural architectures .","['Both', 'BLSTM', 'and', 'Seq2Seq', 'outperformed', 'UKB', 'and', 'IMS', 'trained', 'on', 'SemCor', ',', 'as', 'well', 'as', 'recent', 'supervised', 'approaches', 'based', 'on', 'distributional', 'semantics', 'and', 'neural', 'architectures', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'CC', 'NNP', 'VBD', 'NNP', 'CC', 'NNP', 'VBD', 'IN', 'NNP', ',', 'RB', 'RB', 'IN', 'JJ', 'VBD', 'NNS', 'VBN', 'IN', 'JJ', 'NNS', 'CC', 'JJ', 'NNS', '.']",26
entity_linking,2,172,Multilingual All - words WSD,"['Multilingual', 'All', '-', 'words', 'WSD']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', ':', 'NNS', 'VBP']",5
entity_linking,2,179,"F - score figures show that bilingual and multilingual models , despite being trained only on English data , consistently outperformed the MFS baseline and achieved results that are competitive with the best participating systems in the task .","['F', '-', 'score', 'figures', 'show', 'that', 'bilingual', 'and', 'multilingual', 'models', ',', 'despite', 'being', 'trained', 'only', 'on', 'English', 'data', ',', 'consistently', 'outperformed', 'the', 'MFS', 'baseline', 'and', 'achieved', 'results', 'that', 'are', 'competitive', 'with', 'the', 'best', 'participating', 'systems', 'in', 'the', 'task', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['NNP', ':', 'NN', 'NNS', 'VBP', 'IN', 'JJ', 'CC', 'JJ', 'NNS', ',', 'IN', 'VBG', 'VBN', 'RB', 'IN', 'NNP', 'NNS', ',', 'RB', 'VBD', 'DT', 'NNP', 'NN', 'CC', 'VBD', 'NNS', 'WDT', 'VBP', 'JJ', 'IN', 'DT', 'JJS', 'VBG', 'NNS', 'IN', 'DT', 'NN', '.']",39
entity_linking,2,180,"We also note that the overall F- score performance did not change substantially ( and slightly improved ) when moving from bilingual to multilingual models , despite the increase in the number of target languages treated simultaneously .","['We', 'also', 'note', 'that', 'the', 'overall', 'F-', 'score', 'performance', 'did', 'not', 'change', 'substantially', '(', 'and', 'slightly', 'improved', ')', 'when', 'moving', 'from', 'bilingual', 'to', 'multilingual', 'models', ',', 'despite', 'the', 'increase', 'in', 'the', 'number', 'of', 'target', 'languages', 'treated', 'simultaneously', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'NN', 'VBD', 'RB', 'VB', 'RB', '(', 'CC', 'RB', 'VBN', ')', 'WRB', 'VBG', 'IN', 'JJ', 'TO', 'JJ', 'NNS', ',', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBD', 'RB', '.']",38
entity_linking,3,2,Does BERT Make Any Sense ? Interpretable Word Sense Disambiguation with Contextualized Embeddings,"['Does', 'BERT', 'Make', 'Any', 'Sense', '?', 'Interpretable', 'Word', 'Sense', 'Disambiguation', 'with', 'Contextualized', 'Embeddings']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'NNP', 'NNP', '.', 'JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNS']",13
entity_linking,3,7,"Since vectors of the same word type can vary depending on the respective context , they implicitly provide a model for word sense disambiguation ( WSD ) .","['Since', 'vectors', 'of', 'the', 'same', 'word', 'type', 'can', 'vary', 'depending', 'on', 'the', 'respective', 'context', ',', 'they', 'implicitly', 'provide', 'a', 'model', 'for', 'word', 'sense', 'disambiguation', '(', 'WSD', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'MD', 'VB', 'VBG', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'NN', 'NN', 'NN', '(', 'NNP', ')', '.']",28
entity_linking,3,8,We introduce a simple but effective approach to WSD using a nearest neighbor classification on CWEs .,"['We', 'introduce', 'a', 'simple', 'but', 'effective', 'approach', 'to', 'WSD', 'using', 'a', 'nearest', 'neighbor', 'classification', 'on', 'CWEs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'CC', 'JJ', 'NN', 'TO', 'NNP', 'VBG', 'DT', 'JJS', 'NN', 'NN', 'IN', 'NNP', '.']",17
entity_linking,3,49,We show that CWEs can be utilized directly to approach the WSD task due to their nature of providing distinct vector representations for the same token depending on its context .,"['We', 'show', 'that', 'CWEs', 'can', 'be', 'utilized', 'directly', 'to', 'approach', 'the', 'WSD', 'task', 'due', 'to', 'their', 'nature', 'of', 'providing', 'distinct', 'vector', 'representations', 'for', 'the', 'same', 'token', 'depending', 'on', 'its', 'context', '.']","['O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'NNP', 'MD', 'VB', 'VBN', 'RB', 'TO', 'VB', 'DT', 'NNP', 'NN', 'JJ', 'TO', 'PRP$', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'VBG', 'IN', 'PRP$', 'NN', '.']",31
entity_linking,3,50,"To learn the semantic capabilities of CWEs , we employ a simple , yet interpretable approach to WSD using a k -nearest neighbor classification ( kNN ) approach .","['To', 'learn', 'the', 'semantic', 'capabilities', 'of', 'CWEs', ',', 'we', 'employ', 'a', 'simple', ',', 'yet', 'interpretable', 'approach', 'to', 'WSD', 'using', 'a', 'k', '-nearest', 'neighbor', 'classification', '(', 'kNN', ')', 'approach', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', ',', 'RB', 'JJ', 'NN', 'TO', 'NNP', 'VBG', 'DT', 'NN', 'NNP', 'NN', 'NN', '(', 'NN', ')', 'NN', '.']",29
entity_linking,3,134,Contextualized Embeddings,"['Contextualized', 'Embeddings']","['B-n', 'I-n']","['VBN', 'NNS']",2
entity_linking,3,137,Simple k NN with ELMo as well as BERT embeddings beats the state of the art of the lexical sample task SE - 2 ( cp. Table 3 ) .,"['Simple', 'k', 'NN', 'with', 'ELMo', 'as', 'well', 'as', 'BERT', 'embeddings', 'beats', 'the', 'state', 'of', 'the', 'art', 'of', 'the', 'lexical', 'sample', 'task', 'SE', '-', '2', '(', 'cp.', 'Table', '3', ')', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NNP', 'IN', 'NNP', 'RB', 'RB', 'IN', 'NNP', 'VBZ', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NNP', ':', 'CD', '(', 'NN', 'NNP', 'CD', ')', '.']",30
entity_linking,3,138,BERT also outperforms all others on the SE - 3 task .,"['BERT', 'also', 'outperforms', 'all', 'others', 'on', 'the', 'SE', '-', '3', 'task', '.']","['B-n', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'RB', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NNP', ':', 'CD', 'NN', '.']",12
entity_linking,3,139,"However , we observe a major performance drop of our approach for the two all - words WSD tasks in which no training data is provided along with the test set .","['However', ',', 'we', 'observe', 'a', 'major', 'performance', 'drop', 'of', 'our', 'approach', 'for', 'the', 'two', 'all', '-', 'words', 'WSD', 'tasks', 'in', 'which', 'no', 'training', 'data', 'is', 'provided', 'along', 'with', 'the', 'test', 'set', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'CD', 'DT', ':', 'NNS', 'NNP', 'NNS', 'IN', 'WDT', 'DT', 'NN', 'NNS', 'VBZ', 'VBN', 'IN', 'IN', 'DT', 'NN', 'NN', '.']",32
entity_linking,3,141,"In fact , similarity of contextualized embeddings largely relies on semantically and structurally similar sentence contexts of polysemic target words .","['In', 'fact', ',', 'similarity', 'of', 'contextualized', 'embeddings', 'largely', 'relies', 'on', 'semantically', 'and', 'structurally', 'similar', 'sentence', 'contexts', 'of', 'polysemic', 'target', 'words', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'NN', 'IN', 'JJ', 'NNS', 'RB', 'NNS', 'IN', 'RB', 'CC', 'RB', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",21
entity_linking,3,146,"As can be seen in , the SE - 2 and SE - 3 training datasets provide more CWEs for each word and sense , and our approach performs better with a growing number of CWEs , even with a higher average number of senses per word as is the casein SE - 3 .","['As', 'can', 'be', 'seen', 'in', ',', 'the', 'SE', '-', '2', 'and', 'SE', '-', '3', 'training', 'datasets', 'provide', 'more', 'CWEs', 'for', 'each', 'word', 'and', 'sense', ',', 'and', 'our', 'approach', 'performs', 'better', 'with', 'a', 'growing', 'number', 'of', 'CWEs', ',', 'even', 'with', 'a', 'higher', 'average', 'number', 'of', 'senses', 'per', 'word', 'as', 'is', 'the', 'casein', 'SE', '-', '3', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', ',', 'DT', 'NNP', ':', 'CD', 'CC', 'NNP', ':', 'CD', 'NN', 'NNS', 'VBP', 'JJR', 'NNP', 'IN', 'DT', 'NN', 'CC', 'NN', ',', 'CC', 'PRP$', 'NN', 'NNS', 'RBR', 'IN', 'DT', 'VBG', 'NN', 'IN', 'NNP', ',', 'RB', 'IN', 'DT', 'JJR', 'JJ', 'NN', 'IN', 'NNS', 'VBP', 'NN', 'IN', 'VBZ', 'DT', 'NN', 'NNP', ':', 'CD', '.']",55
entity_linking,3,149,"Moreover , CWEs actually do not organize well in spherically shaped form in the embedding space .","['Moreover', ',', 'CWEs', 'actually', 'do', 'not', 'organize', 'well', 'in', 'spherically', 'shaped', 'form', 'in', 'the', 'embedding', 'space', '.']","['O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'NNP', 'RB', 'VBP', 'RB', 'VB', 'RB', 'IN', 'RB', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",17
entity_linking,3,151,Nearest Neighbors,"['Nearest', 'Neighbors']","['B-n', 'I-n']","['JJS', 'NNS']",2
entity_linking,3,152,K- Optimization :,"['K-', 'Optimization', ':']","['B-n', 'I-n', 'O']","['JJ', 'NN', ':']",3
entity_linking,3,155,"For SensEval - 2 and SensEval - 3 , we achieve a new state - of - the - art result .","['For', 'SensEval', '-', '2', 'and', 'SensEval', '-', '3', ',', 'we', 'achieve', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'result', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ':', 'CD', 'CC', 'NNP', ':', 'CD', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '.']",22
entity_linking,3,157,"For the S7 - T * , we also achieve minor improvements with a higher k , but still drastically lack behind the state of the art .","['For', 'the', 'S7', '-', 'T', '*', ',', 'we', 'also', 'achieve', 'minor', 'improvements', 'with', 'a', 'higher', 'k', ',', 'but', 'still', 'drastically', 'lack', 'behind', 'the', 'state', 'of', 'the', 'art', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ':', 'NNP', 'NNP', ',', 'PRP', 'RB', 'VBP', 'JJ', 'NNS', 'IN', 'DT', 'JJR', 'NN', ',', 'CC', 'RB', 'RB', 'VBP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",28
entity_linking,3,158,Senses in CWE space :,"['Senses', 'in', 'CWE', 'space', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'IN', 'NNP', 'NN', ':']",5
entity_linking,3,159,We investigate how well different CWE models encode information such as distinguishable senses in their vector space .,"['We', 'investigate', 'how', 'well', 'different', 'CWE', 'models', 'encode', 'information', 'such', 'as', 'distinguishable', 'senses', 'in', 'their', 'vector', 'space', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'WRB', 'RB', 'JJ', 'NNP', 'NNS', 'VBP', 'NN', 'JJ', 'IN', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'NN', '.']",18
entity_linking,3,162,The Flair embeddings hardly allow to distinguish any clusters as most senses are scattered across the entire plot .,"['The', 'Flair', 'embeddings', 'hardly', 'allow', 'to', 'distinguish', 'any', 'clusters', 'as', 'most', 'senses', 'are', 'scattered', 'across', 'the', 'entire', 'plot', '.']","['O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NNS', 'RB', 'VBP', 'TO', 'VB', 'DT', 'NNS', 'IN', 'JJS', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', '.']",19
entity_linking,3,163,"In the ELMo embedding space , the major senses are slightly more separated in different regions of the point cloud .","['In', 'the', 'ELMo', 'embedding', 'space', ',', 'the', 'major', 'senses', 'are', 'slightly', 'more', 'separated', 'in', 'different', 'regions', 'of', 'the', 'point', 'cloud', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'VBG', 'NN', ',', 'DT', 'JJ', 'NNS', 'VBP', 'RB', 'RBR', 'JJ', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",21
entity_linking,15,2,Mixing Context Granularities for Improved Entity Linking on Question Answering Data across Entity Categories,"['Mixing', 'Context', 'Granularities', 'for', 'Improved', 'Entity', 'Linking', 'on', 'Question', 'Answering', 'Data', 'across', 'Entity', 'Categories']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",14
entity_linking,15,11,"The first stage for every QA approach is entity linking ( EL ) , that is the identification of entity mentions in the question and linking them to entities in KB .","['The', 'first', 'stage', 'for', 'every', 'QA', 'approach', 'is', 'entity', 'linking', '(', 'EL', ')', ',', 'that', 'is', 'the', 'identification', 'of', 'entity', 'mentions', 'in', 'the', 'question', 'and', 'linking', 'them', 'to', 'entities', 'in', 'KB', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'VBZ', 'JJ', 'VBG', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'NN', 'NNS', 'IN', 'DT', 'NN', 'CC', 'VBG', 'PRP', 'TO', 'NNS', 'IN', 'NNP', '.']",32
entity_linking,15,14,The state - of - the - art QA systems usually rely on off - the - shelf EL systems to extract entities from the question .,"['The', 'state', '-', 'of', '-', 'the', '-', 'art', 'QA', 'systems', 'usually', 'rely', 'on', 'off', '-', 'the', '-', 'shelf', 'EL', 'systems', 'to', 'extract', 'entities', 'from', 'the', 'question', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'NNS', 'RB', 'VBP', 'IN', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'NNS', 'TO', 'VB', 'NNS', 'IN', 'DT', 'NN', '.']",27
entity_linking,15,27,"In this paper , we present an approach that tackles the challenges listed above : we perform entity mention detection and entity disambiguation jointly in a single neural model that makes the whole process end - to - end differentiable .","['In', 'this', 'paper', ',', 'we', 'present', 'an', 'approach', 'that', 'tackles', 'the', 'challenges', 'listed', 'above', ':', 'we', 'perform', 'entity', 'mention', 'detection', 'and', 'entity', 'disambiguation', 'jointly', 'in', 'a', 'single', 'neural', 'model', 'that', 'makes', 'the', 'whole', 'process', 'end', '-', 'to', '-', 'end', 'differentiable', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NNS', 'VBN', 'IN', ':', 'PRP', 'VBP', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', 'RB', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', ':', 'TO', ':', 'NN', 'NN', '.']",41
entity_linking,15,29,"To overcome the noise in the data , we automatically learn features over a set of contexts of different granularity levels .","['To', 'overcome', 'the', 'noise', 'in', 'the', 'data', ',', 'we', 'automatically', 'learn', 'features', 'over', 'a', 'set', 'of', 'contexts', 'of', 'different', 'granularity', 'levels', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NNS', ',', 'PRP', 'RB', 'VBP', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",22
entity_linking,15,30,Each level of granularity is handled by a separate component of the model .,"['Each', 'level', 'of', 'granularity', 'is', 'handled', 'by', 'a', 'separate', 'component', 'of', 'the', 'model', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",14
entity_linking,15,31,"A token - level component extracts higher - level features from the whole question context , whereas a character - level component builds lower - level features for the candidate n-gram .","['A', 'token', '-', 'level', 'component', 'extracts', 'higher', '-', 'level', 'features', 'from', 'the', 'whole', 'question', 'context', ',', 'whereas', 'a', 'character', '-', 'level', 'component', 'builds', 'lower', '-', 'level', 'features', 'for', 'the', 'candidate', 'n-gram', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', ':', 'NN', 'NN', 'VBZ', 'JJR', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'NNS', 'JJR', ':', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",32
entity_linking,15,32,"Simultaneously , we extract features from the knowledge base context of the candidate entity : character - level features are extracted for the entity label and higher - level features are produced based on the entities surrounding the candidate entity in the knowledge graph .","['Simultaneously', ',', 'we', 'extract', 'features', 'from', 'the', 'knowledge', 'base', 'context', 'of', 'the', 'candidate', 'entity', ':', 'character', '-', 'level', 'features', 'are', 'extracted', 'for', 'the', 'entity', 'label', 'and', 'higher', '-', 'level', 'features', 'are', 'produced', 'based', 'on', 'the', 'entities', 'surrounding', 'the', 'candidate', 'entity', 'in', 'the', 'knowledge', 'graph', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', ':', 'NN', ':', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'NN', 'CC', 'JJR', ':', 'NN', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'DT', 'NNS', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",45
entity_linking,15,33,This information is aggregated and used to predict whether the n-gram is an entity mention and to what entity it should be linked .,"['This', 'information', 'is', 'aggregated', 'and', 'used', 'to', 'predict', 'whether', 'the', 'n-gram', 'is', 'an', 'entity', 'mention', 'and', 'to', 'what', 'entity', 'it', 'should', 'be', 'linked', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'CC', 'VBN', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'TO', 'WP', 'NN', 'PRP', 'MD', 'VB', 'VBN', '.']",24
entity_linking,15,42,The complete code as well as the scripts that produce the evaluation data can be found here : https://github.com/UKPLab/ starsem2018-entity-linking.,"['The', 'complete', 'code', 'as', 'well', 'as', 'the', 'scripts', 'that', 'produce', 'the', 'evaluation', 'data', 'can', 'be', 'found', 'here', ':', 'https://github.com/UKPLab/', 'starsem2018-entity-linking.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['DT', 'JJ', 'NN', 'RB', 'RB', 'IN', 'DT', 'NNS', 'WDT', 'VBP', 'DT', 'NN', 'NNS', 'MD', 'VB', 'VBN', 'RB', ':', 'NN', 'NN']",20
entity_linking,15,212,Existing systems,"['Existing', 'systems']","['B-n', 'I-n']","['VBG', 'NNS']",2
entity_linking,15,213,"In our experiments , we compare to DBPedia Spotlight that was used in several QA systems and represents a strong baseline for entity linking 4 .","['In', 'our', 'experiments', ',', 'we', 'compare', 'to', 'DBPedia', 'Spotlight', 'that', 'was', 'used', 'in', 'several', 'QA', 'systems', 'and', 'represents', 'a', 'strong', 'baseline', 'for', 'entity', 'linking', '4', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O']","['IN', 'PRP$', 'NNS', ',', 'PRP', 'VBP', 'TO', 'NNP', 'NNP', 'WDT', 'VBD', 'VBN', 'IN', 'JJ', 'NNP', 'NNS', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NN', 'VBG', 'CD', '.']",26
entity_linking,15,214,"In addition , we are able to compare to the state - of - the - art S - MART system , since their output on the WebQSP datasets was publicly released 5 .","['In', 'addition', ',', 'we', 'are', 'able', 'to', 'compare', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'S', '-', 'MART', 'system', ',', 'since', 'their', 'output', 'on', 'the', 'WebQSP', 'datasets', 'was', 'publicly', 'released', '5', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'TO', 'VB', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', ':', 'NNP', 'NN', ',', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NNP', 'NNS', 'VBD', 'RB', 'VBN', 'CD', '.']",34
entity_linking,15,216,We also include a heuristics baseline that ranks candidate entities according to their frequency in Wikipedia .,"['We', 'also', 'include', 'a', 'heuristics', 'baseline', 'that', 'ranks', 'candidate', 'entities', 'according', 'to', 'their', 'frequency', 'in', 'Wikipedia', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NNS', 'NN', 'IN', 'VBZ', 'NN', 'NNS', 'VBG', 'TO', 'PRP$', 'NN', 'IN', 'NNP', '.']",17
entity_linking,15,218,Simplified VCG,"['Simplified', 'VCG']","['B-n', 'I-n']","['VBN', 'NNP']",2
entity_linking,15,220,"In particular , we employ features that cover ( 1 ) frequency of the entity in Wikipedia , ( 2 ) edit distance between the label of the entity and the token n-gram , ( 3 ) number of entities and relations immediately connected to the entity in the KB , ( 4 ) word overlap between the input question and the labels of the connected entities and relations , ( 5 ) length of the n-gram .","['In', 'particular', ',', 'we', 'employ', 'features', 'that', 'cover', '(', '1', ')', 'frequency', 'of', 'the', 'entity', 'in', 'Wikipedia', ',', '(', '2', ')', 'edit', 'distance', 'between', 'the', 'label', 'of', 'the', 'entity', 'and', 'the', 'token', 'n-gram', ',', '(', '3', ')', 'number', 'of', 'entities', 'and', 'relations', 'immediately', 'connected', 'to', 'the', 'entity', 'in', 'the', 'KB', ',', '(', '4', ')', 'word', 'overlap', 'between', 'the', 'input', 'question', 'and', 'the', 'labels', 'of', 'the', 'connected', 'entities', 'and', 'relations', ',', '(', '5', ')', 'length', 'of', 'the', 'n-gram', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'JJ', ',', 'PRP', 'VBP', 'NNS', 'WDT', 'VBP', '(', 'CD', ')', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNP', ',', '(', 'CD', ')', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'DT', 'JJ', 'JJ', ',', '(', 'CD', ')', 'NN', 'IN', 'NNS', 'CC', 'NNS', 'RB', 'VBD', 'TO', 'DT', 'NN', 'IN', 'DT', 'NNP', ',', '(', 'CD', ')', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'CC', 'NNS', ',', '(', 'CD', ')', 'NN', 'IN', 'DT', 'JJ', '.']",78
entity_linking,15,238,The VCG model shows the overall F- score result that is better than the DBPedia Spotlight baseline by a wide margin .,"['The', 'VCG', 'model', 'shows', 'the', 'overall', 'F-', 'score', 'result', 'that', 'is', 'better', 'than', 'the', 'DBPedia', 'Spotlight', 'baseline', 'by', 'a', 'wide', 'margin', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'NN', 'WDT', 'VBZ', 'JJR', 'IN', 'DT', 'NNP', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",22
entity_linking,15,239,It is notable that again our model achieves higher precision values as compared to other approaches and manages to keep a satisfactory level of recall .,"['It', 'is', 'notable', 'that', 'again', 'our', 'model', 'achieves', 'higher', 'precision', 'values', 'as', 'compared', 'to', 'other', 'approaches', 'and', 'manages', 'to', 'keep', 'a', 'satisfactory', 'level', 'of', 'recall', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBZ', 'JJ', 'IN', 'RB', 'PRP$', 'NN', 'VBZ', 'JJR', 'NN', 'NNS', 'IN', 'VBN', 'TO', 'JJ', 'NNS', 'CC', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",26
entity_linking,12,2,Incorporating Glosses into Neural Word Sense Disambiguation,"['Incorporating', 'Glosses', 'into', 'Neural', 'Word', 'Sense', 'Disambiguation']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",7
entity_linking,12,4,Word Sense Disambiguation ( WSD ) aims to identify the correct meaning of polysemous words in the particular context .,"['Word', 'Sense', 'Disambiguation', '(', 'WSD', ')', 'aims', 'to', 'identify', 'the', 'correct', 'meaning', 'of', 'polysemous', 'words', 'in', 'the', 'particular', 'context', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",20
entity_linking,12,5,Lexical resources like WordNet which are proved to be of great help for WSD in the knowledge - based methods .,"['Lexical', 'resources', 'like', 'WordNet', 'which', 'are', 'proved', 'to', 'be', 'of', 'great', 'help', 'for', 'WSD', 'in', 'the', 'knowledge', '-', 'based', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'IN', 'NNP', 'WDT', 'VBP', 'VBN', 'TO', 'VB', 'IN', 'JJ', 'NN', 'IN', 'NNP', 'IN', 'DT', 'NN', ':', 'VBN', 'NNS', '.']",21
entity_linking,12,30,"In this paper , we propose a novel model GAS : a gloss - augmented WSD neural network which is a variant of the memory network .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'model', 'GAS', ':', 'a', 'gloss', '-', 'augmented', 'WSD', 'neural', 'network', 'which', 'is', 'a', 'variant', 'of', 'the', 'memory', 'network', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NNP', ':', 'DT', 'NN', ':', 'VBN', 'NNP', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",27
entity_linking,12,31,GAS jointly encodes the context and glosses of the target word and models the semantic relationship between the context and glosses in the memory module .,"['GAS', 'jointly', 'encodes', 'the', 'context', 'and', 'glosses', 'of', 'the', 'target', 'word', 'and', 'models', 'the', 'semantic', 'relationship', 'between', 'the', 'context', 'and', 'glosses', 'in', 'the', 'memory', 'module', '.']","['B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'RB', 'VBZ', 'DT', 'NN', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'NNS', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",26
entity_linking,12,32,"In order to measure the inner relationship between glosses and context more accurately , we employ multiple passes operation within the memory as the re-reading process and adopt two memory updating mechanisms .","['In', 'order', 'to', 'measure', 'the', 'inner', 'relationship', 'between', 'glosses', 'and', 'context', 'more', 'accurately', ',', 'we', 'employ', 'multiple', 'passes', 'operation', 'within', 'the', 'memory', 'as', 'the', 're-reading', 'process', 'and', 'adopt', 'two', 'memory', 'updating', 'mechanisms', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'NNS', 'CC', 'VB', 'RBR', 'RB', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'VB', 'CD', 'NN', 'VBG', 'NNS', '.']",33
entity_linking,12,65,Incorporating Glosses into Neural Word Sense Disambiguation,"['Incorporating', 'Glosses', 'into', 'Neural', 'Word', 'Sense', 'Disambiguation']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",7
entity_linking,12,195,"We use pre-trained word embeddings with 300 dimensions 9 , and keep them fixed during the training process .","['We', 'use', 'pre-trained', 'word', 'embeddings', 'with', '300', 'dimensions', '9', ',', 'and', 'keep', 'them', 'fixed', 'during', 'the', 'training', 'process', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'NNS', 'IN', 'CD', 'NNS', 'CD', ',', 'CC', 'VB', 'PRP', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",19
entity_linking,12,196,"We employ 256 hidden units in both the gloss module and the context module , which means n = 256 .","['We', 'employ', '256', 'hidden', 'units', 'in', 'both', 'the', 'gloss', 'module', 'and', 'the', 'context', 'module', ',', 'which', 'means', 'n', '=', '256', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', 'IN', 'DT', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', ',', 'WDT', 'VBZ', 'JJ', '$', 'CD', '.']",21
entity_linking,12,197,"Orthogonal initialization is used for weights in LSTM and random uniform initialization with range [ - 0.1 , 0.1 ] is used for others .","['Orthogonal', 'initialization', 'is', 'used', 'for', 'weights', 'in', 'LSTM', 'and', 'random', 'uniform', 'initialization', 'with', 'range', '[', '-', '0.1', ',', '0.1', ']', 'is', 'used', 'for', 'others', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O']","['JJ', 'NN', 'VBZ', 'VBN', 'IN', 'NNS', 'IN', 'NNP', 'CC', 'VB', 'JJ', 'NN', 'IN', 'NN', 'NNP', ':', 'CD', ',', 'CD', 'NN', 'VBZ', 'VBN', 'IN', 'NNS', '.']",25
entity_linking,12,198,We assign gloss expansion depth K the value of 4 .,"['We', 'assign', 'gloss', 'expansion', 'depth', 'K', 'the', 'value', 'of', '4', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'NN', 'NNP', 'DT', 'NN', 'IN', 'CD', '.']",11
entity_linking,12,199,"We also experiment with the number of passes | T M | from 1 to 5 in our framework , finding | T M | = 3 performs best .","['We', 'also', 'experiment', 'with', 'the', 'number', 'of', 'passes', '|', 'T', 'M', '|', 'from', '1', 'to', '5', 'in', 'our', 'framework', ',', 'finding', '|', 'T', 'M', '|', '=', '3', 'performs', 'best', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'IN', 'NNS', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'CD', 'TO', 'CD', 'IN', 'PRP$', 'NN', ',', 'VBG', 'JJ', 'NNP', 'NNP', 'NNP', 'VBD', 'CD', 'NNS', 'RB', '.']",30
entity_linking,12,200,We use Adam optimizer in the training process with 0.001 initial learning rate .,"['We', 'use', 'Adam', 'optimizer', 'in', 'the', 'training', 'process', 'with', '0.001', 'initial', 'learning', 'rate', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'JJ', 'VBG', 'NN', '.']",14
entity_linking,12,201,"In order to avoid overfitting , we use dropout regularization and set drop rate to 0.5 .","['In', 'order', 'to', 'avoid', 'overfitting', ',', 'we', 'use', 'dropout', 'regularization', 'and', 'set', 'drop', 'rate', 'to', '0.5', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', 'TO', 'VB', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'CC', 'VBN', 'NN', 'NN', 'TO', 'CD', '.']",17
entity_linking,12,202,Training runs for up to 100 epochs with early stopping if the validation loss does n't improve within the last 10 epochs .,"['Training', 'runs', 'for', 'up', 'to', '100', 'epochs', 'with', 'early', 'stopping', 'if', 'the', 'validation', 'loss', 'does', ""n't"", 'improve', 'within', 'the', 'last', '10', 'epochs', '.']","['B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'NNS', 'IN', 'IN', 'TO', 'CD', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'VB', 'IN', 'DT', 'JJ', 'CD', 'NN', '.']",23
entity_linking,12,210,Knowledge - based Systems,"['Knowledge', '-', 'based', 'Systems']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'VBN', 'NNS']",4
entity_linking,12,212,Babelfy : exploits the semantic network structure from BabelNet and builds a unified graph - based architecture for WSD and Entity Linking .,"['Babelfy', ':', 'exploits', 'the', 'semantic', 'network', 'structure', 'from', 'BabelNet', 'and', 'builds', 'a', 'unified', 'graph', '-', 'based', 'architecture', 'for', 'WSD', 'and', 'Entity', 'Linking', '.']","['B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', ':', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NNP', 'CC', 'VBZ', 'DT', 'JJ', 'NN', ':', 'VBN', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'NNP', '.']",23
entity_linking,12,213,Supervised Systems,"['Supervised', 'Systems']","['B-n', 'I-n']","['VBN', 'NNS']",2
entity_linking,12,215,"IMS : Zhi and Ng ( 2010 ) selects a linear Support Vector Machine ( SVM ) as its classifier and makes use of a set of features surrounding the target word within a limited window , such as POS tags , local words and local collocations .","['IMS', ':', 'Zhi', 'and', 'Ng', '(', '2010', ')', 'selects', 'a', 'linear', 'Support', 'Vector', 'Machine', '(', 'SVM', ')', 'as', 'its', 'classifier', 'and', 'makes', 'use', 'of', 'a', 'set', 'of', 'features', 'surrounding', 'the', 'target', 'word', 'within', 'a', 'limited', 'window', ',', 'such', 'as', 'POS', 'tags', ',', 'local', 'words', 'and', 'local', 'collocations', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['NN', ':', 'NNP', 'CC', 'NNP', '(', 'CD', ')', 'VBZ', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'IN', 'PRP$', 'NN', 'CC', 'VBZ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'JJ', 'IN', 'NNP', 'NNS', ',', 'JJ', 'NNS', 'CC', 'JJ', 'NNS', '.']",48
entity_linking,12,216,IMS +emb : selects IMS as the underlying framework and makes use of word embeddings as features which makes it hard to beat inmost of WSD datasets .,"['IMS', '+emb', ':', 'selects', 'IMS', 'as', 'the', 'underlying', 'framework', 'and', 'makes', 'use', 'of', 'word', 'embeddings', 'as', 'features', 'which', 'makes', 'it', 'hard', 'to', 'beat', 'inmost', 'of', 'WSD', 'datasets', '.']","['B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NNP', 'NN', ':', 'NNS', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'CC', 'VBZ', 'NN', 'IN', 'NN', 'NNS', 'IN', 'NNS', 'WDT', 'VBZ', 'PRP', 'JJ', 'TO', 'VB', 'NN', 'IN', 'NNP', 'NNS', '.']",28
entity_linking,12,217,Neural - based Systems,"['Neural', '-', 'based', 'Systems']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'VBN', 'NNS']",4
entity_linking,12,219,Bi- LSTM : leverages a bidirectional LSTM network which shares model parameters among all words .,"['Bi-', 'LSTM', ':', 'leverages', 'a', 'bidirectional', 'LSTM', 'network', 'which', 'shares', 'model', 'parameters', 'among', 'all', 'words', '.']","['B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['JJ', 'NNP', ':', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'WDT', 'NNS', 'FW', 'NNS', 'IN', 'DT', 'NNS', '.']",16
entity_linking,12,221,"Bi-LSTM +att.+ LEX and it s variant Bi- LSTM +att.+ LEX+P OS : transfers WSD into a sequence learning task and propose a multi - task learning framework for WSD , POS tagging and coarse - grained semantic labels ( LEX ) .","['Bi-LSTM', '+att.+', 'LEX', 'and', 'it', 's', 'variant', 'Bi-', 'LSTM', '+att.+', 'LEX+P', 'OS', ':', 'transfers', 'WSD', 'into', 'a', 'sequence', 'learning', 'task', 'and', 'propose', 'a', 'multi', '-', 'task', 'learning', 'framework', 'for', 'WSD', ',', 'POS', 'tagging', 'and', 'coarse', '-', 'grained', 'semantic', 'labels', '(', 'LEX', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNP', 'CC', 'PRP', 'VBD', 'JJ', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NNS', 'VBP', 'IN', 'DT', 'NN', 'VBG', 'NN', 'CC', 'VB', 'DT', 'NN', ':', 'NN', 'NN', 'NN', 'IN', 'NNP', ',', 'NNP', 'NN', 'CC', 'JJ', ':', 'VBN', 'JJ', 'NNS', '(', 'NNP', ')', '.']",43
entity_linking,12,225,English all - words results,"['English', 'all', '-', 'words', 'results']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VB', 'DT', ':', 'NNS', 'NNS']",5
entity_linking,12,230,GAS and GAS ext achieves the state - of - theart performance on the concatenation of all test datasets .,"['GAS', 'and', 'GAS', 'ext', 'achieves', 'the', 'state', '-', 'of', '-', 'theart', 'performance', 'on', 'the', 'concatenation', 'of', 'all', 'test', 'datasets', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'CC', 'NNP', 'VBP', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",20
entity_linking,12,231,"Although there is no one system always performs best on all the test sets 10 , we can find that GAS ext with concatenation memory updating strategy achieves the best results 70.6 on the concatenation of the four test datasets .","['Although', 'there', 'is', 'no', 'one', 'system', 'always', 'performs', 'best', 'on', 'all', 'the', 'test', 'sets', '10', ',', 'we', 'can', 'find', 'that', 'GAS', 'ext', 'with', 'concatenation', 'memory', 'updating', 'strategy', 'achieves', 'the', 'best', 'results', '70.6', 'on', 'the', 'concatenation', 'of', 'the', 'four', 'test', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'EX', 'VBZ', 'DT', 'NN', 'NN', 'RB', 'VBZ', 'JJS', 'IN', 'PDT', 'DT', 'NN', 'VBZ', 'CD', ',', 'PRP', 'MD', 'VB', 'DT', 'NNP', 'NN', 'IN', 'NN', 'NN', 'VBG', 'NN', 'VBZ', 'DT', 'JJS', 'NNS', 'CD', 'IN', 'DT', 'NN', 'IN', 'DT', 'CD', 'NN', 'NNS', '.']",41
entity_linking,12,234,It shows that appropriate number of passes can boost the performance as well as avoid over - fitting of the model .,"['It', 'shows', 'that', 'appropriate', 'number', 'of', 'passes', 'can', 'boost', 'the', 'performance', 'as', 'well', 'as', 'avoid', 'over', '-', 'fitting', 'of', 'the', 'model', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBZ', 'IN', 'JJ', 'NN', 'IN', 'NNS', 'MD', 'VB', 'DT', 'NN', 'RB', 'RB', 'IN', 'NN', 'IN', ':', 'NN', 'IN', 'DT', 'NN', '.']",22
entity_linking,12,242,Multiple Passes Analysis,"['Multiple', 'Passes', 'Analysis']","['B-n', 'I-n', 'I-n']","['JJ', 'NNS', 'NN']",3
entity_linking,12,252,"It shows that multiple passes operation performs better than one pass , though the improvement is not significant .","['It', 'shows', 'that', 'multiple', 'passes', 'operation', 'performs', 'better', 'than', 'one', 'pass', ',', 'though', 'the', 'improvement', 'is', 'not', 'significant', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'IN', 'JJ', 'NNS', 'NN', 'NNS', 'JJR', 'IN', 'CD', 'NN', ',', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'JJ', '.']",19
entity_linking,12,256,"In Table 3 , with the increasing number of passes , the F1 - score increases .","['In', 'Table', '3', ',', 'with', 'the', 'increasing', 'number', 'of', 'passes', ',', 'the', 'F1', '-', 'score', 'increases', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O']","['IN', 'NNP', 'CD', ',', 'IN', 'DT', 'VBG', 'NN', 'IN', 'NNS', ',', 'DT', 'NNP', ':', 'NN', 'NNS', '.']",17
entity_linking,12,257,"However , when the number of passes is larger than 3 , the F1- score stops increasing or even decreases due to over-fitting .","['However', ',', 'when', 'the', 'number', 'of', 'passes', 'is', 'larger', 'than', '3', ',', 'the', 'F1-', 'score', 'stops', 'increasing', 'or', 'even', 'decreases', 'due', 'to', 'over-fitting', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['RB', ',', 'WRB', 'DT', 'NN', 'IN', 'NNS', 'VBZ', 'JJR', 'IN', 'CD', ',', 'DT', 'NNP', 'NN', 'NNS', 'VBG', 'CC', 'RB', 'NNS', 'JJ', 'TO', 'JJ', '.']",24
entity_linking,0,2,Deep Joint Entity Disambiguation with Local Neural Attention,"['Deep', 'Joint', 'Entity', 'Disambiguation', 'with', 'Local', 'Neural', 'Attention']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",8
entity_linking,0,9,Entity disambiguation ( ED ) is an important stage in text understanding which automatically resolves references to entities in a given knowledge base ( KB ) .,"['Entity', 'disambiguation', '(', 'ED', ')', 'is', 'an', 'important', 'stage', 'in', 'text', 'understanding', 'which', 'automatically', 'resolves', 'references', 'to', 'entities', 'in', 'a', 'given', 'knowledge', 'base', '(', 'KB', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'NN', '(', 'NNP', ')', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NN', 'WDT', 'RB', 'VBZ', 'NNS', 'TO', 'NNS', 'IN', 'DT', 'VBN', 'NN', 'NN', '(', 'NNP', ')', '.']",27
entity_linking,0,12,"ED research has largely focused on two types of contextual information for disambiguation : local information based on words that occur in a context window around an entity mention , and , global information , exploiting document - level coherence of the referenced entities .","['ED', 'research', 'has', 'largely', 'focused', 'on', 'two', 'types', 'of', 'contextual', 'information', 'for', 'disambiguation', ':', 'local', 'information', 'based', 'on', 'words', 'that', 'occur', 'in', 'a', 'context', 'window', 'around', 'an', 'entity', 'mention', ',', 'and', ',', 'global', 'information', ',', 'exploiting', 'document', '-', 'level', 'coherence', 'of', 'the', 'referenced', 'entities', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'CD', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'NN', ':', 'JJ', 'NN', 'VBN', 'IN', 'NNS', 'WDT', 'VBP', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'CC', ',', 'JJ', 'NN', ',', 'VBG', 'NN', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NNS', '.']",45
entity_linking,0,18,The explicit goal of our work is to use deep learning in order to learn basic features and their combinations from scratch .,"['The', 'explicit', 'goal', 'of', 'our', 'work', 'is', 'to', 'use', 'deep', 'learning', 'in', 'order', 'to', 'learn', 'basic', 'features', 'and', 'their', 'combinations', 'from', 'scratch', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'TO', 'VB', 'JJ', 'NN', 'IN', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'CC', 'PRP$', 'NNS', 'IN', 'NN', '.']",23
entity_linking,0,179,All models are implemented in the Torch framework .,"['All', 'models', 'are', 'implemented', 'in', 'the', 'Torch', 'framework', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",9
entity_linking,0,181,"For entity embeddings only , we use Wikipedia ( Feb 2014 ) corpus for training .","['For', 'entity', 'embeddings', 'only', ',', 'we', 'use', 'Wikipedia', '(', 'Feb', '2014', ')', 'corpus', 'for', 'training', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', 'NNS', 'RB', ',', 'PRP', 'VBP', 'NNP', '(', 'NNP', 'CD', ')', 'NN', 'IN', 'NN', '.']",16
entity_linking,0,182,Entity vectors are initialized randomly from a 0 mean normal distribution with standard deviation 1 .,"['Entity', 'vectors', 'are', 'initialized', 'randomly', 'from', 'a', '0', 'mean', 'normal', 'distribution', 'with', 'standard', 'deviation', '1', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'NNS', 'VBP', 'VBN', 'RB', 'IN', 'DT', 'CD', 'NN', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'CD', '.']",16
entity_linking,0,183,We first train each entity vector on the entity 's Wikipedia canonical description page ( title words included ) for 400 iterations .,"['We', 'first', 'train', 'each', 'entity', 'vector', 'on', 'the', 'entity', ""'s"", 'Wikipedia', 'canonical', 'description', 'page', '(', 'title', 'words', 'included', ')', 'for', '400', 'iterations', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'POS', 'NNP', 'JJ', 'NN', 'NN', '(', 'JJ', 'NNS', 'VBN', ')', 'IN', 'CD', 'NNS', '.']",23
entity_linking,0,186,We use Adagrad with a learning rate of 0.3 .,"['We', 'use', 'Adagrad', 'with', 'a', 'learning', 'rate', 'of', '0.3', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '.']",10
entity_linking,0,187,"We choose embedding size d = 300 , pre-trained ( fixed ) Word2 Vec word vectors 8 , ? = 0.6 , ? = 0.1 and window size of 20 for the hyperlinks .","['We', 'choose', 'embedding', 'size', 'd', '=', '300', ',', 'pre-trained', '(', 'fixed', ')', 'Word2', 'Vec', 'word', 'vectors', '8', ',', '?', '=', '0.6', ',', '?', '=', '0.1', 'and', 'window', 'size', 'of', '20', 'for', 'the', 'hyperlinks', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'VBG', 'NN', 'NN', 'VBD', 'CD', ',', 'JJ', '(', 'VBN', ')', 'NNP', 'NNP', 'NN', 'NNS', 'CD', ',', '.', 'UH', 'CD', ',', '.', 'CC', 'CD', 'CC', 'JJ', 'NN', 'IN', 'CD', 'IN', 'DT', 'NNS', '.']",34
entity_linking,0,190,Training of those takes 20 hours on a single TitanX GPU with 12 GB of memory .,"['Training', 'of', 'those', 'takes', '20', 'hours', 'on', 'a', 'single', 'TitanX', 'GPU', 'with', '12', 'GB', 'of', 'memory', '.']","['B-n', 'B-p', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O']","['NN', 'IN', 'DT', 'VBZ', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'IN', 'CD', 'NNP', 'IN', 'NN', '.']",17
entity_linking,0,199,"Our local and global ED models are trained on AIDA - train ( multiple epochs ) , validated on AIDA - A and tested on AIDA - B and other datasets mentioned in Section 7.1 .","['Our', 'local', 'and', 'global', 'ED', 'models', 'are', 'trained', 'on', 'AIDA', '-', 'train', '(', 'multiple', 'epochs', ')', ',', 'validated', 'on', 'AIDA', '-', 'A', 'and', 'tested', 'on', 'AIDA', '-', 'B', 'and', 'other', 'datasets', 'mentioned', 'in', 'Section', '7.1', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'CC', 'JJ', 'NNP', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', ':', 'NN', '(', 'JJ', 'NN', ')', ',', 'VBN', 'IN', 'NNP', ':', 'DT', 'CC', 'VBN', 'IN', 'NNP', ':', 'NN', 'CC', 'JJ', 'NNS', 'VBN', 'IN', 'NN', 'CD', '.']",36
entity_linking,0,200,"We use Adam with learning rate of 1e - 4 until validation accuracy exceeds 90 % , afterwards setting it to 1e - 5 .","['We', 'use', 'Adam', 'with', 'learning', 'rate', 'of', '1e', '-', '4', 'until', 'validation', 'accuracy', 'exceeds', '90', '%', ',', 'afterwards', 'setting', 'it', 'to', '1e', '-', '5', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'IN', 'VBG', 'NN', 'IN', 'CD', ':', 'CD', 'IN', 'NN', 'NN', 'VBZ', 'CD', 'NN', ',', 'NNS', 'VBG', 'PRP', 'TO', 'CD', ':', 'CD', '.']",25
entity_linking,0,206,"To regularize , we use early stopping , i.e. we stop learning if the validation accuracy does not increase after 500 epochs .","['To', 'regularize', ',', 'we', 'use', 'early', 'stopping', ',', 'i.e.', 'we', 'stop', 'learning', 'if', 'the', 'validation', 'accuracy', 'does', 'not', 'increase', 'after', '500', 'epochs', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', ',', 'PRP', 'VBP', 'JJ', 'NN', ',', 'FW', 'PRP', 'VBP', 'VBG', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'VB', 'IN', 'CD', 'NN', '.']",23
entity_linking,0,207,"Training on a single GPU takes , on average , 2 ms per mention , or 16 hours for 1250 epochs over AIDA - train .","['Training', 'on', 'a', 'single', 'GPU', 'takes', ',', 'on', 'average', ',', '2', 'ms', 'per', 'mention', ',', 'or', '16', 'hours', 'for', '1250', 'epochs', 'over', 'AIDA', '-', 'train', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'IN', 'DT', 'JJ', 'NNP', 'VBZ', ',', 'IN', 'NN', ',', 'CD', 'NN', 'IN', 'NN', ',', 'CC', 'CD', 'NNS', 'IN', 'CD', 'NN', 'IN', 'NNP', ':', 'NN', '.']",26
entity_linking,0,228,We obtain state of the art accuracy on AIDA which is the largest and hardest ( by the accuracy of thep ( e |m ) baseline ) manually created ED dataset .,"['We', 'obtain', 'state', 'of', 'the', 'art', 'accuracy', 'on', 'AIDA', 'which', 'is', 'the', 'largest', 'and', 'hardest', '(', 'by', 'the', 'accuracy', 'of', 'thep', '(', 'e', '|m', ')', 'baseline', ')', 'manually', 'created', 'ED', 'dataset', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VB', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NNP', 'WDT', 'VBZ', 'DT', 'JJS', 'CC', 'RBS', '(', 'IN', 'DT', 'NN', 'IN', 'NN', '(', 'JJ', 'NN', ')', 'NN', ')', 'RB', 'VBN', 'NNP', 'NN', '.']",32
entity_linking,0,232,"To gain further insight , we analyzed the accuracy on the AIDA - B dataset for situations where gold entities have low frequency or mention prior .","['To', 'gain', 'further', 'insight', ',', 'we', 'analyzed', 'the', 'accuracy', 'on', 'the', 'AIDA', '-', 'B', 'dataset', 'for', 'situations', 'where', 'gold', 'entities', 'have', 'low', 'frequency', 'or', 'mention', 'prior', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'JJ', 'NN', ',', 'PRP', 'VBD', 'DT', 'NN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'IN', 'NNS', 'WRB', 'NN', 'NNS', 'VBP', 'JJ', 'NN', 'CC', 'NN', 'RB', '.']",27
entity_linking,0,233,shows that our method performs well in these harder cases . :,"['shows', 'that', 'our', 'method', 'performs', 'well', 'in', 'these', 'harder', 'cases', '.', ':']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['NNS', 'WDT', 'PRP$', 'NN', 'NNS', 'RB', 'IN', 'DT', 'JJR', 'NNS', '.', ':']",12
entity_linking,0,257,Our code and data are publicly available : http://github.com/dalab/deep-ed,"['Our', 'code', 'and', 'data', 'are', 'publicly', 'available', ':', 'http://github.com/dalab/deep-ed']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['PRP$', 'NN', 'CC', 'NNS', 'VBP', 'RB', 'JJ', ':', 'NN']",9
face_detection,16,2,"HyperFace : A Deep Multi-task Learning Framework for Face Detection , Landmark Localization , Pose Estimation , and Gender Recognition","['HyperFace', ':', 'A', 'Deep', 'Multi-task', 'Learning', 'Framework', 'for', 'Face', 'Detection', ',', 'Landmark', 'Localization', ',', 'Pose', 'Estimation', ',', 'and', 'Gender', 'Recognition']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n']","['NN', ':', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', ',', 'NNP', 'NNP', ',', 'NNP', 'NNP', ',', 'CC', 'NNP', 'NNP']",20
face_detection,16,15,"In this paper , we present a novel framework based on CNNs for simultaneous face detection , facial landmarks localization , head pose estimation and gender recognition from a given image ( see ) .","['In', 'this', 'paper', ',', 'we', 'present', 'a', 'novel', 'framework', 'based', 'on', 'CNNs', 'for', 'simultaneous', 'face', 'detection', ',', 'facial', 'landmarks', 'localization', ',', 'head', 'pose', 'estimation', 'and', 'gender', 'recognition', 'from', 'a', 'given', 'image', '(', 'see', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'VBN', 'IN', 'NNP', 'IN', 'JJ', 'NN', 'NN', ',', 'JJ', 'NNS', 'NN', ',', 'NN', 'JJ', 'NN', 'CC', 'VB', 'NN', 'IN', 'DT', 'VBN', 'NN', '(', 'VB', ')', '.']",35
face_detection,16,16,We design a CNN architecture to learn common features for these tasks and exploit the synergy among them .,"['We', 'design', 'a', 'CNN', 'architecture', 'to', 'learn', 'common', 'features', 'for', 'these', 'tasks', 'and', 'exploit', 'the', 'synergy', 'among', 'them', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'NNS', 'CC', 'VB', 'DT', 'NN', 'IN', 'PRP', '.']",19
face_detection,16,22,We refer the set of intermediate layer features as hyperfeatures .,"['We', 'refer', 'the', 'set', 'of', 'intermediate', 'layer', 'features', 'as', 'hyperfeatures', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'NNS', '.']",11
face_detection,16,29,"Hence , we construct a separate fusion - CNN to fuse the hyperfeatures .","['Hence', ',', 'we', 'construct', 'a', 'separate', 'fusion', '-', 'CNN', 'to', 'fuse', 'the', 'hyperfeatures', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'NN', 'TO', 'VB', 'DT', 'NNS', '.']",14
face_detection,16,30,"In order to learn the tasks , we train them simultaneously using multiple loss functions .","['In', 'order', 'to', 'learn', 'the', 'tasks', ',', 'we', 'train', 'them', 'simultaneously', 'using', 'multiple', 'loss', 'functions', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'NNS', ',', 'PRP', 'VBP', 'PRP', 'RB', 'VBG', 'JJ', 'NN', 'NNS', '.']",16
face_detection,16,32,The deep CNN combined with the fusion - CNN can be learned together in an end -toend fashion .,"['The', 'deep', 'CNN', 'combined', 'with', 'the', 'fusion', '-', 'CNN', 'can', 'be', 'learned', 'together', 'in', 'an', 'end', '-toend', 'fashion', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNP', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'MD', 'VB', 'VBN', 'RB', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",19
face_detection,16,321,Face Detection,"['Face', 'Detection']","['B-n', 'I-n']","['NN', 'NN']",2
face_detection,16,333,"As can be seen from these figures , both HyperFace and HF - ResNet outperform all the reported academic and commercial detectors on the AFW and PASCAL datasets .","['As', 'can', 'be', 'seen', 'from', 'these', 'figures', ',', 'both', 'HyperFace', 'and', 'HF', '-', 'ResNet', 'outperform', 'all', 'the', 'reported', 'academic', 'and', 'commercial', 'detectors', 'on', 'the', 'AFW', 'and', 'PASCAL', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NNS', ',', 'DT', 'NNP', 'CC', 'NNP', ':', 'JJ', 'NN', 'PDT', 'DT', 'VBN', 'JJ', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",29
face_detection,16,334,"HyperFace achieves a high mean average precision ( m AP ) of 97.9 % and 92.46 % , for AFW and PASCAL datasets respectively .","['HyperFace', 'achieves', 'a', 'high', 'mean', 'average', 'precision', '(', 'm', 'AP', ')', 'of', '97.9', '%', 'and', '92.46', '%', ',', 'for', 'AFW', 'and', 'PASCAL', 'datasets', 'respectively', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['NNP', 'VBZ', 'DT', 'JJ', 'JJ', 'JJ', 'NN', '(', 'JJ', 'NNP', ')', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', ',', 'IN', 'NNP', 'CC', 'NNP', 'NNS', 'RB', '.']",25
face_detection,16,335,HF - ResNet further improves the m AP to 99.4 % and 96.2 %,"['HF', '-', 'ResNet', 'further', 'improves', 'the', 'm', 'AP', 'to', '99.4', '%', 'and', '96.2', '%']","['B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'RBR', 'VBZ', 'DT', 'NN', 'NNP', 'TO', 'CD', 'NN', 'CC', 'CD', 'NN']",14
face_detection,16,340,"In spite of these issues , HyperFace performance is comparable to recently published deep learning - based face detection methods such as DP2MFD and Faceness on the FDDB dataset 1 with m AP of 90.1 % .","['In', 'spite', 'of', 'these', 'issues', ',', 'HyperFace', 'performance', 'is', 'comparable', 'to', 'recently', 'published', 'deep', 'learning', '-', 'based', 'face', 'detection', 'methods', 'such', 'as', 'DP2MFD', 'and', 'Faceness', 'on', 'the', 'FDDB', 'dataset', '1', 'with', 'm', 'AP', 'of', '90.1', '%', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'NN', 'IN', 'DT', 'NNS', ',', 'NNP', 'NN', 'VBZ', 'JJ', 'TO', 'RB', 'VBN', 'JJ', 'VBG', ':', 'VBN', 'NN', 'NN', 'NNS', 'JJ', 'IN', 'NNP', 'CC', 'NNP', 'IN', 'DT', 'NNP', 'VBD', 'CD', 'IN', 'JJ', 'NNP', 'IN', 'CD', 'NN', '.']",37
face_detection,16,342,clearly show that multitask CNNs ( Multitask Face and HyperFace ) outperform R - CNN Face by a wide margin .,"['clearly', 'show', 'that', 'multitask', 'CNNs', '(', 'Multitask', 'Face', 'and', 'HyperFace', ')', 'outperform', 'R', '-', 'CNN', 'Face', 'by', 'a', 'wide', 'margin', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', 'NN', 'IN', 'NN', 'NNP', '(', 'NNP', 'NNP', 'CC', 'NNP', ')', 'NN', 'NNP', ':', 'NNP', 'NNP', 'IN', 'DT', 'JJ', 'NN', '.']",21
face_detection,16,350,Landmarks Localization,"['Landmarks', 'Localization']","['B-n', 'I-n']","['NNS', 'NNP']",2
face_detection,16,370,shows that HyperFace performs consistently accurate overall pose angles .,"['shows', 'that', 'HyperFace', 'performs', 'consistently', 'accurate', 'overall', 'pose', 'angles', '.']","['B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNS', 'WDT', 'VBP', 'NNS', 'RB', 'VBP', 'JJ', 'JJ', 'NNS', '.']",10
face_detection,16,372,"Moreover , we find that R - CNN Fiducial and Multitask Face attain similar performance .","['Moreover', ',', 'we', 'find', 'that', 'R', '-', 'CNN', 'Fiducial', 'and', 'Multitask', 'Face', 'attain', 'similar', 'performance', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'IN', 'NNP', ':', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'VBP', 'JJ', 'NN', '.']",16
face_detection,16,376,"Additionally , we observe that HF - ResNet significantly improves the performance over HyperFace for both AFW and AFLW datasets .","['Additionally', ',', 'we', 'observe', 'that', 'HF', '-', 'ResNet', 'significantly', 'improves', 'the', 'performance', 'over', 'HyperFace', 'for', 'both', 'AFW', 'and', 'AFLW', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NNP', ':', 'NNP', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'NNP', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",21
face_detection,16,389,"We observe that HyperFace achieves a comparable NME of 10.88 , while HF - ResNet achieves the state - of - theart result on IBUG with NME of 8.18 .","['We', 'observe', 'that', 'HyperFace', 'achieves', 'a', 'comparable', 'NME', 'of', '10.88', ',', 'while', 'HF', '-', 'ResNet', 'achieves', 'the', 'state', '-', 'of', '-', 'theart', 'result', 'on', 'IBUG', 'with', 'NME', 'of', '8.18', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'VBZ', 'DT', 'JJ', 'NNP', 'IN', 'CD', ',', 'IN', 'NNP', ':', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'NN', 'NN', 'IN', 'NNP', 'IN', 'NNP', 'IN', 'CD', '.']",30
face_detection,16,393,Pose Estimation,"['Pose', 'Estimation']","['B-n', 'I-n']","['NNP', 'NNP']",2
face_detection,16,401,"As can be seen from the figure , both HyperFace and HF - ResNet outperform existing methods by a large margin .","['As', 'can', 'be', 'seen', 'from', 'the', 'figure', ',', 'both', 'HyperFace', 'and', 'HF', '-', 'ResNet', 'outperform', 'existing', 'methods', 'by', 'a', 'large', 'margin', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', ',', 'DT', 'NNP', 'CC', 'NNP', ':', 'NN', 'NN', 'VBG', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",22
face_detection,16,409,"HF - ResNet further improves the performance for roll , pitch as well as yaw .","['HF', '-', 'ResNet', 'further', 'improves', 'the', 'performance', 'for', 'roll', ',', 'pitch', 'as', 'well', 'as', 'yaw', '.']","['B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'O']","['NNP', ':', 'NN', 'RBR', 'VBZ', 'DT', 'NN', 'IN', 'NN', ',', 'NN', 'RB', 'RB', 'IN', 'NN', '.']",16
face_detection,16,410,Gender Recognition,"['Gender', 'Recognition']","['B-n', 'I-n']","['NNP', 'NNP']",2
face_detection,16,418,"On the LFWA dataset , our method outperforms PANDA and FaceTracer , and is equal to .","['On', 'the', 'LFWA', 'dataset', ',', 'our', 'method', 'outperforms', 'PANDA', 'and', 'FaceTracer', ',', 'and', 'is', 'equal', 'to', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'NNP', 'CC', 'NNP', ',', 'CC', 'VBZ', 'JJ', 'TO', '.']",17
face_detection,16,423,HF - ResNet achieves state - of - the - art results on both CelebA and LFWA datasets .,"['HF', '-', 'ResNet', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'on', 'both', 'CelebA', 'and', 'LFWA', 'datasets', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'NN', 'NNS', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",19
face_detection,16,427,The HyperFace with a linear bounding box regression and traditional NMS achieves a m AP of 94 % .,"['The', 'HyperFace', 'with', 'a', 'linear', 'bounding', 'box', 'regression', 'and', 'traditional', 'NMS', 'achieves', 'a', 'm', 'AP', 'of', '94', '%', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'CC', 'JJ', 'NNP', 'VBZ', 'DT', 'JJ', 'NNP', 'IN', 'CD', 'NN', '.']",19
face_detection,13,2,RetinaFace : Single - stage Dense Face Localisation in the Wild,"['RetinaFace', ':', 'Single', '-', 'stage', 'Dense', 'Face', 'Localisation', 'in', 'the', 'Wild']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', ':', 'NNP', ':', 'NN', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NNP']",11
face_detection,13,4,"Though tremendous strides have been made in uncontrolled face detection , accurate and efficient face localisation in the wild remains an open challenge .","['Though', 'tremendous', 'strides', 'have', 'been', 'made', 'in', 'uncontrolled', 'face', 'detection', ',', 'accurate', 'and', 'efficient', 'face', 'localisation', 'in', 'the', 'wild', 'remains', 'an', 'open', 'challenge', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'JJ', 'NN', 'NN', ',', 'NN', 'CC', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', '.']",24
face_detection,13,13,Extra annotations and code have been made available at : https://github.com/deepinsight/insightface/tree/master/RetinaFace.,"['Extra', 'annotations', 'and', 'code', 'have', 'been', 'made', 'available', 'at', ':', 'https://github.com/deepinsight/insightface/tree/master/RetinaFace.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['JJ', 'NNS', 'CC', 'NNS', 'VBP', 'VBN', 'VBN', 'JJ', 'IN', ':', 'NN']",11
face_detection,13,43,"Based on a single - stage design , we propose a novel pixel - wise face localisation method named Reti- naFace , which employs a multi-task learning strategy to simultaneously predict face score , face box , five facial landmarks , and 3D position and correspondence of each facial pixel .","['Based', 'on', 'a', 'single', '-', 'stage', 'design', ',', 'we', 'propose', 'a', 'novel', 'pixel', '-', 'wise', 'face', 'localisation', 'method', 'named', 'Reti-', 'naFace', ',', 'which', 'employs', 'a', 'multi-task', 'learning', 'strategy', 'to', 'simultaneously', 'predict', 'face', 'score', ',', 'face', 'box', ',', 'five', 'facial', 'landmarks', ',', 'and', '3D', 'position', 'and', 'correspondence', 'of', 'each', 'facial', 'pixel', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['VBN', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'SYM', ':', 'NN', 'NN', 'NN', 'NN', 'VBN', 'NNP', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'TO', 'RB', 'VB', 'NN', 'NN', ',', 'NN', 'NN', ',', 'CD', 'JJ', 'NNS', ',', 'CC', 'CD', 'NN', 'CC', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",51
face_detection,13,149,Training Details .,"['Training', 'Details', '.']","['B-n', 'I-n', 'O']","['NN', 'NNS', '.']",3
face_detection,13,150,"We train the RetinaFace using SGD optimiser ( momentum at 0.9 , weight decay at 0.0005 , batch size of 8 4 ) on four NVIDIA Tesla P40 ( 24GB ) GPUs .","['We', 'train', 'the', 'RetinaFace', 'using', 'SGD', 'optimiser', '(', 'momentum', 'at', '0.9', ',', 'weight', 'decay', 'at', '0.0005', ',', 'batch', 'size', 'of', '8', '4', ')', 'on', 'four', 'NVIDIA', 'Tesla', 'P40', '(', '24GB', ')', 'GPUs', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'VBG', 'NNP', 'NN', '(', 'NN', 'IN', 'CD', ',', 'VBD', 'NN', 'IN', 'CD', ',', 'NN', 'NN', 'IN', 'CD', 'CD', ')', 'IN', 'CD', 'NNP', 'NNP', 'NNP', '(', 'CD', ')', 'NNP', '.']",33
face_detection,13,151,"The learning rate starts from 10 ? 3 , rising to 10 ? 2 after 5 epochs , then divided by 10 at 55 and 68 epochs .","['The', 'learning', 'rate', 'starts', 'from', '10', '?', '3', ',', 'rising', 'to', '10', '?', '2', 'after', '5', 'epochs', ',', 'then', 'divided', 'by', '10', 'at', '55', 'and', '68', 'epochs', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'NNS', 'IN', 'CD', '.', 'CD', ',', 'VBG', 'TO', 'CD', '.', 'CD', 'IN', 'CD', 'NNS', ',', 'RB', 'VBN', 'IN', 'CD', 'IN', 'CD', 'CC', 'CD', 'NNS', '.']",28
face_detection,13,152,The training process terminates at 80 epochs .,"['The', 'training', 'process', 'terminates', 'at', '80', 'epochs', '.']","['O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'IN', 'CD', 'NNS', '.']",8
face_detection,13,153,Testing Details .,"['Testing', 'Details', '.']","['B-n', 'I-n', 'O']","['VBG', 'NNP', '.']",3
face_detection,13,154,"For testing on WIDER FACE , we follow the standard practices of and employ flip as well as multi-scale ( the short edge of image at [ 500 , 800 , 1100 , 1400 , 1700 ] ) strategies .","['For', 'testing', 'on', 'WIDER', 'FACE', ',', 'we', 'follow', 'the', 'standard', 'practices', 'of', 'and', 'employ', 'flip', 'as', 'well', 'as', 'multi-scale', '(', 'the', 'short', 'edge', 'of', 'image', 'at', '[', '500', ',', '800', ',', '1100', ',', '1400', ',', '1700', ']', ')', 'strategies', '.']","['B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'IN', 'NNP', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'CC', 'VB', 'NN', 'RB', 'RB', 'IN', 'NN', '(', 'DT', 'JJ', 'NN', 'IN', 'NN', 'IN', '$', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', 'NN', ')', 'NNS', '.']",40
face_detection,13,155,Box voting [ 15 ] is applied on the union set of predicted face boxes using an IoU threshold at 0.4 .,"['Box', 'voting', '[', '15', ']', 'is', 'applied', 'on', 'the', 'union', 'set', 'of', 'predicted', 'face', 'boxes', 'using', 'an', 'IoU', 'threshold', 'at', '0.4', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['NNP', 'VBG', 'RB', 'CD', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'VBG', 'DT', 'NNP', 'NN', 'IN', 'CD', '.']",22
face_detection,13,161,"Adding the branch of five facial landmark regression significantly improves the face box AP ( 0.408 % ) and mAP ( 0.775 % ) on the Hard subset , suggesting that landmark localisation is crucial for improving the accuracy of face detection .","['Adding', 'the', 'branch', 'of', 'five', 'facial', 'landmark', 'regression', 'significantly', 'improves', 'the', 'face', 'box', 'AP', '(', '0.408', '%', ')', 'and', 'mAP', '(', '0.775', '%', ')', 'on', 'the', 'Hard', 'subset', ',', 'suggesting', 'that', 'landmark', 'localisation', 'is', 'crucial', 'for', 'improving', 'the', 'accuracy', 'of', 'face', 'detection', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'NN', 'IN', 'CD', 'JJ', 'NN', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'NNP', '(', 'CD', 'NN', ')', 'CC', '$', '(', 'CD', 'NN', ')', 'IN', 'DT', 'NNP', 'NN', ',', 'VBG', 'IN', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'VBG', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",43
face_detection,13,162,"By contrast , adding the dense regression branch increases the face box AP on Easy and Medium subsets but slightly deteriorates the results on the Hard subset , indicating the difficulty of dense regression under challenging scenarios .","['By', 'contrast', ',', 'adding', 'the', 'dense', 'regression', 'branch', 'increases', 'the', 'face', 'box', 'AP', 'on', 'Easy', 'and', 'Medium', 'subsets', 'but', 'slightly', 'deteriorates', 'the', 'results', 'on', 'the', 'Hard', 'subset', ',', 'indicating', 'the', 'difficulty', 'of', 'dense', 'regression', 'under', 'challenging', 'scenarios', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'VBG', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'NNS', 'CC', 'RB', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'NN', ',', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'NNS', '.']",38
face_detection,13,163,"Nevertheless , learning landmark and dense regression jointly enables a further improvement compared to adding landmark regression only .","['Nevertheless', ',', 'learning', 'landmark', 'and', 'dense', 'regression', 'jointly', 'enables', 'a', 'further', 'improvement', 'compared', 'to', 'adding', 'landmark', 'regression', 'only', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'VBG', 'NN', 'CC', 'JJ', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'VBN', 'TO', 'VBG', 'NN', 'NN', 'RB', '.']",19
face_detection,13,167,Face box Accuracy,"['Face', 'box', 'Accuracy']","['B-n', 'I-n', 'I-n']","['NNP', 'NN', 'NNP']",3
face_detection,13,172,"More specifically , RetinaFace produces the best AP in all subsets of both validation and test sets , i.e. , 96.9 % ( Easy ) , 96.1 % ( Medium ) and 91.8 % ( Hard ) for validation set , and 96.3 % ( Easy ) , 95.6 % ( Medium ) and 91.4 % ( Hard ) for test set .","['More', 'specifically', ',', 'RetinaFace', 'produces', 'the', 'best', 'AP', 'in', 'all', 'subsets', 'of', 'both', 'validation', 'and', 'test', 'sets', ',', 'i.e.', ',', '96.9', '%', '(', 'Easy', ')', ',', '96.1', '%', '(', 'Medium', ')', 'and', '91.8', '%', '(', 'Hard', ')', 'for', 'validation', 'set', ',', 'and', '96.3', '%', '(', 'Easy', ')', ',', '95.6', '%', '(', 'Medium', ')', 'and', '91.4', '%', '(', 'Hard', ')', 'for', 'test', 'set', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O']","['RBR', 'RB', ',', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NN', 'CC', 'NN', 'NNS', ',', 'NN', ',', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'VBN', ',', 'CC', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'NN', '.']",63
face_detection,13,173,"Compared to the recent best performed method , Reti - na Face sets up a new impressive record ( 91.4 % v.s. 90.3 % ) on the Hard subset which contains a large number of tiny faces .","['Compared', 'to', 'the', 'recent', 'best', 'performed', 'method', ',', 'Reti', '-', 'na', 'Face', 'sets', 'up', 'a', 'new', 'impressive', 'record', '(', '91.4', '%', 'v.s.', '90.3', '%', ')', 'on', 'the', 'Hard', 'subset', 'which', 'contains', 'a', 'large', 'number', 'of', 'tiny', 'faces', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'TO', 'DT', 'JJ', 'JJS', 'VBD', 'NN', ',', 'NNP', ':', 'JJ', 'NNP', 'VBZ', 'RP', 'DT', 'JJ', 'JJ', 'NN', '(', 'CD', 'NN', 'JJ', 'CD', 'NN', ')', 'IN', 'DT', 'NNP', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'VBZ', '.']",38
face_detection,13,175,"RetinaFace successfully finds about 900 faces ( threshold at 0.5 ) out of the reported 1 , 151 faces .","['RetinaFace', 'successfully', 'finds', 'about', '900', 'faces', '(', 'threshold', 'at', '0.5', ')', 'out', 'of', 'the', 'reported', '1', ',', '151', 'faces', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'RB', 'VBZ', 'IN', 'CD', 'VBZ', '(', 'NN', 'IN', 'CD', ')', 'IN', 'IN', 'DT', 'VBN', 'CD', ',', 'CD', 'VBZ', '.']",20
face_detection,13,178,Five Facial Landmark Accuracy,"['Five', 'Facial', 'Landmark', 'Accuracy']","['B-n', 'I-n', 'I-n', 'I-n']","['CD', 'NNP', 'NNP', 'NNP']",4
face_detection,13,183,RetinaFace significantly decreases the normalised mean errors ( NME ) from 2.72 % to 2.21 % when compared to MTCNN .,"['RetinaFace', 'significantly', 'decreases', 'the', 'normalised', 'mean', 'errors', '(', 'NME', ')', 'from', '2.72', '%', 'to', '2.21', '%', 'when', 'compared', 'to', 'MTCNN', '.']","['B-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['NNP', 'RB', 'VBZ', 'DT', 'JJ', 'JJ', 'NNS', '(', 'NNP', ')', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', 'WRB', 'VBN', 'TO', 'NNP', '.']",21
face_detection,13,185,"Compared to MTCNN , RetinaFace significantly decreases the failure rate from 26.31 % to 9.37 % ( the NME threshold at 10 % ) .","['Compared', 'to', 'MTCNN', ',', 'RetinaFace', 'significantly', 'decreases', 'the', 'failure', 'rate', 'from', '26.31', '%', 'to', '9.37', '%', '(', 'the', 'NME', 'threshold', 'at', '10', '%', ')', '.']","['B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'TO', 'NNP', ',', 'NNP', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', '(', 'DT', 'NNP', 'NN', 'IN', 'CD', 'NN', ')', '.']",25
face_detection,13,186,Dense Facial Landmark Accuracy,"['Dense', 'Facial', 'Landmark', 'Accuracy']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP']",4
face_detection,13,191,"Even though the performance gap exists between supervised and self - supervised methods , the dense regression results of RetinaFace are comparable with these state - of - the - art methods .","['Even', 'though', 'the', 'performance', 'gap', 'exists', 'between', 'supervised', 'and', 'self', '-', 'supervised', 'methods', ',', 'the', 'dense', 'regression', 'results', 'of', 'RetinaFace', 'are', 'comparable', 'with', 'these', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'IN', 'VBN', 'CC', 'PRP', ':', 'VBN', 'NNS', ',', 'DT', 'NN', 'NN', 'NNS', 'IN', 'NNP', 'VBP', 'JJ', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",33
face_detection,13,192,"More specifically , we observe that ( 1 ) five facial landmarks regression can alleviate the training difficulty of dense regression branch and significantly improve the dense regression results .","['More', 'specifically', ',', 'we', 'observe', 'that', '(', '1', ')', 'five', 'facial', 'landmarks', 'regression', 'can', 'alleviate', 'the', 'training', 'difficulty', 'of', 'dense', 'regression', 'branch', 'and', 'significantly', 'improve', 'the', 'dense', 'regression', 'results', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RBR', 'RB', ',', 'PRP', 'VBP', 'DT', '(', 'CD', ')', 'CD', 'JJ', 'NNS', 'NN', 'MD', 'VB', 'DT', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', 'CC', 'RB', 'VB', 'DT', 'NN', 'NN', 'NNS', '.']",30
face_detection,13,193,( 2 ) using single - stage features ( as in RetinaFace ) to predict dense correspondence parameters is much harder than employing ( Region of Interest ) RoI features ( as in Mesh Decoder ) .,"['(', '2', ')', 'using', 'single', '-', 'stage', 'features', '(', 'as', 'in', 'RetinaFace', ')', 'to', 'predict', 'dense', 'correspondence', 'parameters', 'is', 'much', 'harder', 'than', 'employing', '(', 'Region', 'of', 'Interest', ')', 'RoI', 'features', '(', 'as', 'in', 'Mesh', 'Decoder', ')', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O']","['(', 'CD', ')', 'VBG', 'JJ', ':', 'NN', 'NNS', '(', 'IN', 'IN', 'NNP', ')', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'VBZ', 'RB', 'JJR', 'IN', 'VBG', '(', 'NNP', 'IN', 'NNP', ')', 'NNP', 'NNS', '(', 'IN', 'IN', 'NNP', 'NNP', ')', '.']",37
face_detection,13,197,Face Recognition Accuracy,"['Face', 'Recognition', 'Accuracy']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_detection,13,204,"The results on CFP - FP , demonstrate that Reti - na Face can boost ArcFace 's verification accuracy from 98.37 % to 99.49 % .","['The', 'results', 'on', 'CFP', '-', 'FP', ',', 'demonstrate', 'that', 'Reti', '-', 'na', 'Face', 'can', 'boost', 'ArcFace', ""'s"", 'verification', 'accuracy', 'from', '98.37', '%', 'to', '99.49', '%', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'NNP', ':', 'NNP', ',', 'NN', 'IN', 'NNP', ':', 'JJ', 'NN', 'MD', 'VB', 'NNP', 'POS', 'NN', 'NN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', '.']",26
face_detection,8,2,Detecting Faces Using Region - based Fully Convolutional Networks,"['Detecting', 'Faces', 'Using', 'Region', '-', 'based', 'Fully', 'Convolutional', 'Networks']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNS', 'VBG', 'NNP', ':', 'VBN', 'NNP', 'NNP', 'NNP']",9
face_detection,8,4,Face detection has achieved great success using the region - based methods .,"['Face', 'detection', 'has', 'achieved', 'great', 'success', 'using', 'the', 'region', '-', 'based', 'methods', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'VBN', 'JJ', 'NN', 'VBG', 'DT', 'NN', ':', 'VBN', 'NNS', '.']",13
face_detection,8,22,"In this report , we develop a face detector on the top of R - FCN with elaborate design of the details , which achieves more decent performance than the R - CNN face detectors .","['In', 'this', 'report', ',', 'we', 'develop', 'a', 'face', 'detector', 'on', 'the', 'top', 'of', 'R', '-', 'FCN', 'with', 'elaborate', 'design', 'of', 'the', 'details', ',', 'which', 'achieves', 'more', 'decent', 'performance', 'than', 'the', 'R', '-', 'CNN', 'face', 'detectors', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNP', ':', 'NN', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NNS', ',', 'WDT', 'VBZ', 'RBR', 'JJ', 'NN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'NNS', '.']",36
face_detection,8,23,"According to the size of the general face , we carefully design size of anchors and RoIs .","['According', 'to', 'the', 'size', 'of', 'the', 'general', 'face', ',', 'we', 'carefully', 'design', 'size', 'of', 'anchors', 'and', 'RoIs', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'TO', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'RB', 'VBP', 'NN', 'IN', 'NNS', 'CC', 'NNP', '.']",18
face_detection,8,24,"Since the contribution of facial parts maybe different for detection , we introduce a position - sensitive average pooling to generate embedding features for enhancing discrimination , and eliminate the effect of non-uniformed contribution in each facial part .","['Since', 'the', 'contribution', 'of', 'facial', 'parts', 'maybe', 'different', 'for', 'detection', ',', 'we', 'introduce', 'a', 'position', '-', 'sensitive', 'average', 'pooling', 'to', 'generate', 'embedding', 'features', 'for', 'enhancing', 'discrimination', ',', 'and', 'eliminate', 'the', 'effect', 'of', 'non-uniformed', 'contribution', 'in', 'each', 'facial', 'part', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'RB', 'JJ', 'IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'JJ', 'JJ', 'NN', 'TO', 'VB', 'NN', 'NNS', 'IN', 'VBG', 'NN', ',', 'CC', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",39
face_detection,8,25,"Furthermore , we also apply the multi-scale training and testing strategy in this work .","['Furthermore', ',', 'we', 'also', 'apply', 'the', 'multi-scale', 'training', 'and', 'testing', 'strategy', 'in', 'this', 'work', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', 'CC', 'VBG', 'NN', 'IN', 'DT', 'NN', '.']",15
face_detection,8,26,The on - line hard example mining ( OHEM ) technique is integrated into our network as well for boosting the learning on hard examples .,"['The', 'on', '-', 'line', 'hard', 'example', 'mining', '(', 'OHEM', ')', 'technique', 'is', 'integrated', 'into', 'our', 'network', 'as', 'well', 'for', 'boosting', 'the', 'learning', 'on', 'hard', 'examples', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'IN', ':', 'NN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NN', 'VBZ', 'VBN', 'IN', 'PRP$', 'NN', 'RB', 'RB', 'IN', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NNS', '.']",26
face_detection,8,107,Our training hyper - parameters are similar to Face R - CNN .,"['Our', 'training', 'hyper', '-', 'parameters', 'are', 'similar', 'to', 'Face', 'R', '-', 'CNN', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'VBG', 'JJ', ':', 'NNS', 'VBP', 'JJ', 'TO', 'NNP', 'NNP', ':', 'NN', '.']",13
face_detection,8,108,"Different from Face R - CNN , we initialize our network with the pre-trained weights of 101 - layer ResNet trained on Image Net .","['Different', 'from', 'Face', 'R', '-', 'CNN', ',', 'we', 'initialize', 'our', 'network', 'with', 'the', 'pre-trained', 'weights', 'of', '101', '-', 'layer', 'ResNet', 'trained', 'on', 'Image', 'Net', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NN', 'IN', 'NNP', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', 'PRP$', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'CD', ':', 'NN', 'NNP', 'VBD', 'IN', 'NNP', 'NNP', '.']",25
face_detection,8,109,"Specifically , we freeze the general kernels ( weights of few layers at the beginning ) of the pre-trained model throughout the entire training process in order to keep the essential feature extractor trained on ImageNet .","['Specifically', ',', 'we', 'freeze', 'the', 'general', 'kernels', '(', 'weights', 'of', 'few', 'layers', 'at', 'the', 'beginning', ')', 'of', 'the', 'pre-trained', 'model', 'throughout', 'the', 'entire', 'training', 'process', 'in', 'order', 'to', 'keep', 'the', 'essential', 'feature', 'extractor', 'trained', 'on', 'ImageNet', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NNS', '(', 'NNS', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'VBG', ')', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'VBD', 'IN', 'NNP', '.']",37
face_detection,8,110,"In terms of the RPN stage , Face R - FCN enumerates multiple configurations of the anchor in order to accurately search for faces .","['In', 'terms', 'of', 'the', 'RPN', 'stage', ',', 'Face', 'R', '-', 'FCN', 'enumerates', 'multiple', 'configurations', 'of', 'the', 'anchor', 'in', 'order', 'to', 'accurately', 'search', 'for', 'faces', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNS', 'IN', 'DT', 'NNP', 'NN', ',', 'NNP', 'NNP', ':', 'NNP', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NN', 'TO', 'RB', 'VB', 'IN', 'VBZ', '.']",25
face_detection,8,111,We combine a range of multiple scales and aspect ratios together to construct multi-scale anchors .,"['We', 'combine', 'a', 'range', 'of', 'multiple', 'scales', 'and', 'aspect', 'ratios', 'together', 'to', 'construct', 'multi-scale', 'anchors', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'CC', 'JJ', 'NNS', 'RB', 'TO', 'VB', 'JJ', 'NNS', '.']",16
face_detection,8,115,The RPN and R - FCN are both learned jointly with the softmax loss and the smooth L1 loss .,"['The', 'RPN', 'and', 'R', '-', 'FCN', 'are', 'both', 'learned', 'jointly', 'with', 'the', 'softmax', 'loss', 'and', 'the', 'smooth', 'L1', 'loss', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'CC', 'NNP', ':', 'NN', 'VBP', 'DT', 'VBN', 'RB', 'IN', 'DT', 'JJ', 'NN', 'CC', 'DT', 'JJ', 'NNP', 'NN', '.']",20
face_detection,8,116,Non- maximum suppression ( NMS ) is adopted for regularizing the anchors with certain IoU scores .,"['Non-', 'maximum', 'suppression', '(', 'NMS', ')', 'is', 'adopted', 'for', 'regularizing', 'the', 'anchors', 'with', 'certain', 'IoU', 'scores', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['JJ', 'JJ', 'NN', '(', 'NNP', ')', 'VBZ', 'VBN', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'JJ', 'NNP', 'NNS', '.']",17
face_detection,8,118,We set the 256 for the size of RPN mini-batch and 128 for R - FCN respectively .,"['We', 'set', 'the', '256', 'for', 'the', 'size', 'of', 'RPN', 'mini-batch', 'and', '128', 'for', 'R', '-', 'FCN', 'respectively', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'DT', 'CD', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NN', 'CC', 'CD', 'IN', 'NNP', ':', 'NNP', 'RB', '.']",18
face_detection,8,120,"We utilize multi-scale training where the input image is resized with bilinear interpolation to various scales ( say , 1024 or 1200 ) .","['We', 'utilize', 'multi-scale', 'training', 'where', 'the', 'input', 'image', 'is', 'resized', 'with', 'bilinear', 'interpolation', 'to', 'various', 'scales', '(', 'say', ',', '1024', 'or', '1200', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'WRB', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'TO', 'JJ', 'NNS', '(', 'VB', ',', 'CD', 'CC', 'CD', ')', '.']",24
face_detection,8,121,"In the testing stage , multi-scale testing is performed by scale image into an image pyramid for better detecting on both tiny and general faces .","['In', 'the', 'testing', 'stage', ',', 'multi-scale', 'testing', 'is', 'performed', 'by', 'scale', 'image', 'into', 'an', 'image', 'pyramid', 'for', 'better', 'detecting', 'on', 'both', 'tiny', 'and', 'general', 'faces', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'JJR', 'NN', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'VBZ', '.']",26
face_detection,8,125,"As illustrated in , our proposed approach consistently wins the 1st place across the three subsets on both the validation set and test set of WIDER FACE and significantly outperforms the existing results .","['As', 'illustrated', 'in', ',', 'our', 'proposed', 'approach', 'consistently', 'wins', 'the', '1st', 'place', 'across', 'the', 'three', 'subsets', 'on', 'both', 'the', 'validation', 'set', 'and', 'test', 'set', 'of', 'WIDER', 'FACE', 'and', 'significantly', 'outperforms', 'the', 'existing', 'results', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'VBN', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'CD', 'NNS', 'IN', 'DT', 'DT', 'NN', 'NN', 'CC', 'NN', 'NN', 'IN', 'NNP', 'NNP', 'CC', 'RB', 'VBZ', 'DT', 'VBG', 'NNS', '.']",34
face_detection,8,126,"In particular , on WIDER FACE hard subset , our approach is superior to the prior best - performing one by a clear margin , which demonstrates the robustness of our algorithm .","['In', 'particular', ',', 'on', 'WIDER', 'FACE', 'hard', 'subset', ',', 'our', 'approach', 'is', 'superior', 'to', 'the', 'prior', 'best', '-', 'performing', 'one', 'by', 'a', 'clear', 'margin', ',', 'which', 'demonstrates', 'the', 'robustness', 'of', 'our', 'algorithm', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'IN', 'NNP', 'NNP', 'JJ', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'DT', 'JJ', 'JJS', ':', 'VBG', 'CD', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NN', '.']",33
face_detection,8,127,FDDB,['FDDB'],['B-n'],['NN'],1
face_detection,8,133,"From , it is clearly that Face R - FCN consistently achieves the impressive performance in terms of both the discrete ROC curve and continuous ROC curve .","['From', ',', 'it', 'is', 'clearly', 'that', 'Face', 'R', '-', 'FCN', 'consistently', 'achieves', 'the', 'impressive', 'performance', 'in', 'terms', 'of', 'both', 'the', 'discrete', 'ROC', 'curve', 'and', 'continuous', 'ROC', 'curve', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', ',', 'PRP', 'VBZ', 'RB', 'DT', 'NNP', 'NNP', ':', 'NNP', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'DT', 'DT', 'JJ', 'NNP', 'NN', 'CC', 'JJ', 'NNP', 'NN', '.']",28
face_detection,8,134,Our discrete ROC curve is superior to the prior best - performing method .,"['Our', 'discrete', 'ROC', 'curve', 'is', 'superior', 'to', 'the', 'prior', 'best', '-', 'performing', 'method', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'JJ', 'NNP', 'NN', 'VBZ', 'JJ', 'TO', 'DT', 'JJ', 'JJS', ':', 'VBG', 'NN', '.']",14
face_detection,8,135,We also obtain the best true positive rate of the discrete ROC curve at 1000/2000 false positives ( 98.49%/99.07 % ) .,"['We', 'also', 'obtain', 'the', 'best', 'true', 'positive', 'rate', 'of', 'the', 'discrete', 'ROC', 'curve', 'at', '1000/2000', 'false', 'positives', '(', '98.49%/99.07', '%', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP', 'RB', 'VB', 'DT', 'JJS', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'CD', 'JJ', 'NNS', '(', 'CD', 'NN', ')', '.']",22
face_detection,8,141,"Face R - FCN shows the superior performance over the prior methods across the three subsets ( easy , medium and hard ) in both validation and test sets .","['Face', 'R', '-', 'FCN', 'shows', 'the', 'superior', 'performance', 'over', 'the', 'prior', 'methods', 'across', 'the', 'three', 'subsets', '(', 'easy', ',', 'medium', 'and', 'hard', ')', 'in', 'both', 'validation', 'and', 'test', 'sets', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', ':', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'CD', 'NNS', '(', 'JJ', ',', 'NN', 'CC', 'JJ', ')', 'IN', 'DT', 'NN', 'CC', 'NN', 'NNS', '.']",30
face_detection,8,147,"Finally , we obtain the true positive rate 98. 99 % of the discrete ROC curve at 1000 false positives and 99. 42 % at 2000 false positives , which are new state - of - the - art among all the published methods on FDDB .","['Finally', ',', 'we', 'obtain', 'the', 'true', 'positive', 'rate', '98.', '99', '%', 'of', 'the', 'discrete', 'ROC', 'curve', 'at', '1000', 'false', 'positives', 'and', '99.', '42', '%', 'at', '2000', 'false', 'positives', ',', 'which', 'are', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'among', 'all', 'the', 'published', 'methods', 'on', 'FDDB', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VB', 'DT', 'JJ', 'JJ', 'NN', 'CD', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'CD', 'JJ', 'NNS', 'CC', 'CD', 'CD', 'NN', 'IN', 'CD', 'JJ', 'NNS', ',', 'WDT', 'VBP', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'IN', 'PDT', 'DT', 'VBN', 'NNS', 'IN', 'NNP', '.']",47
face_detection,9,2,Finding Tiny Faces,"['Finding', 'Tiny', 'Faces']","['B-n', 'I-n', 'I-n']","['VBG', 'NNP', 'NNS']",3
face_detection,9,7,"Though tremendous strides have been made in object recognition , one of the remaining open challenges is detecting small objects .","['Though', 'tremendous', 'strides', 'have', 'been', 'made', 'in', 'object', 'recognition', ',', 'one', 'of', 'the', 'remaining', 'open', 'challenges', 'is', 'detecting', 'small', 'objects', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'JJ', 'NN', ',', 'CD', 'IN', 'DT', 'VBG', 'JJ', 'NNS', 'VBZ', 'VBG', 'JJ', 'NNS', '.']",21
face_detection,9,8,"We explore three aspects of the problem in the context of finding small faces : the role of scale invariance , image resolution , and contextual reasoning .","['We', 'explore', 'three', 'aspects', 'of', 'the', 'problem', 'in', 'the', 'context', 'of', 'finding', 'small', 'faces', ':', 'the', 'role', 'of', 'scale', 'invariance', ',', 'image', 'resolution', ',', 'and', 'contextual', 'reasoning', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'VBZ', ':', 'DT', 'NN', 'IN', 'JJ', 'NN', ',', 'NN', 'NN', ',', 'CC', 'JJ', 'NN', '.']",28
face_detection,9,26,"lem in the context of face detection : the role of scale invariance , image resolution and contextual reasoning .","['lem', 'in', 'the', 'context', 'of', 'face', 'detection', ':', 'the', 'role', 'of', 'scale', 'invariance', ',', 'image', 'resolution', 'and', 'contextual', 'reasoning', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', ':', 'DT', 'NN', 'IN', 'JJ', 'NN', ',', 'NN', 'NN', 'CC', 'JJ', 'NN', '.']",20
face_detection,9,33,"Instead of a "" one-size - fitsall "" approach , we train separate detectors tuned for different scales ( and aspect ratios ) .","['Instead', 'of', 'a', '""', 'one-size', '-', 'fitsall', '""', 'approach', ',', 'we', 'train', 'separate', 'detectors', 'tuned', 'for', 'different', 'scales', '(', 'and', 'aspect', 'ratios', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'IN', 'DT', 'JJ', 'JJ', ':', 'NN', 'JJ', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'VBN', 'IN', 'JJ', 'NNS', '(', 'CC', 'VB', 'NNS', ')', '.']",24
face_detection,9,35,"To address both concerns , we train and run scale - specific detectors in a multitask fashion : they make use of features defined over multiple layers of single ( deep ) feature hierarchy .","['To', 'address', 'both', 'concerns', ',', 'we', 'train', 'and', 'run', 'scale', '-', 'specific', 'detectors', 'in', 'a', 'multitask', 'fashion', ':', 'they', 'make', 'use', 'of', 'features', 'defined', 'over', 'multiple', 'layers', 'of', 'single', '(', 'deep', ')', 'feature', 'hierarchy', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NNS', ',', 'PRP', 'VBP', 'CC', 'VBP', 'JJ', ':', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', ':', 'PRP', 'VBP', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'JJ', '(', 'JJ', ')', 'NN', 'NN', '.']",35
face_detection,9,41,"To extend features fine - tuned from these networks to objects of novel sizes , we employ a simply strategy : resize images at test - time by interpolation and decimation .","['To', 'extend', 'features', 'fine', '-', 'tuned', 'from', 'these', 'networks', 'to', 'objects', 'of', 'novel', 'sizes', ',', 'we', 'employ', 'a', 'simply', 'strategy', ':', 'resize', 'images', 'at', 'test', '-', 'time', 'by', 'interpolation', 'and', 'decimation', '.']","['B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'NNS', 'JJ', ':', 'VBN', 'IN', 'DT', 'NNS', 'TO', 'NNS', 'IN', 'NN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'RB', 'NN', ':', 'NN', 'NNS', 'IN', 'JJS', ':', 'NN', 'IN', 'NN', 'CC', 'NN', '.']",32
face_detection,9,42,"While many recognition systems are applied in a "" multi-resolution "" fashion by processing an image pyramid , we find that interpolating the lowest layer of the pyramid is particularly crucial for finding small objects .","['While', 'many', 'recognition', 'systems', 'are', 'applied', 'in', 'a', '""', 'multi-resolution', '""', 'fashion', 'by', 'processing', 'an', 'image', 'pyramid', ',', 'we', 'find', 'that', 'interpolating', 'the', 'lowest', 'layer', 'of', 'the', 'pyramid', 'is', 'particularly', 'crucial', 'for', 'finding', 'small', 'objects', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'JJ', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'IN', 'VBG', 'DT', 'JJS', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'JJ', 'IN', 'VBG', 'JJ', 'NNS', '.']",36
face_detection,9,43,Hence our final approach is a delicate mixture of scale - specific detectors that are used in a scale - invariant fashion ( by processing an image pyramid to capture large scale variations ) .,"['Hence', 'our', 'final', 'approach', 'is', 'a', 'delicate', 'mixture', 'of', 'scale', '-', 'specific', 'detectors', 'that', 'are', 'used', 'in', 'a', 'scale', '-', 'invariant', 'fashion', '(', 'by', 'processing', 'an', 'image', 'pyramid', 'to', 'capture', 'large', 'scale', 'variations', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NN', ':', 'JJ', 'NNS', 'WDT', 'VBP', 'VBN', 'IN', 'DT', 'JJ', ':', 'JJ', 'NN', '(', 'IN', 'VBG', 'DT', 'NN', 'NN', 'TO', 'VB', 'JJ', 'JJ', 'NNS', ')', '.']",35
face_detection,9,52,"We demonstrate that convolutional deep features extracted from multiple layers ( also known as "" hypercolumn "" features ) are effective "" foveal "" descriptors that capture both high - resolution detail and coarse low - resolution cues across large receptive field ( ) .","['We', 'demonstrate', 'that', 'convolutional', 'deep', 'features', 'extracted', 'from', 'multiple', 'layers', '(', 'also', 'known', 'as', '""', 'hypercolumn', '""', 'features', ')', 'are', 'effective', '""', 'foveal', '""', 'descriptors', 'that', 'capture', 'both', 'high', '-', 'resolution', 'detail', 'and', 'coarse', 'low', '-', 'resolution', 'cues', 'across', 'large', 'receptive', 'field', '(', ')', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'JJ', 'JJ', 'NNS', 'VBN', 'IN', 'JJ', 'NNS', '(', 'RB', 'VBN', 'IN', 'JJ', 'NN', 'NNP', 'NNS', ')', 'VBP', 'JJ', 'NNP', 'NN', 'NN', 'NNS', 'IN', 'NN', 'DT', 'JJ', ':', 'NN', 'NN', 'CC', 'NN', 'JJ', ':', 'NN', 'NNS', 'IN', 'JJ', 'JJ', 'NN', '(', ')', '.']",45
face_detection,9,53,We show that highresolution components of our foveal descriptors ( extracted from lower convolutional layers ) are crucial for such accurate localization in .,"['We', 'show', 'that', 'highresolution', 'components', 'of', 'our', 'foveal', 'descriptors', '(', 'extracted', 'from', 'lower', 'convolutional', 'layers', ')', 'are', 'crucial', 'for', 'such', 'accurate', 'localization', 'in', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'PRP$', 'JJ', 'NNS', '(', 'VBN', 'IN', 'JJR', 'JJ', 'NNS', ')', 'VBP', 'JJ', 'IN', 'JJ', 'JJ', 'NN', 'IN', '.']",24
face_detection,9,218,WIDER FACE :,"['WIDER', 'FACE', ':']","['B-n', 'I-n', 'O']","['JJ', 'NN', ':']",3
face_detection,9,220,"As shows , our hybrid - resolution model ( HR ) achieves state - of - the - art performance on all difficulty levels , but most importantly , reduces error on the "" hard "" set by 2X .","['As', 'shows', ',', 'our', 'hybrid', '-', 'resolution', 'model', '(', 'HR', ')', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'all', 'difficulty', 'levels', ',', 'but', 'most', 'importantly', ',', 'reduces', 'error', 'on', 'the', '""', 'hard', '""', 'set', 'by', '2X', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NNS', ',', 'PRP$', 'JJ', ':', 'NN', 'NN', '(', 'NNP', ')', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'NNS', ',', 'CC', 'JJS', 'RB', ',', 'NNS', 'VBP', 'IN', 'DT', 'NNP', 'JJ', 'NN', 'VBN', 'IN', 'CD', '.']",40
face_detection,9,224,FDDB :,"['FDDB', ':']","['B-n', 'O']","['NN', ':']",2
face_detection,9,226,"Our out - of - the - box detector ( HR ) outperforms all published results on the discrete score , which uses a standard 50 % intersection - over - union threshold to define correctness .","['Our', 'out', '-', 'of', '-', 'the', '-', 'box', 'detector', '(', 'HR', ')', 'outperforms', 'all', 'published', 'results', 'on', 'the', 'discrete', 'score', ',', 'which', 'uses', 'a', 'standard', '50', '%', 'intersection', '-', 'over', '-', 'union', 'threshold', 'to', 'define', 'correctness', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'RP', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '(', 'NNP', ')', 'VBZ', 'DT', 'VBN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'CD', 'NN', 'NN', ':', 'IN', ':', 'NN', 'NN', 'TO', 'VB', 'NN', '.']",37
face_detection,9,228,"With the post - hoc regressor , our detector achieves state - of - the - art performance on the continuous score ( measuring average bounding - box overlap ) as well .","['With', 'the', 'post', '-', 'hoc', 'regressor', ',', 'our', 'detector', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'the', 'continuous', 'score', '(', 'measuring', 'average', 'bounding', '-', 'box', 'overlap', ')', 'as', 'well', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ':', 'NN', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', '(', 'JJ', 'NN', 'VBG', ':', 'NN', 'NN', ')', 'RB', 'RB', '.']",33
face_detection,9,229,Our regressor is trained with 10 - fold cross validation .,"['Our', 'regressor', 'is', 'trained', 'with', '10', '-', 'fold', 'cross', 'validation', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'CD', ':', 'NN', 'NN', 'NN', '.']",11
face_detection,1,10,"Detecting faces in an image is considered to be one of the most practical tasks in computer vision applications , and many studies are proposed from the beginning of the computer vision research .","['Detecting', 'faces', 'in', 'an', 'image', 'is', 'considered', 'to', 'be', 'one', 'of', 'the', 'most', 'practical', 'tasks', 'in', 'computer', 'vision', 'applications', ',', 'and', 'many', 'studies', 'are', 'proposed', 'from', 'the', 'beginning', 'of', 'the', 'computer', 'vision', 'research', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'VBZ', 'IN', 'DT', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'CD', 'IN', 'DT', 'RBS', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'NNS', ',', 'CC', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",34
face_detection,1,11,"After the advent of deep neural networks , many face detection algorithms applying the deep network have reported significant performance improvement to the conventional face detectors .","['After', 'the', 'advent', 'of', 'deep', 'neural', 'networks', ',', 'many', 'face', 'detection', 'algorithms', 'applying', 'the', 'deep', 'network', 'have', 'reported', 'significant', 'performance', 'improvement', 'to', 'the', 'conventional', 'face', 'detectors', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', ',', 'JJ', 'VBP', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'VBP', 'VBN', 'JJ', 'NN', 'NN', 'TO', 'DT', 'JJ', 'NN', 'NNS', '.']",27
face_detection,1,28,"In this paper , we propose a new multi-scale face detector with extremely tiny size ( EXTD ) resolving the two mentioned problems .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'new', 'multi-scale', 'face', 'detector', 'with', 'extremely', 'tiny', 'size', '(', 'EXTD', ')', 'resolving', 'the', 'two', 'mentioned', 'problems', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'RB', 'JJ', 'NN', '(', 'NNP', ')', 'VBG', 'DT', 'CD', 'VBD', 'NNS', '.']",24
face_detection,1,29,"The main discovery is that we can share the network in generating each feature - map , as shown in .","['The', 'main', 'discovery', 'is', 'that', 'we', 'can', 'share', 'the', 'network', 'in', 'generating', 'each', 'feature', '-', 'map', ',', 'as', 'shown', 'in', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'IN', 'PRP', 'MD', 'NN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', ':', 'NN', ',', 'IN', 'VBN', 'IN', '.']",21
face_detection,1,30,"As in the figure , we design a backbone network such that reduces the size of the feature map by half , and we can get the other feature maps with recurrently passing the network .","['As', 'in', 'the', 'figure', ',', 'we', 'design', 'a', 'backbone', 'network', 'such', 'that', 'reduces', 'the', 'size', 'of', 'the', 'feature', 'map', 'by', 'half', ',', 'and', 'we', 'can', 'get', 'the', 'other', 'feature', 'maps', 'with', 'recurrently', 'passing', 'the', 'network', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'JJ', 'IN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', ',', 'CC', 'PRP', 'MD', 'VB', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'RB', 'VBG', 'DT', 'NN', '.']",36
face_detection,1,31,"The sharing can significantly reduce the number of parameters , and this enables our model to use more layers to generate the low - level feature maps used for detecting small faces .","['The', 'sharing', 'can', 'significantly', 'reduce', 'the', 'number', 'of', 'parameters', ',', 'and', 'this', 'enables', 'our', 'model', 'to', 'use', 'more', 'layers', 'to', 'generate', 'the', 'low', '-', 'level', 'feature', 'maps', 'used', 'for', 'detecting', 'small', 'faces', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'NNS', ',', 'CC', 'DT', 'VBZ', 'PRP$', 'NN', 'TO', 'VB', 'JJR', 'NNS', 'TO', 'VB', 'DT', 'JJ', ':', 'NN', 'NN', 'NNS', 'VBN', 'IN', 'VBG', 'JJ', 'VBZ', '.']",33
face_detection,1,32,"Also , the proposed iterative architecture makes the network to observe the features from various scale of faces and from various layer locations , and hence offer abundant semantic information to the network , without adding additional parameters .","['Also', ',', 'the', 'proposed', 'iterative', 'architecture', 'makes', 'the', 'network', 'to', 'observe', 'the', 'features', 'from', 'various', 'scale', 'of', 'faces', 'and', 'from', 'various', 'layer', 'locations', ',', 'and', 'hence', 'offer', 'abundant', 'semantic', 'information', 'to', 'the', 'network', ',', 'without', 'adding', 'additional', 'parameters', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'VBN', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'DT', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'VBZ', 'CC', 'IN', 'JJ', 'JJ', 'NNS', ',', 'CC', 'RB', 'NN', 'JJ', 'JJ', 'NN', 'TO', 'DT', 'NN', ',', 'IN', 'VBG', 'JJ', 'NNS', '.']",39
face_detection,1,33,"Our baseline framework follows FPN - like structures , but can also be applied to SSD - like architecture .","['Our', 'baseline', 'framework', 'follows', 'FPN', '-', 'like', 'structures', ',', 'but', 'can', 'also', 'be', 'applied', 'to', 'SSD', '-', 'like', 'architecture', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NN', 'VBZ', 'NNP', ':', 'IN', 'NNS', ',', 'CC', 'MD', 'RB', 'VB', 'VBN', 'TO', 'NNP', ':', 'IN', 'NN', '.']",20
face_detection,1,142,Code will be available at https ://github.com/clovaai.,"['Code', 'will', 'be', 'available', 'at', 'https', '://github.com/clovaai.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'MD', 'VB', 'JJ', 'IN', 'NN', 'NN']",7
face_detection,1,162,"Also , we tested different activation functions : ReLU , PReLU , and Leaky - ReLU for each model .","['Also', ',', 'we', 'tested', 'different', 'activation', 'functions', ':', 'ReLU', ',', 'PReLU', ',', 'and', 'Leaky', '-', 'ReLU', 'for', 'each', 'model', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBD', 'JJ', 'NN', 'NNS', ':', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', ':', 'NN', 'IN', 'DT', 'NN', '.']",20
face_detection,1,163,"The negative slope of the Leaky - ReLU is set to 0.25 , which is identical to the initial negative slope of the PReLU .","['The', 'negative', 'slope', 'of', 'the', 'Leaky', '-', 'ReLU', 'is', 'set', 'to', '0.25', ',', 'which', 'is', 'identical', 'to', 'the', 'initial', 'negative', 'slope', 'of', 'the', 'PReLU', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', ':', 'NN', 'VBZ', 'VBN', 'TO', 'CD', ',', 'WDT', 'VBZ', 'JJ', 'TO', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NNP', '.']",25
face_detection,1,178,"The results in 138 times lighter in model size and are 28.3 , 19.2 , and 11 times lighter in Madds .","['The', 'results', 'in', '138', 'times', 'lighter', 'in', 'model', 'size', 'and', 'are', '28.3', ',', '19.2', ',', 'and', '11', 'times', 'lighter', 'in', 'Madds', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'NNS', 'IN', 'CD', 'NNS', 'RBR', 'IN', 'NN', 'NN', 'CC', 'VBP', 'CD', ',', 'CD', ',', 'CC', 'CD', 'NNS', 'RBR', 'IN', 'NNP', '.']",22
face_detection,1,179,"When compared to SOTA face detectors such as Pyra - midBox and DSFD , our best model EXTD - FPN - 64 - PReLU achieved lower results .","['When', 'compared', 'to', 'SOTA', 'face', 'detectors', 'such', 'as', 'Pyra', '-', 'midBox', 'and', 'DSFD', ',', 'our', 'best', 'model', 'EXTD', '-', 'FPN', '-', '64', '-', 'PReLU', 'achieved', 'lower', 'results', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['WRB', 'VBN', 'TO', 'NNP', 'NN', 'NNS', 'JJ', 'IN', 'NNP', ':', 'NN', 'CC', 'NNP', ',', 'PRP$', 'JJS', 'NN', 'NNP', ':', 'NNP', ':', 'CD', ':', 'NN', 'VBD', 'JJR', 'NNS', '.']",28
face_detection,1,180,The margin between PyramidBox and the proposed model on WIDER FACE hard case was 3.4 % .,"['The', 'margin', 'between', 'PyramidBox', 'and', 'the', 'proposed', 'model', 'on', 'WIDER', 'FACE', 'hard', 'case', 'was', '3.4', '%', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', 'CC', 'DT', 'VBN', 'NN', 'IN', 'NNP', 'NNP', 'JJ', 'NN', 'VBD', 'CD', 'NN', '.']",17
face_detection,1,182,"The m AP gap to DSFD , which is tremendously heavier , is about 5.0 % , but it would be safe to suggest that the proposed method offers more decent trade - off in that DSFD uses about 2860 times more parameters than the proposed method .","['The', 'm', 'AP', 'gap', 'to', 'DSFD', ',', 'which', 'is', 'tremendously', 'heavier', ',', 'is', 'about', '5.0', '%', ',', 'but', 'it', 'would', 'be', 'safe', 'to', 'suggest', 'that', 'the', 'proposed', 'method', 'offers', 'more', 'decent', 'trade', '-', 'off', 'in', 'that', 'DSFD', 'uses', 'about', '2860', 'times', 'more', 'parameters', 'than', 'the', 'proposed', 'method', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NNP', 'NN', 'TO', 'NNP', ',', 'WDT', 'VBZ', 'RB', 'JJR', ',', 'VBZ', 'IN', 'CD', 'NN', ',', 'CC', 'PRP', 'MD', 'VB', 'JJ', 'TO', 'VB', 'IN', 'DT', 'VBN', 'NN', 'VBZ', 'RBR', 'JJ', 'NN', ':', 'NN', 'IN', 'DT', 'NNP', 'VBZ', 'IN', 'CD', 'NNS', 'RBR', 'NNS', 'IN', 'DT', 'VBN', 'NN', '.']",48
face_detection,1,186,"When it comes to our SSD - based variations , they got lower mAP results than FPN - based variants .","['When', 'it', 'comes', 'to', 'our', 'SSD', '-', 'based', 'variations', ',', 'they', 'got', 'lower', 'mAP', 'results', 'than', 'FPN', '-', 'based', 'variants', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['WRB', 'PRP', 'VBZ', 'TO', 'PRP$', 'NNP', ':', 'VBN', 'NNS', ',', 'PRP', 'VBD', 'JJR', 'NN', 'NNS', 'IN', 'NNP', ':', 'VBN', 'NNS', '.']",21
face_detection,1,187,"However , when compared with the S3FD version trained with Mo - bile FaceNet backbone network , the proposed SSD variants achieved comparable or better detection performance .","['However', ',', 'when', 'compared', 'with', 'the', 'S3FD', 'version', 'trained', 'with', 'Mo', '-', 'bile', 'FaceNet', 'backbone', 'network', ',', 'the', 'proposed', 'SSD', 'variants', 'achieved', 'comparable', 'or', 'better', 'detection', 'performance', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'WRB', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'VBD', 'IN', 'NNP', ':', 'NN', 'NNP', 'NN', 'NN', ',', 'DT', 'VBN', 'NNP', 'NNS', 'VBD', 'JJ', 'CC', 'JJR', 'NN', 'NN', '.']",28
face_detection,1,196,"From the table , we can see that our method achieved higher performance in WIDER FACE hard dataset than other cases .","['From', 'the', 'table', ',', 'we', 'can', 'see', 'that', 'our', 'method', 'achieved', 'higher', 'performance', 'in', 'WIDER', 'FACE', 'hard', 'dataset', 'than', 'other', 'cases', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'MD', 'VB', 'IN', 'PRP$', 'NN', 'VBD', 'JJR', 'NN', 'IN', 'NNP', 'NNP', 'RB', 'VBD', 'IN', 'JJ', 'NNS', '.']",22
face_detection,1,204,"First , for all the different channel width , FPN based architecture achieved better detection performance compared to SSD based architecture , especially for detecting small faces .","['First', ',', 'for', 'all', 'the', 'different', 'channel', 'width', ',', 'FPN', 'based', 'architecture', 'achieved', 'better', 'detection', 'performance', 'compared', 'to', 'SSD', 'based', 'architecture', ',', 'especially', 'for', 'detecting', 'small', 'faces', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'IN', 'PDT', 'DT', 'JJ', 'NN', 'NN', ',', 'NNP', 'VBN', 'NN', 'VBN', 'RBR', 'NN', 'NN', 'VBN', 'TO', 'NNP', 'VBN', 'NN', ',', 'RB', 'IN', 'VBG', 'JJ', 'VBZ', '.']",28
face_detection,1,214,"When tested with SSD based architecture , PReLU outperformed Leaky - ReLU with larger margin than those using FPN structure .","['When', 'tested', 'with', 'SSD', 'based', 'architecture', ',', 'PReLU', 'outperformed', 'Leaky', '-', 'ReLU', 'with', 'larger', 'margin', 'than', 'those', 'using', 'FPN', 'structure', '.']","['B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['WRB', 'VBN', 'IN', 'NNP', 'VBN', 'NN', ',', 'NNP', 'VBD', 'NNP', ':', 'NN', 'IN', 'JJR', 'NN', 'IN', 'DT', 'VBG', 'NNP', 'NN', '.']",21
face_detection,21,2,Supervised Transformer Network for Efficient Face Detection,"['Supervised', 'Transformer', 'Network', 'for', 'Efficient', 'Face', 'Detection']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['VBN', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",7
face_detection,21,4,Large pose variations remain to be a challenge that confronts real - word face detection .,"['Large', 'pose', 'variations', 'remain', 'to', 'be', 'a', 'challenge', 'that', 'confronts', 'real', '-', 'word', 'face', 'detection', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'JJ', 'NNS', 'VBP', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'JJ', ':', 'NN', 'NN', 'NN', '.']",16
face_detection,21,33,"In contrast , we propose a new cascade Convolutional Neural Network that is trained end - to - end .","['In', 'contrast', ',', 'we', 'propose', 'a', 'new', 'cascade', 'Convolutional', 'Neural', 'Network', 'that', 'is', 'trained', 'end', '-', 'to', '-', 'end', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NNP', 'NNP', 'NNP', 'WDT', 'VBZ', 'JJ', 'NN', ':', 'TO', ':', 'NN', '.']",20
face_detection,21,34,"The first stage is a multi-task Region Proposal Network ( RPN ) , which simultaneously proposes candidate face regions along with associated facial landmarks .","['The', 'first', 'stage', 'is', 'a', 'multi-task', 'Region', 'Proposal', 'Network', '(', 'RPN', ')', ',', 'which', 'simultaneously', 'proposes', 'candidate', 'face', 'regions', 'along', 'with', 'associated', 'facial', 'landmarks', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'RB', 'VBZ', 'JJ', 'NN', 'NNS', 'IN', 'IN', 'JJ', 'JJ', 'NNS', '.']",25
face_detection,21,35,"Inspired by Chen et al. , we jointly conduct face detection and face alignment , since face alignment is helpful to distinguish faces / non - faces patterns .","['Inspired', 'by', 'Chen', 'et', 'al.', ',', 'we', 'jointly', 'conduct', 'face', 'detection', 'and', 'face', 'alignment', ',', 'since', 'face', 'alignment', 'is', 'helpful', 'to', 'distinguish', 'faces', '/', 'non', '-', 'faces', 'patterns', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'NNP', 'FW', 'NN', ',', 'PRP', 'RB', 'VBP', 'NN', 'NN', 'CC', 'NN', 'NN', ',', 'IN', 'NN', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'VBZ', 'NNP', 'SYM', ':', 'VBZ', 'NNS', '.']",29
face_detection,21,36,"Different from Li et al. , this network is calculated on the original resolution to better leverage more discriminative information .","['Different', 'from', 'Li', 'et', 'al.', ',', 'this', 'network', 'is', 'calculated', 'on', 'the', 'original', 'resolution', 'to', 'better', 'leverage', 'more', 'discriminative', 'information', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'NNP', 'CC', 'RB', ',', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'JJR', 'NN', 'RBR', 'JJ', 'NN', '.']",21
face_detection,21,38,"The aligned candidate face region is then fed into the second - stage network , a RCNN , for further verification .","['The', 'aligned', 'candidate', 'face', 'region', 'is', 'then', 'fed', 'into', 'the', 'second', '-', 'stage', 'network', ',', 'a', 'RCNN', ',', 'for', 'further', 'verification', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', ',', 'DT', 'NNP', ',', 'IN', 'JJ', 'NN', '.']",22
face_detection,21,39,Note we only keep the K face candidate regions with top responses in a local neighborhood from the RPN .,"['Note', 'we', 'only', 'keep', 'the', 'K', 'face', 'candidate', 'regions', 'with', 'top', 'responses', 'in', 'a', 'local', 'neighborhood', 'from', 'the', 'RPN', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['NN', 'PRP', 'RB', 'VB', 'DT', 'NNP', 'NN', 'NN', 'NNS', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', '.']",20
face_detection,21,43,"We concatenate the feature maps from the two cascaded networks together to form an architecture that is trained end - to - end , as shown in .","['We', 'concatenate', 'the', 'feature', 'maps', 'from', 'the', 'two', 'cascaded', 'networks', 'together', 'to', 'form', 'an', 'architecture', 'that', 'is', 'trained', 'end', '-', 'to', '-', 'end', ',', 'as', 'shown', 'in', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'CD', 'VBD', 'NNS', 'RB', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', ':', 'TO', ':', 'NN', ',', 'IN', 'VBN', 'IN', '.']",28
face_detection,21,45,Note that the canonical positions of the facial landmarks in the aligned face image and the predicted facial landmarks in the candidate face region jointly defines the transform from the candidate face region .,"['Note', 'that', 'the', 'canonical', 'positions', 'of', 'the', 'facial', 'landmarks', 'in', 'the', 'aligned', 'face', 'image', 'and', 'the', 'predicted', 'facial', 'landmarks', 'in', 'the', 'candidate', 'face', 'region', 'jointly', 'defines', 'the', 'transform', 'from', 'the', 'candidate', 'face', 'region', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'DT', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",34
face_detection,21,46,"In the end - to - end training , the training of the first - stage RPN to predict facial landmarks is also supervised by annotated facial landmarks in each true face regions .","['In', 'the', 'end', '-', 'to', '-', 'end', 'training', ',', 'the', 'training', 'of', 'the', 'first', '-', 'stage', 'RPN', 'to', 'predict', 'facial', 'landmarks', 'is', 'also', 'supervised', 'by', 'annotated', 'facial', 'landmarks', 'in', 'each', 'true', 'face', 'regions', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', ',', 'DT', 'NN', 'IN', 'DT', 'JJ', ':', 'NN', 'NNP', 'TO', 'VB', 'JJ', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NNS', '.']",34
face_detection,21,47,We hence call our network a Supervised Transformer Network .,"['We', 'hence', 'call', 'our', 'network', 'a', 'Supervised', 'Transformer', 'Network', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'VB', 'PRP$', 'NN', 'DT', 'VBN', 'NNP', 'NNP', '.']",10
face_detection,21,51,"Therefore , we propose a region - of - interest ( ROI ) convolution scheme to make the run-time of the Supervised Transformer Network to be more efficient .","['Therefore', ',', 'we', 'propose', 'a', 'region', '-', 'of', '-', 'interest', '(', 'ROI', ')', 'convolution', 'scheme', 'to', 'make', 'the', 'run-time', 'of', 'the', 'Supervised', 'Transformer', 'Network', 'to', 'be', 'more', 'efficient', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'IN', ':', 'NN', '(', 'NNP', ')', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'TO', 'VB', 'RBR', 'JJ', '.']",29
face_detection,21,52,It first uses a conventional boosting cascade to obtain a set of face candidate areas .,"['It', 'first', 'uses', 'a', 'conventional', 'boosting', 'cascade', 'to', 'obtain', 'a', 'set', 'of', 'face', 'candidate', 'areas', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'NN', 'NN', 'NNS', '.']",16
face_detection,21,53,"Then , we combine these regions into irregular binary ROI mask .","['Then', ',', 'we', 'combine', 'these', 'regions', 'into', 'irregular', 'binary', 'ROI', 'mask', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NNS', 'IN', 'JJ', 'JJ', 'NNP', 'NN', '.']",12
face_detection,21,54,"All DNN operations ( including convolution , ReLU , pooling , and concatenation ) are all processed inside the ROI mask , and hence significantly reduce the computation .","['All', 'DNN', 'operations', '(', 'including', 'convolution', ',', 'ReLU', ',', 'pooling', ',', 'and', 'concatenation', ')', 'are', 'all', 'processed', 'inside', 'the', 'ROI', 'mask', ',', 'and', 'hence', 'significantly', 'reduce', 'the', 'computation', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'NNP', 'NNS', '(', 'VBG', 'NN', ',', 'NNP', ',', 'NN', ',', 'CC', 'NN', ')', 'VBP', 'DT', 'VBN', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'RB', 'RB', 'VB', 'DT', 'NN', '.']",29
face_detection,21,255,"As shown in , multi-task RPN , Supervised Transformer , and feature combination will bring about 1 % , 1 % , and 2 % recall improvement respectively .","['As', 'shown', 'in', ',', 'multi-task', 'RPN', ',', 'Supervised', 'Transformer', ',', 'and', 'feature', 'combination', 'will', 'bring', 'about', '1', '%', ',', '1', '%', ',', 'and', '2', '%', 'recall', 'improvement', 'respectively', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'JJ', 'NNP', ',', 'VBD', 'NNP', ',', 'CC', 'NN', 'NN', 'MD', 'VB', 'RB', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CC', 'CD', 'NN', 'JJ', 'NN', 'RB', '.']",29
face_detection,21,256,"Besides , these three parts are complementary , remove anyone part will cause a recall drop .","['Besides', ',', 'these', 'three', 'parts', 'are', 'complementary', ',', 'remove', 'anyone', 'part', 'will', 'cause', 'a', 'recall', 'drop', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', ',', 'DT', 'CD', 'NNS', 'VBP', 'JJ', ',', 'VB', 'NN', 'NN', 'MD', 'VB', 'DT', 'JJ', 'NN', '.']",17
face_detection,21,262,We found that NMS tend to include too much noisy low confidence candidates .,"['We', 'found', 'that', 'NMS', 'tend', 'to', 'include', 'too', 'much', 'noisy', 'low', 'confidence', 'candidates', '.']","['O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'IN', 'NNP', 'VBP', 'TO', 'VB', 'RB', 'JJ', 'IN', 'JJ', 'NN', 'NNS', '.']",14
face_detection,21,264,"Our non - top K suppression is very close to using all candidates , and achieved consistently better results than NMS under the same number of candidates .","['Our', 'non', '-', 'top', 'K', 'suppression', 'is', 'very', 'close', 'to', 'using', 'all', 'candidates', ',', 'and', 'achieved', 'consistently', 'better', 'results', 'than', 'NMS', 'under', 'the', 'same', 'number', 'of', 'candidates', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP$', 'JJ', ':', 'JJ', 'NNP', 'NN', 'VBZ', 'RB', 'RB', 'TO', 'VBG', 'DT', 'NNS', ',', 'CC', 'VBD', 'RB', 'JJR', 'NNS', 'IN', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', '.']",28
face_detection,21,285,"On the FDDB dataset , we compare with all public methods .","['On', 'the', 'FDDB', 'dataset', ',', 'we', 'compare', 'with', 'all', 'public', 'methods', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'NNS', '.']",12
face_detection,21,287,"On the AFW and PASCAL faces datasets , we compare with ( 1 ) deformable part based methods , e.g. structure model and Tree Parts Model ( TSM ) ; ( 2 ) cascade - based methods , e.g .","['On', 'the', 'AFW', 'and', 'PASCAL', 'faces', 'datasets', ',', 'we', 'compare', 'with', '(', '1', ')', 'deformable', 'part', 'based', 'methods', ',', 'e.g.', 'structure', 'model', 'and', 'Tree', 'Parts', 'Model', '(', 'TSM', ')', ';', '(', '2', ')', 'cascade', '-', 'based', 'methods', ',', 'e.g', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p']","['IN', 'DT', 'NNP', 'CC', 'NNP', 'VBZ', 'NNS', ',', 'PRP', 'VBP', 'IN', '(', 'CD', ')', 'JJ', 'NN', 'VBN', 'NNS', ',', 'JJ', 'NN', 'NN', 'CC', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ':', '(', 'CD', ')', 'NN', ':', 'VBN', 'NNS', ',', 'NN', '.']",40
face_detection,21,288,"Headhunter ; ( 3 ) commercial system , e.g. face.com , Face ++ and Picasa .","['Headhunter', ';', '(', '3', ')', 'commercial', 'system', ',', 'e.g.', 'face.com', ',', 'Face', '++', 'and', 'Picasa', '.']","['B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['NN', ':', '(', 'CD', ')', 'JJ', 'NN', ',', 'RB', 'NN', ',', 'NNP', 'NNP', 'CC', 'NNP', '.']",16
face_detection,5,5,"Abstract - Face detection and alignment in unconstrained environment are challenging due to various poses , illuminations and occlusions .","['Abstract', '-', 'Face', 'detection', 'and', 'alignment', 'in', 'unconstrained', 'environment', 'are', 'challenging', 'due', 'to', 'various', 'poses', ',', 'illuminations', 'and', 'occlusions', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NN', 'NN', 'CC', 'NN', 'IN', 'JJ', 'NN', 'VBP', 'VBG', 'JJ', 'TO', 'JJ', 'NNS', ',', 'NNS', 'CC', 'NNS', '.']",20
face_detection,5,30,"However , most of the available face detection and face alignment methods ignore the inherent correlation between these two tasks .","['However', ',', 'most', 'of', 'the', 'available', 'face', 'detection', 'and', 'face', 'alignment', 'methods', 'ignore', 'the', 'inherent', 'correlation', 'between', 'these', 'two', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'JJS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'CD', 'NNS', '.']",21
face_detection,5,40,"In this paper , we propose a new framework to integrate these two tasks using unified cascaded CNNs by multi-task learning .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'new', 'framework', 'to', 'integrate', 'these', 'two', 'tasks', 'using', 'unified', 'cascaded', 'CNNs', 'by', 'multi-task', 'learning', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'CD', 'NNS', 'VBG', 'JJ', 'VBN', 'NNP', 'IN', 'JJ', 'NN', '.']",22
face_detection,5,41,The proposed CNNs consist of three stages .,"['The', 'proposed', 'CNNs', 'consist', 'of', 'three', 'stages', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'VBN', 'NNP', 'NN', 'IN', 'CD', 'NNS', '.']",8
face_detection,5,42,"In the first stage , it produces candidate windows quickly through a shallow CNN .","['In', 'the', 'first', 'stage', ',', 'it', 'produces', 'candidate', 'windows', 'quickly', 'through', 'a', 'shallow', 'CNN', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBZ', 'JJ', 'NNS', 'RB', 'IN', 'DT', 'JJ', 'NNP', '.']",15
face_detection,5,43,"Then , it refines the windows to reject a large number of non-faces windows through a more complex CNN .","['Then', ',', 'it', 'refines', 'the', 'windows', 'to', 'reject', 'a', 'large', 'number', 'of', 'non-faces', 'windows', 'through', 'a', 'more', 'complex', 'CNN', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBZ', 'DT', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'NNS', 'IN', 'DT', 'RBR', 'JJ', 'NNP', '.']",20
face_detection,5,44,"Finally , it uses a more powerful CNN to refine the result and output facial landmarks positions .","['Finally', ',', 'it', 'uses', 'a', 'more', 'powerful', 'CNN', 'to', 'refine', 'the', 'result', 'and', 'output', 'facial', 'landmarks', 'positions', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBZ', 'DT', 'RBR', 'JJ', 'NNP', 'TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'JJ', 'JJ', 'NNS', '.']",18
face_detection,5,108,"Then we compare our face detector and alignment against the state - of - the - art methods in Face Detection Data Set and Benchmark ( FDDB ) , WIDER FACE , and Annotated Facial Landmarks in the Wild ( AFLW ) benchmark .","['Then', 'we', 'compare', 'our', 'face', 'detector', 'and', 'alignment', 'against', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'in', 'Face', 'Detection', 'Data', 'Set', 'and', 'Benchmark', '(', 'FDDB', ')', ',', 'WIDER', 'FACE', ',', 'and', 'Annotated', 'Facial', 'Landmarks', 'in', 'the', 'Wild', '(', 'AFLW', ')', 'benchmark', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-p', 'I-p', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-p', 'I-p', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['RB', 'PRP', 'VBP', 'PRP$', 'NN', 'NN', 'CC', 'NN', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', '(', 'NNP', ')', ',', 'NNP', 'NNP', ',', 'CC', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NNP', '(', 'NNP', ')', 'NN', '.']",44
face_detection,5,122,The effectiveness of online hard sample mining,"['The', 'effectiveness', 'of', 'online', 'hard', 'sample', 'mining']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n']","['DT', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'NN']",7
face_detection,5,128,It is very clear that the hard sample mining is beneficial to performance improvement .,"['It', 'is', 'very', 'clear', 'that', 'the', 'hard', 'sample', 'mining', 'is', 'beneficial', 'to', 'performance', 'improvement', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'RB', 'JJ', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'JJ', 'TO', 'NN', 'NN', '.']",15
face_detection,5,130,The effectiveness of joint detection and alignment,"['The', 'effectiveness', 'of', 'joint', 'detection', 'and', 'alignment']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['DT', 'NN', 'IN', 'JJ', 'NN', 'CC', 'NN']",7
face_detection,5,132,We also compare the performance of bounding box regression in these two O - Nets. suggests that joint landmarks localization task learning is beneficial for both face classification and bounding box regression tasks .,"['We', 'also', 'compare', 'the', 'performance', 'of', 'bounding', 'box', 'regression', 'in', 'these', 'two', 'O', '-', 'Nets.', 'suggests', 'that', 'joint', 'landmarks', 'localization', 'task', 'learning', 'is', 'beneficial', 'for', 'both', 'face', 'classification', 'and', 'bounding', 'box', 'regression', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'VBG', 'NN', 'NN', 'IN', 'DT', 'CD', 'NNP', ':', 'NN', 'VBZ', 'IN', 'JJ', 'NNS', 'NN', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'NN', 'NN', 'CC', 'VBG', 'NN', 'NN', 'NNS', '.']",34
face_detection,5,133,D. Evaluation on face detection,"['D.', 'Evaluation', 'on', 'face', 'detection']","['O', 'O', 'B-p', 'B-n', 'I-n']","['NNP', 'NNP', 'IN', 'NN', 'NN']",5
face_detection,5,135,( a ) - ( d ) shows that our method consistently outperforms all the previous approaches by a large margin in both the benchmarks .,"['(', 'a', ')', '-', '(', 'd', ')', 'shows', 'that', 'our', 'method', 'consistently', 'outperforms', 'all', 'the', 'previous', 'approaches', 'by', 'a', 'large', 'margin', 'in', 'both', 'the', 'benchmarks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'O']","['(', 'DT', ')', ':', '(', 'NN', ')', 'VBZ', 'IN', 'PRP$', 'NN', 'RB', 'VBZ', 'PDT', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CC', 'DT', 'NN', '.']",26
face_detection,5,138,Evaluation on face alignment,"['Evaluation', 'on', 'face', 'alignment']","['O', 'O', 'B-n', 'I-n']","['NN', 'IN', 'NN', 'NN']",4
face_detection,5,143,( e ) shows that our method outperforms all the state - of - the - art methods with a margin .,"['(', 'e', ')', 'shows', 'that', 'our', 'method', 'outperforms', 'all', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'with', 'a', 'margin', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['(', 'NN', ')', 'VBZ', 'IN', 'PRP$', 'NN', 'VBZ', 'PDT', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'NN', '.']",22
face_detection,11,2,A Unified Multi-scale Deep Convolutional Neural Network for Fast Object Detection,"['A', 'Unified', 'Multi-scale', 'Deep', 'Convolutional', 'Neural', 'Network', 'for', 'Fast', 'Object', 'Detection']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['DT', 'VBN', 'JJ', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",11
face_detection,11,4,"A unified deep neural network , denoted the multi -scale CNN ( MS - CNN ) , is proposed for fast multi-scale object detection .","['A', 'unified', 'deep', 'neural', 'network', ',', 'denoted', 'the', 'multi', '-scale', 'CNN', '(', 'MS', '-', 'CNN', ')', ',', 'is', 'proposed', 'for', 'fast', 'multi-scale', 'object', 'detection', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'JJ', 'JJ', 'NN', ',', 'VBD', 'DT', 'NN', 'JJ', 'NNP', '(', 'NNP', ':', 'NN', ')', ',', 'VBZ', 'VBN', 'IN', 'RB', 'JJ', 'JJ', 'NN', '.']",25
face_detection,11,10,"State - of - the - art object detection performance , at up to 15 fps , is reported on datasets , such as KITTI and Caltech , containing a substantial number of small objects .","['State', '-', 'of', '-', 'the', '-', 'art', 'object', 'detection', 'performance', ',', 'at', 'up', 'to', '15', 'fps', ',', 'is', 'reported', 'on', 'datasets', ',', 'such', 'as', 'KITTI', 'and', 'Caltech', ',', 'containing', 'a', 'substantial', 'number', 'of', 'small', 'objects', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'NN', 'NN', ',', 'IN', 'IN', 'TO', 'CD', 'NN', ',', 'VBZ', 'VBN', 'IN', 'NNS', ',', 'JJ', 'IN', 'NNP', 'CC', 'NNP', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",36
face_detection,11,29,"This work proposes a unified multi-scale deep CNN , denoted the multi -scale CNN ( MS - CNN ) , for fast object detection .","['This', 'work', 'proposes', 'a', 'unified', 'multi-scale', 'deep', 'CNN', ',', 'denoted', 'the', 'multi', '-scale', 'CNN', '(', 'MS', '-', 'CNN', ')', ',', 'for', 'fast', 'object', 'detection', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'JJ', 'JJ', 'NNP', ',', 'VBD', 'DT', 'NN', 'JJ', 'NNP', '(', 'NNP', ':', 'NN', ')', ',', 'IN', 'JJ', 'JJ', 'NN', '.']",25
face_detection,11,30,"Similar to , this network consists of two sub-networks : an object proposal network and an accurate detection network .","['Similar', 'to', ',', 'this', 'network', 'consists', 'of', 'two', 'sub-networks', ':', 'an', 'object', 'proposal', 'network', 'and', 'an', 'accurate', 'detection', 'network', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['JJ', 'TO', ',', 'DT', 'NN', 'VBZ', 'IN', 'CD', 'NNS', ':', 'DT', 'NN', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', '.']",20
face_detection,11,31,Both of them are learned end - to - end and share computations .,"['Both', 'of', 'them', 'are', 'learned', 'end', '-', 'to', '-', 'end', 'and', 'share', 'computations', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O']","['DT', 'IN', 'PRP', 'VBP', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'CC', 'NN', 'NNS', '.']",14
face_detection,11,32,"However , to ease the inconsistency between the sizes of objects and receptive fields , object detection is performed with multiple output layers , each focusing on objects within certain scale ranges ( see ) .","['However', ',', 'to', 'ease', 'the', 'inconsistency', 'between', 'the', 'sizes', 'of', 'objects', 'and', 'receptive', 'fields', ',', 'object', 'detection', 'is', 'performed', 'with', 'multiple', 'output', 'layers', ',', 'each', 'focusing', 'on', 'objects', 'within', 'certain', 'scale', 'ranges', '(', 'see', ')', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['RB', ',', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NNS', 'IN', 'NNS', 'CC', 'JJ', 'NNS', ',', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'NNS', ',', 'DT', 'VBG', 'IN', 'NNS', 'IN', 'JJ', 'JJ', 'NNS', '(', 'VB', ')', '.']",36
face_detection,11,35,The complimentary detectors at different output layers are combined to form a strong multi-scale detector .,"['The', 'complimentary', 'detectors', 'at', 'different', 'output', 'layers', 'are', 'combined', 'to', 'form', 'a', 'strong', 'multi-scale', 'detector', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'JJ', 'NN', '.']",16
face_detection,11,191,The performance of the MS - CNN detector was evaluated on the KITTI and Caltech Pedestrian benchmarks .,"['The', 'performance', 'of', 'the', 'MS', '-', 'CNN', 'detector', 'was', 'evaluated', 'on', 'the', 'KITTI', 'and', 'Caltech', 'Pedestrian', 'benchmarks', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'NN', '.']",18
face_detection,11,202,"The detector was implemented in C ++ within the Caffe toolbox , and source code is available at https://github.com/zhaoweicai/mscnn.","['The', 'detector', 'was', 'implemented', 'in', 'C', '++', 'within', 'the', 'Caffe', 'toolbox', ',', 'and', 'source', 'code', 'is', 'available', 'at', 'https://github.com/zhaoweicai/mscnn.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['DT', 'NN', 'VBD', 'VBN', 'IN', 'NNP', 'NNP', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'NN']",19
face_detection,11,203,All times are reported for implementation on a single CPU core ( 2.40 GHz ) of an Intel Xeon E5 - 2630 server with 64 GB of RAM .,"['All', 'times', 'are', 'reported', 'for', 'implementation', 'on', 'a', 'single', 'CPU', 'core', '(', '2.40', 'GHz', ')', 'of', 'an', 'Intel', 'Xeon', 'E5', '-', '2630', 'server', 'with', '64', 'GB', 'of', 'RAM', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', '(', 'CD', 'NNP', ')', 'IN', 'DT', 'NNP', 'NNP', 'NNP', ':', 'CD', 'NN', 'IN', 'CD', 'NNP', 'IN', 'NNP', '.']",29
face_detection,11,204,An NVIDIA Titan GPU was used for CNN computations .,"['An', 'NVIDIA', 'Titan', 'GPU', 'was', 'used', 'for', 'CNN', 'computations', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NNP', 'NNP', 'VBD', 'VBN', 'IN', 'NNP', 'NNS', '.']",10
face_detection,11,260,The MS - CNN set a new record for the detection of pedestrians and cyclists .,"['The', 'MS', '-', 'CNN', 'set', 'a', 'new', 'record', 'for', 'the', 'detection', 'of', 'pedestrians', 'and', 'cyclists', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', ':', 'NNP', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'CC', 'NNS', '.']",16
face_detection,11,262,"We also led a nontrivial margin over the very recent SDP + RPN , which used scale depen - dent pooling .","['We', 'also', 'led', 'a', 'nontrivial', 'margin', 'over', 'the', 'very', 'recent', 'SDP', '+', 'RPN', ',', 'which', 'used', 'scale', 'depen', '-', 'dent', 'pooling', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'DT', 'RB', 'JJ', 'NNP', 'NNP', 'NNP', ',', 'WDT', 'VBD', 'NN', 'JJ', ':', 'NN', 'NN', '.']",22
face_detection,11,266,Pedestrian detection on Caltech The MS - CNN detector was also evaluated on the Caltech pedestrian benchmark .,"['Pedestrian', 'detection', 'on', 'Caltech', 'The', 'MS', '-', 'CNN', 'detector', 'was', 'also', 'evaluated', 'on', 'the', 'Caltech', 'pedestrian', 'benchmark', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['JJ', 'NN', 'IN', 'NNP', 'DT', 'NNP', ':', 'NNP', 'NN', 'VBD', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'JJ', 'NN', '.']",18
face_detection,11,268,"As shown in , the MS - CNN has state - of the - art performance . and ( c ) show that it performs very well for small and occluded objects , outperforming DeepParts , which explicitly addresses occlusion .","['As', 'shown', 'in', ',', 'the', 'MS', '-', 'CNN', 'has', 'state', '-', 'of', 'the', '-', 'art', 'performance', '.', 'and', '(', 'c', ')', 'show', 'that', 'it', 'performs', 'very', 'well', 'for', 'small', 'and', 'occluded', 'objects', ',', 'outperforming', 'DeepParts', ',', 'which', 'explicitly', 'addresses', 'occlusion', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'DT', 'NNP', ':', 'NN', 'VBZ', 'NN', ':', 'IN', 'DT', ':', 'NN', 'NN', '.', 'CC', '(', 'NN', ')', 'NN', 'IN', 'PRP', 'VBZ', 'RB', 'RB', 'IN', 'JJ', 'CC', 'JJ', 'NNS', ',', 'VBG', 'NNS', ',', 'WDT', 'RB', 'VBZ', 'NN', '.']",41
face_detection,14,2,WIDER FACE : A Face Detection Benchmark,"['WIDER', 'FACE', ':', 'A', 'Face', 'Detection', 'Benchmark']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['JJ', 'NNP', ':', 'DT', 'NNP', 'NNP', 'NNP']",7
face_detection,14,32,We introduce a large - scale face detection dataset called WIDER FACE .,"['We', 'introduce', 'a', 'large', '-', 'scale', 'face', 'detection', 'dataset', 'called', 'WIDER', 'FACE', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', ':', 'NN', 'NN', 'NN', 'NN', 'VBN', 'NNP', 'NNP', '.']",13
face_detection,14,33,"It consists of 32 , 203 images with 393 , 703 labeled faces , which is 10 times larger than the current largest face detection dataset .","['It', 'consists', 'of', '32', ',', '203', 'images', 'with', '393', ',', '703', 'labeled', 'faces', ',', 'which', 'is', '10', 'times', 'larger', 'than', 'the', 'current', 'largest', 'face', 'detection', 'dataset', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'IN', 'CD', ',', 'CD', 'NNS', 'IN', 'CD', ',', 'CD', 'VBD', 'VBZ', ',', 'WDT', 'VBZ', 'CD', 'NNS', 'JJR', 'IN', 'DT', 'JJ', 'JJS', 'NN', 'NN', 'NN', '.']",27
face_detection,14,34,"The faces vary largely in appearance , pose , and scale , as shown in .","['The', 'faces', 'vary', 'largely', 'in', 'appearance', ',', 'pose', ',', 'and', 'scale', ',', 'as', 'shown', 'in', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'VBZ', 'JJ', 'RB', 'IN', 'NN', ',', 'NN', ',', 'CC', 'NN', ',', 'IN', 'VBN', 'IN', '.']",16
face_detection,14,35,"In order to quantify different types of errors , we annotate multiple attributes : occlusion , pose , and event categories , which allows in depth analysis of existing algorithms .","['In', 'order', 'to', 'quantify', 'different', 'types', 'of', 'errors', ',', 'we', 'annotate', 'multiple', 'attributes', ':', 'occlusion', ',', 'pose', ',', 'and', 'event', 'categories', ',', 'which', 'allows', 'in', 'depth', 'analysis', 'of', 'existing', 'algorithms', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NNS', ',', 'PRP', 'VBP', 'JJ', 'NNS', ':', 'NN', ',', 'NN', ',', 'CC', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'NN', '.']",31
face_detection,14,149,"We select VJ , ACF , DPM , and Faceness as baselines .","['We', 'select', 'VJ', ',', 'ACF', ',', 'DPM', ',', 'and', 'Faceness', 'as', 'baselines', '.']","['O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O']","['PRP', 'VBP', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', 'IN', 'NNS', '.']",13
face_detection,14,155,Overall .,"['Overall', '.']","['B-n', 'O']","['JJ', '.']",2
face_detection,14,158,"Faceness outperforms other methods on three subsets , with DPM and ACF as marginal second and third .","['Faceness', 'outperforms', 'other', 'methods', 'on', 'three', 'subsets', ',', 'with', 'DPM', 'and', 'ACF', 'as', 'marginal', 'second', 'and', 'third', '.']","['B-n', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'VBZ', 'JJ', 'NNS', 'IN', 'CD', 'NNS', ',', 'IN', 'NNP', 'CC', 'NNP', 'IN', 'JJ', 'NN', 'CC', 'JJ', '.']",18
face_detection,14,159,"For the easy set , the average precision ( AP ) of most methods are over 60 % , but none of them surpasses 75 % .","['For', 'the', 'easy', 'set', ',', 'the', 'average', 'precision', '(', 'AP', ')', 'of', 'most', 'methods', 'are', 'over', '60', '%', ',', 'but', 'none', 'of', 'them', 'surpasses', '75', '%', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'JJS', 'NNS', 'VBP', 'IN', 'CD', 'NN', ',', 'CC', 'NN', 'IN', 'PRP', 'VBZ', 'CD', 'NN', '.']",27
face_detection,14,160,The performance drops 10 % for all methods on the medium set .,"['The', 'performance', 'drops', '10', '%', 'for', 'all', 'methods', 'on', 'the', 'medium', 'set', '.']","['O', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'CD', 'NN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",13
face_detection,14,161,The hard set is even more challenging .,"['The', 'hard', 'set', 'is', 'even', 'more', 'challenging', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'RB', 'RBR', 'JJ', '.']",8
face_detection,14,164,Scale .,"['Scale', '.']","['B-n', 'O']","['NN', '.']",2
face_detection,14,166,The results of small scale are abysmal : none of the algorithms is able to achieve more than 12 % AP .,"['The', 'results', 'of', 'small', 'scale', 'are', 'abysmal', ':', 'none', 'of', 'the', 'algorithms', 'is', 'able', 'to', 'achieve', 'more', 'than', '12', '%', 'AP', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'JJ', 'NN', 'VBP', 'JJ', ':', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'JJR', 'IN', 'CD', 'NN', 'NNP', '.']",22
face_detection,14,168,Occlusion .,"['Occlusion', '.']","['B-n', 'O']","['NN', '.']",2
face_detection,14,172,"With partial occlusion , the performance drops significantly .","['With', 'partial', 'occlusion', ',', 'the', 'performance', 'drops', 'significantly', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O']","['IN', 'JJ', 'NN', ',', 'DT', 'NN', 'VBZ', 'RB', '.']",9
face_detection,14,173,The maximum AP is only 26.5 % achieved by Faceness .,"['The', 'maximum', 'AP', 'is', 'only', '26.5', '%', 'achieved', 'by', 'Faceness', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'JJ', 'NNP', 'VBZ', 'RB', 'CD', 'NN', 'VBN', 'IN', 'NNP', '.']",11
face_detection,14,177,Pose .,"['Pose', '.']","['B-n', 'O']","['NNP', '.']",2
face_detection,14,183,"The best performance is achieved by Faceness , with a recall below 20 % .","['The', 'best', 'performance', 'is', 'achieved', 'by', 'Faceness', ',', 'with', 'a', 'recall', 'below', '20', '%', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJS', 'NN', 'VBZ', 'VBN', 'IN', 'NNP', ',', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",15
face_detection,7,2,Recurrent Scale Approximation for Object Detection in CNN,"['Recurrent', 'Scale', 'Approximation', 'for', 'Object', 'Detection', 'in', 'CNN']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP']",8
face_detection,7,4,"Since convolutional neural network ( CNN ) lacks an inherent mechanism to handle large scale variations , we always need to compute feature maps multiple times for multiscale object detection , which has the bottleneck of computational cost in practice .","['Since', 'convolutional', 'neural', 'network', '(', 'CNN', ')', 'lacks', 'an', 'inherent', 'mechanism', 'to', 'handle', 'large', 'scale', 'variations', ',', 'we', 'always', 'need', 'to', 'compute', 'feature', 'maps', 'multiple', 'times', 'for', 'multiscale', 'object', 'detection', ',', 'which', 'has', 'the', 'bottleneck', 'of', 'computational', 'cost', 'in', 'practice', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'JJ', 'NN', '(', 'NNP', ')', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'JJ', 'NNS', ',', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'NN', 'NNS', 'JJ', 'NNS', 'IN', 'JJ', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'NN', '.']",41
face_detection,7,17,"Our codes and annotations mentioned in Sec.4.1 can be accessed at github.com/sciencefans/RSA-for-object-detection dle the variations caused by appearance , location and scale .","['Our', 'codes', 'and', 'annotations', 'mentioned', 'in', 'Sec.4.1', 'can', 'be', 'accessed', 'at', 'github.com/sciencefans/RSA-for-object-detection', 'dle', 'the', 'variations', 'caused', 'by', 'appearance', ',', 'location', 'and', 'scale', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNS', 'CC', 'NNS', 'VBN', 'IN', 'NNP', 'MD', 'VB', 'VBN', 'IN', 'NN', 'VBP', 'DT', 'NNS', 'VBN', 'IN', 'NN', ',', 'NN', 'CC', 'NN', '.']",23
face_detection,7,35,"In this work , we propose a recurrent scale approximation ( RSA , see ) unit to achieve the goal aforementioned .","['In', 'this', 'work', ',', 'we', 'propose', 'a', 'recurrent', 'scale', 'approximation', '(', 'RSA', ',', 'see', ')', 'unit', 'to', 'achieve', 'the', 'goal', 'aforementioned', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'NN', '(', 'NNP', ',', 'VBP', ')', 'NN', 'TO', 'VB', 'DT', 'NN', 'VBD', '.']",22
face_detection,7,36,The RSA unit is designed to be plugged at some specific depths in a network and to be fed with an initial feature map at the largest scale .,"['The', 'RSA', 'unit', 'is', 'designed', 'to', 'be', 'plugged', 'at', 'some', 'specific', 'depths', 'in', 'a', 'network', 'and', 'to', 'be', 'fed', 'with', 'an', 'initial', 'feature', 'map', 'at', 'the', 'largest', 'scale', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'CC', 'TO', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJS', 'NN', '.']",29
face_detection,7,37,The unit convolves the input in a recurrent manner to generate the prediction of the feature map that is half the size of the input .,"['The', 'unit', 'convolves', 'the', 'input', 'in', 'a', 'recurrent', 'manner', 'to', 'generate', 'the', 'prediction', 'of', 'the', 'feature', 'map', 'that', 'is', 'half', 'the', 'size', 'of', 'the', 'input', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'WDT', 'VBZ', 'PDT', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",26
face_detection,7,38,Such a scheme could feed the network with input at one scale only and approximate the rest features at smaller scales through a learnable RSA unit - a balance considering both efficiency and accuracy .,"['Such', 'a', 'scheme', 'could', 'feed', 'the', 'network', 'with', 'input', 'at', 'one', 'scale', 'only', 'and', 'approximate', 'the', 'rest', 'features', 'at', 'smaller', 'scales', 'through', 'a', 'learnable', 'RSA', 'unit', '-', 'a', 'balance', 'considering', 'both', 'efficiency', 'and', 'accuracy', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'DT', 'NN', 'MD', 'VB', 'DT', 'NN', 'IN', 'NN', 'IN', 'CD', 'NN', 'RB', 'CC', 'VB', 'DT', 'NN', 'NNS', 'IN', 'JJR', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'NN', ':', 'DT', 'NN', 'VBG', 'DT', 'NN', 'CC', 'NN', '.']",35
face_detection,7,40,The first is a scale - forecast network to globally predict potential scales for a novel image and we compute feature pyramids for just a certain set of scales based on the prediction .,"['The', 'first', 'is', 'a', 'scale', '-', 'forecast', 'network', 'to', 'globally', 'predict', 'potential', 'scales', 'for', 'a', 'novel', 'image', 'and', 'we', 'compute', 'feature', 'pyramids', 'for', 'just', 'a', 'certain', 'set', 'of', 'scales', 'based', 'on', 'the', 'prediction', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['DT', 'JJ', 'VBZ', 'DT', 'JJ', ':', 'NN', 'NN', 'TO', 'RB', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'CC', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'RB', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'DT', 'NN', '.']",34
face_detection,7,42,The second is a landmark retracing network that retraces the location of the regressed landmarks in the preceding layers and generates a confidence score for each landmark based on the landmark feature set .,"['The', 'second', 'is', 'a', 'landmark', 'retracing', 'network', 'that', 'retraces', 'the', 'location', 'of', 'the', 'regressed', 'landmarks', 'in', 'the', 'preceding', 'layers', 'and', 'generates', 'a', 'confidence', 'score', 'for', 'each', 'landmark', 'based', 'on', 'the', 'landmark', 'feature', 'set', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'VBZ', 'DT', 'NN', 'VBG', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'CC', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBN', 'IN', 'DT', 'NN', 'NN', 'VBN', '.']",34
face_detection,7,43,The final score of identifying a face within an anchor is thereby revised by the LRN network .,"['The', 'final', 'score', 'of', 'identifying', 'a', 'face', 'within', 'an', 'anchor', 'is', 'thereby', 'revised', 'by', 'the', 'LRN', 'network', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",18
face_detection,7,46,The three components can be incorporated into a unified CNN framework and trained end - to - end .,"['The', 'three', 'components', 'can', 'be', 'incorporated', 'into', 'a', 'unified', 'CNN', 'framework', 'and', 'trained', 'end', '-', 'to', '-', 'end', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'CD', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'CC', 'JJ', 'NN', ':', 'TO', ':', 'NN', '.']",19
face_detection,7,178,"The structure of our model is a shallow version of the ResNet where the first seven ResNet blocks are used , i.e. , from conv1 to res3c .","['The', 'structure', 'of', 'our', 'model', 'is', 'a', 'shallow', 'version', 'of', 'the', 'ResNet', 'where', 'the', 'first', 'seven', 'ResNet', 'blocks', 'are', 'used', ',', 'i.e.', ',', 'from', 'conv1', 'to', 'res3c', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'WRB', 'DT', 'JJ', 'CD', 'NNP', 'NNS', 'VBP', 'VBN', ',', 'FW', ',', 'IN', 'NN', 'TO', 'VB', '.']",28
face_detection,7,179,We use this model in scale - forecast network and LRN .,"['We', 'use', 'this', 'model', 'in', 'scale', '-', 'forecast', 'network', 'and', 'LRN', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'JJ', ':', 'NN', 'NN', 'CC', 'NNP', '.']",12
face_detection,7,180,"All numbers of channels are set to half of the original ResNet model , for the consideration of time efficiency .","['All', 'numbers', 'of', 'channels', 'are', 'set', 'to', 'half', 'of', 'the', 'original', 'ResNet', 'model', ',', 'for', 'the', 'consideration', 'of', 'time', 'efficiency', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'NNS', 'VBP', 'VBN', 'TO', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', ',', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",21
face_detection,7,181,We first train the scale - forecast network and then use the output of predicted scales to launch the RSA unit and LRN .,"['We', 'first', 'train', 'the', 'scale', '-', 'forecast', 'network', 'and', 'then', 'use', 'the', 'output', 'of', 'predicted', 'scales', 'to', 'launch', 'the', 'RSA', 'unit', 'and', 'LRN', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', ':', 'NN', 'NN', 'CC', 'RB', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'NNP', 'NN', 'CC', 'NNP', '.']",24
face_detection,7,183,The ratio of the positive and the negative is 1 : 1 in all experiments .,"['The', 'ratio', 'of', 'the', 'positive', 'and', 'the', 'negative', 'is', '1', ':', '1', 'in', 'all', 'experiments', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'JJ', 'CC', 'DT', 'JJ', 'VBZ', 'CD', ':', 'CD', 'IN', 'DT', 'NNS', '.']",16
face_detection,7,184,"The batch size is 4 ; base learning rate is set to 0.001 with a decrease of 6 % every 10,000 iterations .","['The', 'batch', 'size', 'is', '4', ';', 'base', 'learning', 'rate', 'is', 'set', 'to', '0.001', 'with', 'a', 'decrease', 'of', '6', '%', 'every', '10,000', 'iterations', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', ':', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', 'DT', 'CD', 'NNS', '.']",23
face_detection,7,185,"The maximum training iteration is 1,000,000 .","['The', 'maximum', 'training', 'iteration', 'is', '1,000,000', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', '.']",7
face_detection,7,186,We use stochastic gradient descent as the optimizer .,"['We', 'use', 'stochastic', 'gradient', 'descent', 'as', 'the', 'optimizer', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",9
face_detection,7,187,The scale - forecast network is of vital importance to the computational cost and accuracy in the networks afterwards .,"['The', 'scale', '-', 'forecast', 'network', 'is', 'of', 'vital', 'importance', 'to', 'the', 'computational', 'cost', 'and', 'accuracy', 'in', 'the', 'networks', 'afterwards', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O']","['DT', 'JJ', ':', 'NN', 'NN', 'VBZ', 'IN', 'JJ', 'NN', 'TO', 'DT', 'JJ', 'NN', 'CC', 'NN', 'IN', 'DT', 'NNS', 'NNS', '.']",20
face_detection,7,190,"We can observe from the results that our trained scale network recalls almost 99 % at x = 1 , indicating that on average we only need to generate less than two predictions per image and that we can retrieve all face scales .","['We', 'can', 'observe', 'from', 'the', 'results', 'that', 'our', 'trained', 'scale', 'network', 'recalls', 'almost', '99', '%', 'at', 'x', '=', '1', ',', 'indicating', 'that', 'on', 'average', 'we', 'only', 'need', 'to', 'generate', 'less', 'than', 'two', 'predictions', 'per', 'image', 'and', 'that', 'we', 'can', 'retrieve', 'all', 'face', 'scales', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'IN', 'DT', 'NNS', 'IN', 'PRP$', 'JJ', 'NN', 'NN', 'VBZ', 'RB', 'CD', 'NN', 'IN', 'NNP', 'NNP', 'CD', ',', 'VBG', 'IN', 'IN', 'NN', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'JJR', 'IN', 'CD', 'NNS', 'IN', 'NN', 'CC', 'IN', 'PRP', 'MD', 'VB', 'DT', 'NN', 'NNS', '.']",44
face_detection,7,194,"We can conclude that the deeper the RSA is branched out , the worse the feature approximation at smaller scales will be .","['We', 'can', 'conclude', 'that', 'the', 'deeper', 'the', 'RSA', 'is', 'branched', 'out', ',', 'the', 'worse', 'the', 'feature', 'approximation', 'at', 'smaller', 'scales', 'will', 'be', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'IN', 'DT', 'JJR', 'DT', 'NNP', 'VBZ', 'VBN', 'RP', ',', 'DT', 'JJR', 'DT', 'NN', 'NN', 'IN', 'JJR', 'NNS', 'MD', 'VB', '.']",23
face_detection,7,206,Theoretically RSA can handle all scales of features in a deep CNN model and therefore can be branched out at any depth of the network .,"['Theoretically', 'RSA', 'can', 'handle', 'all', 'scales', 'of', 'features', 'in', 'a', 'deep', 'CNN', 'model', 'and', 'therefore', 'can', 'be', 'branched', 'out', 'at', 'any', 'depth', 'of', 'the', 'network', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'NNP', 'MD', 'VB', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'CC', 'NN', 'MD', 'VB', 'VBN', 'RP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",26
face_detection,7,214,The minimum operation in each component means only the scaleforecast network is used where no face appears in the image ; and the maximum operation indicates the amount when faces appear at all scales .,"['The', 'minimum', 'operation', 'in', 'each', 'component', 'means', 'only', 'the', 'scaleforecast', 'network', 'is', 'used', 'where', 'no', 'face', 'appears', 'in', 'the', 'image', ';', 'and', 'the', 'maximum', 'operation', 'indicates', 'the', 'amount', 'when', 'faces', 'appear', 'at', 'all', 'scales', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'WRB', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', ':', 'CC', 'DT', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'WRB', 'VBZ', 'VBP', 'IN', 'DT', 'NNS', '.']",35
face_detection,7,219,Most of the computation happens before layer res2 b and it has an acceptable error rate of 3.44 % .,"['Most', 'of', 'the', 'computation', 'happens', 'before', 'layer', 'res2', 'b', 'and', 'it', 'has', 'an', 'acceptable', 'error', 'rate', 'of', '3.44', '%', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['JJS', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'NN', 'NN', 'NN', 'CC', 'PRP', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'NN', '.']",20
face_detection,7,222,"For a particular case , as the times of the recurrent operation increase , the error rate goes up due to the cumulative effect of rolling out the predictions .","['For', 'a', 'particular', 'case', ',', 'as', 'the', 'times', 'of', 'the', 'recurrent', 'operation', 'increase', ',', 'the', 'error', 'rate', 'goes', 'up', 'due', 'to', 'the', 'cumulative', 'effect', 'of', 'rolling', 'out', 'the', 'predictions', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'VBZ', 'RP', 'JJ', 'TO', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'RP', 'DT', 'NNS', '.']",30
face_detection,19,2,Face Detection Using Improved Faster RCNN,"['Face', 'Detection', 'Using', 'Improved', 'Faster', 'RCNN']","['B-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP']",6
face_detection,19,18,"In this report , we propose a detailed design Faster RCNN method named FDNet1.0 for face detection , which achieves more decent performance than previous methods .","['In', 'this', 'report', ',', 'we', 'propose', 'a', 'detailed', 'design', 'Faster', 'RCNN', 'method', 'named', 'FDNet1.0', 'for', 'face', 'detection', ',', 'which', 'achieves', 'more', 'decent', 'performance', 'than', 'previous', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NNP', 'NNP', 'NN', 'VBN', 'NNP', 'IN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'RBR', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",27
face_detection,19,19,"A deformable layer with fewer channels is attached to the backbone network to produce a "" thin "" feature map , which is subsequently fed to a full connected layer , building an efficient yet accurate two - stage detector .","['A', 'deformable', 'layer', 'with', 'fewer', 'channels', 'is', 'attached', 'to', 'the', 'backbone', 'network', 'to', 'produce', 'a', '""', 'thin', '""', 'feature', 'map', ',', 'which', 'is', 'subsequently', 'fed', 'to', 'a', 'full', 'connected', 'layer', ',', 'building', 'an', 'efficient', 'yet', 'accurate', 'two', '-', 'stage', 'detector', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'JJR', 'NNS', 'VBZ', 'VBN', 'TO', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'JJ', 'NNP', 'NN', 'NN', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'TO', 'DT', 'JJ', 'VBN', 'NN', ',', 'VBG', 'DT', 'NN', 'RB', 'JJ', 'CD', ':', 'NN', 'NN', '.']",41
face_detection,19,20,"At testing time , we also find a comparable mean average precision ( m AP ) be achieved when the top - ranked proposals ( e.g. , 6000 ) are directly selected without NMS in the RPN stage over WIDER FACE dataset .","['At', 'testing', 'time', ',', 'we', 'also', 'find', 'a', 'comparable', 'mean', 'average', 'precision', '(', 'm', 'AP', ')', 'be', 'achieved', 'when', 'the', 'top', '-', 'ranked', 'proposals', '(', 'e.g.', ',', '6000', ')', 'are', 'directly', 'selected', 'without', 'NMS', 'in', 'the', 'RPN', 'stage', 'over', 'WIDER', 'FACE', 'dataset', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'JJ', 'JJ', 'NN', '(', 'JJ', 'NNP', ')', 'VB', 'VBN', 'WRB', 'DT', 'JJ', ':', 'VBN', 'NNS', '(', 'NN', ',', 'CD', ')', 'VBP', 'RB', 'VBN', 'IN', 'NNP', 'IN', 'DT', 'NNP', 'NN', 'IN', 'NNP', 'NNP', 'NN', '.']",43
face_detection,19,22,"Furthermore , the multi-scale training and testing strategy are also applied in our work .","['Furthermore', ',', 'the', 'multi-scale', 'training', 'and', 'testing', 'strategy', 'are', 'also', 'applied', 'in', 'our', 'work', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['RB', ',', 'DT', 'JJ', 'NN', 'CC', 'VBG', 'NN', 'VBP', 'RB', 'VBN', 'IN', 'PRP$', 'NN', '.']",15
face_detection,19,84,Single NVIDIA Tesla K80 is used for training and testing .,"['Single', 'NVIDIA', 'Tesla', 'K80', 'is', 'used', 'for', 'training', 'and', 'testing', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'VBN', 'IN', 'NN', 'CC', 'NN', '.']",11
face_detection,19,85,Mini batch size is set to 1 considering memory consumption .,"['Mini', 'batch', 'size', 'is', 'set', 'to', '1', 'considering', 'memory', 'consumption', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'VBG', 'NN', 'NN', '.']",11
face_detection,19,86,"Specifically , ResNet_v1_101 trained on ImageNet - 128w is used for Faster RCNN feature extraction .","['Specifically', ',', 'ResNet_v1_101', 'trained', 'on', 'ImageNet', '-', '128w', 'is', 'used', 'for', 'Faster', 'RCNN', 'feature', 'extraction', '.']","['O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'VBD', 'IN', 'NNP', ':', 'CD', 'VBZ', 'VBN', 'IN', 'NNP', 'NNP', 'NN', 'NN', '.']",16
face_detection,19,89,"Aspect ratios ( 1 , 1.5 , 2 ) and scales ( 16 2 , 32 2 , 64 2 , 128 2 , 256 2 , 512 2 ) are carefully designed to capture better locations of faces in the RPN stage , and the number of filters for the RPN layer is set as 512 .","['Aspect', 'ratios', '(', '1', ',', '1.5', ',', '2', ')', 'and', 'scales', '(', '16', '2', ',', '32', '2', ',', '64', '2', ',', '128', '2', ',', '256', '2', ',', '512', '2', ')', 'are', 'carefully', 'designed', 'to', 'capture', 'better', 'locations', 'of', 'faces', 'in', 'the', 'RPN', 'stage', ',', 'and', 'the', 'number', 'of', 'filters', 'for', 'the', 'RPN', 'layer', 'is', 'set', 'as', '512', '.']","['B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['JJ', 'NNS', '(', 'CD', ',', 'CD', ',', 'CD', ')', 'CC', 'NNS', '(', 'CD', 'CD', ',', 'CD', 'CD', ',', 'CD', 'CD', ',', 'CD', 'CD', ',', 'CD', 'CD', ',', 'CD', 'CD', ')', 'VBP', 'RB', 'VBN', 'TO', 'VB', 'JJR', 'NNS', 'IN', 'VBZ', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NNP', 'NN', 'VBZ', 'VBN', 'IN', 'CD', '.']",58
face_detection,19,94,"By the way , the batch size of RPN and R - CNN is respectively assigned as 256 and 128 .","['By', 'the', 'way', ',', 'the', 'batch', 'size', 'of', 'RPN', 'and', 'R', '-', 'CNN', 'is', 'respectively', 'assigned', 'as', '256', 'and', '128', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'NN', 'NN', 'IN', 'NNP', 'CC', 'NNP', ':', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'CD', 'CC', 'CD', '.']",21
face_detection,19,95,"The initial learning rate is set to 1e - 3 , and decrease to 1e - 4 after 20w iterations .","['The', 'initial', 'learning', 'rate', 'is', 'set', 'to', '1e', '-', '3', ',', 'and', 'decrease', 'to', '1e', '-', '4', 'after', '20w', 'iterations', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', ':', 'CD', ',', 'CC', 'NN', 'TO', 'CD', ':', 'CD', 'IN', 'CD', 'NNS', '.']",21
face_detection,19,96,Weight decay is and momentum is set to 1e - 4 and 0.9 respectively .,"['Weight', 'decay', 'is', 'and', 'momentum', 'is', 'set', 'to', '1e', '-', '4', 'and', '0.9', 'respectively', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['NNP', 'NN', 'VBZ', 'CC', 'NN', 'VBZ', 'VBN', 'TO', 'CD', ':', 'CD', 'CC', 'CD', 'RB', '.']",15
face_detection,19,103,"Compared with the recently published top approaches , FDNet1.0 wins two 1st places ( easy set = 95.9 % , medium set = 94.5 % ) and one 2nd place ( hard set = 87.9 % ) on the validation set , as illustrated in .","['Compared', 'with', 'the', 'recently', 'published', 'top', 'approaches', ',', 'FDNet1.0', 'wins', 'two', '1st', 'places', '(', 'easy', 'set', '=', '95.9', '%', ',', 'medium', 'set', '=', '94.5', '%', ')', 'and', 'one', '2nd', 'place', '(', 'hard', 'set', '=', '87.9', '%', ')', 'on', 'the', 'validation', 'set', ',', 'as', 'illustrated', 'in', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'DT', 'RB', 'VBN', 'JJ', 'NNS', ',', 'NNP', 'VBZ', 'CD', 'CD', 'NNS', '(', 'JJ', 'VBN', 'RB', 'CD', 'NN', ',', 'NN', 'VBN', 'RB', 'CD', 'NN', ')', 'CC', 'CD', 'CD', 'NN', '(', 'JJ', 'VBN', 'RB', 'CD', 'NN', ')', 'IN', 'DT', 'NN', 'NN', ',', 'IN', 'VBN', 'IN', '.']",46
face_detection,20,2,Aggregate Channel Features for Multi-view Face Detection,"['Aggregate', 'Channel', 'Features', 'for', 'Multi-view', 'Face', 'Detection']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",7
face_detection,20,4,Face detection has drawn much attention in recent decades since the seminal work by Viola and Jones .,"['Face', 'detection', 'has', 'drawn', 'much', 'attention', 'in', 'recent', 'decades', 'since', 'the', 'seminal', 'work', 'by', 'Viola', 'and', 'Jones', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'VBN', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'CC', 'NNP', '.']",18
face_detection,20,11,Human face detection have long been one of the most fundamental problems in computer vision and humancomputer interaction .,"['Human', 'face', 'detection', 'have', 'long', 'been', 'one', 'of', 'the', 'most', 'fundamental', 'problems', 'in', 'computer', 'vision', 'and', 'humancomputer', 'interaction', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'NN', 'VBP', 'RB', 'VBN', 'CD', 'IN', 'DT', 'RBS', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",19
face_detection,20,25,"In this paper , we adopt a variant of channel features called aggregate channel features , which are extracted directly as pixel values on subsampled channels .","['In', 'this', 'paper', ',', 'we', 'adopt', 'a', 'variant', 'of', 'channel', 'features', 'called', 'aggregate', 'channel', 'features', ',', 'which', 'are', 'extracted', 'directly', 'as', 'pixel', 'values', 'on', 'subsampled', 'channels', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBN', 'JJ', 'NN', 'NNS', ',', 'WDT', 'VBP', 'VBN', 'RB', 'IN', 'NN', 'NNS', 'IN', 'JJ', 'NNS', '.']",27
face_detection,20,27,"With these two superiorities , the aggregate channel features breakthrough the bottleneck in VJ framework and have the potential to make great advance in face detection .","['With', 'these', 'two', 'superiorities', ',', 'the', 'aggregate', 'channel', 'features', 'breakthrough', 'the', 'bottleneck', 'in', 'VJ', 'framework', 'and', 'have', 'the', 'potential', 'to', 'make', 'great', 'advance', 'in', 'face', 'detection', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'CD', 'NNS', ',', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NN', 'CC', 'VBP', 'DT', 'JJ', 'TO', 'VB', 'JJ', 'NN', 'IN', 'NN', 'NN', '.']",27
face_detection,20,29,"To do so , we make a deep and all - round investigation into the specific feature parameters concerning channel types , feature pool size , subsampling method , feature scale and soon , which gives insights into the feature design and hopefully provides helpful guidelines for practitioners .","['To', 'do', 'so', ',', 'we', 'make', 'a', 'deep', 'and', 'all', '-', 'round', 'investigation', 'into', 'the', 'specific', 'feature', 'parameters', 'concerning', 'channel', 'types', ',', 'feature', 'pool', 'size', ',', 'subsampling', 'method', ',', 'feature', 'scale', 'and', 'soon', ',', 'which', 'gives', 'insights', 'into', 'the', 'feature', 'design', 'and', 'hopefully', 'provides', 'helpful', 'guidelines', 'for', 'practitioners', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'CC', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'VBG', 'NN', 'NNS', ',', 'NN', 'NN', 'NN', ',', 'VBG', 'NN', ',', 'NN', 'NN', 'CC', 'RB', ',', 'WDT', 'VBZ', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'RB', 'VBZ', 'JJ', 'NNS', 'IN', 'NNS', '.']",49
face_detection,20,30,"Through the deep exploration , we find that : 1 ) multi-scaling the feature representation further enriches the representation capacity since original aggregate channel features have uniform feature scale ; 2 ) different combinations of channel types impact the performance greatly , while for face detection the color channel in LUV space , plus gradient magnitude channel and gradient histograms channels in RGB space show best result ; 3 ) multi-view detection is proven to be a good match with aggregate channel features as the representation naturally encodes the facial structure ( ) .","['Through', 'the', 'deep', 'exploration', ',', 'we', 'find', 'that', ':', '1', ')', 'multi-scaling', 'the', 'feature', 'representation', 'further', 'enriches', 'the', 'representation', 'capacity', 'since', 'original', 'aggregate', 'channel', 'features', 'have', 'uniform', 'feature', 'scale', ';', '2', ')', 'different', 'combinations', 'of', 'channel', 'types', 'impact', 'the', 'performance', 'greatly', ',', 'while', 'for', 'face', 'detection', 'the', 'color', 'channel', 'in', 'LUV', 'space', ',', 'plus', 'gradient', 'magnitude', 'channel', 'and', 'gradient', 'histograms', 'channels', 'in', 'RGB', 'space', 'show', 'best', 'result', ';', '3', ')', 'multi-view', 'detection', 'is', 'proven', 'to', 'be', 'a', 'good', 'match', 'with', 'aggregate', 'channel', 'features', 'as', 'the', 'representation', 'naturally', 'encodes', 'the', 'facial', 'structure', '(', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', 'IN', ':', 'CD', ')', 'NN', 'DT', 'NN', 'NN', 'RBR', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', 'NNS', 'VBP', 'JJ', 'NN', 'NN', ':', 'CD', ')', 'JJ', 'NNS', 'IN', 'NN', 'NNS', 'VBP', 'DT', 'NN', 'RB', ',', 'IN', 'IN', 'NN', 'NN', 'DT', 'NN', 'NN', 'IN', 'NNP', 'NN', ',', 'CC', 'JJ', 'NN', 'NN', 'CC', 'JJ', 'NN', 'NNS', 'IN', 'NNP', 'NN', 'NN', 'RBS', 'NN', ':', 'CD', ')', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'VBZ', 'IN', 'DT', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', '(', ')', '.']",94
face_detection,20,243,"As shown in , in AFW , our multi-scale detector achieves an ap value of 96.8 % , outperforming other academic methods by a large margin .","['As', 'shown', 'in', ',', 'in', 'AFW', ',', 'our', 'multi-scale', 'detector', 'achieves', 'an', 'ap', 'value', 'of', '96.8', '%', ',', 'outperforming', 'other', 'academic', 'methods', 'by', 'a', 'large', 'margin', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'IN', 'NNP', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NN', ',', 'VBG', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",27
face_detection,20,244,"When it comes to commercial systems , ours is better than Face.com and almost equal to Face ++ and Google Picasa .","['When', 'it', 'comes', 'to', 'commercial', 'systems', ',', 'ours', 'is', 'better', 'than', 'Face.com', 'and', 'almost', 'equal', 'to', 'Face', '++', 'and', 'Google', 'Picasa', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['WRB', 'PRP', 'VBZ', 'TO', 'JJ', 'NNS', ',', 'EX', 'VBZ', 'JJR', 'IN', 'NNP', 'CC', 'RB', 'JJ', 'TO', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', '.']",22
face_detection,20,248,"In discrete score where evaluation metric is the same as in AFW , our detector achieves 83.7 % , which is a little better than Yan et al ..","['In', 'discrete', 'score', 'where', 'evaluation', 'metric', 'is', 'the', 'same', 'as', 'in', 'AFW', ',', 'our', 'detector', 'achieves', '83.7', '%', ',', 'which', 'is', 'a', 'little', 'better', 'than', 'Yan', 'et', 'al', '..']","['B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NN', 'WRB', 'NN', 'JJ', 'VBZ', 'DT', 'JJ', 'IN', 'IN', 'NNP', ',', 'PRP$', 'NN', 'VBZ', 'CD', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'JJR', 'IN', 'NNP', 'CC', 'NN', 'NN']",29
face_detection,20,250,"When using continuous score which takes the overlap ratio as the score , our method gets 61.9 % true positive rate at 1 FPPI for multiscale version , surpassing other methods which output rectangular detections by a notable margin ( the Yan et al . detector outputs the same elliptical detections as the groundtruth , therefore having advantages with this metric ) .","['When', 'using', 'continuous', 'score', 'which', 'takes', 'the', 'overlap', 'ratio', 'as', 'the', 'score', ',', 'our', 'method', 'gets', '61.9', '%', 'true', 'positive', 'rate', 'at', '1', 'FPPI', 'for', 'multiscale', 'version', ',', 'surpassing', 'other', 'methods', 'which', 'output', 'rectangular', 'detections', 'by', 'a', 'notable', 'margin', '(', 'the', 'Yan', 'et', 'al', '.', 'detector', 'outputs', 'the', 'same', 'elliptical', 'detections', 'as', 'the', 'groundtruth', ',', 'therefore', 'having', 'advantages', 'with', 'this', 'metric', ')', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['WRB', 'VBG', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'PRP$', 'JJ', 'VBZ', 'CD', 'NN', 'JJ', 'JJ', 'NN', 'IN', 'CD', 'NNP', 'IN', 'JJ', 'NN', ',', 'VBG', 'JJ', 'NNS', 'WDT', 'NN', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'DT', 'NNP', 'CC', 'NN', '.', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'NN', ',', 'RB', 'VBG', 'NNS', 'IN', 'DT', 'JJ', ')', '.']",63
face_detection,20,251,Our detector using single - scale features performs a little worse with the benefit of faster detection speed .,"['Our', 'detector', 'using', 'single', '-', 'scale', 'features', 'performs', 'a', 'little', 'worse', 'with', 'the', 'benefit', 'of', 'faster', 'detection', 'speed', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBG', 'JJ', ':', 'NN', 'NNS', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJR', 'NN', 'NN', '.']",19
face_detection,18,2,CMS- RCNN : Contextual Multi- Scale Region - based CNN for Unconstrained Face Detection,"['CMS-', 'RCNN', ':', 'Contextual', 'Multi-', 'Scale', 'Region', '-', 'based', 'CNN', 'for', 'Unconstrained', 'Face', 'Detection']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['JJ', 'NNP', ':', 'JJ', 'NNP', 'NNP', 'NNP', ':', 'VBN', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",14
face_detection,18,4,"Robust face detection in the wild is one of the ultimate components to support various facial related problems , i.e. unconstrained face recognition , facial periocular recognition , facial landmarking and pose estimation , facial expression recognition , 3 D facial model construction , etc .","['Robust', 'face', 'detection', 'in', 'the', 'wild', 'is', 'one', 'of', 'the', 'ultimate', 'components', 'to', 'support', 'various', 'facial', 'related', 'problems', ',', 'i.e.', 'unconstrained', 'face', 'recognition', ',', 'facial', 'periocular', 'recognition', ',', 'facial', 'landmarking', 'and', 'pose', 'estimation', ',', 'facial', 'expression', 'recognition', ',', '3', 'D', 'facial', 'model', 'construction', ',', 'etc', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'CD', 'IN', 'DT', 'JJ', 'NNS', 'TO', 'VB', 'JJ', 'JJ', 'VBN', 'NNS', ',', 'FW', 'JJ', 'NN', 'NN', ',', 'JJ', 'JJ', 'NN', ',', 'JJ', 'NN', 'CC', 'JJ', 'NN', ',', 'JJ', 'NN', 'NN', ',', 'CD', 'NNP', 'JJ', 'NN', 'NN', ',', 'FW', '.']",46
face_detection,18,5,"Although the face detection problem has been intensely studied for decades with various commercial applications , it still meets problems in some real - world scenarios due to numerous challenges , e.g. heavy facial occlusions , extremely low resolutions , strong illumination , exceptionally pose variations , image or video compression artifacts , etc .","['Although', 'the', 'face', 'detection', 'problem', 'has', 'been', 'intensely', 'studied', 'for', 'decades', 'with', 'various', 'commercial', 'applications', ',', 'it', 'still', 'meets', 'problems', 'in', 'some', 'real', '-', 'world', 'scenarios', 'due', 'to', 'numerous', 'challenges', ',', 'e.g.', 'heavy', 'facial', 'occlusions', ',', 'extremely', 'low', 'resolutions', ',', 'strong', 'illumination', ',', 'exceptionally', 'pose', 'variations', ',', 'image', 'or', 'video', 'compression', 'artifacts', ',', 'etc', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'RB', 'VBN', 'IN', 'NNS', 'IN', 'JJ', 'JJ', 'NNS', ',', 'PRP', 'RB', 'VBZ', 'NNS', 'IN', 'DT', 'JJ', ':', 'NN', 'NNS', 'JJ', 'TO', 'JJ', 'NNS', ',', 'VBP', 'JJ', 'JJ', 'NNS', ',', 'RB', 'JJ', 'NNS', ',', 'JJ', 'NN', ',', 'RB', 'JJ', 'NNS', ',', 'NN', 'CC', 'JJ', 'NN', 'NNS', ',', 'FW', '.']",55
face_detection,18,21,"This paper presents an advanced CNN based approach named Contextual Multi - Scale Region - based CNN ( CMS - RCNN ) to handle the problem of face detection in digital face images collected under numerous challenging conditions , e.g. heavy facial occlusion , illumination , extreme offangle , low - resolution , scale difference , etc .","['This', 'paper', 'presents', 'an', 'advanced', 'CNN', 'based', 'approach', 'named', 'Contextual', 'Multi', '-', 'Scale', 'Region', '-', 'based', 'CNN', '(', 'CMS', '-', 'RCNN', ')', 'to', 'handle', 'the', 'problem', 'of', 'face', 'detection', 'in', 'digital', 'face', 'images', 'collected', 'under', 'numerous', 'challenging', 'conditions', ',', 'e.g.', 'heavy', 'facial', 'occlusion', ',', 'illumination', ',', 'extreme', 'offangle', ',', 'low', '-', 'resolution', ',', 'scale', 'difference', ',', 'etc', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'NNP', 'VBN', 'NN', 'VBN', 'NNP', 'NNP', ':', 'JJ', 'NNP', ':', 'VBN', 'NNP', '(', 'NNP', ':', 'NN', ')', 'TO', 'VB', 'DT', 'NN', 'IN', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', ',', 'VBP', 'JJ', 'JJ', 'NN', ',', 'NN', ',', 'JJ', 'NN', ',', 'JJ', ':', 'NN', ',', 'JJ', 'NN', ',', 'FW', '.']",58
face_detection,18,22,"Our designed region - based CNN architecture allows the network to simultaneously look at multi-scale features , as well as to explicitly look outside facial regions as the potential body regions .","['Our', 'designed', 'region', '-', 'based', 'CNN', 'architecture', 'allows', 'the', 'network', 'to', 'simultaneously', 'look', 'at', 'multi-scale', 'features', ',', 'as', 'well', 'as', 'to', 'explicitly', 'look', 'outside', 'facial', 'regions', 'as', 'the', 'potential', 'body', 'regions', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'VBN', 'NN', ':', 'VBN', 'NNP', 'NN', 'VBZ', 'DT', 'NN', 'TO', 'RB', 'VB', 'IN', 'JJ', 'NNS', ',', 'RB', 'RB', 'IN', 'TO', 'RB', 'VB', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NNS', '.']",32
face_detection,18,24,Additionally this architecture also helps to synchronize both the global semantic features in high level layers and the localization features in low level layers for facial representation .,"['Additionally', 'this', 'architecture', 'also', 'helps', 'to', 'synchronize', 'both', 'the', 'global', 'semantic', 'features', 'in', 'high', 'level', 'layers', 'and', 'the', 'localization', 'features', 'in', 'low', 'level', 'layers', 'for', 'facial', 'representation', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'DT', 'NN', 'RB', 'VBZ', 'TO', 'VB', 'PDT', 'DT', 'JJ', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NNS', 'CC', 'DT', 'NN', 'NNS', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'JJ', 'NN', '.']",28
face_detection,18,26,Our CMS - RCNN method introduces the Multi - Scale Region Proposal Network ( MS - RPN ) to generate a set of region candidates and the Contextual Multi - Scale Convolution Neural Network ( CMS - CNN ) to do inference on the region candidates of facial regions .,"['Our', 'CMS', '-', 'RCNN', 'method', 'introduces', 'the', 'Multi', '-', 'Scale', 'Region', 'Proposal', 'Network', '(', 'MS', '-', 'RPN', ')', 'to', 'generate', 'a', 'set', 'of', 'region', 'candidates', 'and', 'the', 'Contextual', 'Multi', '-', 'Scale', 'Convolution', 'Neural', 'Network', '(', 'CMS', '-', 'CNN', ')', 'to', 'do', 'inference', 'on', 'the', 'region', 'candidates', 'of', 'facial', 'regions', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-p', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NNP', ':', 'NNP', 'NN', 'VBZ', 'DT', 'NNP', ':', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ':', 'NN', ')', 'TO', 'VB', 'DT', 'NN', 'IN', 'NN', 'NNS', 'CC', 'DT', 'NNP', 'NNP', ':', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ':', 'NN', ')', 'TO', 'VB', 'NN', 'IN', 'DT', 'NN', 'NNS', 'IN', 'JJ', 'NNS', '.']",50
face_detection,18,228,Our CMS - RCNN is implemented in the Caffe deep learning framework .,"['Our', 'CMS', '-', 'RCNN', 'is', 'implemented', 'in', 'the', 'Caffe', 'deep', 'learning', 'framework', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNP', ':', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'JJ', 'NN', 'NN', '.']",13
face_detection,18,229,"The first 5 sets of convolution layers have the same architecture as the deep VGG - 16 model , and during training their parameters are initialized from the pre-trained VGG - 16 .","['The', 'first', '5', 'sets', 'of', 'convolution', 'layers', 'have', 'the', 'same', 'architecture', 'as', 'the', 'deep', 'VGG', '-', '16', 'model', ',', 'and', 'during', 'training', 'their', 'parameters', 'are', 'initialized', 'from', 'the', 'pre-trained', 'VGG', '-', '16', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'CD', 'NNS', 'IN', 'NN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNP', ':', 'CD', 'NN', ',', 'CC', 'IN', 'VBG', 'PRP$', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNP', ':', 'CD', '.']",33
face_detection,18,232,"In the MS - RPN , we want ' conv3 ' , ' conv4 ' , and ' conv5 ' to be synchronized to the same size so that concatenation can be applied .","['In', 'the', 'MS', '-', 'RPN', ',', 'we', 'want', ""'"", 'conv3', ""'"", ',', ""'"", 'conv4', ""'"", ',', 'and', ""'"", 'conv5', ""'"", 'to', 'be', 'synchronized', 'to', 'the', 'same', 'size', 'so', 'that', 'concatenation', 'can', 'be', 'applied', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'O']","['IN', 'DT', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', ""''"", 'NN', ""''"", ',', ""''"", 'NN', ""''"", ',', 'CC', 'POS', 'NN', ""''"", 'TO', 'VB', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'MD', 'VB', 'VBN', '.']",34
face_detection,18,233,So ' conv3 ' is followed by pooling layer to perform down - sampling .,"['So', ""'"", 'conv3', ""'"", 'is', 'followed', 'by', 'pooling', 'layer', 'to', 'perform', 'down', '-', 'sampling', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ""''"", 'NN', ""''"", 'VBZ', 'VBN', 'IN', 'VBG', 'NN', 'TO', 'VB', 'RP', ':', 'NN', '.']",15
face_detection,18,234,"Then ' conv3 ' , ' conv4 ' , and ' conv5 ' are normalized along the channel axis to a learnable re-weighting scale and concatenated together .","['Then', ""'"", 'conv3', ""'"", ',', ""'"", 'conv4', ""'"", ',', 'and', ""'"", 'conv5', ""'"", 'are', 'normalized', 'along', 'the', 'channel', 'axis', 'to', 'a', 'learnable', 're-weighting', 'scale', 'and', 'concatenated', 'together', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O']","['RB', ""''"", 'NN', ""''"", ',', ""''"", 'NN', ""''"", ',', 'CC', 'POS', 'NN', ""''"", 'VBP', 'VBN', 'IN', 'DT', 'NN', 'NN', 'TO', 'DT', 'JJ', 'JJ', 'NN', 'CC', 'VBN', 'RB', '.']",28
face_detection,18,235,"To ensure training convergence , the initial re-weighting scale needs to be carefully set .","['To', 'ensure', 'training', 'convergence', ',', 'the', 'initial', 're-weighting', 'scale', 'needs', 'to', 'be', 'carefully', 'set', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'VBG', 'NN', ',', 'DT', 'JJ', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'RB', 'VBN', '.']",15
face_detection,18,236,"Here we set the initial scale of ' conv3 ' , ' conv4 ' , and ' conv5 ' to be 66.84 , 94.52 , and 94.52 respectively .","['Here', 'we', 'set', 'the', 'initial', 'scale', 'of', ""'"", 'conv3', ""'"", ',', ""'"", 'conv4', ""'"", ',', 'and', ""'"", 'conv5', ""'"", 'to', 'be', '66.84', ',', '94.52', ',', 'and', '94.52', 'respectively', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['RB', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', ""''"", 'NN', ""''"", ',', ""''"", 'NN', ""''"", ',', 'CC', 'POS', 'NN', ""''"", 'TO', 'VB', 'CD', ',', 'CD', ',', 'CC', 'CD', 'RB', '.']",29
face_detection,18,237,"In the CMS - CNN , the RoI pooling layer already ensure that the pooled feature maps have the same size .","['In', 'the', 'CMS', '-', 'CNN', ',', 'the', 'RoI', 'pooling', 'layer', 'already', 'ensure', 'that', 'the', 'pooled', 'feature', 'maps', 'have', 'the', 'same', 'size', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ':', 'NN', ',', 'DT', 'NNP', 'VBG', 'NN', 'RB', 'VB', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', '.']",22
face_detection,18,239,"Specifically , features pooled from ' conv3 ' , ' conv4 ' , and ' conv5 ' are initialized with scale to be 57.75 , 81.67 , and 81.67 respectively , for both face and body pipelines .","['Specifically', ',', 'features', 'pooled', 'from', ""'"", 'conv3', ""'"", ',', ""'"", 'conv4', ""'"", ',', 'and', ""'"", 'conv5', ""'"", 'are', 'initialized', 'with', 'scale', 'to', 'be', '57.75', ',', '81.67', ',', 'and', '81.67', 'respectively', ',', 'for', 'both', 'face', 'and', 'body', 'pipelines', '.']","['O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNS', 'VBD', 'IN', ""''"", 'NN', ""''"", ',', ""''"", 'NN', ""''"", ',', 'CC', 'POS', 'NN', ""''"", 'VBP', 'VBN', 'IN', 'NN', 'TO', 'VB', 'CD', ',', 'CD', ',', 'CC', 'CD', 'RB', ',', 'IN', 'DT', 'NN', 'CC', 'NN', 'NNS', '.']",38
face_detection,18,240,"The MS - RPN and the CMS - CNN share the same parameters for all convolution layers so that computation can be done once , resulting in higher efficiency .","['The', 'MS', '-', 'RPN', 'and', 'the', 'CMS', '-', 'CNN', 'share', 'the', 'same', 'parameters', 'for', 'all', 'convolution', 'layers', 'so', 'that', 'computation', 'can', 'be', 'done', 'once', ',', 'resulting', 'in', 'higher', 'efficiency', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', ':', 'NN', 'CC', 'DT', 'NNP', ':', 'NNP', 'NN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'RB', 'IN', 'NN', 'MD', 'VB', 'VBN', 'RB', ',', 'VBG', 'IN', 'JJR', 'NN', '.']",30
face_detection,18,241,"Additionally , in order to shrink the channel size of the concatenated feature map , a 11 convolution layer is then employed .","['Additionally', ',', 'in', 'order', 'to', 'shrink', 'the', 'channel', 'size', 'of', 'the', 'concatenated', 'feature', 'map', ',', 'a', '11', 'convolution', 'layer', 'is', 'then', 'employed', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O']","['RB', ',', 'IN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'DT', 'CD', 'NN', 'NN', 'VBZ', 'RB', 'VBN', '.']",23
face_detection,18,249,Experiments on WIDER FACE Dataset,"['Experiments', 'on', 'WIDER', 'FACE', 'Dataset']","['O', 'B-p', 'B-n', 'I-n', 'I-n']","['NNS', 'IN', 'NNP', 'NNP', 'NNP']",5
face_detection,18,268,"It achieves the best average precision in all level faces , i.e. AP = 0.902 ( Easy ) , 0.874 ( Medium ) and 0.643 ( Hard ) , and outperforms the second best baseline by 26.0 % ( Easy ) , 37.4 % ( Medium ) and 60.8 % ( Hard ) .","['It', 'achieves', 'the', 'best', 'average', 'precision', 'in', 'all', 'level', 'faces', ',', 'i.e.', 'AP', '=', '0.902', '(', 'Easy', ')', ',', '0.874', '(', 'Medium', ')', 'and', '0.643', '(', 'Hard', ')', ',', 'and', 'outperforms', 'the', 'second', 'best', 'baseline', 'by', '26.0', '%', '(', 'Easy', ')', ',', '37.4', '%', '(', 'Medium', ')', 'and', '60.8', '%', '(', 'Hard', ')', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O']","['PRP', 'VBZ', 'DT', 'JJS', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBZ', ',', 'FW', 'NNP', '$', 'CD', '(', 'NNP', ')', ',', 'CD', '(', 'NNP', ')', 'CC', 'CD', '(', 'NNP', ')', ',', 'CC', 'VBZ', 'DT', 'JJ', 'RBS', 'NN', 'IN', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', '.']",54
face_detection,18,295,Experiments on FDDB Face Database,"['Experiments', 'on', 'FDDB', 'Face', 'Database']","['O', 'B-p', 'B-n', 'I-n', 'I-n']","['NNS', 'IN', 'NNP', 'NNP', 'NNP']",5
face_detection,18,304,Our method achieves the best recall rate on this database .,"['Our', 'method', 'achieves', 'the', 'best', 'recall', 'rate', 'on', 'this', 'database', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",11
face_detection,18,307,The proposed CMS - RCNN approach outperforms most of the published face detection methods and achieves a very high recall rate comparing against all other methods ( as shown ) .,"['The', 'proposed', 'CMS', '-', 'RCNN', 'approach', 'outperforms', 'most', 'of', 'the', 'published', 'face', 'detection', 'methods', 'and', 'achieves', 'a', 'very', 'high', 'recall', 'rate', 'comparing', 'against', 'all', 'other', 'methods', '(', 'as', 'shown', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'VBN', 'NNP', ':', 'NNP', 'NN', 'VBZ', 'JJS', 'IN', 'DT', 'VBN', 'NN', 'NN', 'NNS', 'CC', 'VBZ', 'DT', 'RB', 'JJ', 'NN', 'NN', 'VBG', 'IN', 'DT', 'JJ', 'NNS', '(', 'IN', 'VBN', ')', '.']",31
face_detection,4,4,"Face detection , as a fundamental technology for various applications , is always deployed on edge devices which have limited memory storage and low computing power .","['Face', 'detection', ',', 'as', 'a', 'fundamental', 'technology', 'for', 'various', 'applications', ',', 'is', 'always', 'deployed', 'on', 'edge', 'devices', 'which', 'have', 'limited', 'memory', 'storage', 'and', 'low', 'computing', 'power', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ',', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', ',', 'VBZ', 'RB', 'VBN', 'IN', 'NN', 'NNS', 'WDT', 'VBP', 'VBN', 'NN', 'NN', 'CC', 'JJ', 'VBG', 'NN', '.']",27
face_detection,4,42,"In this paper , we propose a Light and Fast Face Detector ( LFFD ) for edge devices , considerably balancing both accuracy and running efficiency .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'Light', 'and', 'Fast', 'Face', 'Detector', '(', 'LFFD', ')', 'for', 'edge', 'devices', ',', 'considerably', 'balancing', 'both', 'accuracy', 'and', 'running', 'efficiency', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'IN', 'NN', 'NNS', ',', 'RB', 'VBG', 'DT', 'NN', 'CC', 'VBG', 'NN', '.']",27
face_detection,4,43,The proposed method is inspired by the one - stage and multi-scale object detection method SSD which also enlightens some other face detectors .,"['The', 'proposed', 'method', 'is', 'inspired', 'by', 'the', 'one', '-', 'stage', 'and', 'multi-scale', 'object', 'detection', 'method', 'SSD', 'which', 'also', 'enlightens', 'some', 'other', 'face', 'detectors', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'CD', ':', 'NN', 'CC', 'JJ', 'JJ', 'NN', 'NN', 'NNP', 'WDT', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'NNS', '.']",24
face_detection,4,44,One of the characteristics of SSD is that pre-defined anchor boxes are manually designed for each detection branch .,"['One', 'of', 'the', 'characteristics', 'of', 'SSD', 'is', 'that', 'pre-defined', 'anchor', 'boxes', 'are', 'manually', 'designed', 'for', 'each', 'detection', 'branch', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['CD', 'IN', 'DT', 'NNS', 'IN', 'NNP', 'VBZ', 'IN', 'JJ', 'NN', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",19
face_detection,4,227,We initialize all parameters with xavier method and train the network from scratch .,"['We', 'initialize', 'all', 'parameters', 'with', 'xavier', 'method', 'and', 'train', 'the', 'network', 'from', 'scratch', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'IN', 'NNP', 'NN', 'CC', 'VB', 'DT', 'NN', 'IN', 'NN', '.']",14
face_detection,4,229,"The optimization method is SGD with 0.9 momentum , zero weight decay and batch size 32 .","['The', 'optimization', 'method', 'is', 'SGD', 'with', '0.9', 'momentum', ',', 'zero', 'weight', 'decay', 'and', 'batch', 'size', '32', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'NNP', 'IN', 'CD', 'NN', ',', 'CD', 'NN', 'NN', 'CC', 'NN', 'NN', 'CD', '.']",17
face_detection,4,232,The initial learning rate is 0.1 .,"['The', 'initial', 'learning', 'rate', 'is', '0.1', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', '.']",7
face_detection,4,233,"We train 1,500,000 iterations and reduce the learning rate by multiplying 0.1 at iteration 600,000 , 1,000,000 , 1,200,000 and 1,400,000 .","['We', 'train', '1,500,000', 'iterations', 'and', 'reduce', 'the', 'learning', 'rate', 'by', 'multiplying', '0.1', 'at', 'iteration', '600,000', ',', '1,000,000', ',', '1,200,000', 'and', '1,400,000', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'B-p', 'B-n', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'CC', 'VB', 'DT', 'NN', 'NN', 'IN', 'VBG', 'CD', 'IN', 'NN', 'CD', ',', 'CD', ',', 'CD', 'CC', 'CD', '.']",22
face_detection,4,234,The training time is about 5 days with two NVIDIA GTX 1080 TI .,"['The', 'training', 'time', 'is', 'about', '5', 'days', 'with', 'two', 'NVIDIA', 'GTX', '1080', 'TI', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'IN', 'CD', 'NNS', 'IN', 'CD', 'NNP', 'NNP', 'CD', 'NNP', '.']",14
face_detection,4,235,Our method is implemented using MXNet and the source code is released .,"['Our', 'method', 'is', 'implemented', 'using', 'MXNet', 'and', 'the', 'source', 'code', 'is', 'released', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', '.']",13
face_detection,4,253,"Finally , the following methods are taken for comparison : DSFD ( Resnet152 backbone ) , Pyramid Box ( VGG16 backbone ) , S3 FD ( VGG16 backbone ) , SSH ( VGG16 backbone ) and FaceBoxes .","['Finally', ',', 'the', 'following', 'methods', 'are', 'taken', 'for', 'comparison', ':', 'DSFD', '(', 'Resnet152', 'backbone', ')', ',', 'Pyramid', 'Box', '(', 'VGG16', 'backbone', ')', ',', 'S3', 'FD', '(', 'VGG16', 'backbone', ')', ',', 'SSH', '(', 'VGG16', 'backbone', ')', 'and', 'FaceBoxes', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['RB', ',', 'DT', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'NN', ':', 'NNP', '(', 'NNP', 'NN', ')', ',', 'NNP', 'NNP', '(', 'NNP', 'NN', ')', ',', 'NNP', 'NNP', '(', 'NNP', 'NN', ')', ',', 'NNP', '(', 'NNP', 'NN', ')', 'CC', 'NNP', '.']",38
face_detection,4,261,FDDB dataset .,"['FDDB', 'dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NN', '.']",3
face_detection,4,268,"DSFD , Pyramid Box , S3FD and SSH can achieve high accuracy with marginal gaps .","['DSFD', ',', 'Pyramid', 'Box', ',', 'S3FD', 'and', 'SSH', 'can', 'achieve', 'high', 'accuracy', 'with', 'marginal', 'gaps', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', ',', 'NNP', 'NNP', ',', 'NNP', 'CC', 'NNP', 'MD', 'VB', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",16
face_detection,4,269,"The proposed LFFD gains slightly lower accuracy than the first four methods , but outperforms FaceBoxes evidently .","['The', 'proposed', 'LFFD', 'gains', 'slightly', 'lower', 'accuracy', 'than', 'the', 'first', 'four', 'methods', ',', 'but', 'outperforms', 'FaceBoxes', 'evidently', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'O', 'O']","['DT', 'VBN', 'NNP', 'NNS', 'RB', 'JJR', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NNS', ',', 'CC', 'VBZ', 'NNP', 'RB', '.']",18
face_detection,4,270,The results indicate that LFFD is superior for detecting unconstrained faces .,"['The', 'results', 'indicate', 'that', 'LFFD', 'is', 'superior', 'for', 'detecting', 'unconstrained', 'faces', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'IN', 'NNP', 'VBZ', 'JJ', 'IN', 'VBG', 'JJ', 'VBZ', '.']",12
face_detection,4,271,WIDER FACE dataset .,"['WIDER', 'FACE', 'dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NN', '.']",4
face_detection,4,282,"Firstly , performance drop is evident for DSFD , PyramidBox , S3FD and SSH compared to their original results .","['Firstly', ',', 'performance', 'drop', 'is', 'evident', 'for', 'DSFD', ',', 'PyramidBox', ',', 'S3FD', 'and', 'SSH', 'compared', 'to', 'their', 'original', 'results', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'NNP', ',', 'NNP', ',', 'NNP', 'CC', 'NNP', 'VBN', 'TO', 'PRP$', 'JJ', 'NNS', '.']",20
face_detection,4,285,"Secondly , Pyramid Box obtains the best results on Hard parts , whereas the performance of SSH on Hard parts is decreased dramatically mainly due to the neglect of some tiny faces .","['Secondly', ',', 'Pyramid', 'Box', 'obtains', 'the', 'best', 'results', 'on', 'Hard', 'parts', ',', 'whereas', 'the', 'performance', 'of', 'SSH', 'on', 'Hard', 'parts', 'is', 'decreased', 'dramatically', 'mainly', 'due', 'to', 'the', 'neglect', 'of', 'some', 'tiny', 'faces', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'NNP', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'NNP', 'NNS', ',', 'IN', 'DT', 'NN', 'IN', 'NNP', 'IN', 'NNP', 'NNS', 'VBZ', 'VBN', 'RB', 'RB', 'JJ', 'TO', 'DT', 'NN', 'IN', 'DT', 'JJ', 'VBZ', '.']",33
face_detection,4,286,"Thirdly , FaceBoxes does not get desirable results on Medium and Hard parts .","['Thirdly', ',', 'FaceBoxes', 'does', 'not', 'get', 'desirable', 'results', 'on', 'Medium', 'and', 'Hard', 'parts', '.']","['O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'VBZ', 'RB', 'VB', 'JJ', 'NNS', 'IN', 'NNP', 'CC', 'NNP', 'NNS', '.']",14
face_detection,4,292,"Fourthly , the proposed method LFFD consistently outperforms Face - Boxes , although having gaps with state of the art methods .","['Fourthly', ',', 'the', 'proposed', 'method', 'LFFD', 'consistently', 'outperforms', 'Face', '-', 'Boxes', ',', 'although', 'having', 'gaps', 'with', 'state', 'of', 'the', 'art', 'methods', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'VBN', 'NN', 'NNP', 'RB', 'VBZ', 'NNP', ':', 'NNS', ',', 'IN', 'VBG', 'NNS', 'IN', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",22
face_detection,4,293,"Additionally , LFFD is better than SSH that uses VGG16 as the backbone on Hard parts .","['Additionally', ',', 'LFFD', 'is', 'better', 'than', 'SSH', 'that', 'uses', 'VGG16', 'as', 'the', 'backbone', 'on', 'Hard', 'parts', '.']","['O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'NNP', 'VBZ', 'JJR', 'IN', 'NNP', 'WDT', 'VBZ', 'NNP', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NNS', '.']",17
face_detection,6,2,Robust Face Detection via Learning Small Faces on Hard Images,"['Robust', 'Face', 'Detection', 'via', 'Learning', 'Small', 'Faces', 'on', 'Hard', 'Images']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNS', 'IN', 'NNP', 'NNP']",10
face_detection,6,13,"Face detection is a fundamental and important computer vision problem , which is critical for many face - related tasks , such as face alignment , tracking and recognition .","['Face', 'detection', 'is', 'a', 'fundamental', 'and', 'important', 'computer', 'vision', 'problem', ',', 'which', 'is', 'critical', 'for', 'many', 'face', '-', 'related', 'tasks', ',', 'such', 'as', 'face', 'alignment', ',', 'tracking', 'and', 'recognition', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'IN', 'JJ', 'VBP', ':', 'JJ', 'NNS', ',', 'JJ', 'IN', 'NN', 'NN', ',', 'VBG', 'CC', 'NN', '.']",30
face_detection,6,27,"To address this issue , we propose to mine hard examples at image level in parallel with anchor level .","['To', 'address', 'this', 'issue', ',', 'we', 'propose', 'to', 'mine', 'hard', 'examples', 'at', 'image', 'level', 'in', 'parallel', 'with', 'anchor', 'level', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'IN', 'JJ', 'IN', 'JJ', 'NN', '.']",20
face_detection,6,28,"More specifically , we propose to dynamically assign difficulty scores to training images during the learning process , which can determine whether an image is already well - detected or still useful for further training .","['More', 'specifically', ',', 'we', 'propose', 'to', 'dynamically', 'assign', 'difficulty', 'scores', 'to', 'training', 'images', 'during', 'the', 'learning', 'process', ',', 'which', 'can', 'determine', 'whether', 'an', 'image', 'is', 'already', 'well', '-', 'detected', 'or', 'still', 'useful', 'for', 'further', 'training', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RBR', 'RB', ',', 'PRP', 'VBP', 'TO', 'RB', 'VB', 'NN', 'NNS', 'TO', 'VBG', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'WDT', 'MD', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'RB', ':', 'VBD', 'CC', 'RB', 'JJ', 'IN', 'JJ', 'NN', '.']",36
face_detection,6,29,This allows us to fully utilize the images which were not perfectly detected to better facilitate the following learning process .,"['This', 'allows', 'us', 'to', 'fully', 'utilize', 'the', 'images', 'which', 'were', 'not', 'perfectly', 'detected', 'to', 'better', 'facilitate', 'the', 'following', 'learning', 'process', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'VBZ', 'PRP', 'TO', 'RB', 'VB', 'DT', 'NNS', 'WDT', 'VBD', 'RB', 'RB', 'VBN', 'TO', 'RBR', 'VB', 'DT', 'VBG', 'NN', 'NN', '.']",21
face_detection,6,31,"Apart from mining the hard images , we also propose to improve the detection quality by exclusively exploiting small faces .","['Apart', 'from', 'mining', 'the', 'hard', 'images', ',', 'we', 'also', 'propose', 'to', 'improve', 'the', 'detection', 'quality', 'by', 'exclusively', 'exploiting', 'small', 'faces', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', 'IN', 'VBG', 'DT', 'JJ', 'NNS', ',', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'RB', 'VBG', 'JJ', 'VBZ', '.']",21
face_detection,6,34,"Compared with these methods , our detector is more efficient since it is specially designed to aggressively leveraging the small faces during training .","['Compared', 'with', 'these', 'methods', ',', 'our', 'detector', 'is', 'more', 'efficient', 'since', 'it', 'is', 'specially', 'designed', 'to', 'aggressively', 'leveraging', 'the', 'small', 'faces', 'during', 'training', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['VBN', 'IN', 'DT', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'RBR', 'JJ', 'IN', 'PRP', 'VBZ', 'RB', 'VBN', 'TO', 'RB', 'VBG', 'DT', 'JJ', 'VBZ', 'IN', 'NN', '.']",24
face_detection,6,165,"We use an ImageNet pretrained VGG16 model to initialize our network backbone , and our newly introduced layers are randomly initialized with Gaussian initialization .","['We', 'use', 'an', 'ImageNet', 'pretrained', 'VGG16', 'model', 'to', 'initialize', 'our', 'network', 'backbone', ',', 'and', 'our', 'newly', 'introduced', 'layers', 'are', 'randomly', 'initialized', 'with', 'Gaussian', 'initialization', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'VBD', 'NNP', 'NN', 'TO', 'VB', 'PRP$', 'NN', 'NN', ',', 'CC', 'PRP$', 'RB', 'VBN', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'JJ', 'NN', '.']",25
face_detection,6,166,"We train the model with the itersize to be 2 , for 46 k iterations , with a learning rate of 0.004 , and then for another 14 k iterations with a smaller learning rate of 0.0004 .","['We', 'train', 'the', 'model', 'with', 'the', 'itersize', 'to', 'be', '2', ',', 'for', '46', 'k', 'iterations', ',', 'with', 'a', 'learning', 'rate', 'of', '0.004', ',', 'and', 'then', 'for', 'another', '14', 'k', 'iterations', 'with', 'a', 'smaller', 'learning', 'rate', 'of', '0.0004', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'TO', 'VB', 'CD', ',', 'IN', 'CD', 'NN', 'NNS', ',', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', ',', 'CC', 'RB', 'IN', 'DT', 'CD', 'NN', 'NNS', 'IN', 'DT', 'JJR', 'NN', 'NN', 'IN', 'CD', '.']",38
face_detection,6,167,"During training , we use 4 GPUs to simultaneously to compute the gradient and update the weight by synchronized SGD with Momentum .","['During', 'training', ',', 'we', 'use', '4', 'GPUs', 'to', 'simultaneously', 'to', 'compute', 'the', 'gradient', 'and', 'update', 'the', 'weight', 'by', 'synchronized', 'SGD', 'with', 'Momentum', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'CD', 'NNP', 'TO', 'RB', 'TO', 'VB', 'DT', 'NN', 'CC', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNP', 'IN', 'NNP', '.']",23
face_detection,6,168,"The first two blocks of VGG16 are frozen during the training , and the rest layers of VGG16 are set to have a double learning rate .","['The', 'first', 'two', 'blocks', 'of', 'VGG16', 'are', 'frozen', 'during', 'the', 'training', ',', 'and', 'the', 'rest', 'layers', 'of', 'VGG16', 'are', 'set', 'to', 'have', 'a', 'double', 'learning', 'rate', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'CD', 'NNS', 'IN', 'NNP', 'VBP', 'JJ', 'IN', 'DT', 'NN', ',', 'CC', 'DT', 'NN', 'NNS', 'IN', 'NNP', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', '.']",27
face_detection,6,170,"Specifically , we resize the testing image so that the short side contains 100 , 300 , 600 , 1000 and 1400 pixels for evaluation on WIDER FACE dataset .","['Specifically', ',', 'we', 'resize', 'the', 'testing', 'image', 'so', 'that', 'the', 'short', 'side', 'contains', '100', ',', '300', ',', '600', ',', '1000', 'and', '1400', 'pixels', 'for', 'evaluation', 'on', 'WIDER', 'FACE', 'dataset', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'RB', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', 'CC', 'CD', 'NNS', 'IN', 'NN', 'IN', 'NNP', 'NNP', 'NN', '.']",30
face_detection,6,171,We also follow the testing strategies used in Pyra - midBox 2 such as horizontal flip and bounding - box voting .,"['We', 'also', 'follow', 'the', 'testing', 'strategies', 'used', 'in', 'Pyra', '-', 'midBox', '2', 'such', 'as', 'horizontal', 'flip', 'and', 'bounding', '-', 'box', 'voting', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', 'NNS', 'VBN', 'IN', 'NNP', ':', 'NN', 'CD', 'JJ', 'IN', 'JJ', 'NN', 'CC', 'VBG', ':', 'NN', 'NN', '.']",22
face_detection,6,174,"In , we show the precision - recall ( PR ) curve and average precision ( AP ) for our model compared with many other state - of - the - arts on these three subsets .","['In', ',', 'we', 'show', 'the', 'precision', '-', 'recall', '(', 'PR', ')', 'curve', 'and', 'average', 'precision', '(', 'AP', ')', 'for', 'our', 'model', 'compared', 'with', 'many', 'other', 'state', '-', 'of', '-', 'the', '-', 'arts', 'on', 'these', 'three', 'subsets', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'NN', '(', 'NNP', ')', 'NN', 'CC', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'PRP$', 'NN', 'VBN', 'IN', 'JJ', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NNS', 'IN', 'DT', 'CD', 'NNS', '.']",37
face_detection,6,175,"As we can see , our method achieves the best performance on the hard subset , and outperforms the current state - of - the - art by a large margin .","['As', 'we', 'can', 'see', ',', 'our', 'method', 'achieves', 'the', 'best', 'performance', 'on', 'the', 'hard', 'subset', ',', 'and', 'outperforms', 'the', 'current', 'state', '-', 'of', '-', 'the', '-', 'art', 'by', 'a', 'large', 'margin', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",32
face_detection,6,177,"Our performance on the medium subset is comparable to the most recent state - of - the - art and the performance on the easy subset is a bit worse since our method focuses on learning hard faces , and the architecture of our model is simpler compared with other state - of - thearts .","['Our', 'performance', 'on', 'the', 'medium', 'subset', 'is', 'comparable', 'to', 'the', 'most', 'recent', 'state', '-', 'of', '-', 'the', '-', 'art', 'and', 'the', 'performance', 'on', 'the', 'easy', 'subset', 'is', 'a', 'bit', 'worse', 'since', 'our', 'method', 'focuses', 'on', 'learning', 'hard', 'faces', ',', 'and', 'the', 'architecture', 'of', 'our', 'model', 'is', 'simpler', 'compared', 'with', 'other', 'state', '-', 'of', '-', 'thearts', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'JJ', 'TO', 'DT', 'RBS', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'CC', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'JJR', 'IN', 'PRP$', 'NN', 'VBZ', 'IN', 'VBG', 'JJ', 'VBZ', ',', 'CC', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'VBN', 'VBN', 'IN', 'JJ', 'NN', ':', 'IN', ':', 'NNS', '.']",56
face_detection,6,183,"We show the discontinuous ROC curve at compared with , and our method achieves the state - of - the - art performance of TPR = 98.7 % given 1000 false positives .","['We', 'show', 'the', 'discontinuous', 'ROC', 'curve', 'at', 'compared', 'with', ',', 'and', 'our', 'method', 'achieves', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'of', 'TPR', '=', '98.7', '%', 'given', '1000', 'false', 'positives', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'VBN', 'IN', ',', 'CC', 'PRP$', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'NNP', 'NNP', 'CD', 'NN', 'VBN', 'CD', 'JJ', 'NNS', '.']",33
face_detection,6,185,"We show the PR curve at compared with , and our method achieves a new the state - of - the - art performance of AP = 99.0 .","['We', 'show', 'the', 'PR', 'curve', 'at', 'compared', 'with', ',', 'and', 'our', 'method', 'achieves', 'a', 'new', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'of', 'AP', '=', '99.0', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'NN', 'IN', 'VBN', 'IN', ',', 'CC', 'PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'NNP', 'NNP', 'CD', '.']",29
face_detection,6,187,"As shown in compared with , our method achieves state - of - the - art and almost perfect performance , with an AP of 99.60 .","['As', 'shown', 'in', 'compared', 'with', ',', 'our', 'method', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'and', 'almost', 'perfect', 'performance', ',', 'with', 'an', 'AP', 'of', '99.60', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O']","['IN', 'VBN', 'IN', 'VBN', 'IN', ',', 'PRP$', 'NN', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'CC', 'RB', 'JJ', 'NN', ',', 'IN', 'DT', 'NNP', 'IN', 'CD', '.']",27
face_detection,6,196,"Our model with single detection feature map performs better than the one with three detection feature maps , despite its shallower structure , fewer parameters and anchors .","['Our', 'model', 'with', 'single', 'detection', 'feature', 'map', 'performs', 'better', 'than', 'the', 'one', 'with', 'three', 'detection', 'feature', 'maps', ',', 'despite', 'its', 'shallower', 'structure', ',', 'fewer', 'parameters', 'and', 'anchors', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'IN', 'JJ', 'NN', 'NN', 'NN', 'NNS', 'RBR', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', 'NN', 'NNS', ',', 'IN', 'PRP$', 'NN', 'NN', ',', 'JJR', 'NNS', 'CC', 'NNS', '.']",28
face_detection,6,199,HIM can improve the performance on hard subset significantly without involving more complex network architecture nor computation overhead .,"['HIM', 'can', 'improve', 'the', 'performance', 'on', 'hard', 'subset', 'significantly', 'without', 'involving', 'more', 'complex', 'network', 'architecture', 'nor', 'computation', 'overhead', '.']","['B-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'MD', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'RB', 'IN', 'VBG', 'JJR', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",19
face_detection,6,200,"DH itself can also boost the performance , which shows the effectiveness of designing larger convolution for larger anchors .","['DH', 'itself', 'can', 'also', 'boost', 'the', 'performance', ',', 'which', 'shows', 'the', 'effectiveness', 'of', 'designing', 'larger', 'convolution', 'for', 'larger', 'anchors', '.']","['B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', 'PRP', 'MD', 'RB', 'VB', 'DT', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'JJR', 'NN', 'IN', 'JJR', 'NNS', '.']",20
face_detection,6,201,Combining HIM and DH together can improve further towards the state - of - the - art performance .,"['Combining', 'HIM', 'and', 'DH', 'together', 'can', 'improve', 'further', 'towards', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'NNP', 'CC', 'NNP', 'RB', 'MD', 'VB', 'RBR', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '.']",19
face_detection,6,211,Both photometric distortion and cropping can contribute to a more robust face detector .,"['Both', 'photometric', 'distortion', 'and', 'cropping', 'can', 'contribute', 'to', 'a', 'more', 'robust', 'face', 'detector', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'CC', 'NN', 'MD', 'VB', 'TO', 'DT', 'RBR', 'JJ', 'NN', 'NN', '.']",14
face_detection,6,219,"Diagnosis of multi-scale testing. , the extra small scales are crucial to detect easy faces .","['Diagnosis', 'of', 'multi-scale', 'testing.', ',', 'the', 'extra', 'small', 'scales', 'are', 'crucial', 'to', 'detect', 'easy', 'faces', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NN', 'IN', 'JJ', 'NN', ',', 'DT', 'JJ', 'JJ', 'NNS', 'VBP', 'JJ', 'TO', 'VB', 'JJ', 'VBZ', '.']",16
face_detection,10,4,"In this paper , we propose a novel face detection network with three novel contributions that address three key aspects of face detection , including better feature learning , progressive loss design and anchor assign based data augmentation , respectively .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'face', 'detection', 'network', 'with', 'three', 'novel', 'contributions', 'that', 'address', 'three', 'key', 'aspects', 'of', 'face', 'detection', ',', 'including', 'better', 'feature', 'learning', ',', 'progressive', 'loss', 'design', 'and', 'anchor', 'assign', 'based', 'data', 'augmentation', ',', 'respectively', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'NN', 'IN', 'CD', 'JJ', 'NNS', 'WDT', 'VBP', 'CD', 'JJ', 'NNS', 'IN', 'NN', 'NN', ',', 'VBG', 'JJR', 'NN', 'NN', ',', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', 'VBN', 'NNS', 'NN', ',', 'RB', '.']",41
face_detection,10,30,"In this paper , we propose three novel techniques to address the above three issues , respectively .","['In', 'this', 'paper', ',', 'we', 'propose', 'three', 'novel', 'techniques', 'to', 'address', 'the', 'above', 'three', 'issues', ',', 'respectively', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'CD', 'NN', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'CD', 'NNS', ',', 'RB', '.']",18
face_detection,10,31,"First , we introduce a Feature Enhance Module ( FEM ) to enhance the discriminability and robustness of the features , which combines the advantages of the FPN in PyramidBox and Receptive Field Block ( RFB ) in RFBNet .","['First', ',', 'we', 'introduce', 'a', 'Feature', 'Enhance', 'Module', '(', 'FEM', ')', 'to', 'enhance', 'the', 'discriminability', 'and', 'robustness', 'of', 'the', 'features', ',', 'which', 'combines', 'the', 'advantages', 'of', 'the', 'FPN', 'in', 'PyramidBox', 'and', 'Receptive', 'Field', 'Block', '(', 'RFB', ')', 'in', 'RFBNet', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'IN', 'DT', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'IN', 'NNP', '.']",40
face_detection,10,32,"Second , motivated by the hierarchical loss and pyramid anchor in PyramidBox , we design Progressive Anchor Loss ( PAL ) that uses progressive anchor sizes for not only different levels , but also different shots .","['Second', ',', 'motivated', 'by', 'the', 'hierarchical', 'loss', 'and', 'pyramid', 'anchor', 'in', 'PyramidBox', ',', 'we', 'design', 'Progressive', 'Anchor', 'Loss', '(', 'PAL', ')', 'that', 'uses', 'progressive', 'anchor', 'sizes', 'for', 'not', 'only', 'different', 'levels', ',', 'but', 'also', 'different', 'shots', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['JJ', ',', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'JJ', 'NN', 'IN', 'NNP', ',', 'PRP', 'VBP', 'JJ', 'NNP', 'NNP', '(', 'NNP', ')', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', 'IN', 'RB', 'RB', 'JJ', 'NNS', ',', 'CC', 'RB', 'JJ', 'NNS', '.']",37
face_detection,10,33,"Specifically , we assign smaller anchor sizes in the first shot , and use larger sizes in the second shot .","['Specifically', ',', 'we', 'assign', 'smaller', 'anchor', 'sizes', 'in', 'the', 'first', 'shot', ',', 'and', 'use', 'larger', 'sizes', 'in', 'the', 'second', 'shot', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'JJR', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'RB', 'JJR', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",21
face_detection,10,34,"Third , we propose Improved Anchor Matching ( IAM ) , which integrates anchor partition strategy and anchor-based data augmentation to better match anchors and ground truth faces , and thus provides better initialization for the regressor .","['Third', ',', 'we', 'propose', 'Improved', 'Anchor', 'Matching', '(', 'IAM', ')', ',', 'which', 'integrates', 'anchor', 'partition', 'strategy', 'and', 'anchor-based', 'data', 'augmentation', 'to', 'better', 'match', 'anchors', 'and', 'ground', 'truth', 'faces', ',', 'and', 'thus', 'provides', 'better', 'initialization', 'for', 'the', 'regressor', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['NNP', ',', 'PRP', 'VBP', 'VBN', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'JJ', 'NN', 'NN', 'CC', 'JJ', 'NNS', 'NN', 'TO', 'JJR', 'NN', 'NNS', 'CC', 'NN', 'NN', 'VBZ', ',', 'CC', 'RB', 'VBZ', 'JJR', 'NN', 'IN', 'DT', 'NN', '.']",38
face_detection,10,36,"Besides , since these techniques are all related to two - stream design , we name the proposed network as Dual Shot Face Detector ( DSFD ) .","['Besides', ',', 'since', 'these', 'techniques', 'are', 'all', 'related', 'to', 'two', '-', 'stream', 'design', ',', 'we', 'name', 'the', 'proposed', 'network', 'as', 'Dual', 'Shot', 'Face', 'Detector', '(', 'DSFD', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', ',', 'IN', 'DT', 'NNS', 'VBP', 'DT', 'VBN', 'TO', 'CD', ':', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'VBN', 'NN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",28
face_detection,10,127,The backbone networks are initialized by the pretrained VGG / ResNet on Image Net .,"['The', 'backbone', 'networks', 'are', 'initialized', 'by', 'the', 'pretrained', 'VGG', '/', 'ResNet', 'on', 'Image', 'Net', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', '.']",15
face_detection,10,128,All newly added convolution layers ' parameters are initialized by the ' xavier ' method .,"['All', 'newly', 'added', 'convolution', 'layers', ""'"", 'parameters', 'are', 'initialized', 'by', 'the', ""'"", 'xavier', ""'"", 'method', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'RB', 'VBN', 'NN', 'NNS', 'POS', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'POS', 'NNP', 'POS', 'NN', '.']",16
face_detection,10,129,"We use SGD with 0.9 momentum , 0.0005 weight decay to fine - tune our DSFD model .","['We', 'use', 'SGD', 'with', '0.9', 'momentum', ',', '0.0005', 'weight', 'decay', 'to', 'fine', '-', 'tune', 'our', 'DSFD', 'model', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-n', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'IN', 'CD', 'NN', ',', 'CD', 'NN', 'NN', 'TO', 'VB', ':', 'NN', 'PRP$', 'NNP', 'NN', '.']",18
face_detection,10,130,The batch size is set to 16 .,"['The', 'batch', 'size', 'is', 'set', 'to', '16', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",8
face_detection,10,131,"The learning rate is set to 10 ?3 for the first 40 k steps , and we decay it to 10 ? 4 and 10 ? 5 for two 10 k steps .","['The', 'learning', 'rate', 'is', 'set', 'to', '10', '?3', 'for', 'the', 'first', '40', 'k', 'steps', ',', 'and', 'we', 'decay', 'it', 'to', '10', '?', '4', 'and', '10', '?', '5', 'for', 'two', '10', 'k', 'steps', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', 'NNS', ',', 'CC', 'PRP', 'VBP', 'PRP', 'TO', 'CD', '.', 'CD', 'CC', 'CD', '.', 'CD', 'IN', 'CD', 'CD', 'JJ', 'NNS', '.']",33
face_detection,10,132,"During inference , the first shot 's outputs are ignored and the second shot predicts top 5 k high confident detections .","['During', 'inference', ',', 'the', 'first', 'shot', ""'s"", 'outputs', 'are', 'ignored', 'and', 'the', 'second', 'shot', 'predicts', 'top', '5', 'k', 'high', 'confident', 'detections', '.']","['B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'DT', 'JJ', 'NN', 'POS', 'NNS', 'VBP', 'VBN', 'CC', 'DT', 'JJ', 'NN', 'VBZ', 'JJ', 'CD', 'NN', 'JJ', 'JJ', 'NNS', '.']",22
face_detection,10,133,Non-maximum suppression is applied with jaccard overlap of 0.3 to produce top 750 high confident bounding boxes per image .,"['Non-maximum', 'suppression', 'is', 'applied', 'with', 'jaccard', 'overlap', 'of', '0.3', 'to', 'produce', 'top', '750', 'high', 'confident', 'bounding', 'boxes', 'per', 'image', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['JJ', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'IN', 'CD', 'TO', 'VB', 'JJ', 'CD', 'JJ', 'JJ', 'NN', 'NNS', 'IN', 'NN', '.']",20
face_detection,10,134,"For 4 bounding box coordinates , we round down top left coordinates and roundup width and height to expand the detection bounding box .","['For', '4', 'bounding', 'box', 'coordinates', ',', 'we', 'round', 'down', 'top', 'left', 'coordinates', 'and', 'roundup', 'width', 'and', 'height', 'to', 'expand', 'the', 'detection', 'bounding', 'box', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'CD', 'VBG', 'NN', 'NNS', ',', 'PRP', 'VBP', 'RP', 'JJ', 'NN', 'NNS', 'CC', 'VB', 'NN', 'CC', 'NN', 'TO', 'VB', 'DT', 'NN', 'VBG', 'NN', '.']",24
face_detection,10,135,The official code has been released at : https://github.com/TencentYoutuResearch/FaceDetection-DSFD .,"['The', 'official', 'code', 'has', 'been', 'released', 'at', ':', 'https://github.com/TencentYoutuResearch/FaceDetection-DSFD', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'VBN', 'IN', ':', 'NN', '.']",10
face_detection,10,139,"In this subsection , we conduct extensive experiments and ablation studies on the WIDER FACE dataset to evaluate the effectiveness of several contributions of our proposed framework , including feature enhance module , progressive anchor loss , and improved anchor matching .","['In', 'this', 'subsection', ',', 'we', 'conduct', 'extensive', 'experiments', 'and', 'ablation', 'studies', 'on', 'the', 'WIDER', 'FACE', 'dataset', 'to', 'evaluate', 'the', 'effectiveness', 'of', 'several', 'contributions', 'of', 'our', 'proposed', 'framework', ',', 'including', 'feature', 'enhance', 'module', ',', 'progressive', 'anchor', 'loss', ',', 'and', 'improved', 'anchor', 'matching', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'CC', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'NNP', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'PRP$', 'VBN', 'NN', ',', 'VBG', 'NN', 'NN', 'NN', ',', 'JJ', 'NN', 'NN', ',', 'CC', 'VBD', 'NN', 'NN', '.']",42
face_detection,10,143,"Feature Enhance Module First ,","['Feature', 'Enhance', 'Module', 'First', ',']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'NNP', 'NNP', 'NNP', ',']",5
face_detection,10,146,"shows that our feature enhance module can improve VGG16 - based FSSD from 92.6 % , 90.2 % , 79.1 % to 93.0 % , 91.4 % , 84.6 % .","['shows', 'that', 'our', 'feature', 'enhance', 'module', 'can', 'improve', 'VGG16', '-', 'based', 'FSSD', 'from', '92.6', '%', ',', '90.2', '%', ',', '79.1', '%', 'to', '93.0', '%', ',', '91.4', '%', ',', '84.6', '%', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'WDT', 'PRP$', 'NN', 'NN', 'NN', 'MD', 'VB', 'NNP', ':', 'VBN', 'NNP', 'IN', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', 'TO', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', '.']",31
face_detection,10,147,"Progressive Anchor Loss Second , we use Res50 - based FSSD as the baseline to add progressive anchor loss for comparison .","['Progressive', 'Anchor', 'Loss', 'Second', ',', 'we', 'use', 'Res50', '-', 'based', 'FSSD', 'as', 'the', 'baseline', 'to', 'add', 'progressive', 'anchor', 'loss', 'for', 'comparison', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'NNP', ',', 'PRP', 'VBP', 'NNP', ':', 'VBN', 'NNP', 'IN', 'DT', 'NN', 'TO', 'VB', 'JJ', 'NN', 'NN', 'IN', 'NN', '.']",22
face_detection,10,150,"shows our progressive anchor loss can improve Res50 - based FSSD using FEM from 95.0 % , 94.1 % , 88.0 % to 95.3 % , 94.4 % , 88.6 % .","['shows', 'our', 'progressive', 'anchor', 'loss', 'can', 'improve', 'Res50', '-', 'based', 'FSSD', 'using', 'FEM', 'from', '95.0', '%', ',', '94.1', '%', ',', '88.0', '%', 'to', '95.3', '%', ',', '94.4', '%', ',', '88.6', '%', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'PRP$', 'JJ', 'NN', 'NN', 'MD', 'VB', 'NNP', ':', 'VBN', 'NNP', 'VBG', 'NNP', 'IN', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', 'TO', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', '.']",32
face_detection,10,151,Improved Anchor Matching,"['Improved', 'Anchor', 'Matching']","['B-n', 'I-n', 'I-n']","['VBN', 'NNP', 'NNP']",3
face_detection,10,153,"shows that our improved anchor matching can improve Res101 based FSSD using FEM from 95.8 % , 95.1 % , 89.7 % to 96.1 % , 95.2 % , 90.0 % .","['shows', 'that', 'our', 'improved', 'anchor', 'matching', 'can', 'improve', 'Res101', 'based', 'FSSD', 'using', 'FEM', 'from', '95.8', '%', ',', '95.1', '%', ',', '89.7', '%', 'to', '96.1', '%', ',', '95.2', '%', ',', '90.0', '%', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'WDT', 'PRP$', 'JJ', 'NN', 'NN', 'MD', 'VB', 'NNP', 'VBN', 'NNP', 'VBG', 'NNP', 'IN', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', 'TO', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', 'NN', '.']",32
face_detection,10,178,WIDER FACE Dataset,"['WIDER', 'FACE', 'Dataset']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_detection,10,182,"As shown in , our DSFD achieves the best performance among all of the state - of - the - art face detectors based on the average precision ( AP ) across the three subsets , i.e. , 96.6 % ( Easy ) , 95.7 % ( Medium ) and 90.4 % ( Hard ) on validation set , and 96.0 % ( Easy ) , 95.3 % ( Medium ) and 90.0 % ( Hard ) on test set .","['As', 'shown', 'in', ',', 'our', 'DSFD', 'achieves', 'the', 'best', 'performance', 'among', 'all', 'of', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'face', 'detectors', 'based', 'on', 'the', 'average', 'precision', '(', 'AP', ')', 'across', 'the', 'three', 'subsets', ',', 'i.e.', ',', '96.6', '%', '(', 'Easy', ')', ',', '95.7', '%', '(', 'Medium', ')', 'and', '90.4', '%', '(', 'Hard', ')', 'on', 'validation', 'set', ',', 'and', '96.0', '%', '(', 'Easy', ')', ',', '95.3', '%', '(', 'Medium', ')', 'and', '90.0', '%', '(', 'Hard', ')', 'on', 'test', 'set', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'DT', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'CD', 'NNS', ',', 'NN', ',', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'VBN', ',', 'CC', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'NN', '.']",81
face_detection,10,184,FDDB Dataset,"['FDDB', 'Dataset']","['B-n', 'I-n']","['NNP', 'NNP']",2
face_detection,10,187,"As shown in , our DSFD achieves state - of - the - art performance on both discontinuous and continuous ROC curves , i.e. 99.1 % and 86.2 % when the number of false positives equals to 1 , 000 .","['As', 'shown', 'in', ',', 'our', 'DSFD', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'both', 'discontinuous', 'and', 'continuous', 'ROC', 'curves', ',', 'i.e.', '99.1', '%', 'and', '86.2', '%', 'when', 'the', 'number', 'of', 'false', 'positives', 'equals', 'to', '1', ',', '000', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NNP', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NNP', 'NNS', ',', 'FW', 'CD', 'NN', 'CC', 'CD', 'NN', 'WRB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'NNS', 'TO', 'CD', ',', 'CD', '.']",41
face_detection,10,188,"After adding additional annotations to those unlabeled faces , the false positives of our model can be further reduced and outperform all other methods .","['After', 'adding', 'additional', 'annotations', 'to', 'those', 'unlabeled', 'faces', ',', 'the', 'false', 'positives', 'of', 'our', 'model', 'can', 'be', 'further', 'reduced', 'and', 'outperform', 'all', 'other', 'methods', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'JJ', 'NNS', 'TO', 'DT', 'JJ', 'VBZ', ',', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'MD', 'VB', 'RB', 'VBN', 'CC', 'VB', 'DT', 'JJ', 'NNS', '.']",25
face_detection,17,4,"Face detection has been well studied for many years and one of remaining challenges is to detect small , blurred and partially occluded faces in uncontrolled environment .","['Face', 'detection', 'has', 'been', 'well', 'studied', 'for', 'many', 'years', 'and', 'one', 'of', 'remaining', 'challenges', 'is', 'to', 'detect', 'small', ',', 'blurred', 'and', 'partially', 'occluded', 'faces', 'in', 'uncontrolled', 'environment', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'VBN', 'RB', 'VBN', 'IN', 'JJ', 'NNS', 'CC', 'CD', 'IN', 'VBG', 'NNS', 'VBZ', 'TO', 'VB', 'JJ', ',', 'JJ', 'CC', 'RB', 'VBD', 'VBZ', 'IN', 'JJ', 'NN', '.']",28
face_detection,17,12,Our code is available in Pad - dlePaddle : https://github.com/PaddlePaddle/models/tree/develop/,"['Our', 'code', 'is', 'available', 'in', 'Pad', '-', 'dlePaddle', ':', 'https://github.com/PaddlePaddle/models/tree/develop/']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['PRP$', 'NN', 'VBZ', 'JJ', 'IN', 'NNP', ':', 'NN', ':', 'NN']",10
face_detection,17,31,"In this work , we use a semi-supervised solution to generate approximate labels for contextual parts related to faces and a series of anchors called PyramidAnchors are invented to be easily added to general anchor - based architectures .","['In', 'this', 'work', ',', 'we', 'use', 'a', 'semi-supervised', 'solution', 'to', 'generate', 'approximate', 'labels', 'for', 'contextual', 'parts', 'related', 'to', 'faces', 'and', 'a', 'series', 'of', 'anchors', 'called', 'PyramidAnchors', 'are', 'invented', 'to', 'be', 'easily', 'added', 'to', 'general', 'anchor', '-', 'based', 'architectures', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', 'VBN', 'TO', 'VBZ', 'CC', 'DT', 'NN', 'IN', 'NNS', 'VBN', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'RB', 'VBN', 'TO', 'JJ', 'NN', ':', 'VBN', 'NNS', '.']",39
face_detection,17,34,We investigate the performance of Feature Pyramid Networks ( FPN ) and modify it into a Low - level Feature Pyramid Network ( LFPN ) to join mutually helpful features together .,"['We', 'investigate', 'the', 'performance', 'of', 'Feature', 'Pyramid', 'Networks', '(', 'FPN', ')', 'and', 'modify', 'it', 'into', 'a', 'Low', '-', 'level', 'Feature', 'Pyramid', 'Network', '(', 'LFPN', ')', 'to', 'join', 'mutually', 'helpful', 'features', 'together', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'CC', 'VB', 'PRP', 'IN', 'DT', 'NNP', ':', 'NN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'RB', 'JJ', 'NNS', 'RB', '.']",32
face_detection,17,36,We introduce the Context - sensitive prediction module ( CPM ) to incorporate context information around the target face with a wider and deeper network .,"['We', 'introduce', 'the', 'Context', '-', 'sensitive', 'prediction', 'module', '(', 'CPM', ')', 'to', 'incorporate', 'context', 'information', 'around', 'the', 'target', 'face', 'with', 'a', 'wider', 'and', 'deeper', 'network', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', ':', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'TO', 'VB', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'CC', 'JJR', 'NN', '.']",26
face_detection,17,37,"Meanwhile , we propose a max - in - out layer for the prediction module to further improve the capability of classification network .","['Meanwhile', ',', 'we', 'propose', 'a', 'max', '-', 'in', '-', 'out', 'layer', 'for', 'the', 'prediction', 'module', 'to', 'further', 'improve', 'the', 'capability', 'of', 'classification', 'network', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'IN', ':', 'RP', 'NN', 'IN', 'DT', 'NN', 'NN', 'TO', 'RBR', 'VB', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",24
face_detection,17,38,"In addition , we propose a training strategy named as Data - anchor - sampling to make an adjustment on the distribution of the training dataset .","['In', 'addition', ',', 'we', 'propose', 'a', 'training', 'strategy', 'named', 'as', 'Data', '-', 'anchor', '-', 'sampling', 'to', 'make', 'an', 'adjustment', 'on', 'the', 'distribution', 'of', 'the', 'training', 'dataset', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'VBN', 'IN', 'NNP', ':', 'NN', ':', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",27
face_detection,17,219,FDDB Dataset .,"['FDDB', 'Dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NNP', '.']",3
face_detection,17,223,The PyramidBox achieves state - ofart performance and the result is shown in and .,"['The', 'PyramidBox', 'achieves', 'state', '-', 'ofart', 'performance', 'and', 'the', 'result', 'is', 'shown', 'in', 'and', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'VBZ', 'NN', ':', 'NN', 'NN', 'CC', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'CC', '.']",15
face_detection,17,224,WIDER FACE Dataset .,"['WIDER', 'FACE', 'Dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNP', '.']",4
face_detection,17,228,"Our PyramidBox outperforms others across all three subsets , i.e. 0.961 ( easy ) , 0.950 ( medium ) , 0.889 ( hard ) for validation set , and 0.956 ( easy ) , 0.946 ( medium ) , 0.887 ( hard ) for testing set .","['Our', 'PyramidBox', 'outperforms', 'others', 'across', 'all', 'three', 'subsets', ',', 'i.e.', '0.961', '(', 'easy', ')', ',', '0.950', '(', 'medium', ')', ',', '0.889', '(', 'hard', ')', 'for', 'validation', 'set', ',', 'and', '0.956', '(', 'easy', ')', ',', '0.946', '(', 'medium', ')', ',', '0.887', '(', 'hard', ')', 'for', 'testing', 'set', '.']","['B-n', 'I-n', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NNP', 'VBZ', 'NNS', 'IN', 'DT', 'CD', 'NNS', ',', 'FW', 'CD', '(', 'JJ', ')', ',', 'CD', '(', 'NN', ')', ',', 'CD', '(', 'JJ', ')', 'IN', 'NN', 'VBN', ',', 'CC', 'CD', '(', 'JJ', ')', ',', 'CD', '(', 'NN', ')', ',', 'CD', '(', 'JJ', ')', 'IN', 'VBG', 'NN', '.']",47
face_detection,2,2,Selective Refinement Network for High Performance Face Detection,"['Selective', 'Refinement', 'Network', 'for', 'High', 'Performance', 'Face', 'Detection']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",8
face_detection,2,4,"High performance face detection remains a very challenging problem , especially when there exists many tiny faces .","['High', 'performance', 'face', 'detection', 'remains', 'a', 'very', 'challenging', 'problem', ',', 'especially', 'when', 'there', 'exists', 'many', 'tiny', 'faces', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'NN', 'VBZ', 'DT', 'RB', 'JJ', 'NN', ',', 'RB', 'WRB', 'EX', 'VBZ', 'JJ', 'JJ', 'VBZ', '.']",18
face_detection,2,43,"In this paper , we investigate the effects of two - step classification and regression on different levels of detection layers and propose a novel face detection framework , named Selective Refinement Network ( SRN ) , which selectively applies two - step classification and regression to specific levels of detection layers .","['In', 'this', 'paper', ',', 'we', 'investigate', 'the', 'effects', 'of', 'two', '-', 'step', 'classification', 'and', 'regression', 'on', 'different', 'levels', 'of', 'detection', 'layers', 'and', 'propose', 'a', 'novel', 'face', 'detection', 'framework', ',', 'named', 'Selective', 'Refinement', 'Network', '(', 'SRN', ')', ',', 'which', 'selectively', 'applies', 'two', '-', 'step', 'classification', 'and', 'regression', 'to', 'specific', 'levels', 'of', 'detection', 'layers', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNS', 'IN', 'CD', ':', 'NN', 'NN', 'CC', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NNS', 'CC', 'VB', 'DT', 'JJ', 'NN', 'NN', 'NN', ',', 'VBN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'RB', 'VBZ', 'CD', ':', 'NN', 'NN', 'CC', 'NN', 'TO', 'JJ', 'NNS', 'IN', 'NN', 'NNS', '.']",53
face_detection,2,44,"The network structure of SRN is shown in , which consists of two key modules , named as the Selective Two - step Classification ( STC ) module and the Selective Two - step Regression ( STR ) module .","['The', 'network', 'structure', 'of', 'SRN', 'is', 'shown', 'in', ',', 'which', 'consists', 'of', 'two', 'key', 'modules', ',', 'named', 'as', 'the', 'Selective', 'Two', '-', 'step', 'Classification', '(', 'STC', ')', 'module', 'and', 'the', 'Selective', 'Two', '-', 'step', 'Regression', '(', 'STR', ')', 'module', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'IN', 'NNP', 'VBZ', 'VBN', 'IN', ',', 'WDT', 'VBZ', 'IN', 'CD', 'JJ', 'NNS', ',', 'VBN', 'IN', 'DT', 'NNP', 'CD', ':', 'NN', 'NNP', '(', 'NNP', ')', 'NN', 'CC', 'DT', 'NNP', 'CD', ':', 'NN', 'NNP', '(', 'NNP', ')', 'NN', '.']",40
face_detection,2,45,"Specifically , the STC is applied to filter out most simple negative samples ( illustrated in ( a ) ) from the low levels of detection layers , which contains 88.9 % samples .","['Specifically', ',', 'the', 'STC', 'is', 'applied', 'to', 'filter', 'out', 'most', 'simple', 'negative', 'samples', '(', 'illustrated', 'in', '(', 'a', ')', ')', 'from', 'the', 'low', 'levels', 'of', 'detection', 'layers', ',', 'which', 'contains', '88.9', '%', 'samples', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NNP', 'VBZ', 'VBN', 'TO', 'VB', 'RP', 'JJS', 'JJ', 'JJ', 'NNS', '(', 'VBN', 'IN', '(', 'DT', ')', ')', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'CD', 'NN', 'NNS', '.']",34
face_detection,2,48,"In addition , we design a Receptive Field Enhancement ( RFE ) to provide more diverse receptive fields to better capture the extreme - pose faces .","['In', 'addition', ',', 'we', 'design', 'a', 'Receptive', 'Field', 'Enhancement', '(', 'RFE', ')', 'to', 'provide', 'more', 'diverse', 'receptive', 'fields', 'to', 'better', 'capture', 'the', 'extreme', '-', 'pose', 'faces', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'JJR', 'JJ', 'NN', 'NNS', 'TO', 'RBR', 'VB', 'DT', 'JJ', ':', 'JJ', 'VBZ', '.']",27
face_detection,2,175,"The loss function for SRN is just the sum of the STC loss and the STR loss , i.e. , L = L STC + L STR .","['The', 'loss', 'function', 'for', 'SRN', 'is', 'just', 'the', 'sum', 'of', 'the', 'STC', 'loss', 'and', 'the', 'STR', 'loss', ',', 'i.e.', ',', 'L', '=', 'L', 'STC', '+', 'L', 'STR', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'IN', 'NNP', 'VBZ', 'RB', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'CC', 'DT', 'NNP', 'NN', ',', 'FW', ',', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', '.']",28
face_detection,2,176,"The backbone network is initialized by the pretrained ResNet - 50 model and all the parameters in the newly added convolution layers are initialized by the "" xavier "" method .","['The', 'backbone', 'network', 'is', 'initialized', 'by', 'the', 'pretrained', 'ResNet', '-', '50', 'model', 'and', 'all', 'the', 'parameters', 'in', 'the', 'newly', 'added', 'convolution', 'layers', 'are', 'initialized', 'by', 'the', '""', 'xavier', '""', 'method', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NNP', ':', 'CD', 'NN', 'CC', 'PDT', 'DT', 'NNS', 'IN', 'DT', 'RB', 'VBN', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'NN', '.']",31
face_detection,2,177,"We fine - tune the SRN model using SGD with 0.9 momentum , 0.0001 weight decay , and batch size 32 .","['We', 'fine', '-', 'tune', 'the', 'SRN', 'model', 'using', 'SGD', 'with', '0.9', 'momentum', ',', '0.0001', 'weight', 'decay', ',', 'and', 'batch', 'size', '32', '.']","['O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', ':', 'NN', 'DT', 'NNP', 'NN', 'VBG', 'NNP', 'IN', 'CD', 'NN', ',', 'CD', 'NN', 'NN', ',', 'CC', 'NN', 'NN', 'CD', '.']",22
face_detection,2,178,"We set the learning rate to 10 ?2 for the first 100 epochs , and decay it to 10 ? 3 and 10 ? 4 for another 20 and 10 epochs , respectively .","['We', 'set', 'the', 'learning', 'rate', 'to', '10', '?2', 'for', 'the', 'first', '100', 'epochs', ',', 'and', 'decay', 'it', 'to', '10', '?', '3', 'and', '10', '?', '4', 'for', 'another', '20', 'and', '10', 'epochs', ',', 'respectively', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'CD', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', ',', 'CC', 'VB', 'PRP', 'TO', 'CD', '.', 'CD', 'CC', 'CD', '.', 'CD', 'IN', 'DT', 'CD', 'CC', 'CD', 'NNS', ',', 'RB', '.']",34
face_detection,2,179,We implement SRN using the Py - Torch library .,"['We', 'implement', 'SRN', 'using', 'the', 'Py', '-', 'Torch', 'library', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'NNP', 'VBG', 'DT', 'NNP', ':', 'NN', 'NN', '.']",10
face_detection,2,213,AFW Dataset .,"['AFW', 'Dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NNP', '.']",3
face_detection,2,217,"As shown in , SRN outperforms these state - of - the - art methods with the top AP score ( 99.87 % ) .","['As', 'shown', 'in', ',', 'SRN', 'outperforms', 'these', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'with', 'the', 'top', 'AP', 'score', '(', '99.87', '%', ')', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'NNP', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'NN', '(', 'CD', 'NN', ')', '.']",25
face_detection,2,218,PASCAL Face Dataset .,"['PASCAL', 'Face', 'Dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNP', '.']",4
face_detection,2,221,SRN achieves the state - of - the - art results by improving 4.99 % AP score compared to the second best method STN .,"['SRN', 'achieves', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'by', 'improving', '4.99', '%', 'AP', 'score', 'compared', 'to', 'the', 'second', 'best', 'method', 'STN', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'VBG', 'CD', 'NN', 'NNP', 'NN', 'VBN', 'TO', 'DT', 'JJ', 'RBS', 'NN', 'NNP', '.']",25
face_detection,2,222,FDDB Dataset .,"['FDDB', 'Dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NNP', '.']",3
face_detection,2,225,"As shown in ( c ) , our SRN sets a new state - of - the - art performance , i.e. , 98.8 % true positive rate when the number of false positives is equal to 1000 .","['As', 'shown', 'in', '(', 'c', ')', ',', 'our', 'SRN', 'sets', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', ',', 'i.e.', ',', '98.8', '%', 'true', 'positive', 'rate', 'when', 'the', 'number', 'of', 'false', 'positives', 'is', 'equal', 'to', '1000', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['IN', 'VBN', 'IN', '(', 'NN', ')', ',', 'PRP$', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', ',', 'FW', ',', 'CD', 'NN', 'JJ', 'JJ', 'NN', 'WRB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'VBZ', 'JJ', 'TO', 'CD', '.']",39
face_detection,2,227,WIDER FACE Dataset .,"['WIDER', 'FACE', 'Dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNP', '.']",4
face_detection,2,230,"As shown in , we find that SRN performs favourably against the state - of - the - art based on the average precision ( AP ) across the three subsets , especially on the Hard subset which contains a large amount of small faces .","['As', 'shown', 'in', ',', 'we', 'find', 'that', 'SRN', 'performs', 'favourably', 'against', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'based', 'on', 'the', 'average', 'precision', '(', 'AP', ')', 'across', 'the', 'three', 'subsets', ',', 'especially', 'on', 'the', 'Hard', 'subset', 'which', 'contains', 'a', 'large', 'amount', 'of', 'small', 'faces', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'PRP', 'VBP', 'IN', 'NNP', 'VBZ', 'RB', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'CD', 'NNS', ',', 'RB', 'IN', 'DT', 'NNP', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'VBZ', '.']",46
face_detection,3,4,"We propose a method to address challenges in unconstrained face detection , such as arbitrary pose variations and occlusions .","['We', 'propose', 'a', 'method', 'to', 'address', 'challenges', 'in', 'unconstrained', 'face', 'detection', ',', 'such', 'as', 'arbitrary', 'pose', 'variations', 'and', 'occlusions', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'TO', 'VB', 'NNS', 'IN', 'JJ', 'NN', 'NN', ',', 'JJ', 'IN', 'JJ', 'JJ', 'NNS', 'CC', 'NNS', '.']",20
face_detection,3,14,It is the first step in automatic face recognition applications .,"['It', 'is', 'the', 'first', 'step', 'in', 'automatic', 'face', 'recognition', 'applications', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'NNS', '.']",11
face_detection,3,19,"In this paper , we refer to face detection with arbitrary facial variations as the unconstrained face detection problem .","['In', 'this', 'paper', ',', 'we', 'refer', 'to', 'face', 'detection', 'with', 'arbitrary', 'facial', 'variations', 'as', 'the', 'unconstrained', 'face', 'detection', 'problem', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', '.']",20
face_detection,3,34,"First , we propose a simple pixel - level feature , called the Normalized Pixel Difference ( NPD ) .","['First', ',', 'we', 'propose', 'a', 'simple', 'pixel', '-', 'level', 'feature', ',', 'called', 'the', 'Normalized', 'Pixel', 'Difference', '(', 'NPD', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', ',', 'VBD', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",20
face_detection,3,35,"An NPD is computed as the ratio of the difference between any two pixel intensity values to the sum of their values , in the same form as the Weber Fraction in experimental psychology .","['An', 'NPD', 'is', 'computed', 'as', 'the', 'ratio', 'of', 'the', 'difference', 'between', 'any', 'two', 'pixel', 'intensity', 'values', 'to', 'the', 'sum', 'of', 'their', 'values', ',', 'in', 'the', 'same', 'form', 'as', 'the', 'Weber', 'Fraction', 'in', 'experimental', 'psychology', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'CD', 'NN', 'NN', 'NNS', 'TO', 'DT', 'NN', 'IN', 'PRP$', 'NNS', ',', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'IN', 'JJ', 'NN', '.']",35
face_detection,3,36,"The NPD feature has several desirable properties , such as scale invariance , boundedness , and ability to reconstruct the original image .","['The', 'NPD', 'feature', 'has', 'several', 'desirable', 'properties', ',', 'such', 'as', 'scale', 'invariance', ',', 'boundedness', ',', 'and', 'ability', 'to', 'reconstruct', 'the', 'original', 'image', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'JJ', 'JJ', 'NNS', ',', 'JJ', 'IN', 'JJ', 'NN', ',', 'NN', ',', 'CC', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', '.']",23
face_detection,3,37,"we further show that NPD features can be obtained from a lookup table , and the resulting face detection template can be easily scaled for multiscale face detection .","['we', 'further', 'show', 'that', 'NPD', 'features', 'can', 'be', 'obtained', 'from', 'a', 'lookup', 'table', ',', 'and', 'the', 'resulting', 'face', 'detection', 'template', 'can', 'be', 'easily', 'scaled', 'for', 'multiscale', 'face', 'detection', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'VB', 'IN', 'NNP', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'DT', 'VBG', 'NN', 'NN', 'NN', 'MD', 'VB', 'RB', 'VBN', 'IN', 'JJ', 'NN', 'NN', '.']",29
face_detection,3,38,"Secondly , we propose a deep quadratic tree learning method and construct a single soft - cascade AdaBoost classifier to handle complex face manifolds and arbitrary pose and occlusion conditions .","['Secondly', ',', 'we', 'propose', 'a', 'deep', 'quadratic', 'tree', 'learning', 'method', 'and', 'construct', 'a', 'single', 'soft', '-', 'cascade', 'AdaBoost', 'classifier', 'to', 'handle', 'complex', 'face', 'manifolds', 'and', 'arbitrary', 'pose', 'and', 'occlusion', 'conditions', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'VBG', 'NN', 'CC', 'NN', 'DT', 'JJ', 'JJ', ':', 'NN', 'NNP', 'NN', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'CC', 'JJ', 'NN', 'CC', 'NN', 'NNS', '.']",31
face_detection,3,40,"In this way , different types of faces can be automatically divided into different leaves of a tree classifier , and the complex face manifold in a high dimensional space can be partitioned in the learning process .","['In', 'this', 'way', ',', 'different', 'types', 'of', 'faces', 'can', 'be', 'automatically', 'divided', 'into', 'different', 'leaves', 'of', 'a', 'tree', 'classifier', ',', 'and', 'the', 'complex', 'face', 'manifold', 'in', 'a', 'high', 'dimensional', 'space', 'can', 'be', 'partitioned', 'in', 'the', 'learning', 'process', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'JJ', 'NNS', 'IN', 'VBZ', 'MD', 'VB', 'RB', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",38
face_detection,3,41,"This is the "" divide and conquer "" strategy to tackle unconstrained face detection in a single classifier , without pre-labeling of views in the training set of face images .","['This', 'is', 'the', '""', 'divide', 'and', 'conquer', '""', 'strategy', 'to', 'tackle', 'unconstrained', 'face', 'detection', 'in', 'a', 'single', 'classifier', ',', 'without', 'pre-labeling', 'of', 'views', 'in', 'the', 'training', 'set', 'of', 'face', 'images', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'VBZ', 'DT', 'JJ', 'NN', 'CC', 'NN', 'NN', 'NN', 'TO', 'VB', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'IN', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', 'NNS', '.']",31
face_detection,3,42,"The resulting face detector is robust to variations in pose , occlusion , and illumination , as well as to blur and low image resolution .","['The', 'resulting', 'face', 'detector', 'is', 'robust', 'to', 'variations', 'in', 'pose', ',', 'occlusion', ',', 'and', 'illumination', ',', 'as', 'well', 'as', 'to', 'blur', 'and', 'low', 'image', 'resolution', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBG', 'NN', 'NN', 'VBZ', 'JJ', 'TO', 'NNS', 'IN', 'NN', ',', 'NN', ',', 'CC', 'NN', ',', 'RB', 'RB', 'IN', 'TO', 'VB', 'CC', 'JJ', 'NN', 'NN', '.']",26
face_detection,3,52,The source code of the proposed method is available in http://www.cbsr.ia.ac.cn/users/scliao/ projects / npdface / .,"['The', 'source', 'code', 'of', 'the', 'proposed', 'method', 'is', 'available', 'in', 'http://www.cbsr.ia.ac.cn/users/scliao/', 'projects', '/', 'npdface', '/', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'IN', 'DT', 'VBN', 'NN', 'VBZ', 'JJ', 'IN', 'JJ', 'NNS', 'VBP', 'JJ', 'NNP', '.']",16
face_detection,3,232,We used a detection template of 24 24 pixels .,"['We', 'used', 'a', 'detection', 'template', 'of', '24', '24', 'pixels', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'NN', 'IN', 'CD', 'CD', 'NNS', '.']",10
face_detection,3,233,"We set the maximum depth of the tree classifiers to be learned as eight , so that at most eight NPD features need to be evaluated for each tree classifier .","['We', 'set', 'the', 'maximum', 'depth', 'of', 'the', 'tree', 'classifiers', 'to', 'be', 'learned', 'as', 'eight', ',', 'so', 'that', 'at', 'most', 'eight', 'NPD', 'features', 'need', 'to', 'be', 'evaluated', 'for', 'each', 'tree', 'classifier', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NNS', 'TO', 'VB', 'VBN', 'IN', 'CD', ',', 'RB', 'IN', 'IN', 'JJS', 'CD', 'NNP', 'NNS', 'VBP', 'TO', 'VB', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",31
face_detection,3,234,"In the soft cascade training , we set the threshold of each exit as the minimal score of positive samples , i.e. we did not reject positive samples during training .","['In', 'the', 'soft', 'cascade', 'training', ',', 'we', 'set', 'the', 'threshold', 'of', 'each', 'exit', 'as', 'the', 'minimal', 'score', 'of', 'positive', 'samples', ',', 'i.e.', 'we', 'did', 'not', 'reject', 'positive', 'samples', 'during', 'training', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', ',', 'FW', 'PRP', 'VBD', 'RB', 'VB', 'JJ', 'NNS', 'IN', 'NN', '.']",31
face_detection,3,235,"Our final detector contains 1,226 deep quadratic trees , and 46,401 NPD features .","['Our', 'final', 'detector', 'contains', '1,226', 'deep', 'quadratic', 'trees', ',', 'and', '46,401', 'NPD', 'features', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'CD', 'JJ', 'JJ', 'NNS', ',', 'CC', 'CD', 'NNP', 'NNS', '.']",14
face_detection,3,237,"For an analysis , we also trained a near frontal face detector using the proposed NPD features and the classic cascade of regression trees ( CART ) with depth of four .","['For', 'an', 'analysis', ',', 'we', 'also', 'trained', 'a', 'near', 'frontal', 'face', 'detector', 'using', 'the', 'proposed', 'NPD', 'features', 'and', 'the', 'classic', 'cascade', 'of', 'regression', 'trees', '(', 'CART', ')', 'with', 'depth', 'of', 'four', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-p', 'I-p', 'I-n', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'RB', 'VBD', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'VBG', 'DT', 'VBN', 'NNP', 'NNS', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NNS', '(', 'NNP', ')', 'IN', 'NN', 'IN', 'CD', '.']",32
face_detection,3,238,"A subset of the training data 2 in was used , including 12,102 face images and 12,315 nonface images .","['A', 'subset', 'of', 'the', 'training', 'data', '2', 'in', 'was', 'used', ',', 'including', '12,102', 'face', 'images', 'and', '12,315', 'nonface', 'images', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'CD', 'IN', 'VBD', 'VBN', ',', 'VBG', 'CD', 'NN', 'NNS', 'CC', 'CD', 'NN', 'NNS', '.']",20
face_detection,3,239,The detection template is 20 20 pixels .,"['The', 'detection', 'template', 'is', '20', '20', 'pixels', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', 'CD', 'NNS', '.']",8
face_detection,3,240,"The detector cascade contains 15 stages , and for each stage , the target false accept rate was 0.5 , with a detection rate of 0.999 .","['The', 'detector', 'cascade', 'contains', '15', 'stages', ',', 'and', 'for', 'each', 'stage', ',', 'the', 'target', 'false', 'accept', 'rate', 'was', '0.5', ',', 'with', 'a', 'detection', 'rate', 'of', '0.999', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', 'NNS', ',', 'CC', 'IN', 'DT', 'NN', ',', 'DT', 'NN', 'JJ', 'NN', 'NN', 'VBD', 'CD', ',', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",27
face_detection,3,254,Evaluation on FDDB Database,"['Evaluation', 'on', 'FDDB', 'Database']","['O', 'O', 'B-n', 'I-n']","['NN', 'IN', 'NNP', 'NNP']",4
face_detection,3,265,"It can be observed that the proposed method outperforms most of the baseline methods except four methods , , , published recently .","['It', 'can', 'be', 'observed', 'that', 'the', 'proposed', 'method', 'outperforms', 'most', 'of', 'the', 'baseline', 'methods', 'except', 'four', 'methods', ',', ',', ',', 'published', 'recently', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'VBN', 'IN', 'DT', 'VBN', 'NN', 'VBZ', 'JJS', 'IN', 'DT', 'NN', 'NNS', 'IN', 'CD', 'NNS', ',', ',', ',', 'VBN', 'RB', '.']",23
face_detection,3,266,The proposed NPD face detector is the second best one at FP = 0 for the discrete metric and the third best one for the continuous metric .,"['The', 'proposed', 'NPD', 'face', 'detector', 'is', 'the', 'second', 'best', 'one', 'at', 'FP', '=', '0', 'for', 'the', 'discrete', 'metric', 'and', 'the', 'third', 'best', 'one', 'for', 'the', 'continuous', 'metric', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'VBN', 'NNP', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'JJS', 'CD', 'IN', 'NNP', 'NNP', 'CD', 'IN', 'DT', 'JJ', 'JJ', 'CC', 'DT', 'JJ', 'JJS', 'CD', 'IN', 'DT', 'JJ', 'JJ', '.']",28
face_detection,3,274,"It can be observed that the proposed NPD detector is among the top performers for the discrete metric , though it is not as good as the four recent methods for the continuous metric .","['It', 'can', 'be', 'observed', 'that', 'the', 'proposed', 'NPD', 'detector', 'is', 'among', 'the', 'top', 'performers', 'for', 'the', 'discrete', 'metric', ',', 'though', 'it', 'is', 'not', 'as', 'good', 'as', 'the', 'four', 'recent', 'methods', 'for', 'the', 'continuous', 'metric', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'VBN', 'IN', 'DT', 'VBN', 'NNP', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'JJ', ',', 'IN', 'PRP', 'VBZ', 'RB', 'RB', 'JJ', 'IN', 'DT', 'CD', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'JJ', '.']",35
face_detection,3,278,"Compared to recent methods , the Joint Cascade algorithm is the most competitive one to us in terms of accuracy and speed ( see Sec. 5.6 ) .","['Compared', 'to', 'recent', 'methods', ',', 'the', 'Joint', 'Cascade', 'algorithm', 'is', 'the', 'most', 'competitive', 'one', 'to', 'us', 'in', 'terms', 'of', 'accuracy', 'and', 'speed', '(', 'see', 'Sec.', '5.6', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'TO', 'JJ', 'NNS', ',', 'DT', 'NNP', 'NNP', 'NN', 'VBZ', 'DT', 'RBS', 'JJ', 'CD', 'TO', 'PRP', 'IN', 'NNS', 'IN', 'NN', 'CC', 'NN', '(', 'VB', 'NNP', 'CD', ')', '.']",28
face_detection,3,295,Evaluation on GENKI Database,"['Evaluation', 'on', 'GENKI', 'Database']","['O', 'O', 'B-n', 'I-n']","['NN', 'IN', 'NNP', 'NNP']",4
face_detection,3,307,The results show that the proposed NPD face detector significantly outperforms both the Viola - Jones and PittPatt face detectors .,"['The', 'results', 'show', 'that', 'the', 'proposed', 'NPD', 'face', 'detector', 'significantly', 'outperforms', 'both', 'the', 'Viola', '-', 'Jones', 'and', 'PittPatt', 'face', 'detectors', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'IN', 'DT', 'VBN', 'NNP', 'NN', 'NN', 'RB', 'VBZ', 'CC', 'DT', 'NNP', ':', 'NNP', 'CC', 'NNP', 'NN', 'NNS', '.']",21
face_detection,3,308,Evaluation on CMU - MIT Database,"['Evaluation', 'on', 'CMU', '-', 'MIT', 'Database']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['NN', 'IN', 'NNP', ':', 'NNP', 'NNP']",6
face_detection,3,314,"The results show that , compared to the Viola - Jones frontal face detector , the NPD detector performs better when the number of false positives , FP < 50 , while it is slightly worse than Viola - Jones at higher FPs .","['The', 'results', 'show', 'that', ',', 'compared', 'to', 'the', 'Viola', '-', 'Jones', 'frontal', 'face', 'detector', ',', 'the', 'NPD', 'detector', 'performs', 'better', 'when', 'the', 'number', 'of', 'false', 'positives', ',', 'FP', '<', '50', ',', 'while', 'it', 'is', 'slightly', 'worse', 'than', 'Viola', '-', 'Jones', 'at', 'higher', 'FPs', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'IN', ',', 'VBN', 'TO', 'DT', 'NNP', ':', 'NNP', 'JJ', 'NN', 'NN', ',', 'DT', 'NNP', 'NN', 'NNS', 'RBR', 'WRB', 'DT', 'NN', 'IN', 'JJ', 'NNS', ',', 'NNP', 'NNP', 'CD', ',', 'IN', 'PRP', 'VBZ', 'RB', 'JJR', 'IN', 'NNP', ':', 'NNP', 'IN', 'JJR', 'NNP', '.']",44
face_detection,15,4,"Although tremendous strides have been made in face detection , one of the remaining open challenges is to achieve real - time speed on the CPU as well as maintain high performance , since effective models for face detection tend to be computationally prohibitive .","['Although', 'tremendous', 'strides', 'have', 'been', 'made', 'in', 'face', 'detection', ',', 'one', 'of', 'the', 'remaining', 'open', 'challenges', 'is', 'to', 'achieve', 'real', '-', 'time', 'speed', 'on', 'the', 'CPU', 'as', 'well', 'as', 'maintain', 'high', 'performance', ',', 'since', 'effective', 'models', 'for', 'face', 'detection', 'tend', 'to', 'be', 'computationally', 'prohibitive', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'NN', 'NN', ',', 'CD', 'IN', 'DT', 'VBG', 'JJ', 'NNS', 'VBZ', 'TO', 'VB', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'NNP', 'RB', 'RB', 'IN', 'NN', 'JJ', 'NN', ',', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'VBP', 'TO', 'VB', 'RB', 'JJ', '.']",45
face_detection,15,13,Code is available at https://github.com/sfzhang15/FaceBoxes .,"['Code', 'is', 'available', 'at', 'https://github.com/sfzhang15/FaceBoxes', '.']","['O', 'O', 'O', 'O', 'B-n', 'O']","['NNP', 'VBZ', 'JJ', 'IN', 'NNS', '.']",6
face_detection,15,41,"In this paper , inspired by the RPN in Faster R - CNN and the multi-scale mechanism in SSD , we develop a state - of - the - art face detector with real - time speed on the CPU .","['In', 'this', 'paper', ',', 'inspired', 'by', 'the', 'RPN', 'in', 'Faster', 'R', '-', 'CNN', 'and', 'the', 'multi-scale', 'mechanism', 'in', 'SSD', ',', 'we', 'develop', 'a', 'state', '-', 'of', '-', 'the', '-', 'art', 'face', 'detector', 'with', 'real', '-', 'time', 'speed', 'on', 'the', 'CPU', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'VBN', 'IN', 'DT', 'NNP', 'IN', 'NNP', 'NNP', ':', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'NN', 'IN', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'NNP', '.']",41
face_detection,15,42,"Specifically , we propose a novel face detector named FaceBoxes , which only contains a single fully convolutional neural network and can be trained end - to - end .","['Specifically', ',', 'we', 'propose', 'a', 'novel', 'face', 'detector', 'named', 'FaceBoxes', ',', 'which', 'only', 'contains', 'a', 'single', 'fully', 'convolutional', 'neural', 'network', 'and', 'can', 'be', 'trained', 'end', '-', 'to', '-', 'end', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'NNP', ',', 'WDT', 'RB', 'VBZ', 'DT', 'JJ', 'RB', 'JJ', 'JJ', 'NN', 'CC', 'MD', 'VB', 'VBN', 'JJ', ':', 'TO', ':', 'NN', '.']",30
face_detection,15,43,The proposed method has a lightweight yet powerful network structure ( as shown in ) that consists of the Rapidly Digested Convolutional Layers ( RDCL ) and the Multiple Scale Convolutional Layers ( MSCL ) .,"['The', 'proposed', 'method', 'has', 'a', 'lightweight', 'yet', 'powerful', 'network', 'structure', '(', 'as', 'shown', 'in', ')', 'that', 'consists', 'of', 'the', 'Rapidly', 'Digested', 'Convolutional', 'Layers', '(', 'RDCL', ')', 'and', 'the', 'Multiple', 'Scale', 'Convolutional', 'Layers', '(', 'MSCL', ')', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBN', 'NN', 'VBZ', 'DT', 'JJ', 'RB', 'JJ', 'NN', 'NN', '(', 'IN', 'VBN', 'IN', ')', 'IN', 'VBZ', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'CC', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",36
face_detection,15,44,"The RDCL is designed to enable FaceBoxes to achieve real - time speed on the CPU , and the MSCL aims at enriching the receptive fields and discretizing anchors over different layers to handle various scales of faces .","['The', 'RDCL', 'is', 'designed', 'to', 'enable', 'FaceBoxes', 'to', 'achieve', 'real', '-', 'time', 'speed', 'on', 'the', 'CPU', ',', 'and', 'the', 'MSCL', 'aims', 'at', 'enriching', 'the', 'receptive', 'fields', 'and', 'discretizing', 'anchors', 'over', 'different', 'layers', 'to', 'handle', 'various', 'scales', 'of', 'faces', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'VBZ', 'VBN', 'TO', 'VB', 'NNP', 'TO', 'VB', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'NNP', ',', 'CC', 'DT', 'NNP', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NNS', 'CC', 'VBG', 'NNS', 'IN', 'JJ', 'NNS', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'VBZ', '.']",39
face_detection,15,45,"Besides , we propose a new anchor densification strategy to make different types of anchors have the same density on the input image , which significantly improves the recall rate of small faces .","['Besides', ',', 'we', 'propose', 'a', 'new', 'anchor', 'densification', 'strategy', 'to', 'make', 'different', 'types', 'of', 'anchors', 'have', 'the', 'same', 'density', 'on', 'the', 'input', 'image', ',', 'which', 'significantly', 'improves', 'the', 'recall', 'rate', 'of', 'small', 'faces', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'JJ', 'VBZ', '.']",34
face_detection,15,176,"We first filter out most boxes by a confidence threshold of 0.05 and keep the top 400 boxes before applying NMS , then we perform NMS with jaccard overlap of 0.3 and keep the top 200 boxes .","['We', 'first', 'filter', 'out', 'most', 'boxes', 'by', 'a', 'confidence', 'threshold', 'of', '0.05', 'and', 'keep', 'the', 'top', '400', 'boxes', 'before', 'applying', 'NMS', ',', 'then', 'we', 'perform', 'NMS', 'with', 'jaccard', 'overlap', 'of', '0.3', 'and', 'keep', 'the', 'top', '200', 'boxes', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'RP', 'JJS', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'CC', 'VB', 'DT', 'JJ', 'CD', 'NNS', 'IN', 'VBG', 'NNP', ',', 'RB', 'PRP', 'VBP', 'JJ', 'IN', 'JJ', 'NN', 'IN', 'CD', 'CC', 'VB', 'DT', 'JJ', 'CD', 'NNS', '.']",38
face_detection,15,177,We measure the speed using Titan X ( Pascal ) and cuDNN v 5.1 with Intel Xeon E5-2660v3@2.60 GHz .,"['We', 'measure', 'the', 'speed', 'using', 'Titan', 'X', '(', 'Pascal', ')', 'and', 'cuDNN', 'v', '5.1', 'with', 'Intel', 'Xeon', 'E5-2660v3@2.60', 'GHz', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'VBG', 'NNP', 'NNP', '(', 'NNP', ')', 'CC', 'JJ', 'NN', 'CD', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', '.']",20
face_detection,15,194,FaceBoxes Anchor densification strategy is crucial .,"['FaceBoxes', 'Anchor', 'densification', 'strategy', 'is', 'crucial', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['NNP', 'NNP', 'NN', 'NN', 'VBZ', 'JJ', '.']",7
face_detection,15,195,"Our anchor densification strategy is used to increase the density of small anchors ( i.e. , 32 32 and 64 64 ) in order to improve the recall rate of small faces .","['Our', 'anchor', 'densification', 'strategy', 'is', 'used', 'to', 'increase', 'the', 'density', 'of', 'small', 'anchors', '(', 'i.e.', ',', '32', '32', 'and', '64', '64', ')', 'in', 'order', 'to', 'improve', 'the', 'recall', 'rate', 'of', 'small', 'faces', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', '(', 'NN', ',', 'CD', 'CD', 'CC', 'CD', 'CD', ')', 'IN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'JJ', 'VBZ', '.']",33
face_detection,15,197,"2 , we can see that the m AP on FDDB is reduced from 96.0 % to 94.9 % after ablating the anchor densification strategy .","['2', ',', 'we', 'can', 'see', 'that', 'the', 'm', 'AP', 'on', 'FDDB', 'is', 'reduced', 'from', '96.0', '%', 'to', '94.9', '%', 'after', 'ablating', 'the', 'anchor', 'densification', 'strategy', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['CD', ',', 'PRP', 'MD', 'VB', 'IN', 'DT', 'NN', 'NNP', 'IN', 'NNP', 'VBZ', 'VBN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'NN', '.']",26
face_detection,15,202,RDCL is efficient and accuracy - preserving .,"['RDCL', 'is', 'efficient', 'and', 'accuracy', '-', 'preserving', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'JJ', 'CC', 'JJ', ':', 'NN', '.']",8
face_detection,15,209,AFW dataset .,"['AFW', 'dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NN', '.']",3
face_detection,15,212,"As illustrated in , our FaceBoxes outperforms all others by a large margin .","['As', 'illustrated', 'in', ',', 'our', 'FaceBoxes', 'outperforms', 'all', 'others', 'by', 'a', 'large', 'margin', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NNS', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",14
face_detection,15,214,PASCAL face dataset .,"['PASCAL', 'face', 'dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NN', 'NN', '.']",4
face_detection,15,217,"Our method significantly outperforms all other methods and commercial face detectors ( e.g. , SkyBiometry , Face + + and Picasa ) .","['Our', 'method', 'significantly', 'outperforms', 'all', 'other', 'methods', 'and', 'commercial', 'face', 'detectors', '(', 'e.g.', ',', 'SkyBiometry', ',', 'Face', '+', '+', 'and', 'Picasa', ')', '.']","['B-n', 'I-n', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NNS', 'CC', 'JJ', 'NN', 'NNS', '(', 'NN', ',', 'NNP', ',', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', ')', '.']",23
face_detection,15,219,FDDB dataset .,"['FDDB', 'dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NN', '.']",3
face_detection,15,226,Our FaceBoxes achieves the state - of - the - art performance and outperforms all others by a large margin on discontinuous and continuous ROC curves .,"['Our', 'FaceBoxes', 'achieves', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'and', 'outperforms', 'all', 'others', 'by', 'a', 'large', 'margin', 'on', 'discontinuous', 'and', 'continuous', 'ROC', 'curves', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNP', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'CC', 'NNS', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'CC', 'JJ', 'NNP', 'NNS', '.']",27
face_detection,12,4,Region proposal mechanisms are essential for existing deep learning approaches to object detection in images .,"['Region', 'proposal', 'mechanisms', 'are', 'essential', 'for', 'existing', 'deep', 'learning', 'approaches', 'to', 'object', 'detection', 'in', 'images', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'NN', 'NNS', 'VBP', 'JJ', 'IN', 'VBG', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'NN', 'IN', 'NNS', '.']",16
face_detection,12,12,"Existing deep learning approaches to solve this task ( e.g. , R - CNN and its variants ) mainly rely on region proposal mechanisms ( e.g. , region proposal networks ( RPN s ) ) to generate potential bounding boxes in an image and then classify these bounding boxes to achieve object detection .","['Existing', 'deep', 'learning', 'approaches', 'to', 'solve', 'this', 'task', '(', 'e.g.', ',', 'R', '-', 'CNN', 'and', 'its', 'variants', ')', 'mainly', 'rely', 'on', 'region', 'proposal', 'mechanisms', '(', 'e.g.', ',', 'region', 'proposal', 'networks', '(', 'RPN', 's', ')', ')', 'to', 'generate', 'potential', 'bounding', 'boxes', 'in', 'an', 'image', 'and', 'then', 'classify', 'these', 'bounding', 'boxes', 'to', 'achieve', 'object', 'detection', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['VBG', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'DT', 'NN', '(', 'NN', ',', 'NNP', ':', 'NN', 'CC', 'PRP$', 'NNS', ')', 'RB', 'RB', 'IN', 'NN', 'NN', 'NNS', '(', 'NN', ',', 'NN', 'NN', 'NNS', '(', 'NNP', 'RB', ')', ')', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'CC', 'RB', 'VB', 'DT', 'VBG', 'NNS', 'TO', 'VB', 'JJ', 'NN', '.']",54
face_detection,12,19,"Motivated by this , in this work , we propose a weakly supervised multimodal annotation segmentation ( WSMA - Seg ) approach , which uses segmentation models to achieve an accurate and robust object detection without NMS .","['Motivated', 'by', 'this', ',', 'in', 'this', 'work', ',', 'we', 'propose', 'a', 'weakly', 'supervised', 'multimodal', 'annotation', 'segmentation', '(', 'WSMA', '-', 'Seg', ')', 'approach', ',', 'which', 'uses', 'segmentation', 'models', 'to', 'achieve', 'an', 'accurate', 'and', 'robust', 'object', 'detection', 'without', 'NMS', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['VBN', 'IN', 'DT', ',', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBD', 'JJ', 'NN', 'NN', '(', 'NNP', ':', 'NN', ')', 'NN', ',', 'WDT', 'VBZ', 'NN', 'NNS', 'TO', 'VB', 'DT', 'NN', 'CC', 'JJ', 'NN', 'NN', 'IN', 'NNP', '.']",38
face_detection,12,21,"In the training phase , WSMA - Seg first converts weakly supervised bounding box annotations in detection tasks to multi-channel segmentation - like masks , called multimodal annotations ; then , a segmentation model is trained using multimodal annotations as labels to learn multimodal heatmaps for the training images .","['In', 'the', 'training', 'phase', ',', 'WSMA', '-', 'Seg', 'first', 'converts', 'weakly', 'supervised', 'bounding', 'box', 'annotations', 'in', 'detection', 'tasks', 'to', 'multi-channel', 'segmentation', '-', 'like', 'masks', ',', 'called', 'multimodal', 'annotations', ';', 'then', ',', 'a', 'segmentation', 'model', 'is', 'trained', 'using', 'multimodal', 'annotations', 'as', 'labels', 'to', 'learn', 'multimodal', 'heatmaps', 'for', 'the', 'training', 'images', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'NNP', ':', 'NNP', 'JJ', 'NNS', 'RB', 'VBD', 'VBG', 'NN', 'NNS', 'IN', 'NN', 'NNS', 'TO', 'JJ', 'NN', ':', 'IN', 'NNS', ',', 'VBN', 'NN', 'NNS', ':', 'RB', ',', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'VBG', 'JJ', 'NNS', 'IN', 'NNS', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NNS', '.']",50
face_detection,12,22,"In the testing phase , the resulting heatmaps of a given test image are converted into an instance - aware segmentation map based on a pixel - level logic operation ; then , a contour tracing operation is conducted to generate contours for objects using the segmentation map ; finally , bounding boxes of objects are created as circumscribed quadrilaterals of their corresponding contours .","['In', 'the', 'testing', 'phase', ',', 'the', 'resulting', 'heatmaps', 'of', 'a', 'given', 'test', 'image', 'are', 'converted', 'into', 'an', 'instance', '-', 'aware', 'segmentation', 'map', 'based', 'on', 'a', 'pixel', '-', 'level', 'logic', 'operation', ';', 'then', ',', 'a', 'contour', 'tracing', 'operation', 'is', 'conducted', 'to', 'generate', 'contours', 'for', 'objects', 'using', 'the', 'segmentation', 'map', ';', 'finally', ',', 'bounding', 'boxes', 'of', 'objects', 'are', 'created', 'as', 'circumscribed', 'quadrilaterals', 'of', 'their', 'corresponding', 'contours', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'DT', 'VBG', 'NNS', 'IN', 'DT', 'VBN', 'NN', 'NN', 'VBP', 'VBN', 'IN', 'DT', 'NN', ':', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'DT', 'JJ', ':', 'NN', 'JJ', 'NN', ':', 'RB', ',', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'NNS', 'IN', 'NNS', 'VBG', 'DT', 'NN', 'NN', ':', 'RB', ',', 'VBG', 'NNS', 'IN', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'NNS', '.']",65
face_detection,12,90,Rebar Head Detection,"['Rebar', 'Head', 'Detection']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_detection,12,98,"As shown in , our proposed method with Stack = 2 , Base = 40 , Depth = 5 has achieved the best performance among all solutions in terms of F1 Score .","['As', 'shown', 'in', ',', 'our', 'proposed', 'method', 'with', 'Stack', '=', '2', ',', 'Base', '=', '40', ',', 'Depth', '=', '5', 'has', 'achieved', 'the', 'best', 'performance', 'among', 'all', 'solutions', 'in', 'terms', 'of', 'F1', 'Score', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'VBN', 'NN', 'IN', 'NNP', 'NNP', 'CD', ',', 'NNP', 'NNP', 'CD', ',', 'NNP', 'NNP', 'CD', 'VBZ', 'VBN', 'DT', 'JJS', 'NN', 'IN', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'NNP', 'NNP', '.']",33
face_detection,12,100,"Therefore , we can conclude that , compared to the state - of - the - art baselines , WSMA - Seg is much simpler , more effective , and more efficient .","['Therefore', ',', 'we', 'can', 'conclude', 'that', ',', 'compared', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'baselines', ',', 'WSMA', '-', 'Seg', 'is', 'much', 'simpler', ',', 'more', 'effective', ',', 'and', 'more', 'efficient', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'MD', 'VB', 'DT', ',', 'VBN', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', ',', 'NNP', ':', 'NN', 'VBZ', 'JJ', 'NN', ',', 'RBR', 'JJ', ',', 'CC', 'RBR', 'JJ', '.']",33
face_detection,12,101,WIDER Face Detection,"['WIDER', 'Face', 'Detection']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_detection,12,104,WIDER Face results in a much lower detection accuracy compared to other face detection datasets .,"['WIDER', 'Face', 'results', 'in', 'a', 'much', 'lower', 'detection', 'accuracy', 'compared', 'to', 'other', 'face', 'detection', 'datasets', '.']","['B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNS', 'IN', 'DT', 'RB', 'JJR', 'NN', 'NN', 'VBN', 'TO', 'JJ', 'NN', 'NN', 'NNS', '.']",16
face_detection,12,111,"The results show that our proposed WSMA - Seg outperforms the state - of - the - art baselines in all three categories , reaching 94.70 , 93.41 , and 87.23 in Easy , Medium , and Hard categories , respectively .","['The', 'results', 'show', 'that', 'our', 'proposed', 'WSMA', '-', 'Seg', 'outperforms', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'baselines', 'in', 'all', 'three', 'categories', ',', 'reaching', '94.70', ',', '93.41', ',', 'and', '87.23', 'in', 'Easy', ',', 'Medium', ',', 'and', 'Hard', 'categories', ',', 'respectively', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['DT', 'NNS', 'VBP', 'IN', 'PRP$', 'VBN', 'NNP', ':', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'CD', 'NNS', ',', 'VBG', 'CD', ',', 'CD', ',', 'CC', 'CD', 'IN', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', 'NNS', ',', 'RB', '.']",42
face_detection,12,112,MS COCO Detection,"['MS', 'COCO', 'Detection']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_detection,12,130,"The results show that our WSMA - Seg approach outperforms all state - of - the - art baselines in terms of most metrics , including the most challenging metrics , AP , AP s , AR 1 , and AR s .","['The', 'results', 'show', 'that', 'our', 'WSMA', '-', 'Seg', 'approach', 'outperforms', 'all', 'state', '-', 'of', '-', 'the', '-', 'art', 'baselines', 'in', 'terms', 'of', 'most', 'metrics', ',', 'including', 'the', 'most', 'challenging', 'metrics', ',', 'AP', ',', 'AP', 's', ',', 'AR', '1', ',', 'and', 'AR', 's', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'IN', 'PRP$', 'NNP', ':', 'NNP', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'JJS', 'NNS', ',', 'VBG', 'DT', 'RBS', 'JJ', 'NNS', ',', 'NNP', ',', 'NNP', 'NN', ',', 'NNP', 'CD', ',', 'CC', 'NNP', 'NN', '.']",43
face_detection,12,131,"For the other metrics , the performance of our proposed approach is also close to those of the best baselines .","['For', 'the', 'other', 'metrics', ',', 'the', 'performance', 'of', 'our', 'proposed', 'approach', 'is', 'also', 'close', 'to', 'those', 'of', 'the', 'best', 'baselines', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NNS', ',', 'DT', 'NN', 'IN', 'PRP$', 'VBN', 'NN', 'VBZ', 'RB', 'JJ', 'TO', 'DT', 'IN', 'DT', 'JJS', 'NNS', '.']",21
face_detection,12,132,This proves that the proposed WSMA - Seg approach generally achieves more accurate and robust object detection than the state - of - the - art approaches without NMS .,"['This', 'proves', 'that', 'the', 'proposed', 'WSMA', '-', 'Seg', 'approach', 'generally', 'achieves', 'more', 'accurate', 'and', 'robust', 'object', 'detection', 'than', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'approaches', 'without', 'NMS', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'VBZ', 'IN', 'DT', 'VBN', 'NNP', ':', 'NNP', 'NN', 'RB', 'VBZ', 'JJR', 'JJ', 'CC', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'NNP', '.']",30
face_detection,0,2,Accurate Face Detection for High Performance,"['Accurate', 'Face', 'Detection', 'for', 'High', 'Performance']","['O', 'B-n', 'I-n', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",6
face_detection,0,23,"In this work , we first modify the popular one - stage RetinaNet method to perform face detection as our baseline model .","['In', 'this', 'work', ',', 'we', 'first', 'modify', 'the', 'popular', 'one', '-', 'stage', 'RetinaNet', 'method', 'to', 'perform', 'face', 'detection', 'as', 'our', 'baseline', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'RB', 'VB', 'DT', 'JJ', 'CD', ':', 'NN', 'NNP', 'NN', 'TO', 'VB', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'NN', '.']",23
face_detection,0,24,Then some recent tricks are applied on this baseline to develop a high performance face detector namely AInnoFace :,"['Then', 'some', 'recent', 'tricks', 'are', 'applied', 'on', 'this', 'baseline', 'to', 'develop', 'a', 'high', 'performance', 'face', 'detector', 'namely', 'AInnoFace', ':']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O']","['RB', 'DT', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'NN', 'RB', 'NNP', ':']",19
face_detection,0,25,( 1 ) Employing the two - step classification and regression for detection ; ( 2 ) Applying the Intersection over Union ( IoU ) loss function for regression ; ( 3 ) Revisiting the data augmentation based on data - anchor - sampling for training ; ( 4 ) Utilizing the max - out operation for robuster classification ; ( 5 ) Using the multi-scale testing strategy for inference .,"['(', '1', ')', 'Employing', 'the', 'two', '-', 'step', 'classification', 'and', 'regression', 'for', 'detection', ';', '(', '2', ')', 'Applying', 'the', 'Intersection', 'over', 'Union', '(', 'IoU', ')', 'loss', 'function', 'for', 'regression', ';', '(', '3', ')', 'Revisiting', 'the', 'data', 'augmentation', 'based', 'on', 'data', '-', 'anchor', '-', 'sampling', 'for', 'training', ';', '(', '4', ')', 'Utilizing', 'the', 'max', '-', 'out', 'operation', 'for', 'robuster', 'classification', ';', '(', '5', ')', 'Using', 'the', 'multi-scale', 'testing', 'strategy', 'for', 'inference', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['(', 'CD', ')', 'VBG', 'DT', 'CD', ':', 'NN', 'NN', 'CC', 'NN', 'IN', 'NN', ':', '(', 'CD', ')', 'VBG', 'DT', 'NN', 'IN', 'NNP', '(', 'NNP', ')', 'NN', 'NN', 'IN', 'NN', ':', '(', 'CD', ')', 'VBG', 'DT', 'NN', 'NN', 'VBN', 'IN', 'NNS', ':', 'NN', ':', 'NN', 'IN', 'NN', ':', '(', 'CD', ')', 'VBG', 'DT', 'NN', ':', 'RP', 'NN', 'IN', 'NN', 'NN', ':', '(', 'CD', ')', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', '.']",71
face_detection,0,134,The backbone network in the proposed AInnoFace detector is initialized by the pretrained model on the ImageNet dataset .,"['The', 'backbone', 'network', 'in', 'the', 'proposed', 'AInnoFace', 'detector', 'is', 'initialized', 'by', 'the', 'pretrained', 'model', 'on', 'the', 'ImageNet', 'dataset', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'IN', 'DT', 'VBN', 'NNP', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",19
face_detection,0,135,"We use the "" xavier "" method to randomly initialize the parameters in the newly added convolutional layers .","['We', 'use', 'the', '""', 'xavier', '""', 'method', 'to', 'randomly', 'initialize', 'the', 'parameters', 'in', 'the', 'newly', 'added', 'convolutional', 'layers', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NNP', 'NNP', 'NN', 'TO', 'VB', 'VB', 'DT', 'NNS', 'IN', 'DT', 'RB', 'VBN', 'JJ', 'NNS', '.']",19
face_detection,0,136,"The stochastic gradient descent ( SGD ) algorithm is used to fine - tune the model with 0.9 momentum , 0.0001 weight decay and batch size 32 .","['The', 'stochastic', 'gradient', 'descent', '(', 'SGD', ')', 'algorithm', 'is', 'used', 'to', 'fine', '-', 'tune', 'the', 'model', 'with', '0.9', 'momentum', ',', '0.0001', 'weight', 'decay', 'and', 'batch', 'size', '32', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NN', 'VBZ', 'VBN', 'TO', 'VB', ':', 'NN', 'DT', 'NN', 'IN', 'CD', 'NN', ',', 'CD', 'NN', 'NN', 'CC', 'NN', 'NN', 'CD', '.']",28
face_detection,0,137,The warmup strategy is applied to gradually ramp up the learning rate from 0.0003125 to 0.01 at the first 5 epochs .,"['The', 'warmup', 'strategy', 'is', 'applied', 'to', 'gradually', 'ramp', 'up', 'the', 'learning', 'rate', 'from', '0.0003125', 'to', '0.01', 'at', 'the', 'first', '5', 'epochs', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'RB', 'VB', 'RP', 'DT', 'VBG', 'NN', 'IN', 'CD', 'TO', 'CD', 'IN', 'DT', 'JJ', 'CD', 'NN', '.']",22
face_detection,0,138,"After that , it switches to the regular learning rate schedule , i.e. , dividing by 10 at 100 and 120 epochs and ending at 130 epochs .","['After', 'that', ',', 'it', 'switches', 'to', 'the', 'regular', 'learning', 'rate', 'schedule', ',', 'i.e.', ',', 'dividing', 'by', '10', 'at', '100', 'and', '120', 'epochs', 'and', 'ending', 'at', '130', 'epochs', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'DT', ',', 'PRP', 'VBZ', 'TO', 'DT', 'JJ', 'NN', 'NN', 'NN', ',', 'FW', ',', 'VBG', 'IN', 'CD', 'IN', 'CD', 'CC', 'CD', 'NNS', 'CC', 'VBG', 'IN', 'CD', 'NNS', '.']",28
face_detection,0,139,The full training and testing codes are built on the PyTorch library .,"['The', 'full', 'training', 'and', 'testing', 'codes', 'are', 'built', 'on', 'the', 'PyTorch', 'library', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'CC', 'VBG', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",13
face_detection,0,141,"As shown in , our face detector sets some new state - of - the - art results based on the AP score across the three subsets on both validation and testing subsets , i.e. , 97.0 % ( Easy ) , 96.1 % ( Medium ) and 91.8 % ( Hard ) for validation subset , and 96.5 % ( Easy ) , 95.7 % ( Medium ) and 91.2 % ( Hard ) for testing subset .","['As', 'shown', 'in', ',', 'our', 'face', 'detector', 'sets', 'some', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'based', 'on', 'the', 'AP', 'score', 'across', 'the', 'three', 'subsets', 'on', 'both', 'validation', 'and', 'testing', 'subsets', ',', 'i.e.', ',', '97.0', '%', '(', 'Easy', ')', ',', '96.1', '%', '(', 'Medium', ')', 'and', '91.8', '%', '(', 'Hard', ')', 'for', 'validation', 'subset', ',', 'and', '96.5', '%', '(', 'Easy', ')', ',', '95.7', '%', '(', 'Medium', ')', 'and', '91.2', '%', '(', 'Hard', ')', 'for', 'testing', 'subset', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'CD', 'NNS', 'IN', 'DT', 'NN', 'CC', 'VBG', 'NNS', ',', 'NN', ',', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'NN', ',', 'CC', 'CD', 'NN', '(', 'NNP', ')', ',', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', 'IN', 'VBG', 'NN', '.']",79
face_detection,0,142,These results outperform all the compared state - of - the - art methods and demonstrate the superiority of our AInnoFace detector .,"['These', 'results', 'outperform', 'all', 'the', 'compared', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'and', 'demonstrate', 'the', 'superiority', 'of', 'our', 'AInnoFace', 'detector', '.']","['O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'PDT', 'DT', 'VBN', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'CC', 'VB', 'DT', 'NN', 'IN', 'PRP$', 'NNP', 'NN', '.']",23
coreference_resolution,8,2,End - to - end Neural Coreference Resolution,"['End', '-', 'to', '-', 'end', 'Neural', 'Coreference', 'Resolution']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', ':', 'TO', ':', 'VB', 'JJ', 'NNP', 'NN']",8
coreference_resolution,8,4,We introduce the first end - to - end coreference resolution model and show that it significantly outperforms all previous work without using a syntactic parser or handengineered mention detector .,"['We', 'introduce', 'the', 'first', 'end', '-', 'to', '-', 'end', 'coreference', 'resolution', 'model', 'and', 'show', 'that', 'it', 'significantly', 'outperforms', 'all', 'previous', 'work', 'without', 'using', 'a', 'syntactic', 'parser', 'or', 'handengineered', 'mention', 'detector', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'NN', 'NN', 'NN', 'CC', 'NN', 'IN', 'PRP', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'CC', 'VBN', 'NN', 'NN', '.']",31
coreference_resolution,8,10,We present the first state - of - the - art neural coreference resolution model that is learned end - toend given only gold mention clusters .,"['We', 'present', 'the', 'first', 'state', '-', 'of', '-', 'the', '-', 'art', 'neural', 'coreference', 'resolution', 'model', 'that', 'is', 'learned', 'end', '-', 'toend', 'given', 'only', 'gold', 'mention', 'clusters', '.']","['O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'VBN', 'JJ', ':', 'NN', 'VBN', 'RB', 'JJ', 'NN', 'NNS', '.']",27
coreference_resolution,8,12,"We demonstrate for the first time that these resources are not required , and in fact performance can be improved significantly without them , by training an end - to - end neural model that jointly learns which spans are entity mentions and how to best cluster them .","['We', 'demonstrate', 'for', 'the', 'first', 'time', 'that', 'these', 'resources', 'are', 'not', 'required', ',', 'and', 'in', 'fact', 'performance', 'can', 'be', 'improved', 'significantly', 'without', 'them', ',', 'by', 'training', 'an', 'end', '-', 'to', '-', 'end', 'neural', 'model', 'that', 'jointly', 'learns', 'which', 'spans', 'are', 'entity', 'mentions', 'and', 'how', 'to', 'best', 'cluster', 'them', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'VBP', 'RB', 'VBN', ',', 'CC', 'IN', 'NN', 'NN', 'MD', 'VB', 'VBN', 'RB', 'IN', 'PRP', ',', 'IN', 'VBG', 'DT', 'NN', ':', 'TO', ':', 'VB', 'JJ', 'NN', 'WDT', 'RB', 'VBZ', 'WDT', 'NNS', 'VBP', 'JJ', 'NNS', 'CC', 'WRB', 'TO', 'VB', 'NN', 'PRP', '.']",49
coreference_resolution,8,13,Our model reasons over the space of all spans up to a maximum length and directly optimizes the marginal likelihood of antecedent spans from gold coreference clusters .,"['Our', 'model', 'reasons', 'over', 'the', 'space', 'of', 'all', 'spans', 'up', 'to', 'a', 'maximum', 'length', 'and', 'directly', 'optimizes', 'the', 'marginal', 'likelihood', 'of', 'antecedent', 'spans', 'from', 'gold', 'coreference', 'clusters', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', 'RP', 'TO', 'DT', 'JJ', 'NN', 'CC', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NNS', '.']",28
coreference_resolution,8,14,"It includes a span - ranking model that decides , for each span , which of the previous spans ( if any ) is a good antecedent .","['It', 'includes', 'a', 'span', '-', 'ranking', 'model', 'that', 'decides', ',', 'for', 'each', 'span', ',', 'which', 'of', 'the', 'previous', 'spans', '(', 'if', 'any', ')', 'is', 'a', 'good', 'antecedent', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'DT', 'NN', ':', 'NN', 'NN', 'WDT', 'VBZ', ',', 'IN', 'DT', 'NN', ',', 'WDT', 'IN', 'DT', 'JJ', 'NNS', '(', 'IN', 'DT', ')', 'VBZ', 'DT', 'JJ', 'NN', '.']",28
coreference_resolution,8,15,"At the core of our model are vector embeddings representing spans of text in the document , which combine context - dependent boundary representations with a head - finding attention mechanism over the span .","['At', 'the', 'core', 'of', 'our', 'model', 'are', 'vector', 'embeddings', 'representing', 'spans', 'of', 'text', 'in', 'the', 'document', ',', 'which', 'combine', 'context', '-', 'dependent', 'boundary', 'representations', 'with', 'a', 'head', '-', 'finding', 'attention', 'mechanism', 'over', 'the', 'span', '.']","['B-p', 'I-p', 'I-p', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'VBP', 'JJ', 'NNS', 'VBG', 'NNS', 'IN', 'NN', 'IN', 'DT', 'NN', ',', 'WDT', 'VBP', 'SYM', ':', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'NN', ':', 'VBG', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",35
coreference_resolution,8,16,"The attention component is inspired by parser - derived head - word matching features from previous systems , but is less susceptible to cascading errors .","['The', 'attention', 'component', 'is', 'inspired', 'by', 'parser', '-', 'derived', 'head', '-', 'word', 'matching', 'features', 'from', 'previous', 'systems', ',', 'but', 'is', 'less', 'susceptible', 'to', 'cascading', 'errors', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'NN', ':', 'VBN', 'NN', ':', 'NN', 'VBG', 'NNS', 'IN', 'JJ', 'NNS', ',', 'CC', 'VBZ', 'RBR', 'JJ', 'TO', 'VBG', 'NNS', '.']",26
coreference_resolution,8,116,Hyperparameters,['Hyperparameters'],['B-n'],['NNS'],1
coreference_resolution,8,118,"The word embeddings area fixed concatenation of 300 - dimensional GloVe embeddings and 50 - dimensional embeddings from , both normalized to be unit vectors .","['The', 'word', 'embeddings', 'area', 'fixed', 'concatenation', 'of', '300', '-', 'dimensional', 'GloVe', 'embeddings', 'and', '50', '-', 'dimensional', 'embeddings', 'from', ',', 'both', 'normalized', 'to', 'be', 'unit', 'vectors', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'NN', 'VBN', 'NN', 'IN', 'CD', ':', 'JJ', 'NNP', 'NNS', 'CC', 'CD', ':', 'JJ', 'NNS', 'IN', ',', 'DT', 'VBN', 'TO', 'VB', 'NN', 'NNS', '.']",26
coreference_resolution,8,119,Outof - vocabulary words are represented by a vector of zeros .,"['Outof', '-', 'vocabulary', 'words', 'are', 'represented', 'by', 'a', 'vector', 'of', 'zeros', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['NNP', ':', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NN', '.']",12
coreference_resolution,8,120,"In the character CNN , characters are represented as learned 8 - dimensional embeddings .","['In', 'the', 'character', 'CNN', ',', 'characters', 'are', 'represented', 'as', 'learned', '8', '-', 'dimensional', 'embeddings', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NNP', ',', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'CD', ':', 'JJ', 'NNS', '.']",15
coreference_resolution,8,121,"The convolutions have window sizes of 3 , 4 , and 5 characters , each consisting of 50 filters .","['The', 'convolutions', 'have', 'window', 'sizes', 'of', '3', ',', '4', ',', 'and', '5', 'characters', ',', 'each', 'consisting', 'of', '50', 'filters', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'NNS', 'IN', 'CD', ',', 'CD', ',', 'CC', 'CD', 'NNS', ',', 'DT', 'VBG', 'IN', 'CD', 'NNS', '.']",20
coreference_resolution,8,123,The hidden states in the LSTMs have 200 dimensions .,"['The', 'hidden', 'states', 'in', 'the', 'LSTMs', 'have', '200', 'dimensions', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'IN', 'DT', 'NNP', 'VBP', 'CD', 'NNS', '.']",10
coreference_resolution,8,124,Each feedforward neural network consists of two hidden layers with 150 dimensions and rectified linear units .,"['Each', 'feedforward', 'neural', 'network', 'consists', 'of', 'two', 'hidden', 'layers', 'with', '150', 'dimensions', 'and', 'rectified', 'linear', 'units', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'JJ', 'NN', 'NNS', 'IN', 'CD', 'JJ', 'NNS', 'IN', 'CD', 'NNS', 'CC', 'VBD', 'JJ', 'NNS', '.']",17
coreference_resolution,8,133,We use ADAM for learning with a minibatch size of 1 .,"['We', 'use', 'ADAM', 'for', 'learning', 'with', 'a', 'minibatch', 'size', 'of', '1', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'NNP', 'IN', 'VBG', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",12
coreference_resolution,8,134,The LSTM weights are initialized with random orthonormal matrices as described in .,"['The', 'LSTM', 'weights', 'are', 'initialized', 'with', 'random', 'orthonormal', 'matrices', 'as', 'described', 'in', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'VBN', 'IN', '.']",13
coreference_resolution,8,135,We apply 0.5 dropout to the word embeddings and character CNN outputs .,"['We', 'apply', '0.5', 'dropout', 'to', 'the', 'word', 'embeddings', 'and', 'character', 'CNN', 'outputs', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'NN', 'TO', 'DT', 'NN', 'NNS', 'CC', 'NN', 'NNP', 'VBZ', '.']",13
coreference_resolution,8,136,We apply 0.2 dropout to all hidden layers and feature embeddings .,"['We', 'apply', '0.2', 'dropout', 'to', 'all', 'hidden', 'layers', 'and', 'feature', 'embeddings', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'NN', 'TO', 'DT', 'JJ', 'NNS', 'CC', 'NN', 'NNS', '.']",12
coreference_resolution,8,137,Dropout masks are shared across timesteps to preserve long - distance information as described in .,"['Dropout', 'masks', 'are', 'shared', 'across', 'timesteps', 'to', 'preserve', 'long', '-', 'distance', 'information', 'as', 'described', 'in', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'NNS', 'VBP', 'VBN', 'IN', 'NNS', 'TO', 'VB', 'JJ', ':', 'NN', 'NN', 'IN', 'NN', 'IN', '.']",16
coreference_resolution,8,138,The learning rate is decayed by 0.1 % every 100 steps .,"['The', 'learning', 'rate', 'is', 'decayed', 'by', '0.1', '%', 'every', '100', 'steps', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'CD', 'NN', 'DT', 'CD', 'NNS', '.']",12
coreference_resolution,8,139,"The model is trained for up to 150 epochs , with early stopping based on the development set .","['The', 'model', 'is', 'trained', 'for', 'up', 'to', '150', 'epochs', ',', 'with', 'early', 'stopping', 'based', 'on', 'the', 'development', 'set', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'RB', 'TO', 'CD', 'NNS', ',', 'IN', 'JJ', 'VBG', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",19
coreference_resolution,8,140,All code is implemented in Tensor - Flow and is publicly available .,"['All', 'code', 'is', 'implemented', 'in', 'Tensor', '-', 'Flow', 'and', 'is', 'publicly', 'available', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'NNP', ':', 'NN', 'CC', 'VBZ', 'RB', 'JJ', '.']",13
coreference_resolution,8,147,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,8,151,Coreference Results,"['Coreference', 'Results']","['B-n', 'I-n']","['NN', 'NNS']",2
coreference_resolution,8,153,We outperform previous systems in all metrics .,"['We', 'outperform', 'previous', 'systems', 'in', 'all', 'metrics', '.']","['O', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NNS', 'IN', 'DT', 'NNS', '.']",8
coreference_resolution,8,154,"In particular , our single model improves the state - of - the - art average F1 by 1.5 , and our 5 - model ensemble improves it by 3.1 .","['In', 'particular', ',', 'our', 'single', 'model', 'improves', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'average', 'F1', 'by', '1.5', ',', 'and', 'our', '5', '-', 'model', 'ensemble', 'improves', 'it', 'by', '3.1', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-p', 'B-n', 'O']","['IN', 'JJ', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'NNP', 'IN', 'CD', ',', 'CC', 'PRP$', 'CD', ':', 'NN', 'JJ', 'NNS', 'PRP', 'IN', 'CD', '.']",31
coreference_resolution,8,155,"The most significant gains come from improvements in recall , which is likely due to our end - toend setup .","['The', 'most', 'significant', 'gains', 'come', 'from', 'improvements', 'in', 'recall', ',', 'which', 'is', 'likely', 'due', 'to', 'our', 'end', '-', 'toend', 'setup', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'RBS', 'JJ', 'NNS', 'VBP', 'IN', 'NNS', 'IN', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'JJ', 'TO', 'PRP$', 'NN', ':', 'NN', 'NN', '.']",21
coreference_resolution,8,162,"The distance between spans and the width of spans are crucial signals for coreference resolution , consistent with previous findings from other coreference models .","['The', 'distance', 'between', 'spans', 'and', 'the', 'width', 'of', 'spans', 'are', 'crucial', 'signals', 'for', 'coreference', 'resolution', ',', 'consistent', 'with', 'previous', 'findings', 'from', 'other', 'coreference', 'models', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'NNS', 'CC', 'DT', 'NN', 'IN', 'NNS', 'VBP', 'JJ', 'NNS', 'IN', 'NN', 'NN', ',', 'JJ', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NNS', '.']",25
coreference_resolution,8,163,They contribute 3.8 F1 to the final result .,"['They', 'contribute', '3.8', 'F1', 'to', 'the', 'final', 'result', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'NNP', 'TO', 'DT', 'JJ', 'NN', '.']",9
coreference_resolution,8,169,"Since coreference decisions often involve rare named entities , we see a contribution of 0.9 F1 from character - level modeling .","['Since', 'coreference', 'decisions', 'often', 'involve', 'rare', 'named', 'entities', ',', 'we', 'see', 'a', 'contribution', 'of', '0.9', 'F1', 'from', 'character', '-', 'level', 'modeling', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'NNS', 'RB', 'VBP', 'JJ', 'VBN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'CD', 'NNP', 'IN', 'NN', ':', 'NN', 'NN', '.']",22
coreference_resolution,8,173,Ablations also show a 1.3 F1 degradation in performance without the attention mechanism for finding task - specific heads .,"['Ablations', 'also', 'show', 'a', '1.3', 'F1', 'degradation', 'in', 'performance', 'without', 'the', 'attention', 'mechanism', 'for', 'finding', 'task', '-', 'specific', 'heads', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'RB', 'VBP', 'DT', 'CD', 'NNP', 'NN', 'IN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'VBG', 'NN', ':', 'JJ', 'NNS', '.']",20
coreference_resolution,8,181,"As shown in , keeping mention candidates detected by the rule - based system over predicted parse trees ( Raghunathan et al. , 2010 ) degrades performance by 1 F1 .","['As', 'shown', 'in', ',', 'keeping', 'mention', 'candidates', 'detected', 'by', 'the', 'rule', '-', 'based', 'system', 'over', 'predicted', 'parse', 'trees', '(', 'Raghunathan', 'et', 'al.', ',', '2010', ')', 'degrades', 'performance', 'by', '1', 'F1', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'VBG', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NN', ':', 'VBN', 'NN', 'IN', 'JJ', 'NN', 'NNS', '(', 'NNP', 'RB', 'RB', ',', 'CD', ')', 'NNS', 'NN', 'IN', 'CD', 'NNP', '.']",31
coreference_resolution,8,183,"With oracle mentions , we see an improvement of 17.5 F1 , suggesting an enormous room for improvement if our model can produce better mention scores and anaphoricity decisions .","['With', 'oracle', 'mentions', ',', 'we', 'see', 'an', 'improvement', 'of', '17.5', 'F1', ',', 'suggesting', 'an', 'enormous', 'room', 'for', 'improvement', 'if', 'our', 'model', 'can', 'produce', 'better', 'mention', 'scores', 'and', 'anaphoricity', 'decisions', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'CD', 'NNP', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'NN', 'IN', 'PRP$', 'NN', 'MD', 'VB', 'JJR', 'NN', 'NNS', 'CC', 'NN', 'NNS', '.']",30
coreference_resolution,9,2,BERT for Coreference Resolution : Baselines and Analysis,"['BERT', 'for', 'Coreference', 'Resolution', ':', 'Baselines', 'and', 'Analysis']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'IN', 'NNP', 'NNP', ':', 'NNS', 'CC', 'NN']",8
coreference_resolution,9,11,"We fine - tune BERT to coreference resolution , achieving strong improvements on the GAP and benchmarks .","['We', 'fine', '-', 'tune', 'BERT', 'to', 'coreference', 'resolution', ',', 'achieving', 'strong', 'improvements', 'on', 'the', 'GAP', 'and', 'benchmarks', '.']","['O', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', ':', 'NN', 'NNP', 'TO', 'VB', 'NN', ',', 'VBG', 'JJ', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNS', '.']",18
coreference_resolution,9,12,We present two ways of extending the c 2f - coref model in .,"['We', 'present', 'two', 'ways', 'of', 'extending', 'the', 'c', '2f', '-', 'coref', 'model', 'in', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'CD', ':', 'NN', 'NN', 'IN', '.']",14
coreference_resolution,9,16,1 https://github.com/mandarjoshi90/coref,"['1', 'https://github.com/mandarjoshi90/coref']","['O', 'B-n']","['CD', 'NN']",2
coreference_resolution,9,63,We extend the original Tensorflow implementations of c 2f - coref 3 and BERT .,"['We', 'extend', 'the', 'original', 'Tensorflow', 'implementations', 'of', 'c', '2f', '-', 'coref', '3', 'and', 'BERT', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NNP', 'NNS', 'IN', 'NN', 'CD', ':', 'NN', 'CD', 'CC', 'NNP', '.']",15
coreference_resolution,9,64,"We fine tune all models on the OntoNotes English data for 20 epochs using a dropout of 0.3 , and learning rates of 1 10 ?5 and 2 10 ? 4 with linear decay for the BERT parameters and the task parameters respectively .","['We', 'fine', 'tune', 'all', 'models', 'on', 'the', 'OntoNotes', 'English', 'data', 'for', '20', 'epochs', 'using', 'a', 'dropout', 'of', '0.3', ',', 'and', 'learning', 'rates', 'of', '1', '10', '?5', 'and', '2', '10', '?', '4', 'with', 'linear', 'decay', 'for', 'the', 'BERT', 'parameters', 'and', 'the', 'task', 'parameters', 'respectively', '.']","['O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'NNP', 'NNS', 'IN', 'CD', 'NNS', 'VBG', 'DT', 'NN', 'IN', 'CD', ',', 'CC', 'VBG', 'NNS', 'IN', 'CD', 'CD', 'NN', 'CC', 'CD', 'CD', '.', 'CD', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNS', 'CC', 'DT', 'NN', 'NNS', 'RB', '.']",44
coreference_resolution,9,66,"We trained separate models with max segment len of 128 , 256 , 384 , and 512 ; the models trained on 128 and 384 word pieces performed the best for BERT - base and BERT - large respectively .","['We', 'trained', 'separate', 'models', 'with', 'max', 'segment', 'len', 'of', '128', ',', '256', ',', '384', ',', 'and', '512', ';', 'the', 'models', 'trained', 'on', '128', 'and', '384', 'word', 'pieces', 'performed', 'the', 'best', 'for', 'BERT', '-', 'base', 'and', 'BERT', '-', 'large', 'respectively', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'CD', ',', 'CD', ',', 'CC', 'CD', ':', 'DT', 'NNS', 'VBN', 'IN', 'CD', 'CC', 'CD', 'NN', 'NNS', 'VBD', 'DT', 'JJS', 'IN', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'JJ', 'RB', '.']",40
coreference_resolution,9,70,Paragraph Level : GAP,"['Paragraph', 'Level', ':', 'GAP']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', ':', 'NN']",4
coreference_resolution,9,76,Table 2 shows that BERT improves c 2 f - coref by 9 % and 11.5 % for the base and large models respectively .,"['Table', '2', 'shows', 'that', 'BERT', 'improves', 'c', '2', 'f', '-', 'coref', 'by', '9', '%', 'and', '11.5', '%', 'for', 'the', 'base', 'and', 'large', 'models', 'respectively', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['JJ', 'CD', 'NNS', 'IN', 'NNP', 'VBZ', 'VBP', 'CD', 'JJ', ':', 'NN', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', 'IN', 'DT', 'NN', 'CC', 'JJ', 'NNS', 'RB', '.']",25
coreference_resolution,9,78,Document Level : OntoNotes,"['Document', 'Level', ':', 'OntoNotes']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', ':', 'NNS']",4
coreference_resolution,9,83,shows that BERT - base offers an improvement of 0.9 % over the ELMo - based c2 fcoref model .,"['shows', 'that', 'BERT', '-', 'base', 'offers', 'an', 'improvement', 'of', '0.9', '%', 'over', 'the', 'ELMo', '-', 'based', 'c2', 'fcoref', 'model', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'WDT', 'NNP', ':', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'NNP', ':', 'VBN', 'NN', 'JJ', 'NN', '.']",20
coreference_resolution,9,87,"BERT - large , however , improves c 2 f - coref by the much larger margin of 3.9 % .","['BERT', '-', 'large', ',', 'however', ',', 'improves', 'c', '2', 'f', '-', 'coref', 'by', 'the', 'much', 'larger', 'margin', 'of', '3.9', '%', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', ':', 'JJ', ',', 'RB', ',', 'VBZ', 'VBP', 'CD', 'JJ', ':', 'NN', 'IN', 'DT', 'RB', 'JJR', 'NN', 'IN', 'CD', 'NN', '.']",21
coreference_resolution,9,88,We also observe that the overlap variant offers no improvement over independent .,"['We', 'also', 'observe', 'that', 'the', 'overlap', 'variant', 'offers', 'no', 'improvement', 'over', 'independent', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'JJ', '.']",13
coreference_resolution,1,2,End - to - end Deep Reinforcement Learning Based Coreference Resolution,"['End', '-', 'to', '-', 'end', 'Deep', 'Reinforcement', 'Learning', 'Based', 'Coreference', 'Resolution']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NN', ':', 'TO', ':', 'VB', 'NNP', 'NNP', 'NNP', 'VBD', 'NNP', 'NNP']",11
coreference_resolution,1,23,"In this paper , we propose a goal - directed endto - end deep reinforcement learning framework to resolve coreference as shown in .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'goal', '-', 'directed', 'endto', '-', 'end', 'deep', 'reinforcement', 'learning', 'framework', 'to', 'resolve', 'coreference', 'as', 'shown', 'in', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'VBN', 'SYM', ':', 'NN', 'JJ', 'NN', 'VBG', 'NN', 'TO', 'VB', 'NN', 'IN', 'VBN', 'IN', '.']",24
coreference_resolution,1,24,"Specifically , we leverage the neural architecture in as our policy network , which includes learning span representation , scoring potential entity mentions , and generating a probability distribution over all possible coreference linking actions from the current mention to its antecedents .","['Specifically', ',', 'we', 'leverage', 'the', 'neural', 'architecture', 'in', 'as', 'our', 'policy', 'network', ',', 'which', 'includes', 'learning', 'span', 'representation', ',', 'scoring', 'potential', 'entity', 'mentions', ',', 'and', 'generating', 'a', 'probability', 'distribution', 'over', 'all', 'possible', 'coreference', 'linking', 'actions', 'from', 'the', 'current', 'mention', 'to', 'its', 'antecedents', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'IN', 'PRP$', 'NN', 'NN', ',', 'WDT', 'VBZ', 'VBG', 'JJ', 'NN', ',', 'VBG', 'JJ', 'NN', 'NNS', ',', 'CC', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'TO', 'PRP$', 'NNS', '.']",43
coreference_resolution,1,25,"Once a sequence of linking actions are made , our reward function is used to measure how good the generated coreference clusters are , which is directly related to coreference evaluation metrics .","['Once', 'a', 'sequence', 'of', 'linking', 'actions', 'are', 'made', ',', 'our', 'reward', 'function', 'is', 'used', 'to', 'measure', 'how', 'good', 'the', 'generated', 'coreference', 'clusters', 'are', ',', 'which', 'is', 'directly', 'related', 'to', 'coreference', 'evaluation', 'metrics', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', 'DT', 'NN', 'IN', 'VBG', 'NNS', 'VBP', 'VBN', ',', 'PRP$', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'WRB', 'JJ', 'DT', 'JJ', 'NN', 'NNS', 'VBP', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'TO', 'VB', 'NN', 'NNS', '.']",33
coreference_resolution,1,26,"Besides , we introduce an entropy regularization term to encourage exploration and prevent the policy from prematurely converging to a bad local optimum .","['Besides', ',', 'we', 'introduce', 'an', 'entropy', 'regularization', 'term', 'to', 'encourage', 'exploration', 'and', 'prevent', 'the', 'policy', 'from', 'prematurely', 'converging', 'to', 'a', 'bad', 'local', 'optimum', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'NN', 'TO', 'VB', 'NN', 'CC', 'VB', 'DT', 'NN', 'IN', 'RB', 'VBG', 'TO', 'DT', 'JJ', 'JJ', 'NN', '.']",24
coreference_resolution,1,27,"Finally , we update the regularized policy network parameters based on the rewards associated with sequences of sampled actions , which are computed on the whole input document .","['Finally', ',', 'we', 'update', 'the', 'regularized', 'policy', 'network', 'parameters', 'based', 'on', 'the', 'rewards', 'associated', 'with', 'sequences', 'of', 'sampled', 'actions', ',', 'which', 'are', 'computed', 'on', 'the', 'whole', 'input', 'document', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NNS', 'VBN', 'IN', 'NNS', 'IN', 'JJ', 'NNS', ',', 'WDT', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",29
coreference_resolution,1,101,Experiments,['Experiments'],['B-n'],['NNS'],1
coreference_resolution,1,104,"First , we pretrain our model using Eq. ( 4 ) for around 200 K steps and use the learned parameters for initialization .","['First', ',', 'we', 'pretrain', 'our', 'model', 'using', 'Eq.', '(', '4', ')', 'for', 'around', '200', 'K', 'steps', 'and', 'use', 'the', 'learned', 'parameters', 'for', 'initialization', '.']","['O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'PRP$', 'NN', 'VBG', 'NNP', '(', 'CD', ')', 'IN', 'IN', 'CD', 'NNP', 'NNS', 'CC', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NN', '.']",24
coreference_resolution,1,105,"Besides , we set the number of sampled trajectories N s = 100 , tune the regularization parameter ? expr in { 10 ?5 , 10 ?4 , 0.001 , 0.01 , 0.1 , 1 } and set it to 10 ? 4 based on the development set .","['Besides', ',', 'we', 'set', 'the', 'number', 'of', 'sampled', 'trajectories', 'N', 's', '=', '100', ',', 'tune', 'the', 'regularization', 'parameter', '?', 'expr', 'in', '{', '10', '?5', ',', '10', '?4', ',', '0.001', ',', '0.01', ',', '0.1', ',', '1', '}', 'and', 'set', 'it', 'to', '10', '?', '4', 'based', 'on', 'the', 'development', 'set', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'NNP', 'VBD', 'JJ', 'CD', ',', 'VBD', 'DT', 'NN', 'NN', '.', 'NN', 'IN', '(', 'CD', 'NN', ',', 'CD', 'NN', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ')', 'CC', 'VB', 'PRP', 'TO', 'CD', '.', 'CD', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",49
coreference_resolution,1,109,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,1,115,"Built on top of the model in but excluding ELMo , our base reinforced model improves the average F 1 score around 2 points ( statistical significant t- test with p < 0.05 ) compared with .","['Built', 'on', 'top', 'of', 'the', 'model', 'in', 'but', 'excluding', 'ELMo', ',', 'our', 'base', 'reinforced', 'model', 'improves', 'the', 'average', 'F', '1', 'score', 'around', '2', 'points', '(', 'statistical', 'significant', 't-', 'test', 'with', 'p', '<', '0.05', ')', 'compared', 'with', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'NN', 'IN', 'DT', 'NN', 'IN', 'CC', 'VBG', 'NNP', ',', 'PRP$', 'NN', 'VBD', 'NN', 'VBZ', 'DT', 'JJ', 'NNP', 'CD', 'NN', 'RB', 'CD', 'NNS', '(', 'JJ', 'JJ', 'JJ', 'NN', 'IN', 'NN', '$', 'CD', ')', 'VBN', 'IN', '.']",37
coreference_resolution,1,117,"Regarding our model , using entropy regularization to encourage exploration can improve the result by 1 point .","['Regarding', 'our', 'model', ',', 'using', 'entropy', 'regularization', 'to', 'encourage', 'exploration', 'can', 'improve', 'the', 'result', 'by', '1', 'point', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['VBG', 'PRP$', 'NN', ',', 'VBG', 'JJ', 'NN', 'TO', 'VB', 'NN', 'MD', 'VB', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",18
coreference_resolution,1,118,"Moreover , introducing the context - dependent ELMo embedding to our base model can further boosts the performance , which is consistent with the results in .","['Moreover', ',', 'introducing', 'the', 'context', '-', 'dependent', 'ELMo', 'embedding', 'to', 'our', 'base', 'model', 'can', 'further', 'boosts', 'the', 'performance', ',', 'which', 'is', 'consistent', 'with', 'the', 'results', 'in', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VBG', 'DT', 'NN', ':', 'JJ', 'NNP', 'VBG', 'TO', 'PRP$', 'NN', 'NN', 'MD', 'RBR', 'VB', 'DT', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'IN', 'DT', 'NNS', 'IN', '.']",27
coreference_resolution,1,120,"Overall , our full model achieves the state - of the - art performance of 73.8 % F1 - score when using ELMo and entropy regularization ( compared to models marked with * in , and our approach simultaneously obtains the best F1 -score of 70.5 % when using fixed word embedding only .","['Overall', ',', 'our', 'full', 'model', 'achieves', 'the', 'state', '-', 'of', 'the', '-', 'art', 'performance', 'of', '73.8', '%', 'F1', '-', 'score', 'when', 'using', 'ELMo', 'and', 'entropy', 'regularization', '(', 'compared', 'to', 'models', 'marked', 'with', '*', 'in', ',', 'and', 'our', 'approach', 'simultaneously', 'obtains', 'the', 'best', 'F1', '-score', 'of', '70.5', '%', 'when', 'using', 'fixed', 'word', 'embedding', 'only', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', 'DT', ':', 'NN', 'NN', 'IN', 'CD', 'NN', 'NNP', ':', 'NN', 'WRB', 'VBG', 'NNP', 'CC', 'JJ', 'NN', '(', 'VBN', 'TO', 'NNS', 'VBN', 'IN', 'NNP', 'IN', ',', 'CC', 'PRP$', 'NN', 'RB', 'VBZ', 'DT', 'JJS', 'NNP', 'NN', 'IN', 'CD', 'NN', 'WRB', 'VBG', 'VBN', 'NN', 'VBG', 'RB', '.']",54
coreference_resolution,5,2,Learning Global Features for Coreference Resolution,"['Learning', 'Global', 'Features', 'for', 'Coreference', 'Resolution']","['O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",6
coreference_resolution,5,4,There is compelling evidence that coreference prediction would benefit from modeling global information about entity - clusters .,"['There', 'is', 'compelling', 'evidence', 'that', 'coreference', 'prediction', 'would', 'benefit', 'from', 'modeling', 'global', 'information', 'about', 'entity', '-', 'clusters', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['EX', 'VBZ', 'VBG', 'NN', 'IN', 'NN', 'NN', 'MD', 'VB', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'NN', ':', 'NNS', '.']",18
coreference_resolution,5,12,"In this work , we posit that global context is indeed necessary for further improvements in coreference resolution , but argue that informative cluster , rather than mention , level features are very difficult to devise , limiting their effectiveness .","['In', 'this', 'work', ',', 'we', 'posit', 'that', 'global', 'context', 'is', 'indeed', 'necessary', 'for', 'further', 'improvements', 'in', 'coreference', 'resolution', ',', 'but', 'argue', 'that', 'informative', 'cluster', ',', 'rather', 'than', 'mention', ',', 'level', 'features', 'are', 'very', 'difficult', 'to', 'devise', ',', 'limiting', 'their', 'effectiveness', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'IN', 'JJ', 'NN', 'VBZ', 'RB', 'JJ', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NN', ',', 'CC', 'VBP', 'IN', 'JJ', 'NN', ',', 'RB', 'IN', 'NN', ',', 'NN', 'NNS', 'VBP', 'RB', 'JJ', 'TO', 'VB', ',', 'VBG', 'PRP$', 'NN', '.']",41
coreference_resolution,5,13,"Accordingly , we instead propose to learn representations of mention clusters by embedding them sequentially using a recurrent neural network ( shown in Section 4 ) .","['Accordingly', ',', 'we', 'instead', 'propose', 'to', 'learn', 'representations', 'of', 'mention', 'clusters', 'by', 'embedding', 'them', 'sequentially', 'using', 'a', 'recurrent', 'neural', 'network', '(', 'shown', 'in', 'Section', '4', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'NNS', 'IN', 'NN', 'NNS', 'IN', 'VBG', 'PRP', 'RB', 'VBG', 'DT', 'JJ', 'JJ', 'NN', '(', 'VBN', 'IN', 'NNP', 'CD', ')', '.']",27
coreference_resolution,5,14,"Our model has no manually defined cluster features , but instead learns a global representation from the individual mentions present in each cluster .","['Our', 'model', 'has', 'no', 'manually', 'defined', 'cluster', 'features', ',', 'but', 'instead', 'learns', 'a', 'global', 'representation', 'from', 'the', 'individual', 'mentions', 'present', 'in', 'each', 'cluster', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'RB', 'VBN', 'NN', 'NNS', ',', 'CC', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'JJ', 'IN', 'DT', 'NN', '.']",24
coreference_resolution,5,15,We incorporate these representations into a mention - ranking style coreference system .,"['We', 'incorporate', 'these', 'representations', 'into', 'a', 'mention', '-', 'ranking', 'style', 'coreference', 'system', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'NN', 'NN', '.']",13
coreference_resolution,5,16,"The entire model , including the recurrent neural network and the mention - ranking sub-system , is trained end - to - end on the coreference task .","['The', 'entire', 'model', ',', 'including', 'the', 'recurrent', 'neural', 'network', 'and', 'the', 'mention', '-', 'ranking', 'sub-system', ',', 'is', 'trained', 'end', '-', 'to', '-', 'end', 'on', 'the', 'coreference', 'task', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', ',', 'VBG', 'DT', 'NN', 'JJ', 'NN', 'CC', 'DT', 'NN', ':', 'JJ', 'NN', ',', 'VBZ', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",28
coreference_resolution,5,17,"We train the model as a local classifier with fixed context ( that is , as a history - based model ) .","['We', 'train', 'the', 'model', 'as', 'a', 'local', 'classifier', 'with', 'fixed', 'context', '(', 'that', 'is', ',', 'as', 'a', 'history', '-', 'based', 'model', ')', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', '(', 'WDT', 'VBZ', ',', 'IN', 'DT', 'NN', ':', 'VBN', 'NN', ')', '.']",23
coreference_resolution,5,181,"For training , we use document - size minibatches , which allows for efficient pre-computation of RNN states , and we minimize the loss described in Section 5 with AdaGrad ( after clipping LSTM gradients to lie ( elementwise ) in ( ?10 , 10 ) ) .","['For', 'training', ',', 'we', 'use', 'document', '-', 'size', 'minibatches', ',', 'which', 'allows', 'for', 'efficient', 'pre-computation', 'of', 'RNN', 'states', ',', 'and', 'we', 'minimize', 'the', 'loss', 'described', 'in', 'Section', '5', 'with', 'AdaGrad', '(', 'after', 'clipping', 'LSTM', 'gradients', 'to', 'lie', '(', 'elementwise', ')', 'in', '(', '?10', ',', '10', ')', ')', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', ':', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'JJ', 'NN', 'IN', 'NNP', 'NNS', ',', 'CC', 'PRP', 'VBP', 'DT', 'NN', 'VBN', 'IN', 'NNP', 'CD', 'IN', 'NNP', '(', 'IN', 'VBG', 'NNP', 'NNS', 'TO', 'VB', '(', 'NN', ')', 'IN', '(', 'UH', ',', 'CD', ')', ')', '.']",48
coreference_resolution,5,182,"We find that the initial learning rate chosen for AdaGrad has a significant impact on results , and we choose learning rates for each layer out of { 0.1 , 0.02 , 0.01 , 0.002 , 0.001 } .","['We', 'find', 'that', 'the', 'initial', 'learning', 'rate', 'chosen', 'for', 'AdaGrad', 'has', 'a', 'significant', 'impact', 'on', 'results', ',', 'and', 'we', 'choose', 'learning', 'rates', 'for', 'each', 'layer', 'out', 'of', '{', '0.1', ',', '0.02', ',', '0.01', ',', '0.002', ',', '0.001', '}', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNS', ',', 'CC', 'PRP', 'VBP', 'VBG', 'NNS', 'IN', 'DT', 'NN', 'IN', 'IN', '(', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ')', '.']",39
coreference_resolution,5,183,"In experiments , we set ha ( x n ) , h c ( x n ) , and h ( m ) to be ? R 200 , and hp ( x n , y) ? R 700 .","['In', 'experiments', ',', 'we', 'set', 'ha', '(', 'x', 'n', ')', ',', 'h', 'c', '(', 'x', 'n', ')', ',', 'and', 'h', '(', 'm', ')', 'to', 'be', '?', 'R', '200', ',', 'and', 'hp', '(', 'x', 'n', ',', 'y)', '?', 'R', '700', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNS', ',', 'PRP', 'VBP', 'NNS', '(', 'NNP', 'RB', ')', ',', 'JJ', 'NN', '(', 'NNP', 'RB', ')', ',', 'CC', 'NN', '(', 'NN', ')', 'TO', 'VB', '.', 'NNP', 'CD', ',', 'CC', 'NN', '(', 'JJ', 'NN', ',', 'NN', '.', '$', 'CD', '.']",40
coreference_resolution,5,184,"We use a single - layer LSTM ( without "" peep - hole "" connections ) , as implemented in the element - rnn library .","['We', 'use', 'a', 'single', '-', 'layer', 'LSTM', '(', 'without', '""', 'peep', '-', 'hole', '""', 'connections', ')', ',', 'as', 'implemented', 'in', 'the', 'element', '-', 'rnn', 'library', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', ':', 'NN', 'NNP', '(', 'IN', 'NNP', 'VBP', ':', 'NN', 'JJ', 'NNS', ')', ',', 'IN', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', '.']",26
coreference_resolution,5,185,"For regularization , we apply Dropout with a rate of 0.4 before applying the linear weights u , and we also apply Dropout with a rate of 0.3 to the LSTM states before forming the dot -product scores .","['For', 'regularization', ',', 'we', 'apply', 'Dropout', 'with', 'a', 'rate', 'of', '0.4', 'before', 'applying', 'the', 'linear', 'weights', 'u', ',', 'and', 'we', 'also', 'apply', 'Dropout', 'with', 'a', 'rate', 'of', '0.3', 'to', 'the', 'LSTM', 'states', 'before', 'forming', 'the', 'dot', '-product', 'scores', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'RP', 'IN', 'DT', 'NN', 'IN', 'CD', 'IN', 'VBG', 'DT', 'JJ', 'NNS', 'NN', ',', 'CC', 'PRP', 'RB', 'VBP', 'NNP', 'IN', 'DT', 'NN', 'IN', 'CD', 'TO', 'DT', 'NNP', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NNS', '.']",39
coreference_resolution,5,189,Code for our system is available at https : //github.com/swiseman/nn_coref .,"['Code', 'for', 'our', 'system', 'is', 'available', 'at', 'https', ':', '//github.com/swiseman/nn_coref', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', 'IN', 'NN', ':', 'NN', '.']",11
coreference_resolution,5,190,"The system makes use of a GPU for training , and trains in about two hours .","['The', 'system', 'makes', 'use', 'of', 'a', 'GPU', 'for', 'training', ',', 'and', 'trains', 'in', 'about', 'two', 'hours', '.']","['O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'NN', 'IN', 'DT', 'NNP', 'IN', 'NN', ',', 'CC', 'NNS', 'IN', 'RB', 'CD', 'NNS', '.']",17
coreference_resolution,5,191,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,5,193,"We see a statistically significant improvement of over 0.8 Co NLL points over the previous state of the art , and the highest F 1 scores to date on all three CoNLL metrics .","['We', 'see', 'a', 'statistically', 'significant', 'improvement', 'of', 'over', '0.8', 'Co', 'NLL', 'points', 'over', 'the', 'previous', 'state', 'of', 'the', 'art', ',', 'and', 'the', 'highest', 'F', '1', 'scores', 'to', 'date', 'on', 'all', 'three', 'CoNLL', 'metrics', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'RB', 'JJ', 'NN', 'IN', 'IN', 'CD', 'NNP', 'NNP', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'CC', 'DT', 'JJS', 'JJ', 'CD', 'NNS', 'TO', 'NN', 'IN', 'DT', 'CD', 'NNP', 'NNS', '.']",34
coreference_resolution,5,203,"In we see that the RNN improves performance over all , with the most dramatic improve - ments on non-anaphoric pronouns , though errors are also decreased significantly for non-anaphoric nominal and proper mentions that follow at least one mention with the same head .","['In', 'we', 'see', 'that', 'the', 'RNN', 'improves', 'performance', 'over', 'all', ',', 'with', 'the', 'most', 'dramatic', 'improve', '-', 'ments', 'on', 'non-anaphoric', 'pronouns', ',', 'though', 'errors', 'are', 'also', 'decreased', 'significantly', 'for', 'non-anaphoric', 'nominal', 'and', 'proper', 'mentions', 'that', 'follow', 'at', 'least', 'one', 'mention', 'with', 'the', 'same', 'head', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP', 'VBP', 'IN', 'DT', 'NNP', 'VBZ', 'NN', 'IN', 'DT', ',', 'IN', 'DT', 'RBS', 'JJ', 'VB', ':', 'NNS', 'IN', 'JJ', 'NNS', ',', 'IN', 'NNS', 'VBP', 'RB', 'VBN', 'RB', 'IN', 'JJ', 'JJ', 'CC', 'JJ', 'NNS', 'WDT', 'VBP', 'IN', 'JJS', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",45
coreference_resolution,5,205,"Importantly , the RNN performance is significantly better than that of the Avg baseline , which barely improves over mention - ranking , even with oracle history .","['Importantly', ',', 'the', 'RNN', 'performance', 'is', 'significantly', 'better', 'than', 'that', 'of', 'the', 'Avg', 'baseline', ',', 'which', 'barely', 'improves', 'over', 'mention', '-', 'ranking', ',', 'even', 'with', 'oracle', 'history', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NNP', 'NN', 'VBZ', 'RB', 'JJR', 'IN', 'DT', 'IN', 'DT', 'NNP', 'NN', ',', 'WDT', 'RB', 'VBZ', 'RP', 'NN', ':', 'NN', ',', 'RB', 'IN', 'JJ', 'NN', '.']",28
coreference_resolution,7,2,Coreference Resolution with Entity Equalization,"['Coreference', 'Resolution', 'with', 'Entity', 'Equalization']","['B-n', 'I-n', 'O', 'O', 'O']","['NNP', 'NNP', 'IN', 'NNP', 'NNP']",5
coreference_resolution,7,18,"Here we propose an approach that provides an entity - level representation in a simple and intuitive manner , and also facilitates end - to - end optimization .","['Here', 'we', 'propose', 'an', 'approach', 'that', 'provides', 'an', 'entity', '-', 'level', 'representation', 'in', 'a', 'simple', 'and', 'intuitive', 'manner', ',', 'and', 'also', 'facilitates', 'end', '-', 'to', '-', 'end', 'optimization', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NN', ',', 'CC', 'RB', 'VBZ', 'JJ', ':', 'TO', ':', 'NN', 'NN', '.']",29
coreference_resolution,7,19,"Our "" Entity Equalization "" approach posits that each entity should be represented via the sum of its corresponding mention representations .","['Our', '""', 'Entity', 'Equalization', '""', 'approach', 'posits', 'that', 'each', 'entity', 'should', 'be', 'represented', 'via', 'the', 'sum', 'of', 'its', 'corresponding', 'mention', 'representations', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'JJ', 'NNP', 'NNP', 'NNP', 'NN', 'NNS', 'IN', 'DT', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'VBG', 'NN', 'NNS', '.']",22
coreference_resolution,7,22,"Similar to recent coreference models , our approach uses contextual embeddings as input mention representations .","['Similar', 'to', 'recent', 'coreference', 'models', ',', 'our', 'approach', 'uses', 'contextual', 'embeddings', 'as', 'input', 'mention', 'representations', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'TO', 'JJ', 'NN', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'NNS', '.']",16
coreference_resolution,7,23,"While previous approaches employed the ELMo model , we propose to use BERT embeddings , motivated by the impressive empirical performance of BERT on other tasks .","['While', 'previous', 'approaches', 'employed', 'the', 'ELMo', 'model', ',', 'we', 'propose', 'to', 'use', 'BERT', 'embeddings', ',', 'motivated', 'by', 'the', 'impressive', 'empirical', 'performance', 'of', 'BERT', 'on', 'other', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NNS', 'VBD', 'DT', 'NNP', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'NNP', 'NNS', ',', 'VBN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NNP', 'IN', 'JJ', 'NNS', '.']",27
coreference_resolution,7,25,We show that this can be done by using BERT in a fully convolutional manner .,"['We', 'show', 'that', 'this', 'can', 'be', 'done', 'by', 'using', 'BERT', 'in', 'a', 'fully', 'convolutional', 'manner', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'NNP', 'IN', 'DT', 'RB', 'JJ', 'NN', '.']",16
coreference_resolution,7,115,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,7,119,"Our baseline is the span - ranking model from with ELMo input features and second - order span representations , which achieves 73.0 % Avg.","['Our', 'baseline', 'is', 'the', 'span', '-', 'ranking', 'model', 'from', 'with', 'ELMo', 'input', 'features', 'and', 'second', '-', 'order', 'span', 'representations', ',', 'which', 'achieves', '73.0', '%', 'Avg.']","['O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n']","['PRP$', 'NN', 'VBZ', 'DT', 'JJ', ':', 'VBG', 'NN', 'IN', 'IN', 'NNP', 'NN', 'NNS', 'CC', 'JJ', ':', 'NN', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'CD', 'NN', 'NNP']",25
coreference_resolution,7,120,F1 . Replacing the ELMo features with BERT features achieves 76. 25 % average F1 .,"['F1', '.', 'Replacing', 'the', 'ELMo', 'features', 'with', 'BERT', 'features', 'achieves', '76.', '25', '%', 'average', 'F1', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', '.', 'VBG', 'DT', 'NNP', 'NNS', 'IN', 'NNP', 'VBZ', 'VBZ', 'CD', 'CD', 'NN', 'JJ', 'NNP', '.']",16
coreference_resolution,7,121,"Removing the second - order span - representations while using BERT features achieves 76.37 % F1 , achieving higher recall and lower precision on all evaluation metrics , while somewhat surprisingly being better over all .","['Removing', 'the', 'second', '-', 'order', 'span', '-', 'representations', 'while', 'using', 'BERT', 'features', 'achieves', '76.37', '%', 'F1', ',', 'achieving', 'higher', 'recall', 'and', 'lower', 'precision', 'on', 'all', 'evaluation', 'metrics', ',', 'while', 'somewhat', 'surprisingly', 'being', 'better', 'over', 'all', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'JJ', ':', 'NN', 'SYM', ':', 'NNS', 'IN', 'VBG', 'NNP', 'VBZ', 'VBZ', 'CD', 'NN', 'NNP', ',', 'VBG', 'JJR', 'NN', 'CC', 'JJR', 'NN', 'IN', 'DT', 'NN', 'NNS', ',', 'IN', 'RB', 'RB', 'VBG', 'JJR', 'IN', 'DT', '.']",36
coreference_resolution,7,122,"Replacing secondorder span representations with Entity Equalization achieves 76. 64 % average F1 , while also consistently achieving the highest F 1 score on all three evaluation metrics .","['Replacing', 'secondorder', 'span', 'representations', 'with', 'Entity', 'Equalization', 'achieves', '76.', '64', '%', 'average', 'F1', ',', 'while', 'also', 'consistently', 'achieving', 'the', 'highest', 'F', '1', 'score', 'on', 'all', 'three', 'evaluation', 'metrics', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NN', 'NN', 'NNS', 'IN', 'NNP', 'NNP', 'VBZ', 'CD', 'CD', 'NN', 'JJ', 'NNP', ',', 'IN', 'RB', 'RB', 'VBG', 'DT', 'JJS', 'JJ', 'CD', 'NN', 'IN', 'DT', 'CD', 'NN', 'NNS', '.']",29
coreference_resolution,7,123,"Our results set a new state of the art for coreference resolution , improving the previous state of the art by 3.6 % average F1 .","['Our', 'results', 'set', 'a', 'new', 'state', 'of', 'the', 'art', 'for', 'coreference', 'resolution', ',', 'improving', 'the', 'previous', 'state', 'of', 'the', 'art', 'by', '3.6', '%', 'average', 'F1', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', 'JJ', 'NNP', '.']",26
coreference_resolution,4,2,A Mention - Ranking Model for Abstract Anaphora Resolution,"['A', 'Mention', '-', 'Ranking', 'Model', 'for', 'Abstract', 'Anaphora', 'Resolution']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['DT', 'NNP', ':', 'VBG', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",9
coreference_resolution,4,15,"Current research in anaphora ( or coreference ) resolution is focused on resolving noun phrases referring to concrete objects or entities in the real Leo Born , Juri Opitz and Anette Frank contributed equally to this work .","['Current', 'research', 'in', 'anaphora', '(', 'or', 'coreference', ')', 'resolution', 'is', 'focused', 'on', 'resolving', 'noun', 'phrases', 'referring', 'to', 'concrete', 'objects', 'or', 'entities', 'in', 'the', 'real', 'Leo', 'Born', ',', 'Juri', 'Opitz', 'and', 'Anette', 'Frank', 'contributed', 'equally', 'to', 'this', 'work', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'IN', 'NN', '(', 'CC', 'NN', ')', 'NN', 'VBZ', 'VBN', 'IN', 'VBG', 'JJ', 'NNS', 'VBG', 'TO', 'JJ', 'NNS', 'CC', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'NNP', ',', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'VBD', 'RB', 'TO', 'DT', 'NN', '.']",38
coreference_resolution,4,28,"Our model is inspired by the mention - ranking model for coreference resolution and combines it with a Siamese Net , for learning similarity between sentences .","['Our', 'model', 'is', 'inspired', 'by', 'the', 'mention', '-', 'ranking', 'model', 'for', 'coreference', 'resolution', 'and', 'combines', 'it', 'with', 'a', 'Siamese', 'Net', ',', 'for', 'learning', 'similarity', 'between', 'sentences', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'IN', 'NN', 'NN', 'CC', 'NNS', 'PRP', 'IN', 'DT', 'JJ', 'NN', ',', 'IN', 'VBG', 'NN', 'IN', 'NNS', '.']",27
coreference_resolution,4,29,"Given an anaphoric sentence ( AntecS in ( 1 ) ) and a candidate antecedent ( any constituent in a given context , e.g. being obsoleted by microprocessor - based machines in ( 1 ) ) , the LSTM - Siamese Net learns representations for the candidate and the anaphoric sentence in a shared space .","['Given', 'an', 'anaphoric', 'sentence', '(', 'AntecS', 'in', '(', '1', ')', ')', 'and', 'a', 'candidate', 'antecedent', '(', 'any', 'constituent', 'in', 'a', 'given', 'context', ',', 'e.g.', 'being', 'obsoleted', 'by', 'microprocessor', '-', 'based', 'machines', 'in', '(', '1', ')', ')', ',', 'the', 'LSTM', '-', 'Siamese', 'Net', 'learns', 'representations', 'for', 'the', 'candidate', 'and', 'the', 'anaphoric', 'sentence', 'in', 'a', 'shared', 'space', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['VBN', 'DT', 'JJ', 'NN', '(', 'NNP', 'IN', '(', 'CD', ')', ')', 'CC', 'DT', 'NN', 'NN', '(', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NN', ',', 'VBP', 'VBG', 'VBN', 'IN', 'NN', ':', 'VBN', 'NNS', 'IN', '(', 'CD', ')', ')', ',', 'DT', 'NNP', ':', 'JJ', 'JJ', 'NNS', 'NNS', 'IN', 'DT', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",56
coreference_resolution,4,30,These representations are combined into a joint representation used to calculate a score that characterizes the relation between them .,"['These', 'representations', 'are', 'combined', 'into', 'a', 'joint', 'representation', 'used', 'to', 'calculate', 'a', 'score', 'that', 'characterizes', 'the', 'relation', 'between', 'them', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'PRP', '.']",20
coreference_resolution,4,31,The learned score is used to select the highest - scoring antecedent candidate for the given anaphoric sentence and hence its anaphor .,"['The', 'learned', 'score', 'is', 'used', 'to', 'select', 'the', 'highest', '-', 'scoring', 'antecedent', 'candidate', 'for', 'the', 'given', 'anaphoric', 'sentence', 'and', 'hence', 'its', 'anaphor', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'O']","['DT', 'VBN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJS', ':', 'VBG', 'JJ', 'NN', 'IN', 'DT', 'VBN', 'JJ', 'NN', 'CC', 'NN', 'PRP$', 'NN', '.']",23
coreference_resolution,4,32,We consider one anaphor at a time and provide the embedding of the context of the anaphor and the embedding of the head of the anaphoric phrase to the input to characterize each individual anaphorsimilar to the encoding proposed by for individuating multiply occurring predicates in SRL .,"['We', 'consider', 'one', 'anaphor', 'at', 'a', 'time', 'and', 'provide', 'the', 'embedding', 'of', 'the', 'context', 'of', 'the', 'anaphor', 'and', 'the', 'embedding', 'of', 'the', 'head', 'of', 'the', 'anaphoric', 'phrase', 'to', 'the', 'input', 'to', 'characterize', 'each', 'individual', 'anaphorsimilar', 'to', 'the', 'encoding', 'proposed', 'by', 'for', 'individuating', 'multiply', 'occurring', 'predicates', 'in', 'SRL', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'CD', 'NN', 'IN', 'DT', 'NN', 'CC', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'TO', 'DT', 'VBG', 'VBN', 'IN', 'IN', 'VBG', 'NN', 'VBG', 'NNS', 'IN', 'NNP', '.']",48
coreference_resolution,4,33,With deeper inspection we show that the model learns a relation between the anaphor in the anaphoric sentence and its antecedent .,"['With', 'deeper', 'inspection', 'we', 'show', 'that', 'the', 'model', 'learns', 'a', 'relation', 'between', 'the', 'anaphor', 'in', 'the', 'anaphoric', 'sentence', 'and', 'its', 'antecedent', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'JJR', 'NN', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'PRP$', 'NN', '.']",22
coreference_resolution,4,36,It produces large amounts of instances and is easily adaptable to other languages .,"['It', 'produces', 'large', 'amounts', 'of', 'instances', 'and', 'is', 'easily', 'adaptable', 'to', 'other', 'languages', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'VBZ', 'RB', 'JJ', 'TO', 'JJ', 'NNS', '.']",14
coreference_resolution,4,41,Our Tensor Flow 2 implementation of the model and scripts for data extraction are available at : https://github.com/amarasovic / neural-abstract-anaphora.,"['Our', 'Tensor', 'Flow', '2', 'implementation', 'of', 'the', 'model', 'and', 'scripts', 'for', 'data', 'extraction', 'are', 'available', 'at', ':', 'https://github.com/amarasovic', '/', 'neural-abstract-anaphora.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['PRP$', 'NNP', 'NNP', 'CD', 'NN', 'IN', 'DT', 'NN', 'CC', 'NNS', 'IN', 'NNS', 'NN', 'VBP', 'JJ', 'IN', ':', 'JJ', 'CD', 'JJ']",20
coreference_resolution,4,156,Baselines and evaluation metrics,"['Baselines', 'and', 'evaluation', 'metrics']","['B-n', 'O', 'O', 'O']","['NNS', 'CC', 'NN', 'NNS']",4
coreference_resolution,4,158,"Additionally , we report the preceding sentence baseline ( PS BL ) that chooses the previous sentence for the antecedent and TAGbaseline ( TAG BL ) that randomly chooses a candidate with the constituent tag label in {S , VP , ROOT , SBAR } .","['Additionally', ',', 'we', 'report', 'the', 'preceding', 'sentence', 'baseline', '(', 'PS', 'BL', ')', 'that', 'chooses', 'the', 'previous', 'sentence', 'for', 'the', 'antecedent', 'and', 'TAGbaseline', '(', 'TAG', 'BL', ')', 'that', 'randomly', 'chooses', 'a', 'candidate', 'with', 'the', 'constituent', 'tag', 'label', 'in', '{S', ',', 'VP', ',', 'ROOT', ',', 'SBAR', '}', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'VBG', 'NN', 'NN', '(', 'NNP', 'NNP', ')', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NNP', '(', 'NNP', 'NNP', ')', 'IN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', 'IN', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ')', '.']",46
coreference_resolution,4,172,"Glo Ve word embeddings pre-trained on the Gigaword and Wikipedia , and did not fine - tune them .","['Glo', 'Ve', 'word', 'embeddings', 'pre-trained', 'on', 'the', 'Gigaword', 'and', 'Wikipedia', ',', 'and', 'did', 'not', 'fine', '-', 'tune', 'them', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['NNP', 'NNP', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'NNP', 'CC', 'NNP', ',', 'CC', 'VBD', 'RB', 'JJ', ':', 'NN', 'PRP', '.']",19
coreference_resolution,4,173,"Vocabulary was built from the words in the training data with frequency in { 3 , U ( 1 , 10 ) } , and OOV words were replaced with an UNK token .","['Vocabulary', 'was', 'built', 'from', 'the', 'words', 'in', 'the', 'training', 'data', 'with', 'frequency', 'in', '{', '3', ',', 'U', '(', '1', ',', '10', ')', '}', ',', 'and', 'OOV', 'words', 'were', 'replaced', 'with', 'an', 'UNK', 'token', '.']","['B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'VBD', 'VBN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'IN', 'NN', 'IN', '(', 'CD', ',', 'NNP', '(', 'CD', ',', 'CD', ')', ')', ',', 'CC', 'NNP', 'NNS', 'VBD', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",34
coreference_resolution,4,177,"The size of the LSTMs hidden states was set to { 100 , qlog - U ( 30 , 150 ) } .","['The', 'size', 'of', 'the', 'LSTMs', 'hidden', 'states', 'was', 'set', 'to', '{', '100', ',', 'qlog', '-', 'U', '(', '30', ',', '150', ')', '}', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NNS', 'VBD', 'VBN', 'TO', '(', 'CD', ',', 'SYM', ':', 'NNP', '(', 'CD', ',', 'CD', ')', ')', '.']",23
coreference_resolution,4,178,"We initialized the weight matrices of the LSTMs with random orthogonal matrices , all other weight matrices with the initialization proposed in .","['We', 'initialized', 'the', 'weight', 'matrices', 'of', 'the', 'LSTMs', 'with', 'random', 'orthogonal', 'matrices', ',', 'all', 'other', 'weight', 'matrices', 'with', 'the', 'initialization', 'proposed', 'in', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'IN', 'JJ', 'JJ', 'NNS', ',', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'VBN', 'IN', '.']",23
coreference_resolution,4,179,The first feed - forward layer size is set to a value in Optimization .,"['The', 'first', 'feed', '-', 'forward', 'layer', 'size', 'is', 'set', 'to', 'a', 'value', 'in', 'Optimization', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', ':', 'RB', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'DT', 'NN', 'IN', 'NNP', '.']",15
coreference_resolution,4,180,"We trained our model in minibatches using Adam ( Kingma and Ba , 2015 ) with the learning rate of 10 ? 4 and maximal batch size 64 .","['We', 'trained', 'our', 'model', 'in', 'minibatches', 'using', 'Adam', '(', 'Kingma', 'and', 'Ba', ',', '2015', ')', 'with', 'the', 'learning', 'rate', 'of', '10', '?', '4', 'and', 'maximal', 'batch', 'size', '64', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O']","['PRP', 'VBD', 'PRP$', 'NN', 'IN', 'NNS', 'VBG', 'NNP', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '.', 'CD', 'CC', 'JJ', 'NN', 'NN', 'CD', '.']",29
coreference_resolution,4,181,"We clip gradients by global norm , with a clipping value in { 1.0 , U ( 1 , 100 ) } .","['We', 'clip', 'gradients', 'by', 'global', 'norm', ',', 'with', 'a', 'clipping', 'value', 'in', '{', '1.0', ',', 'U', '(', '1', ',', '100', ')', '}', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'NNS', 'IN', 'JJ', 'NN', ',', 'IN', 'DT', 'VBG', 'NN', 'IN', '(', 'CD', ',', 'NNP', '(', 'CD', ',', 'CD', ')', ')', '.']",23
coreference_resolution,4,182,We train for 10 epochs and choose the model that performs best on the devset .,"['We', 'train', 'for', '10', 'epochs', 'and', 'choose', 'the', 'model', 'that', 'performs', 'best', 'on', 'the', 'devset', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'CD', 'NNS', 'CC', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'RBS', 'IN', 'DT', 'NN', '.']",16
coreference_resolution,4,184,"We used the l 2 - regularization with ? ? { 10 ?5 , log - U (10 ?7 , 10 ?2 ) }.","['We', 'used', 'the', 'l', '2', '-', 'regularization', 'with', '?', '?', '{', '10', '?5', ',', 'log', '-', 'U', '(10', '?7', ',', '10', '?2', ')', '}.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['PRP', 'VBD', 'DT', 'NN', 'CD', ':', 'NN', 'IN', '.', '.', '(', 'CD', 'NN', ',', 'SYM', ':', 'NNP', 'NNP', 'NNP', ',', 'CD', 'NN', ')', 'NN']",24
coreference_resolution,4,185,"Dropout with a keep probability k p ? { 0.8 , U( 0.5 , 1.0 ) } was applied to the outputs of the LSTMs , both feed - forward layers and optionally to the input with k p ? U (0.8 , 1.0 ) .","['Dropout', 'with', 'a', 'keep', 'probability', 'k', 'p', '?', '{', '0.8', ',', 'U(', '0.5', ',', '1.0', ')', '}', 'was', 'applied', 'to', 'the', 'outputs', 'of', 'the', 'LSTMs', ',', 'both', 'feed', '-', 'forward', 'layers', 'and', 'optionally', 'to', 'the', 'input', 'with', 'k', 'p', '?', 'U', '(0.8', ',', '1.0', ')', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', '.', '(', 'CD', ',', 'NNP', 'CD', ',', 'CD', ')', ')', 'VBD', 'VBN', 'TO', 'DT', 'NNS', 'IN', 'DT', 'NNP', ',', 'DT', 'VBP', ':', 'NN', 'NNS', 'CC', 'RB', 'TO', 'DT', 'NN', 'IN', 'NN', 'NN', '.', 'NNP', 'NNP', ',', 'CD', ')', '.']",46
coreference_resolution,4,188,"In terms of s@1 score , MR - LSTM outperforms both KZH13 's results and TAG BL without even necessitating HP tuning .","['In', 'terms', 'of', 's@1', 'score', ',', 'MR', '-', 'LSTM', 'outperforms', 'both', 'KZH13', ""'s"", 'results', 'and', 'TAG', 'BL', 'without', 'even', 'necessitating', 'HP', 'tuning', '.']","['B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'NNS', 'IN', 'NN', 'NN', ',', 'NNP', ':', 'NN', 'VBZ', 'DT', 'NNP', 'POS', 'NNS', 'CC', 'NNP', 'NNP', 'IN', 'RB', 'VBG', 'NNP', 'NN', '.']",23
coreference_resolution,4,190,"From we observe : ( 1 ) with HPs tuned on ARRAU - AA , we obtain results well beyond KZH13 , ( 2 ) all ablated model variants perform worse than the full model , ( 3 ) a large performance drop when omitting syntactic information ( tag , cut ) suggests that the model makes good use of it .","['From', 'we', 'observe', ':', '(', '1', ')', 'with', 'HPs', 'tuned', 'on', 'ARRAU', '-', 'AA', ',', 'we', 'obtain', 'results', 'well', 'beyond', 'KZH13', ',', '(', '2', ')', 'all', 'ablated', 'model', 'variants', 'perform', 'worse', 'than', 'the', 'full', 'model', ',', '(', '3', ')', 'a', 'large', 'performance', 'drop', 'when', 'omitting', 'syntactic', 'information', '(', 'tag', ',', 'cut', ')', 'suggests', 'that', 'the', 'model', 'makes', 'good', 'use', 'of', 'it', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-n', 'I-n', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP', 'VBP', ':', '(', 'CD', ')', 'IN', 'NNP', 'VBD', 'IN', 'NNP', ':', 'NNP', ',', 'PRP', 'VB', 'NNS', 'RB', 'IN', 'NNP', ',', '(', 'CD', ')', 'DT', 'VBN', 'NN', 'NNS', 'VBP', 'JJR', 'IN', 'DT', 'JJ', 'NN', ',', '(', 'CD', ')', 'DT', 'JJ', 'NN', 'NN', 'WRB', 'VBG', 'JJ', 'NN', '(', 'NN', ',', 'VBN', ')', 'VBZ', 'IN', 'DT', 'NN', 'VBZ', 'JJ', 'NN', 'IN', 'PRP', '.']",62
coreference_resolution,4,195,"Performance of 68.10 s@1 score indicates that the model is able to learn without syntactic guidance , contrary to the 19.68 s@1 score before tuning .","['Performance', 'of', '68.10', 's@1', 'score', 'indicates', 'that', 'the', 'model', 'is', 'able', 'to', 'learn', 'without', 'syntactic', 'guidance', ',', 'contrary', 'to', 'the', '19.68', 's@1', 'score', 'before', 'tuning', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', 'CD', 'NNS', 'RB', 'VBZ', 'IN', 'DT', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'IN', 'JJ', 'NN', ',', 'JJ', 'TO', 'DT', 'CD', 'NNS', 'NN', 'IN', 'VBG', '.']",26
coreference_resolution,4,199,Results on the ARRAU corpus,"['Results', 'on', 'the', 'ARRAU', 'corpus']","['O', 'B-p', 'O', 'B-n', 'I-n']","['NNS', 'IN', 'DT', 'NNP', 'NN']",5
coreference_resolution,4,200,"The MR - LSTM is more successful in resolving nominal than pronominal anaphors , although the training data provides only pronominal ones .","['The', 'MR', '-', 'LSTM', 'is', 'more', 'successful', 'in', 'resolving', 'nominal', 'than', 'pronominal', 'anaphors', ',', 'although', 'the', 'training', 'data', 'provides', 'only', 'pronominal', 'ones', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', ':', 'NN', 'VBZ', 'RBR', 'JJ', 'IN', 'VBG', 'JJ', 'IN', 'JJ', 'NNS', ',', 'IN', 'DT', 'NN', 'NNS', 'VBZ', 'RB', 'JJ', 'NNS', '.']",23
coreference_resolution,4,202,"Moreover , for shell noun resolution in KZH13 's dataset , the MR - LSTM achieved s@1 scores in the range 76.09-93.14 , while the best variant of the model achieves 51.89 s@1 score for nominal anaphors in ARRAU - AA .","['Moreover', ',', 'for', 'shell', 'noun', 'resolution', 'in', 'KZH13', ""'s"", 'dataset', ',', 'the', 'MR', '-', 'LSTM', 'achieved', 's@1', 'scores', 'in', 'the', 'range', '76.09-93.14', ',', 'while', 'the', 'best', 'variant', 'of', 'the', 'model', 'achieves', '51.89', 's@1', 'score', 'for', 'nominal', 'anaphors', 'in', 'ARRAU', '-', 'AA', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'IN', 'NN', 'JJ', 'NN', 'IN', 'NNP', 'POS', 'NN', ',', 'DT', 'NNP', ':', 'NNP', 'VBD', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'JJ', ',', 'IN', 'DT', 'JJS', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'CD', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NNP', ':', 'NN', '.']",42
coreference_resolution,4,209,"This is what we can observe from row 2 vs. row 6 in Table 5 : the MR - LSTM without context embedding ( ctx ) achieves a comparable s@ 2 score with the variant that omits syntactic information , but better s@3 - 4 scores .","['This', 'is', 'what', 'we', 'can', 'observe', 'from', 'row', '2', 'vs.', 'row', '6', 'in', 'Table', '5', ':', 'the', 'MR', '-', 'LSTM', 'without', 'context', 'embedding', '(', 'ctx', ')', 'achieves', 'a', 'comparable', 's@', '2', 'score', 'with', 'the', 'variant', 'that', 'omits', 'syntactic', 'information', ',', 'but', 'better', 's@3', '-', '4', 'scores', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBZ', 'WP', 'PRP', 'MD', 'VB', 'IN', 'NN', 'CD', 'NN', 'NN', 'CD', 'IN', 'JJ', 'CD', ':', 'DT', 'NNP', ':', 'NN', 'IN', 'NN', 'NN', '(', 'NN', ')', 'VBZ', 'DT', 'JJ', 'NN', 'CD', 'NN', 'IN', 'DT', 'NN', 'IN', 'VBZ', 'JJ', 'NN', ',', 'CC', 'JJR', 'SYM', ':', 'CD', 'NNS', '.']",47
coreference_resolution,6,2,Learning Word Representations with Cross - Sentence Dependency for End - to - End Co -reference Resolution,"['Learning', 'Word', 'Representations', 'with', 'Cross', '-', 'Sentence', 'Dependency', 'for', 'End', '-', 'to', '-', 'End', 'Co', '-reference', 'Resolution']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', ':', 'NN', 'NNP', 'IN', 'NNP', ':', 'TO', ':', 'NN', 'NNP', 'NNP', 'NN']",17
coreference_resolution,6,4,"In this work , we present a word embedding model that learns cross - sentence dependency for improving end - to - end co-reference resolution ( E2E - CR ) .","['In', 'this', 'work', ',', 'we', 'present', 'a', 'word', 'embedding', 'model', 'that', 'learns', 'cross', '-', 'sentence', 'dependency', 'for', 'improving', 'end', '-', 'to', '-', 'end', 'co-reference', 'resolution', '(', 'E2E', '-', 'CR', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBG', 'NN', 'WDT', 'VBZ', 'SYM', ':', 'NN', 'NN', 'IN', 'VBG', 'NN', ':', 'TO', ':', 'VB', 'NN', 'NN', '(', 'NNP', ':', 'NN', ')', '.']",31
coreference_resolution,6,5,"While the traditional E2E - CR model generates word representations by running long short - term memory ( LSTM ) recurrent neural networks on each sentence of an input article or conversation separately , we propose linear sentence linking and attentional sentence linking models to learn crosssentence dependency .","['While', 'the', 'traditional', 'E2E', '-', 'CR', 'model', 'generates', 'word', 'representations', 'by', 'running', 'long', 'short', '-', 'term', 'memory', '(', 'LSTM', ')', 'recurrent', 'neural', 'networks', 'on', 'each', 'sentence', 'of', 'an', 'input', 'article', 'or', 'conversation', 'separately', ',', 'we', 'propose', 'linear', 'sentence', 'linking', 'and', 'attentional', 'sentence', 'linking', 'models', 'to', 'learn', 'crosssentence', 'dependency', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NNP', ':', 'NNP', 'NN', 'NNS', 'NN', 'NNS', 'IN', 'VBG', 'RB', 'JJ', ':', 'NN', 'NN', '(', 'NNP', ')', 'NN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'NN', 'RB', ',', 'PRP', 'VBP', 'JJ', 'NN', 'VBG', 'CC', 'JJ', 'NN', 'VBG', 'NNS', 'TO', 'VB', 'NN', 'NN', '.']",49
coreference_resolution,6,10,Co-reference resolution requires models to cluster mentions that refer to the same physical entities .,"['Co-reference', 'resolution', 'requires', 'models', 'to', 'cluster', 'mentions', 'that', 'refer', 'to', 'the', 'same', 'physical', 'entities', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'NNS', 'TO', 'VB', 'NNS', 'WDT', 'VBP', 'TO', 'DT', 'JJ', 'JJ', 'NNS', '.']",15
coreference_resolution,6,24,"To solve the problem that traditional LSTM encoders , which treat the input sentences as a batch , lack an ability to capture cross - sentence dependency , and to avoid the time complexity and difficulties of training the model concatenating all input sentences , we propose a cross - sentence encoder for end - to - end co-reference ( E2E - CR ) .","['To', 'solve', 'the', 'problem', 'that', 'traditional', 'LSTM', 'encoders', ',', 'which', 'treat', 'the', 'input', 'sentences', 'as', 'a', 'batch', ',', 'lack', 'an', 'ability', 'to', 'capture', 'cross', '-', 'sentence', 'dependency', ',', 'and', 'to', 'avoid', 'the', 'time', 'complexity', 'and', 'difficulties', 'of', 'training', 'the', 'model', 'concatenating', 'all', 'input', 'sentences', ',', 'we', 'propose', 'a', 'cross', '-', 'sentence', 'encoder', 'for', 'end', '-', 'to', '-', 'end', 'co-reference', '(', 'E2E', '-', 'CR', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'WDT', 'JJ', 'NNP', 'NNS', ',', 'WDT', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NN', ',', 'VBP', 'DT', 'NN', 'TO', 'VB', 'SYM', ':', 'NN', 'NN', ',', 'CC', 'TO', 'VB', 'DT', 'NN', 'NN', 'CC', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'VBG', 'DT', 'NN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'NN', 'NN', 'IN', 'NN', ':', 'TO', ':', 'VB', 'NN', '(', 'NNP', ':', 'NN', ')', '.']",65
coreference_resolution,6,25,"Borrowing the idea of an external memory module from , an external memory block containing syntactic and semantic information from context sentences is added to the standard LSTM model .","['Borrowing', 'the', 'idea', 'of', 'an', 'external', 'memory', 'module', 'from', ',', 'an', 'external', 'memory', 'block', 'containing', 'syntactic', 'and', 'semantic', 'information', 'from', 'context', 'sentences', 'is', 'added', 'to', 'the', 'standard', 'LSTM', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', ',', 'DT', 'JJ', 'NN', 'NN', 'VBG', 'JJ', 'CC', 'JJ', 'NN', 'IN', 'NN', 'NNS', 'VBZ', 'VBN', 'TO', 'DT', 'JJ', 'NNP', 'NN', '.']",30
coreference_resolution,6,26,"With this context memory block , the proposed model is able to encode input sentences as a batch , and also calculate the representations of input words by taking both target sentences and context sentences into consideration .","['With', 'this', 'context', 'memory', 'block', ',', 'the', 'proposed', 'model', 'is', 'able', 'to', 'encode', 'input', 'sentences', 'as', 'a', 'batch', ',', 'and', 'also', 'calculate', 'the', 'representations', 'of', 'input', 'words', 'by', 'taking', 'both', 'target', 'sentences', 'and', 'context', 'sentences', 'into', 'consideration', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', 'NN', ',', 'DT', 'VBN', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'NN', 'NNS', 'IN', 'DT', 'NN', ',', 'CC', 'RB', 'VBP', 'DT', 'NNS', 'IN', 'NN', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'NN', '.']",38
coreference_resolution,6,87,"In practice , the LSTM modules applied in our model have 200 output units .","['In', 'practice', ',', 'the', 'LSTM', 'modules', 'applied', 'in', 'our', 'model', 'have', '200', 'output', 'units', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'DT', 'NNP', 'NNS', 'VBN', 'IN', 'PRP$', 'NN', 'VBP', 'CD', 'NN', 'NNS', '.']",15
coreference_resolution,6,88,"In ASL , we calculate cross - sentence dependency using a multilayer perceptron with one hidden layer consisting of 150 hidden units .","['In', 'ASL', ',', 'we', 'calculate', 'cross', '-', 'sentence', 'dependency', 'using', 'a', 'multilayer', 'perceptron', 'with', 'one', 'hidden', 'layer', 'consisting', 'of', '150', 'hidden', 'units', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ',', 'PRP', 'VBP', 'SYM', ':', 'NN', 'NN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'CD', 'NN', 'NN', 'VBG', 'IN', 'CD', 'JJ', 'NNS', '.']",23
coreference_resolution,6,89,The initial learning rate is set as 0.001 and decays 0.001 % every 100 steps .,"['The', 'initial', 'learning', 'rate', 'is', 'set', 'as', '0.001', 'and', 'decays', '0.001', '%', 'every', '100', 'steps', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'CD', 'CC', 'VB', 'CD', 'NN', 'DT', 'CD', 'NNS', '.']",16
coreference_resolution,6,90,"The model is optimized with the Adam algorithm ( Kingma and Ba , 2014 ) .","['The', 'model', 'is', 'optimized', 'with', 'the', 'Adam', 'algorithm', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', '.']",16
coreference_resolution,6,91,We randomly select up to 40 continuous sentences for training if the input is too long .,"['We', 'randomly', 'select', 'up', 'to', '40', 'continuous', 'sentences', 'for', 'training', 'if', 'the', 'input', 'is', 'too', 'long', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'VB', 'IN', 'TO', 'CD', 'JJ', 'NNS', 'IN', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'RB', '.']",17
coreference_resolution,6,93,Experiment Results and Discussion,"['Experiment', 'Results', 'and', 'Discussion']","['O', 'B-n', 'O', 'O']","['JJ', 'NNP', 'CC', 'NNP']",4
coreference_resolution,6,97,"Comparing with the baseline model that achieved 67.2 % F1 score , the ASL model improved the performance by 0.6 % and achieved 67.8 % average F1 .","['Comparing', 'with', 'the', 'baseline', 'model', 'that', 'achieved', '67.2', '%', 'F1', 'score', ',', 'the', 'ASL', 'model', 'improved', 'the', 'performance', 'by', '0.6', '%', 'and', 'achieved', '67.8', '%', 'average', 'F1', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'IN', 'DT', 'NN', 'NN', 'WDT', 'VBD', 'CD', 'NN', 'NNP', 'NN', ',', 'DT', 'NNP', 'NN', 'VBD', 'DT', 'NN', 'IN', 'CD', 'NN', 'CC', 'VBD', 'CD', 'NN', 'JJ', 'NNP', '.']",28
coreference_resolution,6,108,"show that the models that consider cross - sentence dependency significantly outperform the baseline model , which encodes each sentence from the input document separately .","['show', 'that', 'the', 'models', 'that', 'consider', 'cross', '-', 'sentence', 'dependency', 'significantly', 'outperform', 'the', 'baseline', 'model', ',', 'which', 'encodes', 'each', 'sentence', 'from', 'the', 'input', 'document', 'separately', '.']","['B-p', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O']","['NN', 'IN', 'DT', 'NNS', 'IN', 'VBP', 'SYM', ':', 'NN', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'RB', '.']",26
coreference_resolution,6,109,"Experiments also indicated that the ASL model has better performance than the LSL model , since it summarizes extracts context information with an attention mechanism instead of simply viewing sentence - level embeddings .","['Experiments', 'also', 'indicated', 'that', 'the', 'ASL', 'model', 'has', 'better', 'performance', 'than', 'the', 'LSL', 'model', ',', 'since', 'it', 'summarizes', 'extracts', 'context', 'information', 'with', 'an', 'attention', 'mechanism', 'instead', 'of', 'simply', 'viewing', 'sentence', '-', 'level', 'embeddings', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'RB', 'VBD', 'IN', 'DT', 'NNP', 'NN', 'VBZ', 'JJR', 'NN', 'IN', 'DT', 'NNP', 'NN', ',', 'IN', 'PRP', 'VBZ', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'RB', 'IN', 'RB', 'VBG', 'NN', ':', 'NN', 'NNS', '.']",34
coreference_resolution,2,4,Coreference resolution systems are typically trained with heuristic loss functions that require careful tuning .,"['Coreference', 'resolution', 'systems', 'are', 'typically', 'trained', 'with', 'heuristic', 'loss', 'functions', 'that', 'require', 'careful', 'tuning', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'JJ', 'NN', 'NNS', 'WDT', 'VBP', 'JJ', 'NN', '.']",15
coreference_resolution,2,15,"To address this , we explore using two variants of reinforcement learning to directly optimize a coreference system for coreference evaluation metrics .","['To', 'address', 'this', ',', 'we', 'explore', 'using', 'two', 'variants', 'of', 'reinforcement', 'learning', 'to', 'directly', 'optimize', 'a', 'coreference', 'system', 'for', 'coreference', 'evaluation', 'metrics', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', ',', 'PRP', 'VBP', 'VBG', 'CD', 'NNS', 'IN', 'NN', 'VBG', 'TO', 'RB', 'VB', 'DT', 'NN', 'NN', 'IN', 'NN', 'NN', 'NNS', '.']",23
coreference_resolution,2,16,"In particular , we modify the max-margin coreference objective proposed by by incorporating the reward associated with each coreference decision into the loss 's slack rescaling .","['In', 'particular', ',', 'we', 'modify', 'the', 'max-margin', 'coreference', 'objective', 'proposed', 'by', 'by', 'incorporating', 'the', 'reward', 'associated', 'with', 'each', 'coreference', 'decision', 'into', 'the', 'loss', ""'s"", 'slack', 'rescaling', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'IN', 'VBG', 'DT', 'NN', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'POS', 'NN', 'NN', '.']",27
coreference_resolution,2,17,We also test the REINFORCE policy gradient algorithm .,"['We', 'also', 'test', 'the', 'REINFORCE', 'policy', 'gradient', 'algorithm', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NNP', 'NN', 'NN', 'NN', '.']",9
coreference_resolution,2,18,Our model is a neural mention - ranking model .,"['Our', 'model', 'is', 'a', 'neural', 'mention', '-', 'ranking', 'model', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', '.']",10
coreference_resolution,2,108,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,2,110,"We find that REINFORCE does slightly better than the heuristic loss , but reward rescaling performs significantly better than both on both languages .","['We', 'find', 'that', 'REINFORCE', 'does', 'slightly', 'better', 'than', 'the', 'heuristic', 'loss', ',', 'but', 'reward', 'rescaling', 'performs', 'significantly', 'better', 'than', 'both', 'on', 'both', 'languages', '.']","['O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'VBZ', 'RB', 'JJR', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'RB', 'VBG', 'NNS', 'RB', 'JJR', 'IN', 'DT', 'IN', 'DT', 'NNS', '.']",24
coreference_resolution,2,115,"The reward - rescaled max - margin loss combines the best of both worlds , resulting in superior performance .","['The', 'reward', '-', 'rescaled', 'max', '-', 'margin', 'loss', 'combines', 'the', 'best', 'of', 'both', 'worlds', ',', 'resulting', 'in', 'superior', 'performance', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', ':', 'VBN', 'SYM', ':', 'NN', 'NN', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'NNS', ',', 'VBG', 'IN', 'JJ', 'NN', '.']",20
coreference_resolution,3,2,Higher - order Coreference Resolution with Coarse - to - fine Inference,"['Higher', '-', 'order', 'Coreference', 'Resolution', 'with', 'Coarse', '-', 'to', '-', 'fine', 'Inference']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJR', ':', 'NN', 'NNP', 'NNP', 'IN', 'NNP', ':', 'TO', ':', 'JJ', 'NN']",12
coreference_resolution,3,15,We introduce an approximation of higher - order inference that uses the span - ranking architecture from in an iterative manner .,"['We', 'introduce', 'an', 'approximation', 'of', 'higher', '-', 'order', 'inference', 'that', 'uses', 'the', 'span', '-', 'ranking', 'architecture', 'from', 'in', 'an', 'iterative', 'manner', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'JJR', ':', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NN', ':', 'JJ', 'NN', 'IN', 'IN', 'DT', 'JJ', 'NN', '.']",22
coreference_resolution,3,16,"At each iteration , the antecedent distribution is used as an attention mechanism to optionally update existing span representations , enabling later corefer - Speaker 1 : U m and think that is what 's - Go ahead Linda .","['At', 'each', 'iteration', ',', 'the', 'antecedent', 'distribution', 'is', 'used', 'as', 'an', 'attention', 'mechanism', 'to', 'optionally', 'update', 'existing', 'span', 'representations', ',', 'enabling', 'later', 'corefer', '-', 'Speaker', '1', ':', 'U', 'm', 'and', 'think', 'that', 'is', 'what', ""'s"", '-', 'Go', 'ahead', 'Linda', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', 'TO', 'RB', 'VB', 'VBG', 'JJ', 'NNS', ',', 'VBG', 'RBR', 'VBP', ':', 'NN', 'CD', ':', 'NNP', 'NN', 'CC', 'VB', 'DT', 'VBZ', 'WP', 'VBZ', ':', 'VB', 'RB', 'NNP', '.']",40
coreference_resolution,3,19,"To alleviate computational challenges from this higher - order inference , we also propose a coarseto - fine approach that is learned with a single endto - end objective .","['To', 'alleviate', 'computational', 'challenges', 'from', 'this', 'higher', '-', 'order', 'inference', ',', 'we', 'also', 'propose', 'a', 'coarseto', '-', 'fine', 'approach', 'that', 'is', 'learned', 'with', 'a', 'single', 'endto', '-', 'end', 'objective', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'JJR', ':', 'NN', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'NN', ':', 'JJ', 'NN', 'WDT', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', '.']",30
coreference_resolution,3,20,We introduce a less accurate but more efficient coarse factor in the pairwise scoring function .,"['We', 'introduce', 'a', 'less', 'accurate', 'but', 'more', 'efficient', 'coarse', 'factor', 'in', 'the', 'pairwise', 'scoring', 'function', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'RBR', 'JJ', 'CC', 'RBR', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBG', 'NN', '.']",16
coreference_resolution,3,21,This additional factor enables an extra pruning step during inference that reduces the number of antecedents considered by the more accurate but inefficient fine factor .,"['This', 'additional', 'factor', 'enables', 'an', 'extra', 'pruning', 'step', 'during', 'inference', 'that', 'reduces', 'the', 'number', 'of', 'antecedents', 'considered', 'by', 'the', 'more', 'accurate', 'but', 'inefficient', 'fine', 'factor', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'DT', 'JJR', 'JJ', 'CC', 'JJ', 'JJ', 'NN', '.']",26
coreference_resolution,3,22,"Intuitively , the model cheaply computes a rough sketch of likely antecedents before applying a more expensive scoring function .","['Intuitively', ',', 'the', 'model', 'cheaply', 'computes', 'a', 'rough', 'sketch', 'of', 'likely', 'antecedents', 'before', 'applying', 'a', 'more', 'expensive', 'scoring', 'function', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'VBG', 'DT', 'RBR', 'JJ', 'NN', 'NN', '.']",20
coreference_resolution,3,112,Results,['Results'],['B-n'],['NNS'],1
coreference_resolution,3,118,"The baseline relative to our contributions is the span - ranking model from augmented with both ELMo and hyperparameter tuning , which achieves 72.3 F1 .","['The', 'baseline', 'relative', 'to', 'our', 'contributions', 'is', 'the', 'span', '-', 'ranking', 'model', 'from', 'augmented', 'with', 'both', 'ELMo', 'and', 'hyperparameter', 'tuning', ',', 'which', 'achieves', '72.3', 'F1', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'TO', 'PRP$', 'NNS', 'VBZ', 'DT', 'JJ', ':', 'VBG', 'NN', 'IN', 'VBN', 'IN', 'DT', 'NNP', 'CC', 'NN', 'NN', ',', 'WDT', 'VBZ', 'CD', 'NNP', '.']",26
coreference_resolution,3,119,"Our full approach achieves 73.0 F1 , setting a new state of the art for coreference resolution .","['Our', 'full', 'approach', 'achieves', '73.0', 'F1', ',', 'setting', 'a', 'new', 'state', 'of', 'the', 'art', 'for', 'coreference', 'resolution', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'CD', 'NNP', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",18
coreference_resolution,3,121,"Despite using far less computation , it outperforms the baseline because the coarse scores s c ( i , j ) can be computed for all antecedents , enabling the model to potentially predict a coreference link between any two spans in the document .","['Despite', 'using', 'far', 'less', 'computation', ',', 'it', 'outperforms', 'the', 'baseline', 'because', 'the', 'coarse', 'scores', 's', 'c', '(', 'i', ',', 'j', ')', 'can', 'be', 'computed', 'for', 'all', 'antecedents', ',', 'enabling', 'the', 'model', 'to', 'potentially', 'predict', 'a', 'coreference', 'link', 'between', 'any', 'two', 'spans', 'in', 'the', 'document', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'RB', 'JJR', 'NN', ',', 'PRP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'VBP', 'NN', '(', 'JJ', ',', 'NN', ')', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NNS', ',', 'VBG', 'DT', 'NN', 'TO', 'RB', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'CD', 'NNS', 'IN', 'DT', 'NN', '.']",45
coreference_resolution,3,122,"As a result , we observe a much higher recall when adopting the coarse - to - fine approach .","['As', 'a', 'result', ',', 'we', 'observe', 'a', 'much', 'higher', 'recall', 'when', 'adopting', 'the', 'coarse', '-', 'to', '-', 'fine', 'approach', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'RB', 'JJR', 'NN', 'WRB', 'VBG', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', '.']",20
coreference_resolution,3,123,We also observe further improvement by including the second - order inference ( Section 3 ) .,"['We', 'also', 'observe', 'further', 'improvement', 'by', 'including', 'the', 'second', '-', 'order', 'inference', '(', 'Section', '3', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', ':', 'NN', 'NN', '(', 'NNP', 'CD', ')', '.']",17
coreference_resolution,0,2,Improving Coreference Resolution by Learning Entity - Level Distributed Representations,"['Improving', 'Coreference', 'Resolution', 'by', 'Learning', 'Entity', '-', 'Level', 'Distributed', 'Representations']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', ':', 'NN', 'VBD', 'NNS']",10
coreference_resolution,0,16,"In this work , we instead train a deep neural network to build distributed representations of pairs of coreference clusters .","['In', 'this', 'work', ',', 'we', 'instead', 'train', 'a', 'deep', 'neural', 'network', 'to', 'build', 'distributed', 'representations', 'of', 'pairs', 'of', 'coreference', 'clusters', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NNS', 'IN', 'NN', 'NNS', '.']",21
coreference_resolution,0,17,"This captures entity - level information with a large number of learned , continuous features instead of a small number of hand - crafted categorical ones .","['This', 'captures', 'entity', '-', 'level', 'information', 'with', 'a', 'large', 'number', 'of', 'learned', ',', 'continuous', 'features', 'instead', 'of', 'a', 'small', 'number', 'of', 'hand', '-', 'crafted', 'categorical', 'ones', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBZ', 'SYM', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', ',', 'JJ', 'NNS', 'RB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', ':', 'VBN', 'JJ', 'NNS', '.']",27
coreference_resolution,0,18,"Using the cluster - pair representations , our network learns when combining two coreference clusters is desirable .","['Using', 'the', 'cluster', '-', 'pair', 'representations', ',', 'our', 'network', 'learns', 'when', 'combining', 'two', 'coreference', 'clusters', 'is', 'desirable', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['VBG', 'DT', 'NN', ':', 'NN', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'WRB', 'VBG', 'CD', 'NN', 'NNS', 'VBZ', 'JJ', '.']",18
coreference_resolution,0,19,"At test time it builds up coreference clusters incrementally , starting with each mention in its own cluster and then merging a pair of clusters each step .","['At', 'test', 'time', 'it', 'builds', 'up', 'coreference', 'clusters', 'incrementally', ',', 'starting', 'with', 'each', 'mention', 'in', 'its', 'own', 'cluster', 'and', 'then', 'merging', 'a', 'pair', 'of', 'clusters', 'each', 'step', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'O']","['IN', 'JJS', 'NN', 'PRP', 'VBZ', 'RP', 'NN', 'NNS', 'RB', ',', 'VBG', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'JJ', 'NN', 'CC', 'RB', 'VBG', 'DT', 'NN', 'IN', 'NNS', 'DT', 'NN', '.']",28
coreference_resolution,0,20,It makes these decisions with a novel easy - first cluster - ranking procedure that combines the strengths of cluster - ranking ( Rahman and and easy - first coreference algorithms .,"['It', 'makes', 'these', 'decisions', 'with', 'a', 'novel', 'easy', '-', 'first', 'cluster', '-', 'ranking', 'procedure', 'that', 'combines', 'the', 'strengths', 'of', 'cluster', '-', 'ranking', '(', 'Rahman', 'and', 'and', 'easy', '-', 'first', 'coreference', 'algorithms', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'JJ', ':', 'RB', 'NN', ':', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NNS', 'IN', 'NN', ':', 'NN', '(', 'NNP', 'CC', 'CC', 'JJ', ':', 'JJ', 'NN', 'NN', '.']",32
coreference_resolution,0,22,We address this by using a learning - to - search algorithm inspired by SEARN to train our neural network .,"['We', 'address', 'this', 'by', 'using', 'a', 'learning', '-', 'to', '-', 'search', 'algorithm', 'inspired', 'by', 'SEARN', 'to', 'train', 'our', 'neural', 'network', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'IN', 'VBG', 'DT', 'VBG', ':', 'TO', ':', 'NN', 'NN', 'VBN', 'IN', 'NNP', 'TO', 'VB', 'PRP$', 'JJ', 'NN', '.']",21
coreference_resolution,0,23,This approach allows the model to learn which action ( a cluster merge ) available from the current state ( a partially completed coreference clustering ) will eventually lead to a high - scoring coreference partition .,"['This', 'approach', 'allows', 'the', 'model', 'to', 'learn', 'which', 'action', '(', 'a', 'cluster', 'merge', ')', 'available', 'from', 'the', 'current', 'state', '(', 'a', 'partially', 'completed', 'coreference', 'clustering', ')', 'will', 'eventually', 'lead', 'to', 'a', 'high', '-', 'scoring', 'coreference', 'partition', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'WDT', 'NN', '(', 'DT', 'NN', 'NN', ')', 'JJ', 'IN', 'DT', 'JJ', 'NN', '(', 'DT', 'RB', 'VBN', 'NN', 'VBG', ')', 'MD', 'RB', 'VB', 'TO', 'DT', 'JJ', ':', 'VBG', 'NN', 'NN', '.']",37
coreference_resolution,0,229,Our mention - ranking model surpasses all previous systems .,"['Our', 'mention', '-', 'ranking', 'model', 'surpasses', 'all', 'previous', 'systems', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', ':', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NNS', '.']",10
coreference_resolution,0,231,"The cluster - ranking model improves results further across both languages and all evaluation metrics , demonstrating the utility of incorporating entity - level information .","['The', 'cluster', '-', 'ranking', 'model', 'improves', 'results', 'further', 'across', 'both', 'languages', 'and', 'all', 'evaluation', 'metrics', ',', 'demonstrating', 'the', 'utility', 'of', 'incorporating', 'entity', '-', 'level', 'information', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', ':', 'NN', 'NN', 'VBZ', 'NNS', 'JJ', 'IN', 'DT', 'NNS', 'CC', 'DT', 'NN', 'NNS', ',', 'VBG', 'DT', 'NN', 'IN', 'VBG', 'NN', ':', 'NN', 'NN', '.']",26
dependency_parsing,8,2,Globally Normalized Transition - Based Neural Networks,"['Globally', 'Normalized', 'Transition', '-', 'Based', 'Neural', 'Networks']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['RB', 'VBN', 'NNP', ':', 'VBD', 'JJ', 'NNS']",7
dependency_parsing,8,4,"We introduce a globally normalized transition - based neural network model that achieves state - of - the - art part - ofspeech tagging , dependency parsing and sentence compression results .","['We', 'introduce', 'a', 'globally', 'normalized', 'transition', '-', 'based', 'neural', 'network', 'model', 'that', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'part', '-', 'ofspeech', 'tagging', ',', 'dependency', 'parsing', 'and', 'sentence', 'compression', 'results', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'RB', 'JJ', 'NN', ':', 'VBN', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', ':', 'NN', 'NN', ',', 'NN', 'NN', 'CC', 'NN', 'NN', 'NNS', '.']",32
dependency_parsing,8,11,"In this work we demonstrate that simple feed - forward networks without any recurrence can achieve comparable or better accuracies than LSTMs , as long as they are globally normalized .","['In', 'this', 'work', 'we', 'demonstrate', 'that', 'simple', 'feed', '-', 'forward', 'networks', 'without', 'any', 'recurrence', 'can', 'achieve', 'comparable', 'or', 'better', 'accuracies', 'than', 'LSTMs', ',', 'as', 'long', 'as', 'they', 'are', 'globally', 'normalized', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'IN', 'JJ', 'NN', ':', 'NN', 'NNS', 'IN', 'DT', 'NN', 'MD', 'VB', 'JJ', 'CC', 'JJR', 'NNS', 'IN', 'NNP', ',', 'RB', 'RB', 'IN', 'PRP', 'VBP', 'RB', 'VBN', '.']",31
dependency_parsing,8,12,"Our model , described in detail in Section 2 , uses a transition system and feature embeddings as introduced by * On leave from Columbia University ..","['Our', 'model', ',', 'described', 'in', 'detail', 'in', 'Section', '2', ',', 'uses', 'a', 'transition', 'system', 'and', 'feature', 'embeddings', 'as', 'introduced', 'by', '*', 'On', 'leave', 'from', 'Columbia', 'University', '..']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', ',', 'VBN', 'IN', 'NN', 'IN', 'NNP', 'CD', ',', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'NN', 'NNS', 'IN', 'VBN', 'IN', 'NN', 'IN', 'NN', 'IN', 'NNP', 'NNP', 'NNP']",27
dependency_parsing,8,13,"We do not use any recurrence , but perform beam search for maintaining multiple hypotheses and introduce global normalization with a conditional random field ( CRF ) objective to overcome the label bias problem that locally normalized models suffer from .","['We', 'do', 'not', 'use', 'any', 'recurrence', ',', 'but', 'perform', 'beam', 'search', 'for', 'maintaining', 'multiple', 'hypotheses', 'and', 'introduce', 'global', 'normalization', 'with', 'a', 'conditional', 'random', 'field', '(', 'CRF', ')', 'objective', 'to', 'overcome', 'the', 'label', 'bias', 'problem', 'that', 'locally', 'normalized', 'models', 'suffer', 'from', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'RB', 'VB', 'DT', 'NN', ',', 'CC', 'VBP', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'CC', 'VB', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'VBP', 'TO', 'VB', 'DT', 'NN', 'NN', 'NN', 'WDT', 'RB', 'VBN', 'NNS', 'VBP', 'IN', '.']",41
dependency_parsing,8,14,"Since we use beam inference , we approximate the partition function by summing over the elements in the beam , and use early updates .","['Since', 'we', 'use', 'beam', 'inference', ',', 'we', 'approximate', 'the', 'partition', 'function', 'by', 'summing', 'over', 'the', 'elements', 'in', 'the', 'beam', ',', 'and', 'use', 'early', 'updates', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'PRP', 'VBP', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'VBG', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NN', ',', 'CC', 'VB', 'JJ', 'NNS', '.']",25
dependency_parsing,8,15,We compute gradients based on this approximate global normalization and perform full backpropagation training of all neural network parameters based on the CRF loss .,"['We', 'compute', 'gradients', 'based', 'on', 'this', 'approximate', 'global', 'normalization', 'and', 'perform', 'full', 'backpropagation', 'training', 'of', 'all', 'neural', 'network', 'parameters', 'based', 'on', 'the', 'CRF', 'loss', '.']","['O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'CC', 'VB', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",25
dependency_parsing,8,149,Experiments,['Experiments'],['B-n'],['NNS'],1
dependency_parsing,8,158,Part of Speech Tagging,"['Part', 'of', 'Speech', 'Tagging']","['B-n', 'I-n', 'I-n', 'I-n']","['NN', 'IN', 'NNP', 'NNP']",4
dependency_parsing,8,169,Results .,"['Results', '.']","['B-n', 'O']","['NNS', '.']",2
dependency_parsing,8,171,Our globally normalized model again significantly outperforms the local model .,"['Our', 'globally', 'normalized', 'model', 'again', 'significantly', 'outperforms', 'the', 'local', 'model', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'RB', 'VBN', 'NN', 'RB', 'RB', 'VBZ', 'DT', 'JJ', 'NN', '.']",11
dependency_parsing,8,172,Beam search with a locally normalized model suffers from severe label bias issues that we discuss on a concrete example in Section 5 .,"['Beam', 'search', 'with', 'a', 'locally', 'normalized', 'model', 'suffers', 'from', 'severe', 'label', 'bias', 'issues', 'that', 'we', 'discuss', 'on', 'a', 'concrete', 'example', 'in', 'Section', '5', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'IN', 'DT', 'RB', 'JJ', 'NN', 'NNS', 'IN', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'CD', '.']",24
dependency_parsing,8,186,"Using beam search with a locally normalized model does not help , but with global normalization it leads to a 7 % reduction in relative error , empirically demonstrating the effect of label bias .","['Using', 'beam', 'search', 'with', 'a', 'locally', 'normalized', 'model', 'does', 'not', 'help', ',', 'but', 'with', 'global', 'normalization', 'it', 'leads', 'to', 'a', '7', '%', 'reduction', 'in', 'relative', 'error', ',', 'empirically', 'demonstrating', 'the', 'effect', 'of', 'label', 'bias', '.']","['B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NN', 'NN', 'IN', 'DT', 'RB', 'VBN', 'NN', 'VBZ', 'RB', 'VB', ',', 'CC', 'IN', 'JJ', 'NN', 'PRP', 'VBZ', 'TO', 'DT', 'CD', 'NN', 'NN', 'IN', 'JJ', 'NN', ',', 'RB', 'VBG', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",35
dependency_parsing,8,187,"The set of character ngrams feature is very important , increasing average accuracy on the CoNLL '09 datasets by about 0.5 % absolute .","['The', 'set', 'of', 'character', 'ngrams', 'feature', 'is', 'very', 'important', ',', 'increasing', 'average', 'accuracy', 'on', 'the', 'CoNLL', ""'09"", 'datasets', 'by', 'about', '0.5', '%', 'absolute', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NN', 'JJ', 'NN', 'VBZ', 'RB', 'JJ', ',', 'VBG', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'NNS', 'IN', 'IN', 'CD', 'NN', 'NN', '.']",24
dependency_parsing,8,189,Dependency Parsing,"['Dependency', 'Parsing']","['B-n', 'I-n']","['NN', 'VBG']",2
dependency_parsing,8,191,Results .,"['Results', '.']","['B-n', 'O']","['NNS', '.']",2
dependency_parsing,8,192,"Even though we do not use tri-training , our model compares favorably to the 94.26 % LAS and 92.41 % UAS reported by with tri-training .","['Even', 'though', 'we', 'do', 'not', 'use', 'tri-training', ',', 'our', 'model', 'compares', 'favorably', 'to', 'the', '94.26', '%', 'LAS', 'and', '92.41', '%', 'UAS', 'reported', 'by', 'with', 'tri-training', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['RB', 'IN', 'PRP', 'VBP', 'RB', 'VB', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'RB', 'TO', 'DT', 'CD', 'NN', 'NNP', 'CC', 'CD', 'NN', 'NNP', 'VBN', 'IN', 'IN', 'NN', '.']",26
dependency_parsing,8,194,Our results also significantly outperform the LSTM - based approaches of .,"['Our', 'results', 'also', 'significantly', 'outperform', 'the', 'LSTM', '-', 'based', 'approaches', 'of', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP$', 'NNS', 'RB', 'RB', 'VB', 'DT', 'NNP', ':', 'VBN', 'NNS', 'IN', '.']",12
dependency_parsing,1,2,Simple and Accurate Dependency Parsing Using Bidirectional LSTM Feature Representations,"['Simple', 'and', 'Accurate', 'Dependency', 'Parsing', 'Using', 'Bidirectional', 'LSTM', 'Feature', 'Representations']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NN', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP']",10
dependency_parsing,1,24,"Our proposal ( Section 3 ) is centered around BiRNNs , and more specifically BiLSTMs , which are strong and trainable sequence models ( see Section 2.3 ) .","['Our', 'proposal', '(', 'Section', '3', ')', 'is', 'centered', 'around', 'BiRNNs', ',', 'and', 'more', 'specifically', 'BiLSTMs', ',', 'which', 'are', 'strong', 'and', 'trainable', 'sequence', 'models', '(', 'see', 'Section', '2.3', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', '(', 'NNP', 'CD', ')', 'VBZ', 'VBN', 'IN', 'NNP', ',', 'CC', 'RBR', 'RB', 'NNP', ',', 'WDT', 'VBP', 'JJ', 'CC', 'JJ', 'NN', 'NNS', '(', 'VB', 'NNP', 'CD', ')', '.']",29
dependency_parsing,1,26,"We represent each word by its BiLSTM encoding , and use a concatenation of a minimal set of such BiLSTM encodings as our feature function , which is then passed to a non-linear scoring function ( multi - layer perceptron ) .","['We', 'represent', 'each', 'word', 'by', 'its', 'BiLSTM', 'encoding', ',', 'and', 'use', 'a', 'concatenation', 'of', 'a', 'minimal', 'set', 'of', 'such', 'BiLSTM', 'encodings', 'as', 'our', 'feature', 'function', ',', 'which', 'is', 'then', 'passed', 'to', 'a', 'non-linear', 'scoring', 'function', '(', 'multi', '-', 'layer', 'perceptron', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'PRP$', 'NNP', 'NN', ',', 'CC', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNP', 'NNS', 'IN', 'PRP$', 'NN', 'NN', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'NN', '(', 'JJ', ':', 'NN', 'NN', ')', '.']",42
dependency_parsing,1,27,"Crucially , the BiLSTM is trained with the rest of the parser in order to learn a good feature representation for the parsing problem .","['Crucially', ',', 'the', 'BiLSTM', 'is', 'trained', 'with', 'the', 'rest', 'of', 'the', 'parser', 'in', 'order', 'to', 'learn', 'a', 'good', 'feature', 'representation', 'for', 'the', 'parsing', 'problem', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",25
dependency_parsing,1,29,"We demonstrate the effectiveness of the approach by using the BiLSTM feature extractor in two parsing architectures , transition - based ( Section 4 ) as well as a graph - based ( Section 5 ) .","['We', 'demonstrate', 'the', 'effectiveness', 'of', 'the', 'approach', 'by', 'using', 'the', 'BiLSTM', 'feature', 'extractor', 'in', 'two', 'parsing', 'architectures', ',', 'transition', '-', 'based', '(', 'Section', '4', ')', 'as', 'well', 'as', 'a', 'graph', '-', 'based', '(', 'Section', '5', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NNP', 'NN', 'NN', 'IN', 'CD', 'NN', 'NNS', ',', 'NN', ':', 'VBN', '(', 'NNP', 'CD', ')', 'RB', 'RB', 'IN', 'DT', 'NN', ':', 'VBN', '(', 'NNP', 'CD', ')', '.']",37
dependency_parsing,1,30,"In the graphbased parser , we jointly train a structured - prediction model on top of a BiLSTM , propagating errors from the structured objective all the way back to the BiLSTM feature - encoder .","['In', 'the', 'graphbased', 'parser', ',', 'we', 'jointly', 'train', 'a', 'structured', '-', 'prediction', 'model', 'on', 'top', 'of', 'a', 'BiLSTM', ',', 'propagating', 'errors', 'from', 'the', 'structured', 'objective', 'all', 'the', 'way', 'back', 'to', 'the', 'BiLSTM', 'feature', '-', 'encoder', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', 'NN', 'IN', 'DT', 'NNP', ',', 'VBG', 'NNS', 'IN', 'DT', 'VBN', 'IN', 'PDT', 'DT', 'NN', 'RB', 'TO', 'DT', 'NNP', 'NN', ':', 'NN', '.']",36
dependency_parsing,1,281,"The parsers are implemented in python , using the PyCNN toolkit 11 for neural network training .","['The', 'parsers', 'are', 'implemented', 'in', 'python', ',', 'using', 'the', 'PyCNN', 'toolkit', '11', 'for', 'neural', 'network', 'training', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'NN', ',', 'VBG', 'DT', 'NNP', 'NN', 'CD', 'IN', 'JJ', 'NN', 'NN', '.']",17
dependency_parsing,1,282,The code is available at the github repository https://github.com/elikip / bist -parser .,"['The', 'code', 'is', 'available', 'at', 'the', 'github', 'repository', 'https://github.com/elikip', '/', 'bist', '-parser', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'NN', 'NN', 'NN', 'NNP', 'NN', 'NNP', '.']",13
dependency_parsing,1,283,"We use the LSTM variant implemented in PyCNN , and optimize using the Adam optimizer .","['We', 'use', 'the', 'LSTM', 'variant', 'implemented', 'in', 'PyCNN', ',', 'and', 'optimize', 'using', 'the', 'Adam', 'optimizer', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'NNP', ',', 'CC', 'VB', 'VBG', 'DT', 'NNP', 'NN', '.']",16
dependency_parsing,1,299,"It is clear that our parsers are very competitive , despite using very simple parsing architectures and minimal feature extractors .","['It', 'is', 'clear', 'that', 'our', 'parsers', 'are', 'very', 'competitive', ',', 'despite', 'using', 'very', 'simple', 'parsing', 'architectures', 'and', 'minimal', 'feature', 'extractors', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'JJ', 'IN', 'PRP$', 'NNS', 'VBP', 'RB', 'JJ', ',', 'IN', 'VBG', 'RB', 'JJ', 'NN', 'NNS', 'CC', 'JJ', 'NN', 'NNS', '.']",21
dependency_parsing,1,300,"When not using external embeddings , the first - order graph - based parser with 2 features outperforms all other systems thatare not using external resources , including the third - order TurboParser .","['When', 'not', 'using', 'external', 'embeddings', ',', 'the', 'first', '-', 'order', 'graph', '-', 'based', 'parser', 'with', '2', 'features', 'outperforms', 'all', 'other', 'systems', 'thatare', 'not', 'using', 'external', 'resources', ',', 'including', 'the', 'third', '-', 'order', 'TurboParser', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['WRB', 'RB', 'VBG', 'JJ', 'NNS', ',', 'DT', 'JJ', ':', 'NN', 'NN', ':', 'VBN', 'NN', 'IN', 'CD', 'NNS', 'VBP', 'DT', 'JJ', 'NNS', 'IN', 'RB', 'VBG', 'JJ', 'NNS', ',', 'VBG', 'DT', 'JJ', ':', 'NN', 'NNP', '.']",34
dependency_parsing,1,301,"The greedy transition based parser with 4 features also matches or outperforms most other parsers , including the beam - based transition parser with heavily engineered features of and the Stack - LSTM parser of , as well as the same parser when trained using a dynamic oracle .","['The', 'greedy', 'transition', 'based', 'parser', 'with', '4', 'features', 'also', 'matches', 'or', 'outperforms', 'most', 'other', 'parsers', ',', 'including', 'the', 'beam', '-', 'based', 'transition', 'parser', 'with', 'heavily', 'engineered', 'features', 'of', 'and', 'the', 'Stack', '-', 'LSTM', 'parser', 'of', ',', 'as', 'well', 'as', 'the', 'same', 'parser', 'when', 'trained', 'using', 'a', 'dynamic', 'oracle', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBN', 'NN', 'IN', 'CD', 'NNS', 'RB', 'NNS', 'CC', 'NNS', 'RBS', 'JJ', 'NNS', ',', 'VBG', 'DT', 'NN', ':', 'VBN', 'NN', 'NN', 'IN', 'RB', 'VBN', 'NNS', 'IN', 'CC', 'DT', 'NNP', ':', 'NNP', 'NN', 'IN', ',', 'RB', 'RB', 'IN', 'DT', 'JJ', 'NN', 'WRB', 'VBN', 'VBG', 'DT', 'JJ', 'NN', '.']",49
dependency_parsing,1,302,Moving from the simple ( 4 features ) to the extended ( 11 features ) feature set leads to some gains in accuracy for both English and Chinese .,"['Moving', 'from', 'the', 'simple', '(', '4', 'features', ')', 'to', 'the', 'extended', '(', '11', 'features', ')', 'feature', 'set', 'leads', 'to', 'some', 'gains', 'in', 'accuracy', 'for', 'both', 'English', 'and', 'Chinese', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'O']","['VBG', 'IN', 'DT', 'NN', '(', 'CD', 'NNS', ')', 'TO', 'DT', 'VBN', '(', 'CD', 'NNS', ')', 'NN', 'VBN', 'VBZ', 'TO', 'DT', 'NNS', 'IN', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', '.']",29
dependency_parsing,1,303,"Interestingly , when adding external word embeddings the accuracy of the graph - based parser degrades .","['Interestingly', ',', 'when', 'adding', 'external', 'word', 'embeddings', 'the', 'accuracy', 'of', 'the', 'graph', '-', 'based', 'parser', 'degrades', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O']","['RB', ',', 'WRB', 'VBG', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', ':', 'VBN', 'NN', 'NNS', '.']",17
dependency_parsing,5,2,Structured Training for Neural Network Transition - Based Parsing,"['Structured', 'Training', 'for', 'Neural', 'Network', 'Transition', '-', 'Based', 'Parsing']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NN', 'IN', 'NNP', 'NNP', 'NNP', ':', 'VBD', 'VBG']",9
dependency_parsing,5,4,We present structured perceptron training for neural network transition - based dependency parsing .,"['We', 'present', 'structured', 'perceptron', 'training', 'for', 'neural', 'network', 'transition', '-', 'based', 'dependency', 'parsing', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', ':', 'VBN', 'NN', 'VBG', '.']",14
dependency_parsing,5,11,"Lately , dependency parsing has emerged as a popular approach to this problem due to the availability of dependency treebanks in many languages and the efficiency of dependency parsers .","['Lately', ',', 'dependency', 'parsing', 'has', 'emerged', 'as', 'a', 'popular', 'approach', 'to', 'this', 'problem', 'due', 'to', 'the', 'availability', 'of', 'dependency', 'treebanks', 'in', 'many', 'languages', 'and', 'the', 'efficiency', 'of', 'dependency', 'parsers', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'DT', 'NN', 'JJ', 'TO', 'DT', 'NN', 'IN', 'NN', 'NNS', 'IN', 'JJ', 'NNS', 'CC', 'DT', 'NN', 'IN', 'NN', 'NNS', '.']",30
dependency_parsing,5,13,"In transition - based parsing , sentences are processed in a linear left to right pass ; at each position , the parser needs to choose from a set of possible actions defined by the transition strategy .","['In', 'transition', '-', 'based', 'parsing', ',', 'sentences', 'are', 'processed', 'in', 'a', 'linear', 'left', 'to', 'right', 'pass', ';', 'at', 'each', 'position', ',', 'the', 'parser', 'needs', 'to', 'choose', 'from', 'a', 'set', 'of', 'possible', 'actions', 'defined', 'by', 'the', 'transition', 'strategy', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ':', 'VBN', 'NN', ',', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'JJ', 'NN', ':', 'IN', 'DT', 'NN', ',', 'DT', 'NN', 'VBZ', 'TO', 'VB', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",38
dependency_parsing,5,24,"In this work , we combine the representational power of neural networks with the superior search enabled by structured training and inference , making our parser one of the most accurate dependency parsers to date .","['In', 'this', 'work', ',', 'we', 'combine', 'the', 'representational', 'power', 'of', 'neural', 'networks', 'with', 'the', 'superior', 'search', 'enabled', 'by', 'structured', 'training', 'and', 'inference', ',', 'making', 'our', 'parser', 'one', 'of', 'the', 'most', 'accurate', 'dependency', 'parsers', 'to', 'date', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'JJ', 'NN', 'CC', 'NN', ',', 'VBG', 'PRP$', 'NN', 'CD', 'IN', 'DT', 'RBS', 'JJ', 'NN', 'NNS', 'TO', 'NN', '.']",36
dependency_parsing,5,29,"As in prior work , we train the neural network to model the probability of individual parse actions .","['As', 'in', 'prior', 'work', ',', 'we', 'train', 'the', 'neural', 'network', 'to', 'model', 'the', 'probability', 'of', 'individual', 'parse', 'actions', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'IN', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",19
dependency_parsing,5,31,"Instead , we use the activations from all layers of the neural network as the representation in a structured perceptron model that is trained with beam search and early updates ( Section 3 ) .","['Instead', ',', 'we', 'use', 'the', 'activations', 'from', 'all', 'layers', 'of', 'the', 'neural', 'network', 'as', 'the', 'representation', 'in', 'a', 'structured', 'perceptron', 'model', 'that', 'is', 'trained', 'with', 'beam', 'search', 'and', 'early', 'updates', '(', 'Section', '3', ')', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'VBN', 'IN', 'NN', 'NN', 'CC', 'JJ', 'NNS', '(', 'NNP', 'CD', ')', '.']",35
dependency_parsing,5,35,"To this end , we generate large quantities of high - confidence parse trees by parsing unlabeled data with two different parsers and selecting only the sentences for which the two parsers produced the same trees ( Section 3.3 ) .","['To', 'this', 'end', ',', 'we', 'generate', 'large', 'quantities', 'of', 'high', '-', 'confidence', 'parse', 'trees', 'by', 'parsing', 'unlabeled', 'data', 'with', 'two', 'different', 'parsers', 'and', 'selecting', 'only', 'the', 'sentences', 'for', 'which', 'the', 'two', 'parsers', 'produced', 'the', 'same', 'trees', '(', 'Section', '3.3', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['TO', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'JJ', ':', 'NN', 'NN', 'NNS', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'CD', 'JJ', 'NNS', 'CC', 'VBG', 'RB', 'DT', 'NNS', 'IN', 'WDT', 'DT', 'CD', 'NNS', 'VBD', 'DT', 'JJ', 'NNS', '(', 'NNP', 'CD', ')', '.']",41
dependency_parsing,5,36,"This approach is known as "" tri-training "" and we show that it benefits our neural network parser significantly more than other approaches .","['This', 'approach', 'is', 'known', 'as', '""', 'tri-training', '""', 'and', 'we', 'show', 'that', 'it', 'benefits', 'our', 'neural', 'network', 'parser', 'significantly', 'more', 'than', 'other', 'approaches', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'JJ', 'NN', 'CC', 'PRP', 'VBP', 'IN', 'PRP', 'NNS', 'PRP$', 'JJ', 'NN', 'NN', 'RB', 'RBR', 'IN', 'JJ', 'NNS', '.']",24
dependency_parsing,5,200,We used the publicly available word2vec 2 tool to learn CBOW embeddings following the sample configuration provided with the tool .,"['We', 'used', 'the', 'publicly', 'available', 'word2vec', '2', 'tool', 'to', 'learn', 'CBOW', 'embeddings', 'following', 'the', 'sample', 'configuration', 'provided', 'with', 'the', 'tool', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'DT', 'RB', 'JJ', 'NN', 'CD', 'NN', 'TO', 'VB', 'NNP', 'NNS', 'VBG', 'DT', 'JJ', 'NN', 'VBD', 'IN', 'DT', 'NN', '.']",21
dependency_parsing,5,219,Results,['Results'],['B-n'],['NNS'],1
dependency_parsing,5,222,"The highest of these is , with a reported accuracy of 94.22 % UAS .","['The', 'highest', 'of', 'these', 'is', ',', 'with', 'a', 'reported', 'accuracy', 'of', '94.22', '%', 'UAS', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJS', 'IN', 'DT', 'VBZ', ',', 'IN', 'DT', 'VBN', 'NN', 'IN', 'CD', 'NN', 'NNP', '.']",15
dependency_parsing,5,223,"Even though the UAS is not directly comparable , it is typically similar , and this suggests that our model is competitive with some of the highest reported accuries for dependencies on WSJ .","['Even', 'though', 'the', 'UAS', 'is', 'not', 'directly', 'comparable', ',', 'it', 'is', 'typically', 'similar', ',', 'and', 'this', 'suggests', 'that', 'our', 'model', 'is', 'competitive', 'with', 'some', 'of', 'the', 'highest', 'reported', 'accuries', 'for', 'dependencies', 'on', 'WSJ', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['RB', 'IN', 'DT', 'NNP', 'VBZ', 'RB', 'RB', 'JJ', ',', 'PRP', 'VBZ', 'RB', 'JJ', ',', 'CC', 'DT', 'VBZ', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'IN', 'DT', 'JJS', 'JJ', 'NNS', 'IN', 'NNS', 'IN', 'NNP', '.']",34
dependency_parsing,7,5,"This form of training , which accounts for model predictions at training time , improves parsing accuracies .","['This', 'form', 'of', 'training', ',', 'which', 'accounts', 'for', 'model', 'predictions', 'at', 'training', 'time', ',', 'improves', 'parsing', 'accuracies', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['DT', 'NN', 'IN', 'NN', ',', 'WDT', 'VBZ', 'IN', 'NN', 'NNS', 'IN', 'NN', 'NN', ',', 'VBZ', 'VBG', 'NNS', '.']",18
dependency_parsing,7,8,"Natural language parsing can be formulated as a series of decisions that read words in sequence and incrementally combine them to form syntactic structures ; this formalization is known as transitionbased parsing , and is often coupled with a greedy search procedure .","['Natural', 'language', 'parsing', 'can', 'be', 'formulated', 'as', 'a', 'series', 'of', 'decisions', 'that', 'read', 'words', 'in', 'sequence', 'and', 'incrementally', 'combine', 'them', 'to', 'form', 'syntactic', 'structures', ';', 'this', 'formalization', 'is', 'known', 'as', 'transitionbased', 'parsing', ',', 'and', 'is', 'often', 'coupled', 'with', 'a', 'greedy', 'search', 'procedure', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'WDT', 'VBP', 'NNS', 'IN', 'NN', 'CC', 'RB', 'VB', 'PRP', 'TO', 'VB', 'JJ', 'NNS', ':', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', ',', 'CC', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",43
dependency_parsing,7,9,"The literature on transition - based parsing is vast , but all works share in common a classification component that takes into account features of the current parser state 1 and predicts the next action to take conditioned on the state .","['The', 'literature', 'on', 'transition', '-', 'based', 'parsing', 'is', 'vast', ',', 'but', 'all', 'works', 'share', 'in', 'common', 'a', 'classification', 'component', 'that', 'takes', 'into', 'account', 'features', 'of', 'the', 'current', 'parser', 'state', '1', 'and', 'predicts', 'the', 'next', 'action', 'to', 'take', 'conditioned', 'on', 'the', 'state', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'NN', ':', 'VBN', 'NN', 'VBZ', 'JJ', ',', 'CC', 'DT', 'NNS', 'NN', 'IN', 'JJ', 'DT', 'NN', 'NN', 'WDT', 'VBZ', 'IN', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CD', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'VBN', 'IN', 'DT', 'NN', '.']",42
dependency_parsing,7,17,"In this work , we adapt the training criterion so as to explore parser states drawn not only from the training data , but also from the model as it is being learned .","['In', 'this', 'work', ',', 'we', 'adapt', 'the', 'training', 'criterion', 'so', 'as', 'to', 'explore', 'parser', 'states', 'drawn', 'not', 'only', 'from', 'the', 'training', 'data', ',', 'but', 'also', 'from', 'the', 'model', 'as', 'it', 'is', 'being', 'learned', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'RB', 'IN', 'TO', 'VB', 'NN', 'NNS', 'VBP', 'RB', 'RB', 'IN', 'DT', 'NN', 'NNS', ',', 'CC', 'RB', 'IN', 'DT', 'NN', 'IN', 'PRP', 'VBZ', 'VBG', 'VBN', '.']",34
dependency_parsing,7,18,"To do so , we use the method of to dynamically chose an optimal ( relative to the final attachment accuracy ) action given an imperfect history .","['To', 'do', 'so', ',', 'we', 'use', 'the', 'method', 'of', 'to', 'dynamically', 'chose', 'an', 'optimal', '(', 'relative', 'to', 'the', 'final', 'attachment', 'accuracy', ')', 'action', 'given', 'an', 'imperfect', 'history', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['TO', 'VB', 'RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'TO', 'RB', 'VB', 'DT', 'JJ', '(', 'JJ', 'TO', 'DT', 'JJ', 'NN', 'NN', ')', 'NN', 'VBN', 'DT', 'JJ', 'NN', '.']",28
dependency_parsing,7,19,"By interpolating between algorithm states sampled from the model and those sampled from the training data , more robust predictions at test time can be made .","['By', 'interpolating', 'between', 'algorithm', 'states', 'sampled', 'from', 'the', 'model', 'and', 'those', 'sampled', 'from', 'the', 'training', 'data', ',', 'more', 'robust', 'predictions', 'at', 'test', 'time', 'can', 'be', 'made', '.']","['B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'IN', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'CC', 'DT', 'VBN', 'IN', 'DT', 'NN', 'NNS', ',', 'JJR', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'MD', 'VB', 'VBN', '.']",27
dependency_parsing,7,76,Experiments,['Experiments'],['B-n'],['NNS'],1
dependency_parsing,7,78,The score achieved by the dynamic oracle for English is 93.56 UAS .,"['The', 'score', 'achieved', 'by', 'the', 'dynamic', 'oracle', 'for', 'English', 'is', '93.56', 'UAS', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'VBZ', 'CD', 'NNP', '.']",13
dependency_parsing,7,80,"Moreover , the Chinese score establishes the state - of - the - art , using the same settings as Chen and Manning ( 2014 ) .","['Moreover', ',', 'the', 'Chinese', 'score', 'establishes', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', ',', 'using', 'the', 'same', 'settings', 'as', 'Chen', 'and', 'Manning', '(', '2014', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'JJ', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', ',', 'VBG', 'DT', 'JJ', 'NNS', 'IN', 'NNP', 'CC', 'NNP', '(', 'CD', ')', '.']",27
dependency_parsing,4,2,Stack - Pointer Networks for Dependency Parsing,"['Stack', '-', 'Pointer', 'Networks', 'for', 'Dependency', 'Parsing']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', ':', 'NN', 'NNP', 'IN', 'NNP', 'NNP']",7
dependency_parsing,4,25,"In this paper , we propose a novel neural network architecture for dependency parsing , stackpointer networks ( STACKPTR ) .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'neural', 'network', 'architecture', 'for', 'dependency', 'parsing', ',', 'stackpointer', 'networks', '(', 'STACKPTR', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'NN', 'NNS', '(', 'NNP', ')', '.']",21
dependency_parsing,4,26,"STACKPTR is a transition - based architecture , with the corresponding asymptotic efficiency , but still maintains a global view of the sentence that proves essential for achieving competitive accuracy .","['STACKPTR', 'is', 'a', 'transition', '-', 'based', 'architecture', ',', 'with', 'the', 'corresponding', 'asymptotic', 'efficiency', ',', 'but', 'still', 'maintains', 'a', 'global', 'view', 'of', 'the', 'sentence', 'that', 'proves', 'essential', 'for', 'achieving', 'competitive', 'accuracy', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', ',', 'IN', 'DT', 'JJ', 'JJ', 'NN', ',', 'CC', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'WDT', 'VBZ', 'JJ', 'IN', 'VBG', 'JJ', 'NN', '.']",31
dependency_parsing,4,27,"Our STACKPTR parser has a pointer network as its backbone , and is equipped with an internal stack to maintain the order of head words in tree structures .","['Our', 'STACKPTR', 'parser', 'has', 'a', 'pointer', 'network', 'as', 'its', 'backbone', ',', 'and', 'is', 'equipped', 'with', 'an', 'internal', 'stack', 'to', 'maintain', 'the', 'order', 'of', 'head', 'words', 'in', 'tree', 'structures', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NNP', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'PRP$', 'NN', ',', 'CC', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'NN', 'NNS', 'IN', 'JJ', 'NNS', '.']",29
dependency_parsing,4,28,"The STACKPTR parser performs parsing in an incremental , topdown , depth - first fashion ; at each step , it generates an arc by assigning a child for the headword at the top of the internal stack .","['The', 'STACKPTR', 'parser', 'performs', 'parsing', 'in', 'an', 'incremental', ',', 'topdown', ',', 'depth', '-', 'first', 'fashion', ';', 'at', 'each', 'step', ',', 'it', 'generates', 'an', 'arc', 'by', 'assigning', 'a', 'child', 'for', 'the', 'headword', 'at', 'the', 'top', 'of', 'the', 'internal', 'stack', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'NNS', 'VBG', 'IN', 'DT', 'NN', ',', 'NN', ',', 'SYM', ':', 'JJ', 'NN', ':', 'IN', 'DT', 'NN', ',', 'PRP', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",39
dependency_parsing,4,158,"For fair comparison of the parsing performance , we re-implemented the graph - based Deep Biaffine ( BIAF ) parser , which achieved state - of - the - art results on a wide range of languages .","['For', 'fair', 'comparison', 'of', 'the', 'parsing', 'performance', ',', 'we', 're-implemented', 'the', 'graph', '-', 'based', 'Deep', 'Biaffine', '(', 'BIAF', ')', 'parser', ',', 'which', 'achieved', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'on', 'a', 'wide', 'range', 'of', 'languages', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'PRP', 'VBD', 'DT', 'NN', ':', 'VBN', 'JJ', 'NNP', '(', 'NNP', ')', 'NN', ',', 'WDT', 'VBD', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', '.']",38
dependency_parsing,4,160,Main Results,"['Main', 'Results']","['O', 'B-n']","['NN', 'NNS']",2
dependency_parsing,4,165,"On UAS and LAS , the Full variation of STACKPTR with decoding beam size 10 outperforms BIAF on Chinese , and obtains competitive performance on English and German .","['On', 'UAS', 'and', 'LAS', ',', 'the', 'Full', 'variation', 'of', 'STACKPTR', 'with', 'decoding', 'beam', 'size', '10', 'outperforms', 'BIAF', 'on', 'Chinese', ',', 'and', 'obtains', 'competitive', 'performance', 'on', 'English', 'and', 'German', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O']","['IN', 'NNP', 'CC', 'NNP', ',', 'DT', 'NNP', 'NN', 'IN', 'NNP', 'IN', 'VBG', 'NN', 'NN', 'CD', 'NNS', 'NNP', 'IN', 'NNP', ',', 'CC', 'NNS', 'JJ', 'NN', 'IN', 'NNP', 'CC', 'NNP', '.']",29
dependency_parsing,4,166,"An interesting observation is that the Full model achieves the best accuracy on English and Chinese , while performs slightly worse than + sib on German .","['An', 'interesting', 'observation', 'is', 'that', 'the', 'Full', 'model', 'achieves', 'the', 'best', 'accuracy', 'on', 'English', 'and', 'Chinese', ',', 'while', 'performs', 'slightly', 'worse', 'than', '+', 'sib', 'on', 'German', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'IN', 'DT', 'NNP', 'NN', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'NNP', 'CC', 'NNP', ',', 'IN', 'NNS', 'RB', 'JJR', 'IN', 'JJR', 'NN', 'IN', 'NNP', '.']",27
dependency_parsing,4,168,"On LCM and UCM , STACKPTR significantly outperforms BIAF on all languages , showing the superiority of our parser on complete sentence parsing .","['On', 'LCM', 'and', 'UCM', ',', 'STACKPTR', 'significantly', 'outperforms', 'BIAF', 'on', 'all', 'languages', ',', 'showing', 'the', 'superiority', 'of', 'our', 'parser', 'on', 'complete', 'sentence', 'parsing', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', 'CC', 'NNP', ',', 'NNP', 'RB', 'VBZ', 'NNP', 'IN', 'DT', 'NNS', ',', 'VBG', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",24
dependency_parsing,4,169,The results of our parser on RA are slightly worse than BIAF .,"['The', 'results', 'of', 'our', 'parser', 'on', 'RA', 'are', 'slightly', 'worse', 'than', 'BIAF', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNS', 'IN', 'PRP$', 'NN', 'IN', 'NNP', 'VBP', 'RB', 'JJR', 'IN', 'NNP', '.']",13
dependency_parsing,4,175,"re-implementation of BIAF obtains better performance than the original one in , demonstrating the effectiveness of the character - level information .","['re-implementation', 'of', 'BIAF', 'obtains', 'better', 'performance', 'than', 'the', 'original', 'one', 'in', ',', 'demonstrating', 'the', 'effectiveness', 'of', 'the', 'character', '-', 'level', 'information', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', 'NNP', 'NNS', 'RBR', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', ',', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', '.']",22
dependency_parsing,4,176,"Our model achieves state - of - the - art performance on both UAS and LAS on Chinese , and best UAS on English .","['Our', 'model', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'both', 'UAS', 'and', 'LAS', 'on', 'Chinese', ',', 'and', 'best', 'UAS', 'on', 'English', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP$', 'NN', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'IN', 'NNP', ',', 'CC', 'JJS', 'NNP', 'IN', 'NNP', '.']",25
dependency_parsing,4,177,"On German , the performance is competitive with BIAF , and significantly better than other models .","['On', 'German', ',', 'the', 'performance', 'is', 'competitive', 'with', 'BIAF', ',', 'and', 'significantly', 'better', 'than', 'other', 'models', '.']","['B-p', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NNP', ',', 'DT', 'NN', 'VBZ', 'JJ', 'IN', 'NNP', ',', 'CC', 'RB', 'JJR', 'IN', 'JJ', 'NNS', '.']",17
dependency_parsing,6,2,DEEP BIAFFINE ATTENTION FOR NEURAL DEPENDENCY PARSING,"['DEEP', 'BIAFFINE', 'ATTENTION', 'FOR', 'NEURAL', 'DEPENDENCY', 'PARSING']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP']",7
dependency_parsing,6,13,"We modify the neural graphbased approach first proposed by in a few ways to achieve competitive performance : we build a network that 's larger but uses more regularization ; we replace the traditional MLP - based attention mechanism and affine label classifier with biaffine ones ; and rather than using the top recurrent states of the LSTM in the biaffine transformations , we first put them through MLP operations that reduce their dimensionality .","['We', 'modify', 'the', 'neural', 'graphbased', 'approach', 'first', 'proposed', 'by', 'in', 'a', 'few', 'ways', 'to', 'achieve', 'competitive', 'performance', ':', 'we', 'build', 'a', 'network', 'that', ""'s"", 'larger', 'but', 'uses', 'more', 'regularization', ';', 'we', 'replace', 'the', 'traditional', 'MLP', '-', 'based', 'attention', 'mechanism', 'and', 'affine', 'label', 'classifier', 'with', 'biaffine', 'ones', ';', 'and', 'rather', 'than', 'using', 'the', 'top', 'recurrent', 'states', 'of', 'the', 'LSTM', 'in', 'the', 'biaffine', 'transformations', ',', 'we', 'first', 'put', 'them', 'through', 'MLP', 'operations', 'that', 'reduce', 'their', 'dimensionality', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'VBD', 'NN', 'RB', 'VBN', 'IN', 'IN', 'DT', 'JJ', 'NNS', 'TO', 'VB', 'JJ', 'NN', ':', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'JJR', 'CC', 'VBZ', 'JJR', 'NN', ':', 'PRP', 'VB', 'DT', 'JJ', 'NNP', ':', 'VBN', 'NN', 'NN', 'CC', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NNS', ':', 'CC', 'RB', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'IN', 'DT', 'NN', 'NNS', ',', 'PRP', 'RB', 'VBD', 'PRP', 'IN', 'NNP', 'NNS', 'WDT', 'VB', 'PRP$', 'NN', '.']",75
dependency_parsing,6,96,"We choose to optimize with Adam , which ( among other things ) keeps a moving average of the L 2 norm of the gradient for each parameter throughout training and divides the gradient for each parameter by this moving average , ensuring that the magnitude of the gradients will on average be close to one .","['We', 'choose', 'to', 'optimize', 'with', 'Adam', ',', 'which', '(', 'among', 'other', 'things', ')', 'keeps', 'a', 'moving', 'average', 'of', 'the', 'L', '2', 'norm', 'of', 'the', 'gradient', 'for', 'each', 'parameter', 'throughout', 'training', 'and', 'divides', 'the', 'gradient', 'for', 'each', 'parameter', 'by', 'this', 'moving', 'average', ',', 'ensuring', 'that', 'the', 'magnitude', 'of', 'the', 'gradients', 'will', 'on', 'average', 'be', 'close', 'to', 'one', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'TO', 'VB', 'IN', 'NNP', ',', 'WDT', '(', 'IN', 'JJ', 'NNS', ')', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'CD', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'CC', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'VBG', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', 'MD', 'IN', 'NN', 'VB', 'JJ', 'TO', 'CD', '.']",57
dependency_parsing,6,102,"Our model gets nearly the same UAS performance on PTB - SD 3.3.0 as the current SOTA model from in spite of its substantially simpler architecture , and gets SOTA UAS performance on CTB 5.1 7 as well as SOTA performance on all CoNLL 09 languages .","['Our', 'model', 'gets', 'nearly', 'the', 'same', 'UAS', 'performance', 'on', 'PTB', '-', 'SD', '3.3.0', 'as', 'the', 'current', 'SOTA', 'model', 'from', 'in', 'spite', 'of', 'its', 'substantially', 'simpler', 'architecture', ',', 'and', 'gets', 'SOTA', 'UAS', 'performance', 'on', 'CTB', '5.1', '7', 'as', 'well', 'as', 'SOTA', 'performance', 'on', 'all', 'CoNLL', '09', 'languages', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'RB', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'NNP', ':', 'NN', 'CD', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'IN', 'NN', 'IN', 'PRP$', 'RB', 'JJ', 'NN', ',', 'CC', 'VBZ', 'NNP', 'NNP', 'NN', 'IN', 'NNP', 'CD', 'CD', 'RB', 'RB', 'IN', 'NNP', 'NN', 'IN', 'DT', 'NNP', 'CD', 'NNS', '.']",47
dependency_parsing,2,14,"We give a probabilistic interpretation to the ensemble parser ( with a minor modification ) , viewing it as an instance of minimum Bayes risk inference .","['We', 'give', 'a', 'probabilistic', 'interpretation', 'to', 'the', 'ensemble', 'parser', '(', 'with', 'a', 'minor', 'modification', ')', ',', 'viewing', 'it', 'as', 'an', 'instance', 'of', 'minimum', 'Bayes', 'risk', 'inference', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'DT', 'JJ', 'NN', '(', 'IN', 'DT', 'JJ', 'NN', ')', ',', 'VBG', 'PRP', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNP', 'NN', 'NN', '.']",27
dependency_parsing,2,18,"We address this issue in 5 by distilling the ensemble into a single FOG parser with discriminative training by defining a new cost function , inspired by the notion of "" soft targets "" .","['We', 'address', 'this', 'issue', 'in', '5', 'by', 'distilling', 'the', 'ensemble', 'into', 'a', 'single', 'FOG', 'parser', 'with', 'discriminative', 'training', 'by', 'defining', 'a', 'new', 'cost', 'function', ',', 'inspired', 'by', 'the', 'notion', 'of', '""', 'soft', 'targets', '""', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'CD', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', ',', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NNP', 'JJ', 'NNS', 'VBP', '.']",35
dependency_parsing,2,19,"The essential idea is to derive the cost of each possible attachment from the ensemble 's division of votes , and use this cost in discriminative learning .","['The', 'essential', 'idea', 'is', 'to', 'derive', 'the', 'cost', 'of', 'each', 'possible', 'attachment', 'from', 'the', 'ensemble', ""'s"", 'division', 'of', 'votes', ',', 'and', 'use', 'this', 'cost', 'in', 'discriminative', 'learning', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'POS', 'NN', 'IN', 'NNS', ',', 'CC', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', '.']",28
dependency_parsing,2,22,"It represents a new state of the art for graphbased dependency parsing for English , Chinese , and German .","['It', 'represents', 'a', 'new', 'state', 'of', 'the', 'art', 'for', 'graphbased', 'dependency', 'parsing', 'for', 'English', ',', 'Chinese', ',', 'and', 'German', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'VBG', 'IN', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', '.']",20
dependency_parsing,2,176,"First , consider the neural FOG parser trained with Hamming cost ( C H in the second - to - last row ) .","['First', ',', 'consider', 'the', 'neural', 'FOG', 'parser', 'trained', 'with', 'Hamming', 'cost', '(', 'C', 'H', 'in', 'the', 'second', '-', 'to', '-', 'last', 'row', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VB', 'DT', 'JJ', 'NNP', 'NN', 'VBD', 'IN', 'NNP', 'NN', '(', 'NNP', 'NNP', 'IN', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', ')', '.']",24
dependency_parsing,2,177,"This is a very strong benchmark , outperforming many higherorder graph - based and neural network models on all three datasets .","['This', 'is', 'a', 'very', 'strong', 'benchmark', ',', 'outperforming', 'many', 'higherorder', 'graph', '-', 'based', 'and', 'neural', 'network', 'models', 'on', 'all', 'three', 'datasets', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'VBZ', 'DT', 'RB', 'JJ', 'NN', ',', 'VBG', 'JJ', 'NN', 'SYM', ':', 'VBN', 'CC', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'CD', 'NNS', '.']",22
dependency_parsing,2,178,"Nonetheless , training the same model with distillation cost gives consistent improvements for all languages .","['Nonetheless', ',', 'training', 'the', 'same', 'model', 'with', 'distillation', 'cost', 'gives', 'consistent', 'improvements', 'for', 'all', 'languages', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NN', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'NNS', '.']",16
dependency_parsing,2,179,"For English , we see that this model comes close to the slower ensemble it was trained to simulate .","['For', 'English', ',', 'we', 'see', 'that', 'this', 'model', 'comes', 'close', 'to', 'the', 'slower', 'ensemble', 'it', 'was', 'trained', 'to', 'simulate', '.']","['B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ',', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'TO', 'DT', 'JJR', 'JJ', 'PRP', 'VBD', 'VBN', 'TO', 'VB', '.']",20
dependency_parsing,2,180,"For Chinese , it achieves the best published scores , for German the best published UAS scores , and just after Bohnet and Nivre ( 2012 ) for LAS .","['For', 'Chinese', ',', 'it', 'achieves', 'the', 'best', 'published', 'scores', ',', 'for', 'German', 'the', 'best', 'published', 'UAS', 'scores', ',', 'and', 'just', 'after', 'Bohnet', 'and', 'Nivre', '(', '2012', ')', 'for', 'LAS', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ',', 'PRP', 'VBZ', 'DT', 'JJS', 'JJ', 'NNS', ',', 'IN', 'JJ', 'DT', 'JJS', 'VBN', 'NNP', 'NNS', ',', 'CC', 'RB', 'IN', 'NNP', 'CC', 'NNP', '(', 'CD', ')', 'IN', 'NNP', '.']",30
dependency_parsing,3,2,From POS tagging to dependency parsing for biomedical event extraction,"['From', 'POS', 'tagging', 'to', 'dependency', 'parsing', 'for', 'biomedical', 'event', 'extraction']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'NNP', 'VBG', 'TO', 'VB', 'VBG', 'IN', 'JJ', 'NN', 'NN']",10
dependency_parsing,3,12,We make the retrained models available at https://github.com/datquocnguyen/BioPosDep.,"['We', 'make', 'the', 'retrained', 'models', 'available', 'at', 'https://github.com/datquocnguyen/BioPosDep.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['PRP', 'VBP', 'DT', 'JJ', 'NNS', 'JJ', 'IN', 'NN']",8
dependency_parsing,3,31,"In this paper , we therefore investigate current stateof - the - art ( SOTA ) approaches to dependency parsing as applied to biomedical texts .","['In', 'this', 'paper', ',', 'we', 'therefore', 'investigate', 'current', 'stateof', '-', 'the', '-', 'art', '(', 'SOTA', ')', 'approaches', 'to', 'dependency', 'parsing', 'as', 'applied', 'to', 'biomedical', 'texts', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'JJ', 'NN', ':', 'DT', ':', 'NN', '(', 'NNP', ')', 'VBZ', 'TO', 'VB', 'VBG', 'IN', 'VBN', 'TO', 'JJ', 'NN', '.']",26
dependency_parsing,3,33,"Finally , we study the impact of parser choice on biomedical event extraction , following the structure of the extrinsic parser evaluation shared task ( EPE 2017 ) for biomedical event extraction .","['Finally', ',', 'we', 'study', 'the', 'impact', 'of', 'parser', 'choice', 'on', 'biomedical', 'event', 'extraction', ',', 'following', 'the', 'structure', 'of', 'the', 'extrinsic', 'parser', 'evaluation', 'shared', 'task', '(', 'EPE', '2017', ')', 'for', 'biomedical', 'event', 'extraction', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', ',', 'VBG', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'NN', '(', 'NNP', 'CD', ')', 'IN', 'JJ', 'NN', 'NN', '.']",33
dependency_parsing,3,97,"For the three BiLSTM - CRF - based models , Stanford - NNdep , jPTDP and Stanford - Biaffine which utilizes pre-trained word embeddings , we employ 200 dimensional pre-trained word vectors from .","['For', 'the', 'three', 'BiLSTM', '-', 'CRF', '-', 'based', 'models', ',', 'Stanford', '-', 'NNdep', ',', 'jPTDP', 'and', 'Stanford', '-', 'Biaffine', 'which', 'utilizes', 'pre-trained', 'word', 'embeddings', ',', 'we', 'employ', '200', 'dimensional', 'pre-trained', 'word', 'vectors', 'from', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'DT', 'CD', 'NNP', ':', 'NNP', ':', 'VBN', 'NNS', ',', 'NNP', ':', 'NN', ',', 'NN', 'CC', 'NNP', ':', 'NNP', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', ',', 'PRP', 'VBP', 'CD', 'JJ', 'JJ', 'NN', 'NNS', 'IN', '.']",34
dependency_parsing,3,99,"For the traditional feature - based models MarMoT , NLP4J - POS and NLP4J - dep , we use their original pure Java implementations with default hyperparameter settings .","['For', 'the', 'traditional', 'feature', '-', 'based', 'models', 'MarMoT', ',', 'NLP4J', '-', 'POS', 'and', 'NLP4J', '-', 'dep', ',', 'we', 'use', 'their', 'original', 'pure', 'Java', 'implementations', 'with', 'default', 'hyperparameter', 'settings', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ':', 'VBN', 'NNS', 'NNP', ',', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', 'PRP$', 'JJ', 'NN', 'NNP', 'NNS', 'IN', 'NN', 'NN', 'NNS', '.']",29
dependency_parsing,3,100,"For the BiLSTM - CRF - based models , we use default hyper - parameters provided in with the following exceptions : for training , we use Nadam and run for 50 epochs .","['For', 'the', 'BiLSTM', '-', 'CRF', '-', 'based', 'models', ',', 'we', 'use', 'default', 'hyper', '-', 'parameters', 'provided', 'in', 'with', 'the', 'following', 'exceptions', ':', 'for', 'training', ',', 'we', 'use', 'Nadam', 'and', 'run', 'for', '50', 'epochs', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ':', 'NNP', ':', 'VBN', 'NNS', ',', 'PRP', 'VBP', 'JJ', 'SYM', ':', 'NNS', 'VBD', 'IN', 'IN', 'DT', 'JJ', 'NNS', ':', 'IN', 'NN', ',', 'PRP', 'VBP', 'NNP', 'CC', 'VB', 'IN', 'CD', 'NNS', '.']",34
dependency_parsing,3,103,"For Stanford - NNdep , we select the word CutOff from { 1 , 2 } and the size of the hidden layer from { 100 , 150 , 200 , 250 , 300 , 350 , 400 } and fix other hyperparameters with their default values .","['For', 'Stanford', '-', 'NNdep', ',', 'we', 'select', 'the', 'word', 'CutOff', 'from', '{', '1', ',', '2', '}', 'and', 'the', 'size', 'of', 'the', 'hidden', 'layer', 'from', '{', '100', ',', '150', ',', '200', ',', '250', ',', '300', ',', '350', ',', '400', '}', 'and', 'fix', 'other', 'hyperparameters', 'with', 'their', 'default', 'values', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NNP', 'IN', '(', 'CD', ',', 'CD', ')', 'CC', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', '(', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ')', 'CC', 'VB', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'NNS', '.']",48
dependency_parsing,3,104,"For jPTDP , we use 50 - dimensional character embeddings and fix the initial learning rate at 0.0005 .","['For', 'jPTDP', ',', 'we', 'use', '50', '-', 'dimensional', 'character', 'embeddings', 'and', 'fix', 'the', 'initial', 'learning', 'rate', 'at', '0.0005', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'CD', ':', 'JJ', 'NN', 'NNS', 'CC', 'VB', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.']",19
dependency_parsing,3,105,"We also fix the number of BiLSTM layers at 2 and select the number of LSTM units in each layer from { 100 , 150 , 200 , 250 , 300 } .","['We', 'also', 'fix', 'the', 'number', 'of', 'BiLSTM', 'layers', 'at', '2', 'and', 'select', 'the', 'number', 'of', 'LSTM', 'units', 'in', 'each', 'layer', 'from', '{', '100', ',', '150', ',', '200', ',', '250', ',', '300', '}', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'NNP', 'NNS', 'IN', 'CD', 'CC', 'VB', 'DT', 'NN', 'IN', 'NNP', 'NNS', 'IN', 'DT', 'NN', 'IN', '(', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ')', '.']",33
dependency_parsing,3,118,POS tagging results,"['POS', 'tagging', 'results']","['B-n', 'I-n', 'I-n']","['NNP', 'VBG', 'NNS']",3
dependency_parsing,3,120,"BiLSTM - CRF and Mar - MoT obtain the lowest scores on GENIA and CRAFT , respectively .","['BiLSTM', '-', 'CRF', 'and', 'Mar', '-', 'MoT', 'obtain', 'the', 'lowest', 'scores', 'on', 'GENIA', 'and', 'CRAFT', ',', 'respectively', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'O', 'O']","['NNP', ':', 'NN', 'CC', 'NNP', ':', 'NNP', 'VB', 'DT', 'JJS', 'NNS', 'IN', 'NNP', 'CC', 'NNP', ',', 'RB', '.']",18
dependency_parsing,3,121,jPTDP obtains a similar score to Mar - MoT on GENIA and similar score to BiLSTM - CRF on CRAFT .,"['jPTDP', 'obtains', 'a', 'similar', 'score', 'to', 'Mar', '-', 'MoT', 'on', 'GENIA', 'and', 'similar', 'score', 'to', 'BiLSTM', '-', 'CRF', 'on', 'CRAFT', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['NN', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'NNP', ':', 'NN', 'IN', 'NNP', 'CC', 'JJ', 'NN', 'TO', 'NNP', ':', 'NN', 'IN', 'NNP', '.']",21
dependency_parsing,3,122,"In particular , MarMoT obtains accuracy results at 98.61 % and 97.07 % on GENIA and CRAFT , which are about 0.2 % and 0.4 % absolute lower than NLP4J - POS , respectively .","['In', 'particular', ',', 'MarMoT', 'obtains', 'accuracy', 'results', 'at', '98.61', '%', 'and', '97.07', '%', 'on', 'GENIA', 'and', 'CRAFT', ',', 'which', 'are', 'about', '0.2', '%', 'and', '0.4', '%', 'absolute', 'lower', 'than', 'NLP4J', '-', 'POS', ',', 'respectively', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'NNP', 'VBZ', 'JJ', 'NNS', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', 'IN', 'NNP', 'CC', 'NNP', ',', 'WDT', 'VBP', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', 'NN', 'JJR', 'IN', 'NNP', ':', 'NN', ',', 'RB', '.']",35
dependency_parsing,3,124,BiLSTM - CRF obtains accuracies of 98.44 % on GE - NIA and 97.25 % on CRAFT .,"['BiLSTM', '-', 'CRF', 'obtains', 'accuracies', 'of', '98.44', '%', 'on', 'GE', '-', 'NIA', 'and', '97.25', '%', 'on', 'CRAFT', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['NNP', ':', 'NN', 'VBZ', 'NNS', 'IN', 'CD', 'NN', 'IN', 'NNP', ':', 'NNP', 'CC', 'CD', 'NN', 'IN', 'NNP', '.']",18
dependency_parsing,3,130,"Note that for PTB , CNN - based character - level word embeddings only provided a 0.1 % improvement to BiLSTM - CRF .","['Note', 'that', 'for', 'PTB', ',', 'CNN', '-', 'based', 'character', '-', 'level', 'word', 'embeddings', 'only', 'provided', 'a', '0.1', '%', 'improvement', 'to', 'BiLSTM', '-', 'CRF', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'IN', 'NNP', ',', 'NNP', ':', 'VBN', 'NN', ':', 'NN', 'NN', 'VBZ', 'RB', 'VBD', 'DT', 'CD', 'NN', 'NN', 'TO', 'NNP', ':', 'NN', '.']",24
dependency_parsing,3,135,"On both GENIA and CRAFT , BiLSTM - CRF with character - level word embeddings obtains the highest accuracy scores .","['On', 'both', 'GENIA', 'and', 'CRAFT', ',', 'BiLSTM', '-', 'CRF', 'with', 'character', '-', 'level', 'word', 'embeddings', 'obtains', 'the', 'highest', 'accuracy', 'scores', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'CC', 'NNP', ',', 'NNP', ':', 'NN', 'IN', 'NN', ':', 'NN', 'NN', 'VBZ', 'VBZ', 'DT', 'JJS', 'NN', 'NNS', '.']",21
dependency_parsing,3,140,Overall dependency parsing results,"['Overall', 'dependency', 'parsing', 'results']","['B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NN', 'NN', 'NNS']",4
dependency_parsing,3,148,"On GENIA , among pre-trained models , BLLIP obtains highest results .","['On', 'GENIA', ',', 'among', 'pre-trained', 'models', ',', 'BLLIP', 'obtains', 'highest', 'results', '.']","['B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NNP', ',', 'IN', 'JJ', 'NNS', ',', 'NNP', 'VBZ', 'JJS', 'NNS', '.']",12
dependency_parsing,3,150,The pre-trained Stanford - Biaffine ( v1 ) model produces lower scores than the pre-trained Stanford - NNdep model on GENIA .,"['The', 'pre-trained', 'Stanford', '-', 'Biaffine', '(', 'v1', ')', 'model', 'produces', 'lower', 'scores', 'than', 'the', 'pre-trained', 'Stanford', '-', 'NNdep', 'model', 'on', 'GENIA', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NNP', ':', 'NNP', '(', 'NN', ')', 'NN', 'VBZ', 'JJR', 'NNS', 'IN', 'DT', 'JJ', 'NNP', ':', 'NNP', 'NN', 'IN', 'NNP', '.']",22
dependency_parsing,3,152,Note that the pre-trained NNdep and Biaffine models result in no significant performance differences irrespective of the source of POS tags ( i.e. the pre-trained Stanford tagger at 98.37 % vs. the retrained NLP4J - POS model at 98.80 % ) .,"['Note', 'that', 'the', 'pre-trained', 'NNdep', 'and', 'Biaffine', 'models', 'result', 'in', 'no', 'significant', 'performance', 'differences', 'irrespective', 'of', 'the', 'source', 'of', 'POS', 'tags', '(', 'i.e.', 'the', 'pre-trained', 'Stanford', 'tagger', 'at', '98.37', '%', 'vs.', 'the', 'retrained', 'NLP4J', '-', 'POS', 'model', 'at', '98.80', '%', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O']","['NN', 'IN', 'DT', 'JJ', 'NNP', 'CC', 'NNP', 'NNS', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NNS', '(', 'VB', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NNP', ':', 'NNP', 'NN', 'IN', 'CD', 'NN', ')', '.']",42
dependency_parsing,0,2,An improved neural network model for joint POS tagging and dependency parsing,"['An', 'improved', 'neural', 'network', 'model', 'for', 'joint', 'POS', 'tagging', 'and', 'dependency', 'parsing']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NNP', 'NN', 'CC', 'NN', 'NN']",12
dependency_parsing,0,4,We propose a novel neural network model for joint part - of - speech ( POS ) tagging and dependency parsing .,"['We', 'propose', 'a', 'novel', 'neural', 'network', 'model', 'for', 'joint', 'part', '-', 'of', '-', 'speech', '(', 'POS', ')', 'tagging', 'and', 'dependency', 'parsing', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', ':', 'IN', ':', 'NN', '(', 'NNP', ')', 'NN', 'CC', 'NN', 'NN', '.']",22
dependency_parsing,0,9,Our code is available together with all pretrained models at : https://github.com/datquocnguyen/jPTDP .,"['Our', 'code', 'is', 'available', 'together', 'with', 'all', 'pretrained', 'models', 'at', ':', 'https://github.com/datquocnguyen/jPTDP', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['PRP$', 'NN', 'VBZ', 'JJ', 'RB', 'IN', 'DT', 'VBN', 'NNS', 'IN', ':', 'NN', '.']",13
dependency_parsing,0,11,"Dependency parsing - a key research topic in natural language processing ( NLP ) in the last decade ) - has also been demonstrated to be extremely useful in many applications such as relation extraction , semantic parsing and machine translation ) .","['Dependency', 'parsing', '-', 'a', 'key', 'research', 'topic', 'in', 'natural', 'language', 'processing', '(', 'NLP', ')', 'in', 'the', 'last', 'decade', ')', '-', 'has', 'also', 'been', 'demonstrated', 'to', 'be', 'extremely', 'useful', 'in', 'many', 'applications', 'such', 'as', 'relation', 'extraction', ',', 'semantic', 'parsing', 'and', 'machine', 'translation', ')', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', ':', 'DT', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'JJ', 'NN', ')', ':', 'VBZ', 'RB', 'VBN', 'VBN', 'TO', 'VB', 'RB', 'JJ', 'IN', 'JJ', 'NNS', 'JJ', 'IN', 'NN', 'NN', ',', 'JJ', 'NN', 'CC', 'NN', 'NN', ')', '.']",43
dependency_parsing,0,18,"In this paper , we present a novel neural network - based model for jointly learning POS tagging and dependency paring .","['In', 'this', 'paper', ',', 'we', 'present', 'a', 'novel', 'neural', 'network', '-', 'based', 'model', 'for', 'jointly', 'learning', 'POS', 'tagging', 'and', 'dependency', 'paring', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', ':', 'VBN', 'NN', 'IN', 'RB', 'VBG', 'NNP', 'NN', 'CC', 'NN', 'NN', '.']",22
dependency_parsing,0,19,Our joint model extends the well - known BIST graph - based dependency parser with an additional lower - level BiLSTM - based tagging component .,"['Our', 'joint', 'model', 'extends', 'the', 'well', '-', 'known', 'BIST', 'graph', '-', 'based', 'dependency', 'parser', 'with', 'an', 'additional', 'lower', '-', 'level', 'BiLSTM', '-', 'based', 'tagging', 'component', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NNP', 'SYM', ':', 'VBN', 'NN', 'NN', 'IN', 'DT', 'JJ', 'JJR', ':', 'NN', 'NNP', ':', 'VBN', 'JJ', 'NN', '.']",26
dependency_parsing,0,75,Our jPTDP v 2.0 is implemented using DYNET v2.0 with a fixed random seed .,"['Our', 'jPTDP', 'v', '2.0', 'is', 'implemented', 'using', 'DYNET', 'v2.0', 'with', 'a', 'fixed', 'random', 'seed', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NN', 'CD', 'VBZ', 'VBN', 'VBG', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",15
dependency_parsing,0,77,"Word embeddings are initialized either randomly or by pre-trained word vectors , while character and POS tag embeddings are randomly initialized .","['Word', 'embeddings', 'are', 'initialized', 'either', 'randomly', 'or', 'by', 'pre-trained', 'word', 'vectors', ',', 'while', 'character', 'and', 'POS', 'tag', 'embeddings', 'are', 'randomly', 'initialized', '.']","['B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['NNP', 'NNS', 'VBP', 'VBN', 'RB', 'RB', 'CC', 'IN', 'JJ', 'NN', 'NNS', ',', 'IN', 'NN', 'CC', 'NNP', 'NN', 'NNS', 'VBP', 'RB', 'VBN', '.']",22
dependency_parsing,0,79,We apply dropout with a 67 % keep probability to the inputs of BiLSTMs and MLPs .,"['We', 'apply', 'dropout', 'with', 'a', '67', '%', 'keep', 'probability', 'to', 'the', 'inputs', 'of', 'BiLSTMs', 'and', 'MLPs', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'O']","['PRP', 'VBP', 'RB', 'IN', 'DT', 'CD', 'NN', 'JJ', 'NN', 'TO', 'DT', 'NNS', 'IN', 'NNP', 'CC', 'NNP', '.']",17
dependency_parsing,0,80,"Following and , we also apply word dropout to learn an embedding for unknown words : we replace each word token w appearing # ( w ) times in the training set with a special "" unk "" symbol with probability punk ( w ) = 0.25 0.25 + # ( w ) .","['Following', 'and', ',', 'we', 'also', 'apply', 'word', 'dropout', 'to', 'learn', 'an', 'embedding', 'for', 'unknown', 'words', ':', 'we', 'replace', 'each', 'word', 'token', 'w', 'appearing', '#', '(', 'w', ')', 'times', 'in', 'the', 'training', 'set', 'with', 'a', 'special', '""', 'unk', '""', 'symbol', 'with', 'probability', 'punk', '(', 'w', ')', '=', '0.25', '0.25', '+', '#', '(', 'w', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'CC', ',', 'PRP', 'RB', 'VBP', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', ':', 'PRP', 'VB', 'DT', 'NN', 'VBN', 'JJ', 'VBG', '#', '(', 'NN', ')', 'NNS', 'IN', 'DT', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'NNP', 'NN', 'IN', 'NN', 'NN', '(', 'NN', ')', 'VBZ', 'CD', 'CD', 'JJ', '#', '(', 'NN', ')', '.']",54
dependency_parsing,0,82,"We optimize the objective loss using Adam ( Kingma and Ba , 2014 ) with an initial learning rate at 0.001 and no mini-batches .","['We', 'optimize', 'the', 'objective', 'loss', 'using', 'Adam', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', 'with', 'an', 'initial', 'learning', 'rate', 'at', '0.001', 'and', 'no', 'mini-batches', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'VBG', 'NNP', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CC', 'DT', 'NNS', '.']",25
dependency_parsing,0,86,"For all experiments presented in this paper , we use 100 - dimensional word embeddings , 50 - dimensional character embeddings and 100 dimensional POS tag embeddings .","['For', 'all', 'experiments', 'presented', 'in', 'this', 'paper', ',', 'we', 'use', '100', '-', 'dimensional', 'word', 'embeddings', ',', '50', '-', 'dimensional', 'character', 'embeddings', 'and', '100', 'dimensional', 'POS', 'tag', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNS', 'VBN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'CD', ':', 'JJ', 'NN', 'NNS', ',', 'CD', ':', 'JJ', 'NN', 'NNS', 'CC', 'CD', 'JJ', 'NNP', 'NN', 'NNS', '.']",28
dependency_parsing,0,87,We also fix the number of hidden nodes in MLPs at 100 .,"['We', 'also', 'fix', 'the', 'number', 'of', 'hidden', 'nodes', 'in', 'MLPs', 'at', '100', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NNP', 'IN', 'CD', '.']",13
dependency_parsing,0,99,"Clearly , our model produces very competitive parsing results .","['Clearly', ',', 'our', 'model', 'produces', 'very', 'competitive', 'parsing', 'results', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'NN', 'VBZ', 'RB', 'JJ', 'NN', 'NNS', '.']",10
dependency_parsing,0,100,"In particular , our model obtains a UAS score at 94.51 % and a LAS score at 92.87 % which are about 1.4 % and 1.9 % absolute higher than UAS and LAS scores of the BIST graph - based model , respectively .","['In', 'particular', ',', 'our', 'model', 'obtains', 'a', 'UAS', 'score', 'at', '94.51', '%', 'and', 'a', 'LAS', 'score', 'at', '92.87', '%', 'which', 'are', 'about', '1.4', '%', 'and', '1.9', '%', 'absolute', 'higher', 'than', 'UAS', 'and', 'LAS', 'scores', 'of', 'the', 'BIST', 'graph', '-', 'based', 'model', ',', 'respectively', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'NNP', 'NN', 'IN', 'CD', 'NN', 'CC', 'DT', 'NNP', 'NN', 'IN', 'CD', 'NN', 'WDT', 'VBP', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', 'NN', 'JJR', 'IN', 'NNP', 'CC', 'NNP', 'NNS', 'IN', 'DT', 'NNP', 'NN', ':', 'VBN', 'NN', ',', 'RB', '.']",44
dependency_parsing,0,102,We achieve 0.9 % lower parsing scores than the state - of - the - art dependency parser of .,"['We', 'achieve', '0.9', '%', 'lower', 'parsing', 'scores', 'than', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'dependency', 'parser', 'of', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'CD', 'NN', 'JJR', 'NN', 'NNS', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'NN', 'IN', '.']",20
dependency_parsing,0,106,"We also obtain a state - of - the - art POS tagging accuracy at 97.97 % on the test Section 23 , which is about 0.4 + % higher than those by , and .","['We', 'also', 'obtain', 'a', 'state', '-', 'of', '-', 'the', '-', 'art', 'POS', 'tagging', 'accuracy', 'at', '97.97', '%', 'on', 'the', 'test', 'Section', '23', ',', 'which', 'is', 'about', '0.4', '+', '%', 'higher', 'than', 'those', 'by', ',', 'and', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VB', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'NN', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'NN', 'NN', 'CD', ',', 'WDT', 'VBZ', 'IN', 'CD', 'CD', 'NN', 'JJR', 'IN', 'DT', 'IN', ',', 'CC', '.']",36
face_alignment,16,2,Deep Multi- Center Learning for Face Alignment,"['Deep', 'Multi-', 'Center', 'Learning', 'for', 'Face', 'Alignment']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",7
face_alignment,16,11,The code for our method is available at https://github.com/ZhiwenShao/MCNet-Extension .,"['The', 'code', 'for', 'our', 'method', 'is', 'available', 'at', 'https://github.com/ZhiwenShao/MCNet-Extension', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', 'IN', 'NN', '.']",10
face_alignment,16,35,"In this work 1 , we propose a novel deep learning framework named Multi - Center Learning ( MCL ) to exploit the strong correlations among landmarks .","['In', 'this', 'work', '1', ',', 'we', 'propose', 'a', 'novel', 'deep', 'learning', 'framework', 'named', 'Multi', '-', 'Center', 'Learning', '(', 'MCL', ')', 'to', 'exploit', 'the', 'strong', 'correlations', 'among', 'landmarks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NN', 'CD', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'VBN', 'NNP', ':', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NNS', '.']",28
face_alignment,16,36,"In particular , our network uses multiple shape prediction layers to predict the locations of landmarks , and each shape prediction layer emphasizes on the detection of a certain cluster of landmarks respectively .","['In', 'particular', ',', 'our', 'network', 'uses', 'multiple', 'shape', 'prediction', 'layers', 'to', 'predict', 'the', 'locations', 'of', 'landmarks', ',', 'and', 'each', 'shape', 'prediction', 'layer', 'emphasizes', 'on', 'the', 'detection', 'of', 'a', 'certain', 'cluster', 'of', 'landmarks', 'respectively', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O']","['IN', 'JJ', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'NN', 'NN', 'NNS', 'TO', 'VB', 'DT', 'NNS', 'IN', 'NNS', ',', 'CC', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'RB', '.']",34
face_alignment,16,37,"By weighting the loss of each landmark , challenging landmarks are focused firstly , and each cluster of landmarks is further optimized respectively .","['By', 'weighting', 'the', 'loss', 'of', 'each', 'landmark', ',', 'challenging', 'landmarks', 'are', 'focused', 'firstly', ',', 'and', 'each', 'cluster', 'of', 'landmarks', 'is', 'further', 'optimized', 'respectively', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O']","['IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'VBG', 'NNS', 'VBP', 'VBN', 'RB', ',', 'CC', 'DT', 'NN', 'IN', 'NNS', 'VBZ', 'JJ', 'VBN', 'RB', '.']",24
face_alignment,16,38,"Moreover , to decrease the model complexity , we propose a model assembling method to integrate multiple shape prediction layers into one shape prediction layer .","['Moreover', ',', 'to', 'decrease', 'the', 'model', 'complexity', ',', 'we', 'propose', 'a', 'model', 'assembling', 'method', 'to', 'integrate', 'multiple', 'shape', 'prediction', 'layers', 'into', 'one', 'shape', 'prediction', 'layer', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'TO', 'VB', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBG', 'NN', 'TO', 'VB', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'CD', 'NN', 'NN', 'NN', '.']",26
face_alignment,16,39,The entire framework reinforces the learning process of each landmark with a low model complexity .,"['The', 'entire', 'framework', 'reinforces', 'the', 'learning', 'process', 'of', 'each', 'landmark', 'with', 'a', 'low', 'model', 'complexity', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",16
face_alignment,16,210,"Uniform scaling and translation with different extents on face bounding boxes are further conducted , in which each newly generated face bounding box is used to crop the face .","['Uniform', 'scaling', 'and', 'translation', 'with', 'different', 'extents', 'on', 'face', 'bounding', 'boxes', 'are', 'further', 'conducted', ',', 'in', 'which', 'each', 'newly', 'generated', 'face', 'bounding', 'box', 'is', 'used', 'to', 'crop', 'the', 'face', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'CC', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'NNS', 'VBP', 'RB', 'VBN', ',', 'IN', 'WDT', 'DT', 'RB', 'VBN', 'NN', 'VBG', 'NN', 'VBZ', 'VBN', 'TO', 'NN', 'DT', 'NN', '.']",30
face_alignment,16,211,Finally training samples are augmented through horizontal flip and JPEG compression .,"['Finally', 'training', 'samples', 'are', 'augmented', 'through', 'horizontal', 'flip', 'and', 'JPEG', 'compression', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['RB', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'NN', 'CC', 'NNP', 'NN', '.']",12
face_alignment,16,213,We train our MCL using an open source deep learning framework Caffe .,"['We', 'train', 'our', 'MCL', 'using', 'an', 'open', 'source', 'deep', 'learning', 'framework', 'Caffe', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NNP', 'VBG', 'DT', 'JJ', 'NN', 'JJ', 'NN', 'NN', 'NNP', '.']",13
face_alignment,16,214,"The input face patch is a 50 50 grayscale image , and each pixel value is normalized to [ ?1 , 1 ) by subtracting 128 and multiplying 0.0078125 .","['The', 'input', 'face', 'patch', 'is', 'a', '50', '50', 'grayscale', 'image', ',', 'and', 'each', 'pixel', 'value', 'is', 'normalized', 'to', '[', '?1', ',', '1', ')', 'by', 'subtracting', '128', 'and', 'multiplying', '0.0078125', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'NN', 'VBZ', 'DT', 'CD', 'CD', 'JJ', 'NN', ',', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'NNP', ',', 'CD', ')', 'IN', 'VBG', 'CD', 'CC', 'VBG', 'CD', '.']",30
face_alignment,16,215,"A more complex model is needed for a labeling pattern with more facial landmarks , so Dis set to be 512/512/1 , 024 for 5/29/68 facial landmarks .","['A', 'more', 'complex', 'model', 'is', 'needed', 'for', 'a', 'labeling', 'pattern', 'with', 'more', 'facial', 'landmarks', ',', 'so', 'Dis', 'set', 'to', 'be', '512/512/1', ',', '024', 'for', '5/29/68', 'facial', 'landmarks', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'RBR', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'RBR', 'JJ', 'NNS', ',', 'RB', 'NNP', 'NN', 'TO', 'VB', 'CD', ',', 'CD', 'IN', 'CD', 'JJ', 'NNS', '.']",28
face_alignment,16,216,"The type of solver is SGD with a mini-batch size of 64 , a momentum of 0.9 , and a weight decay of 0.0005 .","['The', 'type', 'of', 'solver', 'is', 'SGD', 'with', 'a', 'mini-batch', 'size', 'of', '64', ',', 'a', 'momentum', 'of', '0.9', ',', 'and', 'a', 'weight', 'decay', 'of', '0.0005', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'NN', 'VBZ', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', ',', 'DT', 'NN', 'IN', 'CD', ',', 'CC', 'DT', 'JJ', 'NN', 'IN', 'CD', '.']",25
face_alignment,16,217,"The maximum learning iterations of pre-training and each finetuning step are 1810 4 and 610 4 respectively , and the initial learning rates of pre-training and each fine - tuning step are 0.02 and 0.001 respectively .","['The', 'maximum', 'learning', 'iterations', 'of', 'pre-training', 'and', 'each', 'finetuning', 'step', 'are', '1810', '4', 'and', '610', '4', 'respectively', ',', 'and', 'the', 'initial', 'learning', 'rates', 'of', 'pre-training', 'and', 'each', 'fine', '-', 'tuning', 'step', 'are', '0.02', 'and', '0.001', 'respectively', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'JJ', 'JJ', 'NNS', 'IN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'VBP', 'CD', 'CD', 'CC', 'CD', 'CD', 'RB', ',', 'CC', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'JJ', 'CC', 'DT', 'JJ', ':', 'JJ', 'NN', 'VBP', 'CD', 'CC', 'CD', 'RB', '.']",37
face_alignment,16,219,"The learning rate is multiplied by a factor of 0.3 at every 3 10 4 iterations , and the remaining parameter ?","['The', 'learning', 'rate', 'is', 'multiplied', 'by', 'a', 'factor', 'of', '0.3', 'at', 'every', '3', '10', '4', 'iterations', ',', 'and', 'the', 'remaining', 'parameter', '?']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'CD', 'IN', 'DT', 'CD', 'CD', 'CD', 'NNS', ',', 'CC', 'DT', 'VBG', 'NN', '.']",22
face_alignment,16,230,"We compare our work MCL against state - of - the - art methods including ESR , SDM , Cascaded CNN , RCPR , CFAN , LBF , c GPRT , CFSS , TCDCN , , ALR , CFT , RFLD , RecNet , RAR , and FLD + PDE .","['We', 'compare', 'our', 'work', 'MCL', 'against', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'including', 'ESR', ',', 'SDM', ',', 'Cascaded', 'CNN', ',', 'RCPR', ',', 'CFAN', ',', 'LBF', ',', 'c', 'GPRT', ',', 'CFSS', ',', 'TCDCN', ',', ',', 'ALR', ',', 'CFT', ',', 'RFLD', ',', 'RecNet', ',', 'RAR', ',', 'and', 'FLD', '+', 'PDE', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'NNP', 'IN', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'VBG', 'NNP', ',', 'NNP', ',', 'NNP', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NN', 'NNP', ',', 'NNP', ',', 'NNP', ',', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', 'NNP', 'NNP', '.']",51
face_alignment,16,237,"Our method MCL outperforms most of the state - of - the - art methods , especially on AFLW dataset where a relative error reduction of 3.93 % is achieved compared to RecNet .","['Our', 'method', 'MCL', 'outperforms', 'most', 'of', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', ',', 'especially', 'on', 'AFLW', 'dataset', 'where', 'a', 'relative', 'error', 'reduction', 'of', '3.93', '%', 'is', 'achieved', 'compared', 'to', 'RecNet', '.']","['B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-p', 'I-p', 'B-n', 'O']","['PRP$', 'NN', 'NNP', 'VBZ', 'JJS', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', ',', 'RB', 'IN', 'NNP', 'NN', 'WRB', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'NN', 'VBZ', 'VBN', 'VBN', 'TO', 'NNP', '.']",34
face_alignment,16,239,We compare with other methods on several challenging images from AFLW and COFW respectively in .,"['We', 'compare', 'with', 'other', 'methods', 'on', 'several', 'challenging', 'images', 'from', 'AFLW', 'and', 'COFW', 'respectively', 'in', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'VBG', 'NNS', 'IN', 'NNP', 'CC', 'NNP', 'RB', 'IN', '.']",16
face_alignment,16,242,"MCL demonstrates a superior capability of handling severe occlusions and complex variations of pose , expression , illumination .","['MCL', 'demonstrates', 'a', 'superior', 'capability', 'of', 'handling', 'severe', 'occlusions', 'and', 'complex', 'variations', 'of', 'pose', ',', 'expression', ',', 'illumination', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'NN', ',', 'NN', ',', 'NN', '.']",19
face_alignment,16,244,It is observed that MCL achieves competitive performance on all three benchmarks .,"['It', 'is', 'observed', 'that', 'MCL', 'achieves', 'competitive', 'performance', 'on', 'all', 'three', 'benchmarks', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'VBN', 'IN', 'NNP', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'CD', 'NNS', '.']",13
face_alignment,16,245,The average running speed of deep learning methods for detecting 68 facial landmarks are presented in .,"['The', 'average', 'running', 'speed', 'of', 'deep', 'learning', 'methods', 'for', 'detecting', '68', 'facial', 'landmarks', 'are', 'presented', 'in', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'VBG', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'VBG', 'CD', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', '.']",17
face_alignment,16,256,1 ) Global Average Pooling vs. Full Connection :,"['1', ')', 'Global', 'Average', 'Pooling', 'vs.', 'Full', 'Connection', ':']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', ')', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NN', ':']",9
face_alignment,16,259,It can be seen that BM performs better on IBUG and COFW but worse on AFLW than pre-BM .,"['It', 'can', 'be', 'seen', 'that', 'BM', 'performs', 'better', 'on', 'IBUG', 'and', 'COFW', 'but', 'worse', 'on', 'AFLW', 'than', 'pre-BM', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'IN', 'NNP', 'NNS', 'RBR', 'IN', 'NNP', 'CC', 'NNP', 'CC', 'JJR', 'IN', 'NNP', 'IN', 'NN', '.']",19
face_alignment,16,260,It demonstrates that Global Average Pooling is more advantageous for more complex problems with more facial landmarks .,"['It', 'demonstrates', 'that', 'Global', 'Average', 'Pooling', 'is', 'more', 'advantageous', 'for', 'more', 'complex', 'problems', 'with', 'more', 'facial', 'landmarks', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'IN', 'NNP', 'NNP', 'NNP', 'VBZ', 'RBR', 'JJ', 'IN', 'RBR', 'JJ', 'NNS', 'IN', 'RBR', 'JJ', 'NN', '.']",18
face_alignment,16,266,2 ) Robustness of Weighting :,"['2', ')', 'Robustness', 'of', 'Weighting', ':']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['CD', ')', 'NN', 'IN', 'NN', ':']",6
face_alignment,16,273,"When ? is 0.4 , WM can still achieves good performance .","['When', '?', 'is', '0.4', ',', 'WM', 'can', 'still', 'achieves', 'good', 'performance', '.']","['O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['WRB', '.', 'VBZ', 'CD', ',', 'NNP', 'MD', 'RB', 'VB', 'JJ', 'NN', '.']",12
face_alignment,16,276,3 ) Analysis of Shape Prediction Layers :,"['3', ')', 'Analysis', 'of', 'Shape', 'Prediction', 'Layers', ':']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['LS', ')', 'NN', 'IN', 'NNP', 'NNP', 'NNS', ':']",8
face_alignment,16,279,"Compared to WM , the left eye model and the right eye model both reduce the alignment errors of their corresponding clusters .","['Compared', 'to', 'WM', ',', 'the', 'left', 'eye', 'model', 'and', 'the', 'right', 'eye', 'model', 'both', 'reduce', 'the', 'alignment', 'errors', 'of', 'their', 'corresponding', 'clusters', '.']","['B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBN', 'TO', 'NNP', ',', 'DT', 'NN', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'DT', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'JJ', 'NNS', '.']",23
face_alignment,16,280,"As a result , the assembled AM can improve the detection accuracy of landmarks of the left eye and the right eye on the basis of WM .","['As', 'a', 'result', ',', 'the', 'assembled', 'AM', 'can', 'improve', 'the', 'detection', 'accuracy', 'of', 'landmarks', 'of', 'the', 'left', 'eye', 'and', 'the', 'right', 'eye', 'on', 'the', 'basis', 'of', 'WM', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'JJ', 'NNP', 'MD', 'VB', 'DT', 'NN', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNP', '.']",28
face_alignment,16,281,Note that the two models also improve the localization precision of other clusters .,"['Note', 'that', 'the', 'two', 'models', 'also', 'improve', 'the', 'localization', 'precision', 'of', 'other', 'clusters', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', 'IN', 'DT', 'CD', 'NNS', 'RB', 'VBP', 'DT', 'NN', 'NN', 'IN', 'JJ', 'NNS', '.']",14
face_alignment,16,285,4 ) Integration of Weighting Fine - Tuning and Multi - Center Fine - Tuning :,"['4', ')', 'Integration', 'of', 'Weighting', 'Fine', '-', 'Tuning', 'and', 'Multi', '-', 'Center', 'Fine', '-', 'Tuning', ':']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', ')', 'NN', 'IN', 'NNP', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NNP', 'NNP', ':', 'NN', ':']",16
face_alignment,16,288,"The accuracy of AM is superior to that of Simplified AM especially on challenging IBUG , which is attributed to the integration of two stages .","['The', 'accuracy', 'of', 'AM', 'is', 'superior', 'to', 'that', 'of', 'Simplified', 'AM', 'especially', 'on', 'challenging', 'IBUG', ',', 'which', 'is', 'attributed', 'to', 'the', 'integration', 'of', 'two', 'stages', '.']","['O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'NNP', 'VBZ', 'JJ', 'TO', 'DT', 'IN', 'NNP', 'NNP', 'RB', 'IN', 'VBG', 'NNP', ',', 'WDT', 'VBZ', 'VBN', 'TO', 'DT', 'NN', 'IN', 'CD', 'NNS', '.']",26
face_alignment,16,290,It can be seen that Weighting Simplified AM improves slightly on COFW but fails to search a better solution on IBUG .,"['It', 'can', 'be', 'seen', 'that', 'Weighting', 'Simplified', 'AM', 'improves', 'slightly', 'on', 'COFW', 'but', 'fails', 'to', 'search', 'a', 'better', 'solution', 'on', 'IBUG', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'NNP', 'NNP', 'VBZ', 'RB', 'IN', 'NNP', 'CC', 'VBZ', 'TO', 'VB', 'DT', 'JJR', 'NN', 'IN', 'NNP', '.']",22
face_alignment,16,293,It can be observed that AM has higher accuracy and stronger robustness than BM and WM .,"['It', 'can', 'be', 'observed', 'that', 'AM', 'has', 'higher', 'accuracy', 'and', 'stronger', 'robustness', 'than', 'BM', 'and', 'WM', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'DT', 'NNP', 'VBZ', 'JJR', 'NN', 'CC', 'JJR', 'NN', 'IN', 'NNP', 'CC', 'NNP', '.']",17
face_alignment,16,295,The localization accuracy of facial landmarks from each cluster is improved in the details .,"['The', 'localization', 'accuracy', 'of', 'facial', 'landmarks', 'from', 'each', 'cluster', 'is', 'improved', 'in', 'the', 'details', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNS', '.']",15
face_alignment,16,297,D. MCL for Partially Occluded Faces,"['D.', 'MCL', 'for', 'Partially', 'Occluded', 'Faces']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNS']",6
face_alignment,16,298,The correlations among different facial parts are very useful for face alignment especially for partially occluded faces .,"['The', 'correlations', 'among', 'different', 'facial', 'parts', 'are', 'very', 'useful', 'for', 'face', 'alignment', 'especially', 'for', 'partially', 'occluded', 'faces', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'JJ', 'JJ', 'NNS', 'VBP', 'RB', 'JJ', 'IN', 'NN', 'NN', 'RB', 'IN', 'RB', 'JJ', 'VBZ', '.']",18
face_alignment,16,303,"After processing testing faces with occlusions , the mean error results of both WM and AM increase .","['After', 'processing', 'testing', 'faces', 'with', 'occlusions', ',', 'the', 'mean', 'error', 'results', 'of', 'both', 'WM', 'and', 'AM', 'increase', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O']","['IN', 'VBG', 'VBG', 'VBZ', 'IN', 'NNS', ',', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NN', '.']",18
face_alignment,16,304,"Besides the results of landmarks from the left eye cluster , the results of remaining landmarks from other clusters become worse slightly .","['Besides', 'the', 'results', 'of', 'landmarks', 'from', 'the', 'left', 'eye', 'cluster', ',', 'the', 'results', 'of', 'remaining', 'landmarks', 'from', 'other', 'clusters', 'become', 'worse', 'slightly', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', ',', 'DT', 'NNS', 'IN', 'VBG', 'NNS', 'IN', 'JJ', 'NNS', 'VBP', 'JJR', 'RB', '.']",23
face_alignment,16,306,"Note that WM and AM still perform well on occluded left eyes with the mean error of 6.60 and 6.50 respectively , due to the following reasons .","['Note', 'that', 'WM', 'and', 'AM', 'still', 'perform', 'well', 'on', 'occluded', 'left', 'eyes', 'with', 'the', 'mean', 'error', 'of', '6.60', 'and', '6.50', 'respectively', ',', 'due', 'to', 'the', 'following', 'reasons', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', 'NNP', 'CC', 'NNP', 'RB', 'VBP', 'RB', 'IN', 'VBN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'CC', 'CD', 'RB', ',', 'JJ', 'TO', 'DT', 'JJ', 'NNS', '.']",28
face_alignment,16,310,E. Weighting Fine - Tuning for State - of - the - Art Frameworks,"['E.', 'Weighting', 'Fine', '-', 'Tuning', 'for', 'State', '-', 'of', '-', 'the', '-', 'Art', 'Frameworks']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', ':', 'NN', 'IN', 'NNP', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS']",14
face_alignment,16,317,It can be seen that the mean error of re -DAN is reduced from 7.97 to 7.81 after using our proposed weighting fine - tuning .,"['It', 'can', 'be', 'seen', 'that', 'the', 'mean', 'error', 'of', 're', '-DAN', 'is', 'reduced', 'from', '7.97', 'to', '7.81', 'after', 'using', 'our', 'proposed', 'weighting', 'fine', '-', 'tuning', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'CD', 'TO', 'CD', 'IN', 'VBG', 'PRP$', 'VBN', 'VBG', 'JJ', ':', 'NN', '.']",26
face_alignment,13,12,"We demonstrate the superior representation power of our nonlinear 3 DMM over its linear counterpart , and its contribution to face alignment and 3D reconstruction .","['We', 'demonstrate', 'the', 'superior', 'representation', 'power', 'of', 'our', 'nonlinear', '3', 'DMM', 'over', 'its', 'linear', 'counterpart', ',', 'and', 'its', 'contribution', 'to', 'face', 'alignment', 'and', '3D', 'reconstruction', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'PRP$', 'JJ', 'CD', 'NNP', 'IN', 'PRP$', 'JJ', 'NN', ',', 'CC', 'PRP$', 'NN', 'TO', 'VB', 'NN', 'CC', 'CD', 'NN', '.']",26
face_alignment,13,45,"Hence , we utilize two network decoders , instead of two PCA spaces , as the shape and texture model components , respectively .","['Hence', ',', 'we', 'utilize', 'two', 'network', 'decoders', ',', 'instead', 'of', 'two', 'PCA', 'spaces', ',', 'as', 'the', 'shape', 'and', 'texture', 'model', 'components', ',', 'respectively', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBP', 'CD', 'NN', 'NNS', ',', 'RB', 'IN', 'CD', 'NNP', 'NNS', ',', 'IN', 'DT', 'NN', 'CC', 'NN', 'NN', 'NNS', ',', 'RB', '.']",24
face_alignment,13,46,"With careful consideration of each component , we design different networks for shape and texture : the multi - layer perceptron ( MLP ) for shape and convolutional neural network ( CNN ) for texture .","['With', 'careful', 'consideration', 'of', 'each', 'component', ',', 'we', 'design', 'different', 'networks', 'for', 'shape', 'and', 'texture', ':', 'the', 'multi', '-', 'layer', 'perceptron', '(', 'MLP', ')', 'for', 'shape', 'and', 'convolutional', 'neural', 'network', '(', 'CNN', ')', 'for', 'texture', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'NN', 'CC', 'NN', ':', 'DT', 'NN', ':', 'NN', 'NN', '(', 'NNP', ')', 'IN', 'NN', 'CC', 'JJ', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'NN', '.']",36
face_alignment,13,47,Each decoder will take a shape or texture representation as input and output the dense 3 D face or a face texture .,"['Each', 'decoder', 'will', 'take', 'a', 'shape', 'or', 'texture', 'representation', 'as', 'input', 'and', 'output', 'the', 'dense', '3', 'D', 'face', 'or', 'a', 'face', 'texture', '.']","['B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'MD', 'VB', 'DT', 'NN', 'CC', 'NN', 'NN', 'IN', 'NN', 'CC', 'NN', 'DT', 'NN', 'CD', 'NNP', 'NN', 'CC', 'DT', 'NN', 'NN', '.']",23
face_alignment,13,49,"Further , we learn the fitting algorithm to our nonlinear 3 DMM , which is formulated as a CNN encoder .","['Further', ',', 'we', 'learn', 'the', 'fitting', 'algorithm', 'to', 'our', 'nonlinear', '3', 'DMM', ',', 'which', 'is', 'formulated', 'as', 'a', 'CNN', 'encoder', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'PRP$', 'JJ', 'CD', 'NNP', ',', 'WDT', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",21
face_alignment,13,50,"The encoder takes a 2 D face image as input and generates the shape and texture parameters , from which two decoders estimate the 3D face and texture .","['The', 'encoder', 'takes', 'a', '2', 'D', 'face', 'image', 'as', 'input', 'and', 'generates', 'the', 'shape', 'and', 'texture', 'parameters', ',', 'from', 'which', 'two', 'decoders', 'estimate', 'the', '3D', 'face', 'and', 'texture', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'CD', 'NNP', 'NN', 'NN', 'IN', 'NN', 'CC', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'NNS', ',', 'IN', 'WDT', 'CD', 'NNS', 'VBP', 'DT', 'CD', 'NN', 'CC', 'NN', '.']",29
face_alignment,13,51,"The 3 D face and texture would perfectly reconstruct the input face , if the fitting algorithm and 3 DMM are well learnt .","['The', '3', 'D', 'face', 'and', 'texture', 'would', 'perfectly', 'reconstruct', 'the', 'input', 'face', ',', 'if', 'the', 'fitting', 'algorithm', 'and', '3', 'DMM', 'are', 'well', 'learnt', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'CD', 'NNP', 'NN', 'CC', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'NN', ',', 'IN', 'DT', 'NN', 'NN', 'CC', 'CD', 'NNP', 'VBP', 'RB', 'RB', '.']",24
face_alignment,13,52,"Therefore , we design a differentiable rendering layer to generate a reconstructed face by fusing the 3D face , texture , and the camera projection parameters estimated by the encoder .","['Therefore', ',', 'we', 'design', 'a', 'differentiable', 'rendering', 'layer', 'to', 'generate', 'a', 'reconstructed', 'face', 'by', 'fusing', 'the', '3D', 'face', ',', 'texture', ',', 'and', 'the', 'camera', 'projection', 'parameters', 'estimated', 'by', 'the', 'encoder', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'VBG', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'CD', 'NN', ',', 'NN', ',', 'CC', 'DT', 'NN', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NN', '.']",31
face_alignment,13,53,"Finally , the endto - end learning scheme is constructed where the encoder and two decoders are learnt jointly to minimize the difference between the reconstructed face and the input face .","['Finally', ',', 'the', 'endto', '-', 'end', 'learning', 'scheme', 'is', 'constructed', 'where', 'the', 'encoder', 'and', 'two', 'decoders', 'are', 'learnt', 'jointly', 'to', 'minimize', 'the', 'difference', 'between', 'the', 'reconstructed', 'face', 'and', 'the', 'input', 'face', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'NN', ':', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'WRB', 'DT', 'NN', 'CC', 'CD', 'NNS', 'VBP', 'JJ', 'RB', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'DT', 'NN', 'NN', '.']",32
face_alignment,13,54,Jointly learning the 3 DMM and the model fitting encoder allows us to leverage the large collection of unconstrained 2D images without relying on 3D scans .,"['Jointly', 'learning', 'the', '3', 'DMM', 'and', 'the', 'model', 'fitting', 'encoder', 'allows', 'us', 'to', 'leverage', 'the', 'large', 'collection', 'of', 'unconstrained', '2D', 'images', 'without', 'relying', 'on', '3D', 'scans', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', 'VBG', 'DT', 'CD', 'NNP', 'CC', 'DT', 'NN', 'VBG', 'NN', 'VBZ', 'PRP', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'CD', 'NNS', 'IN', 'VBG', 'IN', 'CD', 'NNS', '.']",27
face_alignment,13,55,We show significantly improved shape and texture representation power over the linear 3 DMM .,"['We', 'show', 'significantly', 'improved', 'shape', 'and', 'texture', 'representation', 'power', 'over', 'the', 'linear', '3', 'DMM', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'RB', 'VBN', 'NN', 'CC', 'NN', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NNP', '.']",15
face_alignment,13,208,"The model is optimized using Adam optimizer with an initial learning rate of 0.001 when minimizing L 0 , and 0.0002 when minimizing L.","['The', 'model', 'is', 'optimized', 'using', 'Adam', 'optimizer', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.001', 'when', 'minimizing', 'L', '0', ',', 'and', '0.0002', 'when', 'minimizing', 'L.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n']","['DT', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'WRB', 'VBG', 'NNP', 'CD', ',', 'CC', 'CD', 'WRB', 'VBG', 'NNP']",24
face_alignment,13,209,"We set the following parameters : Q = 53 , 215 , U = V = 128 , l S = l T = 160 . ? values are set to make losses to have similar magnitudes .","['We', 'set', 'the', 'following', 'parameters', ':', 'Q', '=', '53', ',', '215', ',', 'U', '=', 'V', '=', '128', ',', 'l', 'S', '=', 'l', 'T', '=', '160', '.', '?', 'values', 'are', 'set', 'to', 'make', 'losses', 'to', 'have', 'similar', 'magnitudes', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NNS', ':', 'NNP', 'VBZ', 'CD', ',', 'CD', ',', 'NNP', 'NNP', 'NNP', 'NNP', 'CD', ',', 'NN', 'NNP', 'NNP', 'NN', 'NNP', 'VBZ', 'CD', '.', '.', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'NNS', 'TO', 'VB', 'JJ', 'NNS', '.']",38
face_alignment,13,226,Representation Power,"['Representation', 'Power']","['B-n', 'I-n']","['NN', 'NN']",2
face_alignment,13,230,"Alternatively , we can minimize the reconstruction error in the image space , through the rendering layer with the groundtruth S and m .","['Alternatively', ',', 'we', 'can', 'minimize', 'the', 'reconstruction', 'error', 'in', 'the', 'image', 'space', ',', 'through', 'the', 'rendering', 'layer', 'with', 'the', 'groundtruth', 'S', 'and', 'm', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'MD', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'IN', 'DT', 'VBG', 'NN', 'IN', 'DT', 'NN', 'NNP', 'CC', 'NN', '.']",24
face_alignment,13,233,"As in , our nonlinear texture is closer to the groundtruth than the linear model , especially for in - the - wild images ( the first two rows ) .","['As', 'in', ',', 'our', 'nonlinear', 'texture', 'is', 'closer', 'to', 'the', 'groundtruth', 'than', 'the', 'linear', 'model', ',', 'especially', 'for', 'in', '-', 'the', '-', 'wild', 'images', '(', 'the', 'first', 'two', 'rows', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'IN', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'RBR', 'TO', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', 'IN', 'IN', ':', 'DT', ':', 'JJ', 'NNS', '(', 'DT', 'JJ', 'CD', 'NNS', ')', '.']",31
face_alignment,13,235,"Quantitatively , our nonlinear model has significantly lower L 1 reconstruction error than the lin - We also compare the power of nonlinear and linear 3 DMM in representing real - world 3D scans .","['Quantitatively', ',', 'our', 'nonlinear', 'model', 'has', 'significantly', 'lower', 'L', '1', 'reconstruction', 'error', 'than', 'the', 'lin', '-', 'We', 'also', 'compare', 'the', 'power', 'of', 'nonlinear', 'and', 'linear', '3', 'DMM', 'in', 'representing', 'real', '-', 'world', '3D', 'scans', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'RB', 'JJR', 'NNP', 'CD', 'NN', 'NN', 'IN', 'DT', 'JJ', ':', 'PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'CC', 'JJ', 'CD', 'NNP', 'IN', 'VBG', 'JJ', ':', 'NN', 'CD', 'NNS', '.']",35
face_alignment,13,247,"Our nonlinear model has a significantly smaller reconstruction error than the linear model , 0.0196 vs. 0.0241 ( Tab. 3 ) .","['Our', 'nonlinear', 'model', 'has', 'a', 'significantly', 'smaller', 'reconstruction', 'error', 'than', 'the', 'linear', 'model', ',', '0.0196', 'vs.', '0.0241', '(', 'Tab.', '3', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'RB', 'JJR', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CD', 'FW', 'CD', '(', 'NNP', 'CD', ')', '.']",22
face_alignment,13,264,Quantitative evaluation of 3D reconstruction .,"['Quantitative', 'evaluation', 'of', '3D', 'reconstruction', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O']","['JJ', 'NN', 'IN', 'CD', 'NN', '.']",6
face_alignment,13,265,We obtain a low error that is comparable to optimization - based methods .,"['We', 'obtain', 'a', 'low', 'error', 'that', 'is', 'comparable', 'to', 'optimization', '-', 'based', 'methods', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VB', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'JJ', 'TO', 'VB', ':', 'VBN', 'NNS', '.']",14
face_alignment,13,271,3D Face Reconstruction .,"['3D', 'Face', 'Reconstruction', '.']","['B-n', 'I-n', 'I-n', 'O']","['CD', 'NNP', 'NNP', '.']",4
face_alignment,13,280,"We achieve on - par results with Garrido et al. , an offline optimization method , while surpassing all other regression methods ] .","['We', 'achieve', 'on', '-', 'par', 'results', 'with', 'Garrido', 'et', 'al.', ',', 'an', 'offline', 'optimization', 'method', ',', 'while', 'surpassing', 'all', 'other', 'regression', 'methods', ']', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'IN', ':', 'NN', 'NNS', 'IN', 'NNP', 'FW', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', ',', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NNS', 'VBP', '.']",24
face_alignment,13,284,Using a global image - based discriminator is redundant as the global structure is guaranteed by the rendering layer .,"['Using', 'a', 'global', 'image', '-', 'based', 'discriminator', 'is', 'redundant', 'as', 'the', 'global', 'structure', 'is', 'guaranteed', 'by', 'the', 'rendering', 'layer', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'JJ', 'NN', ':', 'VBN', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'VBG', 'NN', '.']",20
face_alignment,13,285,"Also , we empirically find that using global image - based discriminator can cause severe artifacts in the resultant texture .","['Also', ',', 'we', 'empirically', 'find', 'that', 'using', 'global', 'image', '-', 'based', 'discriminator', 'can', 'cause', 'severe', 'artifacts', 'in', 'the', 'resultant', 'texture', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'RB', 'VBP', 'IN', 'VBG', 'JJ', 'NN', ':', 'VBN', 'NN', 'MD', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",21
face_alignment,13,287,"Clearly , patchGAN offers higher realism and fewer artifacts .","['Clearly', ',', 'patchGAN', 'offers', 'higher', 'realism', 'and', 'fewer', 'artifacts', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NN', 'NNS', 'RBR', 'NN', 'CC', 'JJR', 'NNS', '.']",10
face_alignment,8,2,Joint 3D Face Reconstruction and Dense Face Alignment from A Single Image with 2D - Assisted Self - Supervised Learning,"['Joint', '3D', 'Face', 'Reconstruction', 'and', 'Dense', 'Face', 'Alignment', 'from', 'A', 'Single', 'Image', 'with', '2D', '-', 'Assisted', 'Self', '-', 'Supervised', 'Learning']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'CD', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'CD', ':', 'VBN', 'NNP', ':', 'VBD', 'VBG']",20
face_alignment,8,9,3 D face reconstruction from a single 2D image is a challenging problem with broad applications .,"['3', 'D', 'face', 'reconstruction', 'from', 'a', 'single', '2D', 'image', 'is', 'a', 'challenging', 'problem', 'with', 'broad', 'applications', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', 'VBZ', 'DT', 'VBG', 'NN', 'IN', 'JJ', 'NNS', '.']",17
face_alignment,8,23,3 D face reconstruction from a single 2D image is a challenging problem with broad applications .,"['3', 'D', 'face', 'reconstruction', 'from', 'a', 'single', '2D', 'image', 'is', 'a', 'challenging', 'problem', 'with', 'broad', 'applications', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', 'VBZ', 'DT', 'VBG', 'NN', 'IN', 'JJ', 'NNS', '.']",17
face_alignment,8,31,3 D face reconstruction is an important task in the field of computer vision and graphics .,"['3', 'D', 'face', 'reconstruction', 'is', 'an', 'important', 'task', 'in', 'the', 'field', 'of', 'computer', 'vision', 'and', 'graphics', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', 'CC', 'NNS', '.']",17
face_alignment,8,41,"In order to overcome the intrinsic limitation of existing 3 D face recovery models , we propose a novel learning method that leverages 2D "" in - the - wild "" face images to effectively supervise and facilitate the 3D face model learning .","['In', 'order', 'to', 'overcome', 'the', 'intrinsic', 'limitation', 'of', 'existing', '3', 'D', 'face', 'recovery', 'models', ',', 'we', 'propose', 'a', 'novel', 'learning', 'method', 'that', 'leverages', '2D', '""', 'in', '-', 'the', '-', 'wild', '""', 'face', 'images', 'to', 'effectively', 'supervise', 'and', 'facilitate', 'the', '3D', 'face', 'model', 'learning', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'CD', 'NNP', 'NN', 'NN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBG', 'NN', 'WDT', 'VBZ', 'CD', 'NN', 'IN', ':', 'DT', ':', 'JJ', 'JJ', 'NN', 'NNS', 'TO', 'RB', 'VB', 'CC', 'VB', 'DT', 'CD', 'NN', 'NN', 'NN', '.']",44
face_alignment,8,45,We design a novel self - supervised learning method that is able to train a 3 D face model with weak supervision from 2D images .,"['We', 'design', 'a', 'novel', 'self', '-', 'supervised', 'learning', 'method', 'that', 'is', 'able', 'to', 'train', 'a', '3', 'D', 'face', 'model', 'with', 'weak', 'supervision', 'from', '2D', 'images', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'SYM', ':', 'VBN', 'VBG', 'NN', 'WDT', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'CD', 'NNP', 'NN', 'NN', 'IN', 'JJ', 'NN', 'IN', 'CD', 'NNS', '.']",26
face_alignment,8,47,The model should be able to recover 2D landmarks from predicted 3D ones via direct 3D - to - 2D projection .,"['The', 'model', 'should', 'be', 'able', 'to', 'recover', '2D', 'landmarks', 'from', 'predicted', '3D', 'ones', 'via', 'direct', '3D', '-', 'to', '-', '2D', 'projection', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'MD', 'VB', 'JJ', 'TO', 'VB', 'CD', 'NNS', 'IN', 'VBN', 'CD', 'NNS', 'IN', 'JJ', 'CD', ':', 'TO', ':', 'CD', 'NN', '.']",22
face_alignment,8,49,"Additionally , our proposed method also exploits cycle - consistency over the 2D landmark predictions , i.e. , taking the recovered 2D landmarks as input , the model should be able to generate 2D landmarks ( by projecting its predicted 3D landmarks ) that have small difference with the annotated ones .","['Additionally', ',', 'our', 'proposed', 'method', 'also', 'exploits', 'cycle', '-', 'consistency', 'over', 'the', '2D', 'landmark', 'predictions', ',', 'i.e.', ',', 'taking', 'the', 'recovered', '2D', 'landmarks', 'as', 'input', ',', 'the', 'model', 'should', 'be', 'able', 'to', 'generate', '2D', 'landmarks', '(', 'by', 'projecting', 'its', 'predicted', '3D', 'landmarks', ')', 'that', 'have', 'small', 'difference', 'with', 'the', 'annotated', 'ones', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP$', 'VBN', 'NN', 'RB', 'VBZ', 'NN', ':', 'NN', 'IN', 'DT', 'CD', 'NN', 'NNS', ',', 'FW', ',', 'VBG', 'DT', 'JJ', 'CD', 'NNS', 'IN', 'NN', ',', 'DT', 'NN', 'MD', 'VB', 'JJ', 'TO', 'VB', 'CD', 'NNS', '(', 'IN', 'VBG', 'PRP$', 'JJ', 'CD', 'NNS', ')', 'WDT', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', '.']",52
face_alignment,8,51,"To facilitate the overall learning procedure , our method also exploits self - critic learning .","['To', 'facilitate', 'the', 'overall', 'learning', 'procedure', ',', 'our', 'method', 'also', 'exploits', 'self', '-', 'critic', 'learning', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'JJ', 'NN', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'PRP', ':', 'JJ', 'NN', '.']",16
face_alignment,8,205,Our proposed 2 DASL is implemented with Pytorch .,"['Our', 'proposed', '2', 'DASL', 'is', 'implemented', 'with', 'Pytorch', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['PRP$', 'VBD', 'CD', 'NNP', 'VBZ', 'VBN', 'IN', 'NNP', '.']",9
face_alignment,8,206,"We use SGD optimizer for the CNN regressor with a learning rate beginning at 5 10 ?5 and decays exponentially , the discriminator uses the Adam as optimizer with the fixed learning rate 1 10 ?4 .","['We', 'use', 'SGD', 'optimizer', 'for', 'the', 'CNN', 'regressor', 'with', 'a', 'learning', 'rate', 'beginning', 'at', '5', '10', '?5', 'and', 'decays', 'exponentially', ',', 'the', 'discriminator', 'uses', 'the', 'Adam', 'as', 'optimizer', 'with', 'the', 'fixed', 'learning', 'rate', '1', '10', '?4', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CD', 'NN', 'CC', 'NNS', 'RB', ',', 'DT', 'NN', 'VBZ', 'DT', 'NNP', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CD', 'CD', 'NN', '.']",37
face_alignment,8,209,We use a two - stage strategy to train our model .,"['We', 'use', 'a', 'two', '-', 'stage', 'strategy', 'to', 'train', 'our', 'model', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'CD', ':', 'NN', 'NN', 'TO', 'VB', 'PRP$', 'NN', '.']",12
face_alignment,8,210,"In the first stage , we train the model using the overall loss L.","['In', 'the', 'first', 'stage', ',', 'we', 'train', 'the', 'model', 'using', 'the', 'overall', 'loss', 'L.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBG', 'DT', 'JJ', 'NN', 'NNP']",14
face_alignment,8,211,"In the second stage , we fine - tune our model using the Vertex Distance Cost , following .","['In', 'the', 'second', 'stage', ',', 'we', 'fine', '-', 'tune', 'our', 'model', 'using', 'the', 'Vertex', 'Distance', 'Cost', ',', 'following', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', ':', 'NN', 'PRP$', 'NN', 'VBG', 'DT', 'NNP', 'NNP', 'NNP', ',', 'VBG', '.']",19
face_alignment,8,227,Dense face alignment,"['Dense', 'face', 'alignment']","['B-n', 'I-n', 'I-n']","['NNP', 'NN', 'NN']",3
face_alignment,8,239,"The results are shown in , where we can see our 2 DASL achieves the lowest NME ( % ) on the evaluation of both 2 D and 3D coordinates among all the methods .","['The', 'results', 'are', 'shown', 'in', ',', 'where', 'we', 'can', 'see', 'our', '2', 'DASL', 'achieves', 'the', 'lowest', 'NME', '(', '%', ')', 'on', 'the', 'evaluation', 'of', 'both', '2', 'D', 'and', '3D', 'coordinates', 'among', 'all', 'the', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', ',', 'WRB', 'PRP', 'MD', 'VB', 'PRP$', 'CD', 'NNP', 'VBZ', 'DT', 'JJS', 'NNP', '(', 'NN', ')', 'IN', 'DT', 'NN', 'IN', 'DT', 'CD', 'NNP', 'CC', 'CD', 'NNS', 'IN', 'PDT', 'DT', 'NNS', '.']",35
face_alignment,8,240,"For 3 DMM - based methods : 3 DDFA and DeFA , our method outperforms them by a large margin on both the 68 spare landmarks and the dense coordinates .","['For', '3', 'DMM', '-', 'based', 'methods', ':', '3', 'DDFA', 'and', 'DeFA', ',', 'our', 'method', 'outperforms', 'them', 'by', 'a', 'large', 'margin', 'on', 'both', 'the', '68', 'spare', 'landmarks', 'and', 'the', 'dense', 'coordinates', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'CD', 'NNP', ':', 'VBN', 'NNS', ':', 'CD', 'NNP', 'CC', 'NNP', ',', 'PRP$', 'NN', 'VBZ', 'PRP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CC', 'DT', 'CD', 'JJ', 'NNS', 'CC', 'DT', 'NN', 'VBZ', '.']",31
face_alignment,8,245,"As can be observed , our method achieves the lowest mean NME on both of the two datasets , and the lowest NME across all poses on AFLW2000 - 3D .","['As', 'can', 'be', 'observed', ',', 'our', 'method', 'achieves', 'the', 'lowest', 'mean', 'NME', 'on', 'both', 'of', 'the', 'two', 'datasets', ',', 'and', 'the', 'lowest', 'NME', 'across', 'all', 'poses', 'on', 'AFLW2000', '-', '3D', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'JJ', 'NN', 'IN', 'DT', 'IN', 'DT', 'CD', 'NNS', ',', 'CC', 'DT', 'JJS', 'NNP', 'IN', 'DT', 'NNS', 'IN', 'NNP', ':', 'CD', '.']",31
face_alignment,8,246,"Our 2DASL even performs better than PRNet , reducing NME by 0.09 and 0.08 on AFLW2000 - 3D and AFLW - LFPA , respectively .","['Our', '2DASL', 'even', 'performs', 'better', 'than', 'PRNet', ',', 'reducing', 'NME', 'by', '0.09', 'and', '0.08', 'on', 'AFLW2000', '-', '3D', 'and', 'AFLW', '-', 'LFPA', ',', 'respectively', '.']","['B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP$', 'CD', 'RB', 'NNS', 'JJR', 'IN', 'NNP', ',', 'VBG', 'NNP', 'IN', 'CD', 'CC', 'CD', 'IN', 'NNP', ':', 'CD', 'CC', 'NNP', ':', 'NNP', ',', 'RB', '.']",25
face_alignment,8,247,"Es - pecially on large poses ( from 60 to 90 ) , 2 DASL achieves 0.2 lower NME than PRNet .","['Es', '-', 'pecially', 'on', 'large', 'poses', '(', 'from', '60', 'to', '90', ')', ',', '2', 'DASL', 'achieves', '0.2', 'lower', 'NME', 'than', 'PRNet', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['NNP', ':', 'RB', 'IN', 'JJ', 'NNS', '(', 'IN', 'CD', 'TO', 'CD', ')', ',', 'CD', 'NNP', 'NNS', 'CD', 'JJR', 'NNP', 'IN', 'NNP', '.']",22
face_alignment,8,249,3 D face reconstruction,"['3', 'D', 'face', 'reconstruction']","['B-n', 'I-n', 'I-n', 'I-n']","['CD', 'NNP', 'NN', 'NN']",4
face_alignment,8,255,"As can be seen , the 3D reconstruction results of 2 DASL outperforms 3 DDFA by 0.39 , and 2.29 for DeFA , which are significant improvements .","['As', 'can', 'be', 'seen', ',', 'the', '3D', 'reconstruction', 'results', 'of', '2', 'DASL', 'outperforms', '3', 'DDFA', 'by', '0.39', ',', 'and', '2.29', 'for', 'DeFA', ',', 'which', 'are', 'significant', 'improvements', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'MD', 'VB', 'VBN', ',', 'DT', 'CD', 'NN', 'NNS', 'IN', 'CD', 'NNP', 'NNS', 'CD', 'NNP', 'IN', 'CD', ',', 'CC', 'CD', 'IN', 'NNP', ',', 'WDT', 'VBP', 'JJ', 'NNS', '.']",28
face_alignment,8,265,"2 . Adding weights to central points of the facial landmarks reduces the NME by 0.09 to 0.23 on the two stages , respectively .","['2', '.', 'Adding', 'weights', 'to', 'central', 'points', 'of', 'the', 'facial', 'landmarks', 'reduces', 'the', 'NME', 'by', '0.09', 'to', '0.23', 'on', 'the', 'two', 'stages', ',', 'respectively', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['CD', '.', 'VBG', 'NNS', 'TO', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'VBZ', 'DT', 'NNP', 'IN', 'CD', 'TO', 'CD', 'IN', 'DT', 'CD', 'NNS', ',', 'RB', '.']",25
face_alignment,8,267,"If the self - critic learning is not used , the NME increases by 0.04/0.18 for with / without weight mask , respectively .","['If', 'the', 'self', '-', 'critic', 'learning', 'is', 'not', 'used', ',', 'the', 'NME', 'increases', 'by', '0.04/0.18', 'for', 'with', '/', 'without', 'weight', 'mask', ',', 'respectively', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'NN', ':', 'JJ', 'NN', 'VBZ', 'RB', 'VBN', ',', 'DT', 'NNP', 'NNS', 'IN', 'CD', 'IN', 'IN', 'NN', 'IN', 'NN', 'NN', ',', 'RB', '.']",24
face_alignment,8,268,"While the self - supervision scheme reduce NME by 0.1 when the weight mask is used , and 0.23 if the weight mask is removed , no significant improvement is observed .","['While', 'the', 'self', '-', 'supervision', 'scheme', 'reduce', 'NME', 'by', '0.1', 'when', 'the', 'weight', 'mask', 'is', 'used', ',', 'and', '0.23', 'if', 'the', 'weight', 'mask', 'is', 'removed', ',', 'no', 'significant', 'improvement', 'is', 'observed', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ':', 'NN', 'NN', 'VB', 'NNP', 'IN', 'CD', 'WRB', 'DT', 'NN', 'NN', 'VBZ', 'VBN', ',', 'CC', 'CD', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'VBN', ',', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', '.']",32
face_alignment,8,270,"Moreover , in our experiments , we found taking the FLMs as input can accelerate the convergence of training process .","['Moreover', ',', 'in', 'our', 'experiments', ',', 'we', 'found', 'taking', 'the', 'FLMs', 'as', 'input', 'can', 'accelerate', 'the', 'convergence', 'of', 'training', 'process', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'IN', 'PRP$', 'NNS', ',', 'PRP', 'VBD', 'VBG', 'DT', 'NNP', 'IN', 'NN', 'MD', 'VB', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",21
face_alignment,9,2,Semantic Alignment : Finding Semantically Consistent Ground - truth for Facial Landmark Detection,"['Semantic', 'Alignment', ':', 'Finding', 'Semantically', 'Consistent', 'Ground', '-', 'truth', 'for', 'Facial', 'Landmark', 'Detection']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['JJ', 'NN', ':', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NN', 'IN', 'NNP', 'NNP', 'NNP']",13
face_alignment,9,30,"In this paper , we propose a novel Semantic Alignment method which reduces the ' semantic ambiguity ' intrinsi-cally .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'Semantic', 'Alignment', 'method', 'which', 'reduces', 'the', ""'"", 'semantic', 'ambiguity', ""'"", 'intrinsi-cally', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NNP', 'NN', 'WDT', 'VBZ', 'DT', ""''"", 'JJ', 'NN', 'POS', 'RB', '.']",20
face_alignment,9,32,"We model the ' real ' ground - truth as a latent variable to optimize , and the optimized ' real ' ground - truth then supervises the landmark detection network training .","['We', 'model', 'the', ""'"", 'real', ""'"", 'ground', '-', 'truth', 'as', 'a', 'latent', 'variable', 'to', 'optimize', ',', 'and', 'the', 'optimized', ""'"", 'real', ""'"", 'ground', '-', 'truth', 'then', 'supervises', 'the', 'landmark', 'detection', 'network', 'training', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'POS', 'JJ', 'POS', 'NN', ':', 'NN', 'IN', 'DT', 'NN', 'NN', 'TO', 'VB', ',', 'CC', 'DT', 'VBN', 'POS', 'JJ', 'POS', 'NN', ':', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'NN', 'NN', '.']",33
face_alignment,9,33,"Accordingly , we propose a probabilistic model which can simultaneously search the ' real ' ground - truth and train the landmark detection network in an end - to - end way .","['Accordingly', ',', 'we', 'propose', 'a', 'probabilistic', 'model', 'which', 'can', 'simultaneously', 'search', 'the', ""'"", 'real', ""'"", 'ground', '-', 'truth', 'and', 'train', 'the', 'landmark', 'detection', 'network', 'in', 'an', 'end', '-', 'to', '-', 'end', 'way', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'WDT', 'MD', 'RB', 'VB', 'DT', 'POS', 'JJ', 'POS', 'NN', ':', 'NN', 'CC', 'VB', 'DT', 'NN', 'NN', 'NN', 'IN', 'DT', 'NN', ':', 'TO', ':', 'VB', 'NN', '.']",33
face_alignment,9,34,"In this probabilistic model , the prior model is to constrain the latent variable to be close to the observations of the ' real ' ground truth , one of which is the human annotation .","['In', 'this', 'probabilistic', 'model', ',', 'the', 'prior', 'model', 'is', 'to', 'constrain', 'the', 'latent', 'variable', 'to', 'be', 'close', 'to', 'the', 'observations', 'of', 'the', ""'"", 'real', ""'"", 'ground', 'truth', ',', 'one', 'of', 'which', 'is', 'the', 'human', 'annotation', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'DT', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'NN', 'TO', 'VB', 'RB', 'TO', 'DT', 'NNS', 'IN', 'DT', 'POS', 'JJ', 'POS', 'NN', 'NN', ',', 'CD', 'IN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', '.']",36
face_alignment,9,35,The likelihood model is to reduce the Pearson Chi-square distance between the expected and the predicted distributions of ' real ' ground - truth .,"['The', 'likelihood', 'model', 'is', 'to', 'reduce', 'the', 'Pearson', 'Chi-square', 'distance', 'between', 'the', 'expected', 'and', 'the', 'predicted', 'distributions', 'of', ""'"", 'real', ""'"", 'ground', '-', 'truth', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NNP', 'NNP', 'NN', 'IN', 'DT', 'VBN', 'CC', 'DT', 'JJ', 'NNS', 'IN', 'POS', 'JJ', 'POS', 'NN', ':', 'NN', '.']",25
face_alignment,9,36,The heatmap generated by the hourglass architecture represents the confidence of each pixel and this confidence distribution is used to model the predicted distribution of likelihood .,"['The', 'heatmap', 'generated', 'by', 'the', 'hourglass', 'architecture', 'represents', 'the', 'confidence', 'of', 'each', 'pixel', 'and', 'this', 'confidence', 'distribution', 'is', 'used', 'to', 'model', 'the', 'predicted', 'distribution', 'of', 'likelihood', '.']","['O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'VBN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",27
face_alignment,9,37,"Apart from the proposed probabilistic framework , we further propose a global heatmap correction unit ( GHCU ) which maintains the global face shape constraint and recovers the unconfidently predicted landmarks caused by challenging factors such as occlusions and low resolution of images .","['Apart', 'from', 'the', 'proposed', 'probabilistic', 'framework', ',', 'we', 'further', 'propose', 'a', 'global', 'heatmap', 'correction', 'unit', '(', 'GHCU', ')', 'which', 'maintains', 'the', 'global', 'face', 'shape', 'constraint', 'and', 'recovers', 'the', 'unconfidently', 'predicted', 'landmarks', 'caused', 'by', 'challenging', 'factors', 'such', 'as', 'occlusions', 'and', 'low', 'resolution', 'of', 'images', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['RB', 'IN', 'DT', 'VBN', 'JJ', 'NN', ',', 'PRP', 'VBP', 'VB', 'DT', 'JJ', 'NN', 'NN', 'NN', '(', 'NNP', ')', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'CC', 'VBZ', 'DT', 'RB', 'VBN', 'NNS', 'VBN', 'IN', 'VBG', 'NNS', 'JJ', 'IN', 'NNS', 'CC', 'JJ', 'NN', 'IN', 'NNS', '.']",44
face_alignment,9,201,"To perform data augmentation , we randomly sample the angle of rotation and the bounding box scale from Gaussian distribution .","['To', 'perform', 'data', 'augmentation', ',', 'we', 'randomly', 'sample', 'the', 'angle', 'of', 'rotation', 'and', 'the', 'bounding', 'box', 'scale', 'from', 'Gaussian', 'distribution', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'NNS', 'NN', ',', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'IN', 'NN', 'CC', 'DT', 'NN', 'NN', 'NN', 'IN', 'JJ', 'NN', '.']",21
face_alignment,9,202,We use a four - stage stacked hourglass network as our backbone which is trained by the optimizer RMSprop .,"['We', 'use', 'a', 'four', '-', 'stage', 'stacked', 'hourglass', 'network', 'as', 'our', 'backbone', 'which', 'is', 'trained', 'by', 'the', 'optimizer', 'RMSprop', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'CD', ':', 'NN', 'VBD', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'WDT', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NNP', '.']",20
face_alignment,9,207,"When training the roughly converged model with human annotations , the initial learning rate is 2.5 10 ?4 which is decayed to 2.5 10 ? 6 after 120 epochs .","['When', 'training', 'the', 'roughly', 'converged', 'model', 'with', 'human', 'annotations', ',', 'the', 'initial', 'learning', 'rate', 'is', '2.5', '10', '?4', 'which', 'is', 'decayed', 'to', '2.5', '10', '?', '6', 'after', '120', 'epochs', '.']","['B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['WRB', 'VBG', 'DT', 'RB', 'VBN', 'NN', 'IN', 'JJ', 'NNS', ',', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', 'CD', 'NN', 'WDT', 'VBZ', 'VBN', 'TO', 'CD', 'CD', '.', 'CD', 'IN', 'CD', 'NN', '.']",30
face_alignment,9,208,"When training with Semantic Alignment from the beginning of the aforementioned roughly converged model , the initial learning rate is 2.5 10 ? 6 and is divided by 5 , 2 and 2 at epoch 30 , 60 and 90 respectively .","['When', 'training', 'with', 'Semantic', 'Alignment', 'from', 'the', 'beginning', 'of', 'the', 'aforementioned', 'roughly', 'converged', 'model', ',', 'the', 'initial', 'learning', 'rate', 'is', '2.5', '10', '?', '6', 'and', 'is', 'divided', 'by', '5', ',', '2', 'and', '2', 'at', 'epoch', '30', ',', '60', 'and', '90', 'respectively', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['WRB', 'VBG', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'VBN', 'RB', 'VBN', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', 'CD', '.', 'CD', 'CC', 'VBZ', 'VBN', 'IN', 'CD', ',', 'CD', 'CC', 'CD', 'IN', 'NN', 'CD', ',', 'CD', 'CC', 'CD', 'RB', '.']",42
face_alignment,9,211,We set batch size to 10 for network training .,"['We', 'set', 'batch', 'size', 'to', '10', 'for', 'network', 'training', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'TO', 'CD', 'IN', 'NN', 'NN', '.']",10
face_alignment,9,213,1 . All our models are trained with PyTorch [ 18 ] on 2 Titan X GPUs .,"['1', '.', 'All', 'our', 'models', 'are', 'trained', 'with', 'PyTorch', '[', '18', ']', 'on', '2', 'Titan', 'X', 'GPUs', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', '.', 'DT', 'PRP$', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'CD', 'NN', 'IN', 'CD', 'NNP', 'NNP', 'NNP', '.']",18
face_alignment,9,215,300 W .,"['300', 'W', '.']","['B-n', 'I-n', 'O']","['CD', 'NNP', '.']",3
face_alignment,9,220,"2 , we can see that HGs with our Semantic Alignment ( HGs + SA ) greatly outperform hourglass ( HGs ) only , 4.37 % vs 5.04 % in terms of NME on Full set , showing the great effectiveness of our Semantic Alignment ( SA ) .","['2', ',', 'we', 'can', 'see', 'that', 'HGs', 'with', 'our', 'Semantic', 'Alignment', '(', 'HGs', '+', 'SA', ')', 'greatly', 'outperform', 'hourglass', '(', 'HGs', ')', 'only', ',', '4.37', '%', 'vs', '5.04', '%', 'in', 'terms', 'of', 'NME', 'on', 'Full', 'set', ',', 'showing', 'the', 'great', 'effectiveness', 'of', 'our', 'Semantic', 'Alignment', '(', 'SA', ')', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', ',', 'PRP', 'MD', 'VB', 'DT', 'NNP', 'IN', 'PRP$', 'JJ', 'NNP', '(', 'NNP', 'NNP', 'NNP', ')', 'RB', 'JJ', 'NN', '(', 'NNP', ')', 'RB', ',', 'CD', 'NN', 'JJ', 'CD', 'NN', 'IN', 'NNS', 'IN', 'NNP', 'IN', 'NNP', 'NN', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'JJ', 'NNP', '(', 'NNP', ')', '.']",49
face_alignment,9,221,"By adding GHCU , we can see that HGs + SA + GHCU slightly outperforms the HGs + SA .","['By', 'adding', 'GHCU', ',', 'we', 'can', 'see', 'that', 'HGs', '+', 'SA', '+', 'GHCU', 'slightly', 'outperforms', 'the', 'HGs', '+', 'SA', '.']","['O', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'NNP', ',', 'PRP', 'MD', 'VB', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'RB', 'VBZ', 'DT', 'NNP', 'NNP', 'NNP', '.']",20
face_alignment,9,223,"Following and which normalize the in - plane - rotation by training a preprocessing network , we conduct this normalization ( HGs + SA + GHCU + Norm ) and achieve state of the art performance on Challenge set and Full set : 6.38 % and 4.02 % .","['Following', 'and', 'which', 'normalize', 'the', 'in', '-', 'plane', '-', 'rotation', 'by', 'training', 'a', 'preprocessing', 'network', ',', 'we', 'conduct', 'this', 'normalization', '(', 'HGs', '+', 'SA', '+', 'GHCU', '+', 'Norm', ')', 'and', 'achieve', 'state', 'of', 'the', 'art', 'performance', 'on', 'Challenge', 'set', 'and', 'Full', 'set', ':', '6.38', '%', 'and', '4.02', '%', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'CC', 'WDT', 'VBP', 'DT', 'IN', ':', 'NN', ':', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', '(', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ')', 'CC', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NNP', 'NN', 'CC', 'NNP', 'NN', ':', 'CD', 'NN', 'CC', 'CD', 'NN', '.']",49
face_alignment,9,224,"In particular , on Challenge set , we significantly outperform the state of the art method : 6.38 % ( HGs + SA +GHCU + Norm ) vs 6.98 % ( LAB ) , meaning that our method is particularly effective on challenging scenarios .","['In', 'particular', ',', 'on', 'Challenge', 'set', ',', 'we', 'significantly', 'outperform', 'the', 'state', 'of', 'the', 'art', 'method', ':', '6.38', '%', '(', 'HGs', '+', 'SA', '+GHCU', '+', 'Norm', ')', 'vs', '6.98', '%', '(', 'LAB', ')', ',', 'meaning', 'that', 'our', 'method', 'is', 'particularly', 'effective', 'on', 'challenging', 'scenarios', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'IN', 'NNP', 'NN', ',', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', ':', 'CD', 'NN', '(', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ')', 'VBP', 'CD', 'NN', '(', 'NNP', ')', ',', 'VBG', 'IN', 'PRP$', 'NN', 'VBZ', 'RB', 'JJ', 'IN', 'VBG', 'NNS', '.']",45
face_alignment,9,225,AFLW . 300W has 68 facial points which contain many weak semantic landmarks ( e.g. those on face contours ) .,"['AFLW', '.', '300W', 'has', '68', 'facial', 'points', 'which', 'contain', 'many', 'weak', 'semantic', 'landmarks', '(', 'e.g.', 'those', 'on', 'face', 'contours', ')', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', '.', 'CD', 'VBZ', 'CD', 'JJ', 'NNS', 'WDT', 'VBP', 'JJ', 'JJ', 'JJ', 'NNS', '(', 'VBP', 'DT', 'IN', 'NN', 'NN', ')', '.']",21
face_alignment,9,230,"As shown in Tab. 3 , HGs + SA outperforms","['As', 'shown', 'in', 'Tab.', '3', ',', 'HGs', '+', 'SA', 'outperforms']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n']","['IN', 'VBN', 'IN', 'NNP', 'CD', ',', 'NNP', 'NNP', 'NNP', 'NNS']",10
face_alignment,9,231,"HGs , 1.62 % vs 1.95 % .","['HGs', ',', '1.62', '%', 'vs', '1.95', '%', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ',', 'CD', 'NN', 'JJ', 'CD', 'NN', '.']",8
face_alignment,9,233,It is also observed that HGs + SA + GHCU works better than HGs + SA .,"['It', 'is', 'also', 'observed', 'that', 'HGs', '+', 'SA', '+', 'GHCU', 'works', 'better', 'than', 'HGs', '+', 'SA', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'RB', 'VBN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'RBR', 'IN', 'NNP', 'NNP', 'NNP', '.']",17
face_alignment,9,234,300 - VW .,"['300', '-', 'VW', '.']","['B-n', 'I-n', 'I-n', 'O']","['CD', ':', 'NN', '.']",4
face_alignment,9,238,"4 , we can see that HGs + SA greatly outperforms HGs in each of these three test sets .","['4', ',', 'we', 'can', 'see', 'that', 'HGs', '+', 'SA', 'greatly', 'outperforms', 'HGs', 'in', 'each', 'of', 'these', 'three', 'test', 'sets', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', ',', 'PRP', 'MD', 'VB', 'DT', 'NNP', 'NNP', 'NNP', 'RB', 'VBZ', 'NNP', 'IN', 'DT', 'IN', 'DT', 'CD', 'NN', 'NNS', '.']",20
face_alignment,9,239,"Furthermore , compared with HGs + SA , HGs + SA + GHCU reduce the error rate ( RMSE ) by 18 % on Category 3 test set , meaning that GHCU is very effective for video - based challenges such as low resolution and occlusions because .","['Furthermore', ',', 'compared', 'with', 'HGs', '+', 'SA', ',', 'HGs', '+', 'SA', '+', 'GHCU', 'reduce', 'the', 'error', 'rate', '(', 'RMSE', ')', 'by', '18', '%', 'on', 'Category', '3', 'test', 'set', ',', 'meaning', 'that', 'GHCU', 'is', 'very', 'effective', 'for', 'video', '-', 'based', 'challenges', 'such', 'as', 'low', 'resolution', 'and', 'occlusions', 'because', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VBN', 'IN', 'NNP', 'NNP', 'NNP', ',', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'VB', 'DT', 'NN', 'NN', '(', 'NNP', ')', 'IN', 'CD', 'NN', 'IN', 'NNP', 'CD', 'NN', 'NN', ',', 'VBG', 'IN', 'NNP', 'VBZ', 'RB', 'JJ', 'IN', 'NN', ':', 'VBN', 'NNS', 'JJ', 'IN', 'JJ', 'NN', 'CC', 'NNS', 'IN', '.']",48
face_alignment,9,287,"To verify the effectiveness of different components in our framework , we conduct this ablation study on 300 - VW .","['To', 'verify', 'the', 'effectiveness', 'of', 'different', 'components', 'in', 'our', 'framework', ',', 'we', 'conduct', 'this', 'ablation', 'study', 'on', '300', '-', 'VW', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'CD', ':', 'NN', '.']",21
face_alignment,9,290,"9 , Semantic alignment can consistently improve the performance on all subset sets , demonstrating the strong generalization capacity of SA .","['9', ',', 'Semantic', 'alignment', 'can', 'consistently', 'improve', 'the', 'performance', 'on', 'all', 'subset', 'sets', ',', 'demonstrating', 'the', 'strong', 'generalization', 'capacity', 'of', 'SA', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', ',', 'JJ', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NNS', ',', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NNP', '.']",22
face_alignment,9,291,"GHCU is more effective on the challenge data set ( Category 3 ) : 8.15 % vs 9.91 % ; Combining SA and GHCU works better than single of them , showing the complementary of these two mechanisms .","['GHCU', 'is', 'more', 'effective', 'on', 'the', 'challenge', 'data', 'set', '(', 'Category', '3', ')', ':', '8.15', '%', 'vs', '9.91', '%', ';', 'Combining', 'SA', 'and', 'GHCU', 'works', 'better', 'than', 'single', 'of', 'them', ',', 'showing', 'the', 'complementary', 'of', 'these', 'two', 'mechanisms', '.']","['B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'VBZ', 'RBR', 'JJ', 'IN', 'DT', 'NN', 'NNS', 'NN', '(', 'NNP', 'CD', ')', ':', 'CD', 'NN', 'JJ', 'CD', 'NN', ':', 'NNP', 'NNP', 'CC', 'NNP', 'VBZ', 'RBR', 'IN', 'JJ', 'IN', 'PRP', ',', 'VBG', 'DT', 'NN', 'IN', 'DT', 'CD', 'NNS', '.']",39
face_alignment,1,2,Large Pose 3D Face Reconstruction from a Single Image via Direct Volumetric CNN Regression,"['Large', 'Pose', '3D', 'Face', 'Reconstruction', 'from', 'a', 'Single', 'Image', 'via', 'Direct', 'Volumetric', 'CNN', 'Regression']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'CD', 'NNP', 'NNP', 'IN', 'DT', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",14
face_alignment,1,5,Abstract 3 D face reconstruction is a fundamental Computer Vision problem of extraordinary difficulty .,"['Abstract', '3', 'D', 'face', 'reconstruction', 'is', 'a', 'fundamental', 'Computer', 'Vision', 'problem', 'of', 'extraordinary', 'difficulty', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['$', 'CD', 'NNP', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NNP', 'NNP', 'NN', 'IN', 'JJ', 'NN', '.']",15
face_alignment,1,33,"We describe a very simple approach which bypasses many of the difficulties encountered in 3D face reconstruction by using a novel volumetric representation of the 3D facial geometry , and an appropriate CNN architecture that is trained to regress directly from a 2 D facial image to the corresponding 3D volume .","['We', 'describe', 'a', 'very', 'simple', 'approach', 'which', 'bypasses', 'many', 'of', 'the', 'difficulties', 'encountered', 'in', '3D', 'face', 'reconstruction', 'by', 'using', 'a', 'novel', 'volumetric', 'representation', 'of', 'the', '3D', 'facial', 'geometry', ',', 'and', 'an', 'appropriate', 'CNN', 'architecture', 'that', 'is', 'trained', 'to', 'regress', 'directly', 'from', 'a', '2', 'D', 'facial', 'image', 'to', 'the', 'corresponding', '3D', 'volume', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'RB', 'JJ', 'NN', 'WDT', 'VBZ', 'JJ', 'IN', 'DT', 'NNS', 'VBD', 'IN', 'CD', 'NN', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'CD', 'JJ', 'NN', ',', 'CC', 'DT', 'JJ', 'NNP', 'NN', 'WDT', 'VBZ', 'VBN', 'TO', 'VB', 'RB', 'IN', 'DT', 'CD', 'NNP', 'JJ', 'NN', 'TO', 'DT', 'JJ', 'CD', 'NN', '.']",52
face_alignment,1,147,"Each of our architectures was trained end - to - end using RMSProp with an initial learning rate of 10 ? 4 , which was lowered after 40 epochs to 10 ?5 .","['Each', 'of', 'our', 'architectures', 'was', 'trained', 'end', '-', 'to', '-', 'end', 'using', 'RMSProp', 'with', 'an', 'initial', 'learning', 'rate', 'of', '10', '?', '4', ',', 'which', 'was', 'lowered', 'after', '40', 'epochs', 'to', '10', '?5', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'IN', 'PRP$', 'NNS', 'VBD', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'VBG', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.', 'CD', ',', 'WDT', 'VBD', 'VBN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NNS', '.']",33
face_alignment,1,148,"During training , random augmentation was applied to each input sample ( face image ) and its corresponding target ( 3D volume ) : we applied in - plane rotation r ? [ ?45 , ... , 45 ] , translation t z , t y ? [ ? 15 , ... , 15 ] and scale s ? [ 0.85 , ... , 1.15 ] jitter .","['During', 'training', ',', 'random', 'augmentation', 'was', 'applied', 'to', 'each', 'input', 'sample', '(', 'face', 'image', ')', 'and', 'its', 'corresponding', 'target', '(', '3D', 'volume', ')', ':', 'we', 'applied', 'in', '-', 'plane', 'rotation', 'r', '?', '[', '?45', ',', '...', ',', '45', ']', ',', 'translation', 't', 'z', ',', 't', 'y', '?', '[', '?', '15', ',', '...', ',', '15', ']', 'and', 'scale', 's', '?', '[', '0.85', ',', '...', ',', '1.15', ']', 'jitter', '.']","['B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'JJ', 'NN', 'VBD', 'VBN', 'TO', 'DT', 'NN', 'NN', '(', 'JJ', 'NN', ')', 'CC', 'PRP$', 'NN', 'NN', '(', 'CD', 'NN', ')', ':', 'PRP', 'VBD', 'IN', ':', 'NN', 'NN', 'NN', '.', 'JJ', 'NN', ',', ':', ',', 'CD', 'NN', ',', 'NN', 'NN', 'NN', ',', 'NN', 'NN', '.', 'VB', '.', 'CD', ',', ':', ',', 'CD', 'NN', 'CC', 'NN', 'NN', '.', '$', 'CD', ',', ':', ',', 'CD', 'NN', 'NN', '.']",68
face_alignment,1,149,"In 20 % of cases , the input and target were flipped horizontally .","['In', '20', '%', 'of', 'cases', ',', 'the', 'input', 'and', 'target', 'were', 'flipped', 'horizontally', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'CD', 'NN', 'IN', 'NNS', ',', 'DT', 'NN', 'CC', 'NN', 'VBD', 'VBN', 'RB', '.']",14
face_alignment,1,150,"Finally , the input samples were adjusted with some colour scaling on each RGB channel .","['Finally', ',', 'the', 'input', 'samples', 'were', 'adjusted', 'with', 'some', 'colour', 'scaling', 'on', 'each', 'RGB', 'channel', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NN', 'NNS', 'VBD', 'VBN', 'IN', 'DT', 'NNS', 'VBG', 'IN', 'DT', 'NNP', 'NN', '.']",16
face_alignment,1,151,"In the case of the VRN - Guided , the landmark detection module was trained to regress Gaussians with standard deviation of approximately 3 pixels (? = 1 ) .","['In', 'the', 'case', 'of', 'the', 'VRN', '-', 'Guided', ',', 'the', 'landmark', 'detection', 'module', 'was', 'trained', 'to', 'regress', 'Gaussians', 'with', 'standard', 'deviation', 'of', 'approximately', '3', 'pixels', '(?', '=', '1', ')', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'DT', 'NNP', ':', 'VBD', ',', 'DT', 'NN', 'NN', 'NN', 'VBD', 'VBN', 'TO', 'VB', 'NNPS', 'IN', 'JJ', 'NN', 'IN', 'RB', 'CD', 'NNS', 'VBP', 'RB', 'CD', ')', '.']",30
face_alignment,1,159,Volumetric Regression Networks largely outperform,"['Volumetric', 'Regression', 'Networks', 'largely', 'outperform']","['B-n', 'I-n', 'I-n', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'RB', 'VB']",5
face_alignment,1,160,"3DDFA and EOS on all datasets , verifying that directly regressing the 3D facial structure is a much easier problem for CNN learning .","['3DDFA', 'and', 'EOS', 'on', 'all', 'datasets', ',', 'verifying', 'that', 'directly', 'regressing', 'the', '3D', 'facial', 'structure', 'is', 'a', 'much', 'easier', 'problem', 'for', 'CNN', 'learning', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'CC', 'NNP', 'IN', 'DT', 'NNS', ',', 'VBG', 'IN', 'RB', 'VBG', 'DT', 'CD', 'JJ', 'NN', 'VBZ', 'DT', 'RB', 'JJR', 'NN', 'IN', 'NNP', 'NN', '.']",24
face_alignment,1,161,"2 . All VRNs perform well across the whole spectrum of facial poses , expressions and occlusions .","['2', '.', 'All', 'VRNs', 'perform', 'well', 'across', 'the', 'whole', 'spectrum', 'of', 'facial', 'poses', ',', 'expressions', 'and', 'occlusions', '.']","['O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O']","['CD', '.', 'DT', 'NNP', 'NN', 'RB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', ',', 'NNS', 'CC', 'NNS', '.']",18
face_alignment,1,163,"3 . The best performing VRN is the one guided by detected landmarks , however at the cost of higher computational complexity :","['3', '.', 'The', 'best', 'performing', 'VRN', 'is', 'the', 'one', 'guided', 'by', 'detected', 'landmarks', ',', 'however', 'at', 'the', 'cost', 'of', 'higher', 'computational', 'complexity', ':']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['LS', '.', 'DT', 'JJS', 'NN', 'NNP', 'VBZ', 'DT', 'NN', 'VBN', 'IN', 'JJ', 'NNS', ',', 'RB', 'IN', 'DT', 'NN', 'IN', 'JJR', 'JJ', 'NN', ':']",23
face_alignment,1,165,"4 . VRN - Multitask does not always perform particularly better than the plain VRN ( in fact on BU - 4 DFE it performs worse ) , not justifying the increase of network complexity .","['4', '.', 'VRN', '-', 'Multitask', 'does', 'not', 'always', 'perform', 'particularly', 'better', 'than', 'the', 'plain', 'VRN', '(', 'in', 'fact', 'on', 'BU', '-', '4', 'DFE', 'it', 'performs', 'worse', ')', ',', 'not', 'justifying', 'the', 'increase', 'of', 'network', 'complexity', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', '.', 'NNP', ':', 'NN', 'VBZ', 'RB', 'RB', 'VBP', 'RB', 'JJR', 'IN', 'DT', 'NN', 'NNP', '(', 'IN', 'NN', 'IN', 'NNP', ':', 'CD', 'NNP', 'PRP', 'VBZ', 'JJR', ')', ',', 'RB', 'VBG', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",36
face_alignment,1,200,Effect of pose .,"['Effect', 'of', 'pose', '.']","['B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'NN', '.']",4
face_alignment,1,202,"As shown in , the performance of our method decreases as the pose increases .","['As', 'shown', 'in', ',', 'the', 'performance', 'of', 'our', 'method', 'decreases', 'as', 'the', 'pose', 'increases', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'B-n', 'O']","['IN', 'VBN', 'IN', ',', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NNS', '.']",15
face_alignment,1,205,Effect of expression .,"['Effect', 'of', 'expression', '.']","['B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'NN', '.']",4
face_alignment,1,208,"This kind of extreme acted facial expressions generally do not occur in the training set , yet as shown in , the performance variation across different expressions is quite minor .","['This', 'kind', 'of', 'extreme', 'acted', 'facial', 'expressions', 'generally', 'do', 'not', 'occur', 'in', 'the', 'training', 'set', ',', 'yet', 'as', 'shown', 'in', ',', 'the', 'performance', 'variation', 'across', 'different', 'expressions', 'is', 'quite', 'minor', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NN', 'VBN', 'JJ', 'NNS', 'RB', 'VBP', 'RB', 'VB', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'IN', 'VBN', 'IN', ',', 'DT', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'VBZ', 'RB', 'JJ', '.']",31
face_alignment,1,209,Effect of Gaussian size for guidance .,"['Effect', 'of', 'Gaussian', 'size', 'for', 'guidance', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'JJ', 'NN', 'IN', 'NN', '.']",7
face_alignment,1,211,"The performance of the 3D reconstruction dropped by a negligible amount , suggesting that as long as the Gaussians are of a sensible size , guidance will always help .","['The', 'performance', 'of', 'the', '3D', 'reconstruction', 'dropped', 'by', 'a', 'negligible', 'amount', ',', 'suggesting', 'that', 'as', 'long', 'as', 'the', 'Gaussians', 'are', 'of', 'a', 'sensible', 'size', ',', 'guidance', 'will', 'always', 'help', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'DT', 'CD', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', ',', 'VBG', 'IN', 'RB', 'RB', 'IN', 'DT', 'NNPS', 'VBP', 'IN', 'DT', 'JJ', 'NN', ',', 'NN', 'MD', 'RB', 'VB', '.']",30
face_alignment,5,2,Look at Boundary : A Boundary - Aware Face Alignment Algorithm,"['Look', 'at', 'Boundary', ':', 'A', 'Boundary', '-', 'Aware', 'Face', 'Alignment', 'Algorithm']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['NN', 'IN', 'NNP', ':', 'DT', 'NNP', ':', 'JJ', 'NNP', 'NNP', 'NNP']",11
face_alignment,5,14,Dataset and model will be publicly available at https://wywu.github.io/projects/LAB/LAB.html,"['Dataset', 'and', 'model', 'will', 'be', 'publicly', 'available', 'at', 'https://wywu.github.io/projects/LAB/LAB.html']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['NNP', 'CC', 'NN', 'MD', 'VB', 'RB', 'JJ', 'IN', 'NN']",9
face_alignment,5,16,"Face alignment , which refers to facial landmark detection in this work , serves as a key step for many face applications , e.g. , face recognition , face verification and face frontalisation .","['Face', 'alignment', ',', 'which', 'refers', 'to', 'facial', 'landmark', 'detection', 'in', 'this', 'work', ',', 'serves', 'as', 'a', 'key', 'step', 'for', 'many', 'face', 'applications', ',', 'e.g.', ',', 'face', 'recognition', ',', 'face', 'verification', 'and', 'face', 'frontalisation', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ',', 'WDT', 'VBZ', 'TO', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'VBZ', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NNS', ',', 'NN', ',', 'NN', 'NN', ',', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",34
face_alignment,5,28,"To this end , we use well - defined facial boundaries to represent the geometric structure of the human face .","['To', 'this', 'end', ',', 'we', 'use', 'well', '-', 'defined', 'facial', 'boundaries', 'to', 'represent', 'the', 'geometric', 'structure', 'of', 'the', 'human', 'face', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['TO', 'DT', 'NN', ',', 'PRP', 'VBP', 'RB', ':', 'VBN', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",21
face_alignment,5,30,"In this work , we represent facial structure using 13 boundary lines .","['In', 'this', 'work', ',', 'we', 'represent', 'facial', 'structure', 'using', '13', 'boundary', 'lines', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'VBG', 'CD', 'JJ', 'NNS', '.']",13
face_alignment,5,32,Our boundary - aware face alignment algorithm contains two stages .,"['Our', 'boundary', '-', 'aware', 'face', 'alignment', 'algorithm', 'contains', 'two', 'stages', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'JJ', ':', 'JJ', 'NN', 'NN', 'NN', 'VBZ', 'CD', 'NNS', '.']",11
face_alignment,5,33,We first estimate facial boundary heatmaps and then regress landmarks with the help of boundary heatmaps .,"['We', 'first', 'estimate', 'facial', 'boundary', 'heatmaps', 'and', 'then', 'regress', 'landmarks', 'with', 'the', 'help', 'of', 'boundary', 'heatmaps', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'JJ', 'JJ', 'NNS', 'CC', 'RB', 'VB', 'NNS', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', '.']",17
face_alignment,5,35,"To explore the relationship between facial boundaries and landmarks , we introduce adversarial learning ideas by using a landmark - based boundary effectiveness discriminator .","['To', 'explore', 'the', 'relationship', 'between', 'facial', 'boundaries', 'and', 'landmarks', ',', 'we', 'introduce', 'adversarial', 'learning', 'ideas', 'by', 'using', 'a', 'landmark', '-', 'based', 'boundary', 'effectiveness', 'discriminator', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'CC', 'NNS', ',', 'PRP', 'VBP', 'JJ', 'VBG', 'NNS', 'IN', 'VBG', 'DT', 'NN', ':', 'VBN', 'JJ', 'NN', 'NN', '.']",25
face_alignment,5,37,"The boundary heatmap estimator , landmark regressor , and boundary effectiveness discriminator can be jointly learned in an end - to - end manner .","['The', 'boundary', 'heatmap', 'estimator', ',', 'landmark', 'regressor', ',', 'and', 'boundary', 'effectiveness', 'discriminator', 'can', 'be', 'jointly', 'learned', 'in', 'an', 'end', '-', 'to', '-', 'end', 'manner', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', ',', 'NN', 'NN', ',', 'CC', 'JJ', 'NN', 'NN', 'MD', 'VB', 'RB', 'VBN', 'IN', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', '.']",25
face_alignment,5,38,We used stacked hourglass structure to estimate facial boundary heatmap and model the structure between facial boundaries through message passing to increase its robustness to occlusion .,"['We', 'used', 'stacked', 'hourglass', 'structure', 'to', 'estimate', 'facial', 'boundary', 'heatmap', 'and', 'model', 'the', 'structure', 'between', 'facial', 'boundaries', 'through', 'message', 'passing', 'to', 'increase', 'its', 'robustness', 'to', 'occlusion', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'JJ', 'NN', 'NN', 'TO', 'VB', 'JJ', 'JJ', 'NN', 'CC', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'TO', 'VB', 'PRP$', 'NN', 'TO', 'NN', '.']",27
face_alignment,5,40,The boundary heatmaps serve as structure cue to guide feature learning for the landmark regressor .,"['The', 'boundary', 'heatmaps', 'serve', 'as', 'structure', 'cue', 'to', 'guide', 'feature', 'learning', 'for', 'the', 'landmark', 'regressor', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'VBP', 'IN', 'NN', 'NN', 'TO', 'VB', 'NN', 'VBG', 'IN', 'DT', 'NN', 'NN', '.']",16
face_alignment,5,224,All our models are trained with Caffe [ 24 ] on 4 Titan X GPUs .,"['All', 'our', 'models', 'are', 'trained', 'with', 'Caffe', '[', '24', ']', 'on', '4', 'Titan', 'X', 'GPUs', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'PRP$', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'CD', 'NN', 'IN', 'CD', 'NNP', 'NNP', 'NNP', '.']",16
face_alignment,5,227,Comparison with existing approaches 4.1.1 Evaluation on 300W,"['Comparison', 'with', 'existing', 'approaches', '4.1.1', 'Evaluation', 'on', '300W']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n']","['NNP', 'IN', 'VBG', 'NNS', 'CD', 'NNP', 'IN', 'CD']",8
face_alignment,5,231,Our method performs best among all of the state - of - the - art methods .,"['Our', 'method', 'performs', 'best', 'among', 'all', 'of', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NNS', 'RBS', 'IN', 'DT', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",17
face_alignment,5,234,Evaluation on WFLW,"['Evaluation', 'on', 'WFLW']","['O', 'O', 'B-n']","['NN', 'IN', 'NNP']",3
face_alignment,5,237,"Though reasonable performance is obtained , there is illustrated to be still a lot of room for improvement for the extreme diversity of samples on WFLW , e.g. , large pose , exaggerated expressions and heavy occlusion .","['Though', 'reasonable', 'performance', 'is', 'obtained', ',', 'there', 'is', 'illustrated', 'to', 'be', 'still', 'a', 'lot', 'of', 'room', 'for', 'improvement', 'for', 'the', 'extreme', 'diversity', 'of', 'samples', 'on', 'WFLW', ',', 'e.g.', ',', 'large', 'pose', ',', 'exaggerated', 'expressions', 'and', 'heavy', 'occlusion', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NN', 'VBZ', 'VBN', ',', 'EX', 'VBZ', 'VBN', 'TO', 'VB', 'RB', 'DT', 'NN', 'IN', 'NN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'NNP', ',', 'NN', ',', 'JJ', 'NN', ',', 'JJ', 'NNS', 'CC', 'JJ', 'NN', '.']",38
face_alignment,5,238,Cross - dataset evaluation on COFW and AFLW,"['Cross', '-', 'dataset', 'evaluation', 'on', 'COFW', 'and', 'AFLW']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'NN', 'IN', 'NNP', 'CC', 'NNP']",8
face_alignment,5,241,Our model outperforms previous results with a large margin .,"['Our', 'model', 'outperforms', 'previous', 'results', 'with', 'a', 'large', 'margin', '.']","['B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",10
face_alignment,5,242,We achieve 4.62 % mean error with 2.17 % failure rate .,"['We', 'achieve', '4.62', '%', 'mean', 'error', 'with', '2.17', '%', 'failure', 'rate', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'NN', 'JJ', 'NN', 'IN', 'CD', 'NN', 'NN', 'NN', '.']",12
face_alignment,5,243,"The failure rate is significantly reduced by 3.75 % , which indicates the robustness of our method to handle occlusions .","['The', 'failure', 'rate', 'is', 'significantly', 'reduced', 'by', '3.75', '%', ',', 'which', 'indicates', 'the', 'robustness', 'of', 'our', 'method', 'to', 'handle', 'occlusions', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'CD', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'TO', 'VB', 'NNS', '.']",21
face_alignment,5,249,"Moreover , our method uses boundary information achieves 29 % , 32 % and 29 % relative performance improve- ment over the baseline method ( "" LAB without boundary "" ) on COFW - 29 , AFLW - Full and AFLW - Frontal respectively .","['Moreover', ',', 'our', 'method', 'uses', 'boundary', 'information', 'achieves', '29', '%', ',', '32', '%', 'and', '29', '%', 'relative', 'performance', 'improve-', 'ment', 'over', 'the', 'baseline', 'method', '(', '""', 'LAB', 'without', 'boundary', '""', ')', 'on', 'COFW', '-', '29', ',', 'AFLW', '-', 'Full', 'and', 'AFLW', '-', 'Frontal', 'respectively', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['RB', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'NN', 'VBZ', 'CD', 'NN', ',', 'CD', 'NN', 'CC', 'CD', 'NN', 'JJ', 'NN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', '(', 'JJ', 'NNP', 'IN', 'JJ', 'NN', ')', 'IN', 'NNP', ':', 'CD', ',', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NNP', 'RB', '.']",45
face_alignment,5,260,"It can be observed easily that boundary map ( "" BM "" ) is the most effective one .","['It', 'can', 'be', 'observed', 'easily', 'that', 'boundary', 'map', '(', '""', 'BM', '""', ')', 'is', 'the', 'most', 'effective', 'one', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'RB', 'IN', 'JJ', 'NN', '(', 'JJ', 'NNP', 'NNP', ')', 'VBZ', 'DT', 'RBS', 'JJ', 'CD', '.']",19
face_alignment,5,261,Boundary information fusion is one of the key steps in our algorithm .,"['Boundary', 'information', 'fusion', 'is', 'one', 'of', 'the', 'key', 'steps', 'in', 'our', 'algorithm', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['JJ', 'NN', 'NN', 'VBZ', 'CD', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', '.']",13
face_alignment,5,263,"As indicated in , our final model that fuses boundary information in all four levels improves mean error from 7.12 % to 6.13 % .","['As', 'indicated', 'in', ',', 'our', 'final', 'model', 'that', 'fuses', 'boundary', 'information', 'in', 'all', 'four', 'levels', 'improves', 'mean', 'error', 'from', '7.12', '%', 'to', '6.13', '%', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'JJ', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'CD', 'NNS', 'VBZ', 'JJ', 'NN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', '.']",25
face_alignment,5,265,It can be observed that performance is improved consistently by fusing boundary heatmaps at more levels .,"['It', 'can', 'be', 'observed', 'that', 'performance', 'is', 'improved', 'consistently', 'by', 'fusing', 'boundary', 'heatmaps', 'at', 'more', 'levels', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'VBN', 'DT', 'NN', 'VBZ', 'VBN', 'RB', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'JJR', 'NNS', '.']",17
face_alignment,5,268,"The comparison between "" BL + HG "" and "" BL + HG/ B "" indicates the effectiveness of boundary information fusion rather than network structure changes .","['The', 'comparison', 'between', '""', 'BL', '+', 'HG', '""', 'and', '""', 'BL', '+', 'HG/', 'B', '""', 'indicates', 'the', 'effectiveness', 'of', 'boundary', 'information', 'fusion', 'rather', 'than', 'network', 'structure', 'changes', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', 'RB', 'IN', 'NN', 'NN', 'NNS', '.']",28
face_alignment,5,269,"The comparison between "" BL + HG "" and "" BL + CL "" indicates the effectiveness of the using hourglass structure design .","['The', 'comparison', 'between', '""', 'BL', '+', 'HG', '""', 'and', '""', 'BL', '+', 'CL', '""', 'indicates', 'the', 'effectiveness', 'of', 'the', 'using', 'hourglass', 'structure', 'design', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'VBG', 'NN', 'NN', 'NN', '.']",24
face_alignment,5,270,Message passing plays a vital role for heatmap quality improvement when severe occlusions happen .,"['Message', 'passing', 'plays', 'a', 'vital', 'role', 'for', 'heatmap', 'quality', 'improvement', 'when', 'severe', 'occlusions', 'happen', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'O']","['NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'WRB', 'JJ', 'NNS', 'VBP', '.']",15
face_alignment,5,272,Adversarial learning further improves the quality and effectiveness of boundary heatmaps .,"['Adversarial', 'learning', 'further', 'improves', 'the', 'quality', 'and', 'effectiveness', 'of', 'boundary', 'heatmaps', '.']","['B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', 'VBG', 'JJ', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'IN', 'JJ', 'NNS', '.']",12
face_alignment,11,2,Unsupervised Training for 3D Morphable Model Regression,"['Unsupervised', 'Training', 'for', '3D', 'Morphable', 'Model', 'Regression']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NN', 'IN', 'CD', 'JJ', 'NNP', 'NNP']",7
face_alignment,11,20,This paper presents a method for training a regression network that removes both the need for supervised training data and the reliance on inverse rendering to reproduce image pixels .,"['This', 'paper', 'presents', 'a', 'method', 'for', 'training', 'a', 'regression', 'network', 'that', 'removes', 'both', 'the', 'need', 'for', 'supervised', 'training', 'data', 'and', 'the', 'reliance', 'on', 'inverse', 'rendering', 'to', 'reproduce', 'image', 'pixels', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'CC', 'DT', 'NN', 'IN', 'JJ', 'VBG', 'TO', 'VB', 'NN', 'NNS', '.']",30
face_alignment,11,21,"Instead , the network learns to minimize a loss based on the facial identity features produced by a face recognition network such as VGG - Face or Google 's FaceNet .","['Instead', ',', 'the', 'network', 'learns', 'to', 'minimize', 'a', 'loss', 'based', 'on', 'the', 'facial', 'identity', 'features', 'produced', 'by', 'a', 'face', 'recognition', 'network', 'such', 'as', 'VGG', '-', 'Face', 'or', 'Google', ""'s"", 'FaceNet', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'NN', 'NN', 'JJ', 'IN', 'NNP', ':', 'NN', 'CC', 'NNP', 'POS', 'NNP', '.']",31
face_alignment,11,23,We exploit this invariance to apply a loss that matches the identity features between the input photograph and a synthetic rendering of the predicted face .,"['We', 'exploit', 'this', 'invariance', 'to', 'apply', 'a', 'loss', 'that', 'matches', 'the', 'identity', 'features', 'between', 'the', 'input', 'photograph', 'and', 'a', 'synthetic', 'rendering', 'of', 'the', 'predicted', 'face', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",26
face_alignment,11,26,"We alleviate the fooling problem by applying three novel losses : a batch distribution loss to match the statistics of each training batch to the statistics of the morphable model , a loopback loss to ensure the regression network can correctly reinterpret its own output , and a multi-view identity loss that combines features from multiple , independent views of the predicted shape .","['We', 'alleviate', 'the', 'fooling', 'problem', 'by', 'applying', 'three', 'novel', 'losses', ':', 'a', 'batch', 'distribution', 'loss', 'to', 'match', 'the', 'statistics', 'of', 'each', 'training', 'batch', 'to', 'the', 'statistics', 'of', 'the', 'morphable', 'model', ',', 'a', 'loopback', 'loss', 'to', 'ensure', 'the', 'regression', 'network', 'can', 'correctly', 'reinterpret', 'its', 'own', 'output', ',', 'and', 'a', 'multi-view', 'identity', 'loss', 'that', 'combines', 'features', 'from', 'multiple', ',', 'independent', 'views', 'of', 'the', 'predicted', 'shape', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'VBG', 'CD', 'JJ', 'NNS', ':', 'DT', 'NN', 'NN', 'NN', 'TO', 'VB', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', 'TO', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'MD', 'RB', 'VB', 'PRP$', 'JJ', 'NN', ',', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'VBZ', 'NNS', 'IN', 'JJ', ',', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",64
face_alignment,11,27,"Using this scheme , we train a 3D shape and texture regression network using only a face recognition network , a morphable face model , and a dataset of unlabeled face images .","['Using', 'this', 'scheme', ',', 'we', 'train', 'a', '3D', 'shape', 'and', 'texture', 'regression', 'network', 'using', 'only', 'a', 'face', 'recognition', 'network', ',', 'a', 'morphable', 'face', 'model', ',', 'and', 'a', 'dataset', 'of', 'unlabeled', 'face', 'images', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'CD', 'NN', 'CC', 'NN', 'NN', 'NN', 'VBG', 'RB', 'DT', 'NN', 'NN', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', ',', 'CC', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",33
face_alignment,11,28,"We show that despite learning from unlabeled photographs , the 3D face results improve on the accuracy of previous work and are often recognizable as the original subjects .","['We', 'show', 'that', 'despite', 'learning', 'from', 'unlabeled', 'photographs', ',', 'the', '3D', 'face', 'results', 'improve', 'on', 'the', 'accuracy', 'of', 'previous', 'work', 'and', 'are', 'often', 'recognizable', 'as', 'the', 'original', 'subjects', '.']","['O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'IN', 'VBG', 'IN', 'JJ', 'NN', ',', 'DT', 'CD', 'NN', 'NNS', 'VB', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'CC', 'VBP', 'RB', 'JJ', 'IN', 'DT', 'JJ', 'NNS', '.']",29
face_alignment,11,184,Neutral Pose Reconstruction on MICC,"['Neutral', 'Pose', 'Reconstruction', 'on', 'MICC']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'IN', 'NNP']",5
face_alignment,11,194,"Our results indicate that we have improved absolute error to the ground truth by 20 - 25 % , and our results are more consistent from person to person , with less than half the standard deviation when compared to .","['Our', 'results', 'indicate', 'that', 'we', 'have', 'improved', 'absolute', 'error', 'to', 'the', 'ground', 'truth', 'by', '20', '-', '25', '%', ',', 'and', 'our', 'results', 'are', 'more', 'consistent', 'from', 'person', 'to', 'person', ',', 'with', 'less', 'than', 'half', 'the', 'standard', 'deviation', 'when', 'compared', 'to', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNS', 'VBP', 'IN', 'PRP', 'VBP', 'VBN', 'JJ', 'NN', 'TO', 'DT', 'NN', 'NN', 'IN', 'CD', ':', 'CD', 'NN', ',', 'CC', 'PRP$', 'NNS', 'VBP', 'JJR', 'JJ', 'IN', 'NN', 'TO', 'NN', ',', 'IN', 'JJR', 'IN', 'PDT', 'DT', 'JJ', 'NN', 'WRB', 'VBN', 'TO', '.']",41
face_alignment,11,195,"We are also more stable across changing environments , with similar results for all three test sets .","['We', 'are', 'also', 'more', 'stable', 'across', 'changing', 'environments', ',', 'with', 'similar', 'results', 'for', 'all', 'three', 'test', 'sets', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'RB', 'RBR', 'JJ', 'IN', 'VBG', 'NNS', ',', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'CD', 'NN', 'NNS', '.']",18
face_alignment,11,196,Face Recognition Results,"['Face', 'Recognition', 'Results']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_alignment,11,202,Our method achieves an average similarity between rendering and photo of 0.403 on MoFA test ( the dataset for which results for all methods are available ) .,"['Our', 'method', 'achieves', 'an', 'average', 'similarity', 'between', 'rendering', 'and', 'photo', 'of', '0.403', 'on', 'MoFA', 'test', '(', 'the', 'dataset', 'for', 'which', 'results', 'for', 'all', 'methods', 'are', 'available', ')', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'CC', 'NN', 'IN', 'CD', 'IN', 'NNP', 'NN', '(', 'DT', 'NN', 'IN', 'WDT', 'NNS', 'IN', 'DT', 'NNS', 'VBP', 'JJ', ')', '.']",28
face_alignment,11,205,"Our method 's results are closer to the same - person distribution than the differentperson distribution in all cases , while the other methods results ' are closer to the different - person distribution .","['Our', 'method', ""'s"", 'results', 'are', 'closer', 'to', 'the', 'same', '-', 'person', 'distribution', 'than', 'the', 'differentperson', 'distribution', 'in', 'all', 'cases', ',', 'while', 'the', 'other', 'methods', 'results', ""'"", 'are', 'closer', 'to', 'the', 'different', '-', 'person', 'distribution', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'POS', 'NNS', 'VBP', 'JJR', 'TO', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', ',', 'IN', 'DT', 'JJ', 'NNS', 'NNS', 'POS', 'VBP', 'RBR', 'TO', 'DT', 'JJ', ':', 'NN', 'NN', '.']",35
face_alignment,11,211,"Notably , the distance between the GT distribution and the same - person LFW distribution is very low , with almost the same mean ( 0.51 vs 0.50 ) , indicating the VGG - Face network has little trouble bridging the domain gap between photograph and rendering , and that our method does not yet reach the ground - truth baseline .","['Notably', ',', 'the', 'distance', 'between', 'the', 'GT', 'distribution', 'and', 'the', 'same', '-', 'person', 'LFW', 'distribution', 'is', 'very', 'low', ',', 'with', 'almost', 'the', 'same', 'mean', '(', '0.51', 'vs', '0.50', ')', ',', 'indicating', 'the', 'VGG', '-', 'Face', 'network', 'has', 'little', 'trouble', 'bridging', 'the', 'domain', 'gap', 'between', 'photograph', 'and', 'rendering', ',', 'and', 'that', 'our', 'method', 'does', 'not', 'yet', 'reach', 'the', 'ground', '-', 'truth', 'baseline', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'CC', 'DT', 'JJ', ':', 'NN', 'NNP', 'NN', 'VBZ', 'RB', 'JJ', ',', 'IN', 'RB', 'DT', 'JJ', 'NN', '(', 'CD', 'RB', 'CD', ')', ',', 'VBG', 'DT', 'NNP', ':', 'NN', 'NN', 'VBZ', 'RB', 'NN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'NN', 'CC', 'NN', ',', 'CC', 'IN', 'PRP$', 'NN', 'VBZ', 'RB', 'RB', 'VB', 'DT', 'NN', ':', 'NN', 'NN', '.']",62
face_alignment,14,2,Faster Than Real - time Facial Alignment : A 3D Spatial Transformer Network Approach in Unconstrained Poses,"['Faster', 'Than', 'Real', '-', 'time', 'Facial', 'Alignment', ':', 'A', '3D', 'Spatial', 'Transformer', 'Network', 'Approach', 'in', 'Unconstrained', 'Poses']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJR', 'NNP', 'NNP', ':', 'NN', 'JJ', 'NN', ':', 'DT', 'CD', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNS']",17
face_alignment,14,14,Robust face recognition and analysis are contingent upon accurate localization of facial features .,"['Robust', 'face', 'recognition', 'and', 'analysis', 'are', 'contingent', 'upon', 'accurate', 'localization', 'of', 'facial', 'features', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'NN', 'NN', 'CC', 'NN', 'VBP', 'JJ', 'IN', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",14
face_alignment,14,33,"In our method , we follow this idea and observe that fairly accurate 3 D models can be generated by using a simple mean shape deformed to the input image at a relatively low computational cost compared to other approaches .","['In', 'our', 'method', ',', 'we', 'follow', 'this', 'idea', 'and', 'observe', 'that', 'fairly', 'accurate', '3', 'D', 'models', 'can', 'be', 'generated', 'by', 'using', 'a', 'simple', 'mean', 'shape', 'deformed', 'to', 'the', 'input', 'image', 'at', 'a', 'relatively', 'low', 'computational', 'cost', 'compared', 'to', 'other', 'approaches', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'PRP$', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'VB', 'DT', 'RB', 'JJ', 'CD', 'NNP', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'VBD', 'TO', 'DT', 'NN', 'NN', 'IN', 'DT', 'RB', 'JJ', 'JJ', 'NN', 'VBN', 'TO', 'JJ', 'NNS', '.']",41
face_alignment,14,203,Our network is implemented in the Caffe framework .,"['Our', 'network', 'is', 'implemented', 'in', 'the', 'Caffe', 'framework', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",9
face_alignment,14,204,"A new layer is created consisting of the 3D TPS transformation module , the camera projection module and the bilinear sampler module .","['A', 'new', 'layer', 'is', 'created', 'consisting', 'of', 'the', '3D', 'TPS', 'transformation', 'module', ',', 'the', 'camera', 'projection', 'module', 'and', 'the', 'bilinear', 'sampler', 'module', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'VBG', 'IN', 'DT', 'CD', 'NNP', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', '.']",23
face_alignment,14,206,"We adopt two architectures , AlexNet and VGG - 16 , as the pre-trained models for our shared feature extraction networks in , i.e. we use the convolution layers from the pre-trained models to initialize ours .","['We', 'adopt', 'two', 'architectures', ',', 'AlexNet', 'and', 'VGG', '-', '16', ',', 'as', 'the', 'pre-trained', 'models', 'for', 'our', 'shared', 'feature', 'extraction', 'networks', 'in', ',', 'i.e.', 'we', 'use', 'the', 'convolution', 'layers', 'from', 'the', 'pre-trained', 'models', 'to', 'initialize', 'ours', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['PRP', 'VBP', 'CD', 'NNS', ',', 'NNP', 'CC', 'NNP', ':', 'CD', ',', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'JJ', 'NN', 'NN', 'NNS', 'IN', ',', 'FW', 'PRP', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'TO', 'VB', 'NNS', '.']",37
face_alignment,14,208,"For the AlexNet architecture , we freeze the first layer while for the VGG - 16 architecture , the first 4 layers are frozen .","['For', 'the', 'AlexNet', 'architecture', ',', 'we', 'freeze', 'the', 'first', 'layer', 'while', 'for', 'the', 'VGG', '-', '16', 'architecture', ',', 'the', 'first', '4', 'layers', 'are', 'frozen', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'IN', 'DT', 'NNP', ':', 'CD', 'NN', ',', 'DT', 'JJ', 'CD', 'NNS', 'VBP', 'JJ', '.']",25
face_alignment,14,209,The 2D landmark regression is implemented by attaching additional layers on top of the last convolution layer .,"['The', '2D', 'landmark', 'regression', 'is', 'implemented', 'by', 'attaching', 'additional', 'layers', 'on', 'top', 'of', 'the', 'last', 'convolution', 'layer', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'CD', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",18
face_alignment,7,2,Joint 3D Face Reconstruction and Dense Alignment with Position Map Regression Network,"['Joint', '3D', 'Face', 'Reconstruction', 'and', 'Dense', 'Alignment', 'with', 'Position', 'Map', 'Regression', 'Network']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', 'CD', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",12
face_alignment,7,10,Code is available at https://github.com/YadiraF/PRNet.,"['Code', 'is', 'available', 'at', 'https://github.com/YadiraF/PRNet.']","['O', 'O', 'O', 'O', 'B-n']","['NNP', 'VBZ', 'JJ', 'IN', 'NN']",5
face_alignment,7,12,3 D face reconstruction and face alignment are two fundamental and highly related topics in computer vision .,"['3', 'D', 'face', 'reconstruction', 'and', 'face', 'alignment', 'are', 'two', 'fundamental', 'and', 'highly', 'related', 'topics', 'in', 'computer', 'vision', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'NN', 'NN', 'CC', 'NN', 'NN', 'VBP', 'CD', 'JJ', 'CC', 'RB', 'JJ', 'NNS', 'IN', 'NN', 'NN', '.']",18
face_alignment,7,27,"In this paper , we propose an end - to - end method called Position map Regression Network ( PRN ) to jointly predict dense alignment and reconstruct 3 D face shape .","['In', 'this', 'paper', ',', 'we', 'propose', 'an', 'end', '-', 'to', '-', 'end', 'method', 'called', 'Position', 'map', 'Regression', 'Network', '(', 'PRN', ')', 'to', 'jointly', 'predict', 'dense', 'alignment', 'and', 'reconstruct', '3', 'D', 'face', 'shape', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', 'VBN', 'NNP', 'NN', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'RB', 'VB', 'NN', 'NN', 'CC', 'NN', 'CD', 'NNP', 'NN', 'NN', '.']",33
face_alignment,7,31,"Specifically , we design a UV position map , which is a 2D image recording the 3D coordinates of a complete facial point cloud , and at the same time keeping the semantic meaning at each UV place .","['Specifically', ',', 'we', 'design', 'a', 'UV', 'position', 'map', ',', 'which', 'is', 'a', '2D', 'image', 'recording', 'the', '3D', 'coordinates', 'of', 'a', 'complete', 'facial', 'point', 'cloud', ',', 'and', 'at', 'the', 'same', 'time', 'keeping', 'the', 'semantic', 'meaning', 'at', 'each', 'UV', 'place', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'VBG', 'DT', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', ',', 'CC', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",39
face_alignment,7,32,We then train a simple encoder - decoder network with a weighted loss that focuses more on discriminative region to regress the UV position map from a single 2 D facial image .,"['We', 'then', 'train', 'a', 'simple', 'encoder', '-', 'decoder', 'network', 'with', 'a', 'weighted', 'loss', 'that', 'focuses', 'more', 'on', 'discriminative', 'region', 'to', 'regress', 'the', 'UV', 'position', 'map', 'from', 'a', 'single', '2', 'D', 'facial', 'image', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'JJR', 'IN', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NNP', 'NN', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NNP', 'JJ', 'NN', '.']",33
face_alignment,7,146,"For optimization , we use Adam optimizer with a learning rate begins at 0.0001 and decays half after each 5 epochs .","['For', 'optimization', ',', 'we', 'use', 'Adam', 'optimizer', 'with', 'a', 'learning', 'rate', 'begins', 'at', '0.0001', 'and', 'decays', 'half', 'after', 'each', '5', 'epochs', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'VBG', 'NN', 'NNS', 'IN', 'CD', 'CC', 'NNS', 'NN', 'IN', 'DT', 'CD', 'NN', '.']",22
face_alignment,7,147,The batch size is set as 16 .,"['The', 'batch', 'size', 'is', 'set', 'as', '16', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'CD', '.']",8
face_alignment,7,148,All of our training codes are implemented with TensorFlow .,"['All', 'of', 'our', 'training', 'codes', 'are', 'implemented', 'with', 'TensorFlow', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'IN', 'PRP$', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', '.']",10
face_alignment,7,168,3D Face Alignment,"['3D', 'Face', 'Alignment']","['B-n', 'I-n', 'I-n']","['CD', 'NNP', 'NNP']",3
face_alignment,7,172,"As shown in figure 5 , our result slightly outperforms the state - of - the - art method 3D - FAN when calculating per distance with 2D coordinates .","['As', 'shown', 'in', 'figure', '5', ',', 'our', 'result', 'slightly', 'outperforms', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'method', '3D', '-', 'FAN', 'when', 'calculating', 'per', 'distance', 'with', '2D', 'coordinates', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', 'NN', 'CD', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'CD', ':', 'NN', 'WRB', 'VBG', 'IN', 'NN', 'IN', 'CD', 'NNS', '.']",30
face_alignment,7,173,"When considering the depth value , the performance discrepancy between our method and 3D - FAN increases .","['When', 'considering', 'the', 'depth', 'value', ',', 'the', 'performance', 'discrepancy', 'between', 'our', 'method', 'and', '3D', '-', 'FAN', 'increases', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'O']","['WRB', 'VBG', 'DT', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'CC', 'CD', ':', 'NN', 'NNS', '.']",18
face_alignment,7,178,The result shows that our method is robust to the change of pose and datasets .,"['The', 'result', 'shows', 'that', 'our', 'method', 'is', 'robust', 'to', 'the', 'change', 'of', 'pose', 'and', 'datasets', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'DT', 'NN', 'IN', 'NN', 'CC', 'NNS', '.']",16
face_alignment,7,184,Examples from AFLW2000 - 3 D dataset show that our predictions are more accurate than ground truth in some cases .,"['Examples', 'from', 'AFLW2000', '-', '3', 'D', 'dataset', 'show', 'that', 'our', 'predictions', 'are', 'more', 'accurate', 'than', 'ground', 'truth', 'in', 'some', 'cases', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['NNS', 'IN', 'NNP', ':', 'CD', 'NNP', 'NN', 'NN', 'IN', 'PRP$', 'NNS', 'VBP', 'RBR', 'JJ', 'IN', 'NN', 'NN', 'IN', 'DT', 'NNS', '.']",21
face_alignment,7,189,"As shown in figure 7 , our method outperforms the best methods with a large margin of more than 27 % on both 2 D and 3D coordinates . : CED curves on AFLW2000 - 3D .","['As', 'shown', 'in', 'figure', '7', ',', 'our', 'method', 'outperforms', 'the', 'best', 'methods', 'with', 'a', 'large', 'margin', 'of', 'more', 'than', '27', '%', 'on', 'both', '2', 'D', 'and', '3D', 'coordinates', '.', ':', 'CED', 'curves', 'on', 'AFLW2000', '-', '3D', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', 'NN', 'CD', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJR', 'IN', 'CD', 'NN', 'IN', 'DT', 'CD', 'NNP', 'CC', 'CD', 'NNS', '.', ':', 'JJ', 'NNS', 'IN', 'NNP', ':', 'CD', '.']",37
face_alignment,7,207,Network trained without using weight mask has worst performance compared with other two settings .,"['Network', 'trained', 'without', 'using', 'weight', 'mask', 'has', 'worst', 'performance', 'compared', 'with', 'other', 'two', 'settings', '.']","['B-n', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'VBD', 'IN', 'VBG', 'NN', 'NN', 'VBZ', 'VBN', 'NN', 'VBN', 'IN', 'JJ', 'CD', 'NNS', '.']",15
face_alignment,7,208,"By adding weights to specific regions such as 68 facial landmarks or central face region , weight ratio 3 shows considerable improvement on 68 points datasets over weight ratio 2 .","['By', 'adding', 'weights', 'to', 'specific', 'regions', 'such', 'as', '68', 'facial', 'landmarks', 'or', 'central', 'face', 'region', ',', 'weight', 'ratio', '3', 'shows', 'considerable', 'improvement', 'on', '68', 'points', 'datasets', 'over', 'weight', 'ratio', '2', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O']","['IN', 'VBG', 'NNS', 'TO', 'JJ', 'NNS', 'JJ', 'IN', 'CD', 'JJ', 'NNS', 'CC', 'JJ', 'NN', 'NN', ',', 'VBD', 'NN', 'CD', 'NNS', 'JJ', 'NN', 'IN', 'CD', 'NNS', 'NNS', 'IN', 'JJ', 'NN', 'CD', '.']",31
face_alignment,18,2,Deep Alignment Network : A convolutional neural network for robust face alignment,"['Deep', 'Alignment', 'Network', ':', 'A', 'convolutional', 'neural', 'network', 'for', 'robust', 'face', 'alignment']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', ':', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN']",12
face_alignment,18,12,"The goal of face alignment is to localize a set of predefined facial landmarks ( eye corners , mouth corners etc. ) in an image of a face .","['The', 'goal', 'of', 'face', 'alignment', 'is', 'to', 'localize', 'a', 'set', 'of', 'predefined', 'facial', 'landmarks', '(', 'eye', 'corners', ',', 'mouth', 'corners', 'etc.', ')', 'in', 'an', 'image', 'of', 'a', 'face', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'NN', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', '(', 'NN', 'NNS', ',', 'NN', 'NNS', 'VBP', ')', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",29
face_alignment,18,19,"In this work , we address the above shortcoming by proposing a novel face alignment method which we dub Deep Alignment Network ( DAN ) .","['In', 'this', 'work', ',', 'we', 'address', 'the', 'above', 'shortcoming', 'by', 'proposing', 'a', 'novel', 'face', 'alignment', 'method', 'which', 'we', 'dub', 'Deep', 'Alignment', 'Network', '(', 'DAN', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'NN', 'WDT', 'PRP', 'VBP', 'JJ', 'NNP', 'NNP', '(', 'NNP', ')', '.']",26
face_alignment,18,20,"It is based on a multistage neural network where each stage refines the landmark positions estimated at the previous stage , iteratively improving the landmark locations .","['It', 'is', 'based', 'on', 'a', 'multistage', 'neural', 'network', 'where', 'each', 'stage', 'refines', 'the', 'landmark', 'positions', 'estimated', 'at', 'the', 'previous', 'stage', ',', 'iteratively', 'improving', 'the', 'landmark', 'locations', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'JJ', 'NN', 'WRB', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', 'VBG', 'DT', 'NN', 'NNS', '.']",27
face_alignment,18,21,The input to each stage of our algorithm ( except the first stage ) area face image normalized to a canonical pose and an image learned from the dense layer of the previous stage .,"['The', 'input', 'to', 'each', 'stage', 'of', 'our', 'algorithm', '(', 'except', 'the', 'first', 'stage', ')', 'area', 'face', 'image', 'normalized', 'to', 'a', 'canonical', 'pose', 'and', 'an', 'image', 'learned', 'from', 'the', 'dense', 'layer', 'of', 'the', 'previous', 'stage', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'TO', 'DT', 'NN', 'IN', 'PRP$', 'NN', '(', 'IN', 'DT', 'JJ', 'NN', ')', 'NN', 'NN', 'NN', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'CC', 'DT', 'NN', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",35
face_alignment,18,22,"To make use of the entire face image during the process of face alignment , we additionally input at each stage a landmark heatmap , which is a key element of our system .","['To', 'make', 'use', 'of', 'the', 'entire', 'face', 'image', 'during', 'the', 'process', 'of', 'face', 'alignment', ',', 'we', 'additionally', 'input', 'at', 'each', 'stage', 'a', 'landmark', 'heatmap', ',', 'which', 'is', 'a', 'key', 'element', 'of', 'our', 'system', '.']","['O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', ',', 'PRP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'DT', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', '.']",34
face_alignment,18,193,During data augmentation a total of 10 images are created from each input image in the training set .,"['During', 'data', 'augmentation', 'a', 'total', 'of', '10', 'images', 'are', 'created', 'from', 'each', 'input', 'image', 'in', 'the', 'training', 'set', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNS', 'NN', 'DT', 'NN', 'IN', 'CD', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",19
face_alignment,18,195,Training is performed using Theano 0.9.0 and Lasagne 0.2 .,"['Training', 'is', 'performed', 'using', 'Theano', '0.9.0', 'and', 'Lasagne', '0.2', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'CD', 'CC', 'NNP', 'CD', '.']",10
face_alignment,18,196,For optimization we use Adam stochastic optimization with an initial step size of 0.001 and mini batch size of 64 .,"['For', 'optimization', 'we', 'use', 'Adam', 'stochastic', 'optimization', 'with', 'an', 'initial', 'step', 'size', 'of', '0.001', 'and', 'mini', 'batch', 'size', 'of', '64', '.']","['B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', 'PRP', 'VBP', 'NNP', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CC', 'VB', 'NN', 'NN', 'IN', 'CD', '.']",21
face_alignment,18,197,For validation we use a random subset of 100 images from the training set .,"['For', 'validation', 'we', 'use', 'a', 'random', 'subset', 'of', '100', 'images', 'from', 'the', 'training', 'set', '.']","['O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",15
face_alignment,18,198,The Python implementation runs at 73 fps for images processed in parallel and at 45 fps for images processed sequentially on a GeForce GTX 1070 GPU .,"['The', 'Python', 'implementation', 'runs', 'at', '73', 'fps', 'for', 'images', 'processed', 'in', 'parallel', 'and', 'at', '45', 'fps', 'for', 'images', 'processed', 'sequentially', 'on', 'a', 'GeForce', 'GTX', '1070', 'GPU', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'IN', 'CD', 'NN', 'IN', 'NNS', 'VBN', 'IN', 'NN', 'CC', 'IN', 'CD', 'NN', 'IN', 'NNS', 'VBN', 'RB', 'IN', 'DT', 'NNP', 'NNP', 'CD', 'NNP', '.']",27
face_alignment,18,210,"a failure rate reduction of 60 % on the 300 W private test set ,","['a', 'failure', 'rate', 'reduction', 'of', '60', '%', 'on', 'the', '300', 'W', 'private', 'test', 'set', ',']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'CD', 'NNP', 'JJ', 'NN', 'NN', ',']",15
face_alignment,18,211,"a failure rate reduction of 72 % on the 300W public test set ,","['a', 'failure', 'rate', 'reduction', 'of', '72', '%', 'on', 'the', '300W', 'public', 'test', 'set', ',']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'CD', 'JJ', 'NN', 'NN', ',']",14
face_alignment,18,212,a 9 % improvement of the mean error on the challenging subset .,"['a', '9', '%', 'improvement', 'of', 'the', 'mean', 'error', 'on', 'the', 'challenging', 'subset', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'CD', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",13
face_alignment,4,2,Facial Landmarks Detection by Self - Iterative Regression based Landmarks - Attention Network,"['Facial', 'Landmarks', 'Detection', 'by', 'Self', '-', 'Iterative', 'Regression', 'based', 'Landmarks', '-', 'Attention', 'Network']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', ':', 'JJ', 'NNP', 'VBN', 'NNP', ':', 'NN', 'NN']",13
face_alignment,4,31,"In this paper , we develop a Self - Iterative Regression ( SIR ) framework to solve the above issues .","['In', 'this', 'paper', ',', 'we', 'develop', 'a', 'Self', '-', 'Iterative', 'Regression', '(', 'SIR', ')', 'framework', 'to', 'solve', 'the', 'above', 'issues', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', ':', 'JJ', 'NNP', '(', 'NNP', ')', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NNS', '.']",21
face_alignment,4,32,"By means of the powerful representation of Convolutional Neural Network ( CNN ) , we only train one regressor to learn the descent directions in coarse and fine stages together .","['By', 'means', 'of', 'the', 'powerful', 'representation', 'of', 'Convolutional', 'Neural', 'Network', '(', 'CNN', ')', ',', 'we', 'only', 'train', 'one', 'regressor', 'to', 'learn', 'the', 'descent', 'directions', 'in', 'coarse', 'and', 'fine', 'stages', 'together', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'PRP', 'RB', 'VBP', 'CD', 'NN', 'TO', 'VB', 'DT', 'NN', 'NNS', 'IN', 'NN', 'CC', 'JJ', 'NNS', 'RB', '.']",31
face_alignment,4,36,"Moreover , to obtain discriminative landmarks features , we proposed a Landmarks - Attention Network ( LAN ) , which focuses on the appearance around landmarks .","['Moreover', ',', 'to', 'obtain', 'discriminative', 'landmarks', 'features', ',', 'we', 'proposed', 'a', 'Landmarks', '-', 'Attention', 'Network', '(', 'LAN', ')', ',', 'which', 'focuses', 'on', 'the', 'appearance', 'around', 'landmarks', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['RB', ',', 'TO', 'VB', 'JJ', 'NNS', 'NNS', ',', 'PRP', 'VBD', 'DT', 'NNP', ':', 'NN', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'NNS', '.']",27
face_alignment,4,37,"It first concurrently extracts local landmarks ' features and then obtains the holistic increment , which significantly reduces the dimension of the final feature layer and the number of model parameters .","['It', 'first', 'concurrently', 'extracts', 'local', 'landmarks', ""'"", 'features', 'and', 'then', 'obtains', 'the', 'holistic', 'increment', ',', 'which', 'significantly', 'reduces', 'the', 'dimension', 'of', 'the', 'final', 'feature', 'layer', 'and', 'the', 'number', 'of', 'model', 'parameters', '.']","['O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'RB', 'VBZ', 'JJ', 'NNS', 'POS', 'NNS', 'CC', 'RB', 'VBZ', 'DT', 'JJ', 'NN', ',', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'DT', 'NN', 'IN', 'NN', 'NNS', '.']",32
face_alignment,4,167,"We perform the experiments based on a machine with Core i7 - 5930 k CPU , 32 GB memory and GTX 1080 GPU with 8G video memory .","['We', 'perform', 'the', 'experiments', 'based', 'on', 'a', 'machine', 'with', 'Core', 'i7', '-', '5930', 'k', 'CPU', ',', '32', 'GB', 'memory', 'and', 'GTX', '1080', 'GPU', 'with', '8G', 'video', 'memory', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NN', ':', 'CD', 'NN', 'NNP', ',', 'CD', 'NNP', 'NN', 'CC', 'NNP', 'CD', 'NNP', 'IN', 'CD', 'JJ', 'NN', '.']",28
face_alignment,4,168,The detected faces are resized into 256 256 and the location patch size is 57 57 .,"['The', 'detected', 'faces', 'are', 'resized', 'into', '256', '256', 'and', 'the', 'location', 'patch', 'size', 'is', '57', '57', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'VBZ', 'VBP', 'VBN', 'IN', 'CD', 'CD', 'CC', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'CD', 'CD', '.']",17
face_alignment,4,169,"For CNN structure , the Rectified Linear Unit ( ReLU ) is adopted as the activation function , and the optimizer is the Adadelta ( Zeiler 2012 ) approach , learning rate is set to 0.1 and weight decay is set to 1 e ?","['For', 'CNN', 'structure', ',', 'the', 'Rectified', 'Linear', 'Unit', '(', 'ReLU', ')', 'is', 'adopted', 'as', 'the', 'activation', 'function', ',', 'and', 'the', 'optimizer', 'is', 'the', 'Adadelta', '(', 'Zeiler', '2012', ')', 'approach', ',', 'learning', 'rate', 'is', 'set', 'to', '0.1', 'and', 'weight', 'decay', 'is', 'set', 'to', '1', 'e', '?']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n']","['IN', 'NNP', 'NN', ',', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'DT', 'NN', 'VBZ', 'DT', 'NNP', '(', 'NNP', 'CD', ')', 'NN', ',', 'VBG', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'CC', 'JJ', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'NN', '.']",45
face_alignment,4,170,4 . Training the CNN requires around 2 days .,"['4', '.', 'Training', 'the', 'CNN', 'requires', 'around', '2', 'days', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['CD', '.', 'VBG', 'DT', 'NNP', 'VBZ', 'IN', 'CD', 'NNS', '.']",10
face_alignment,4,175,The NME results shows that SIR performs comparatively with RAR ) and outperform other existing methods .,"['The', 'NME', 'results', 'shows', 'that', 'SIR', 'performs', 'comparatively', 'with', 'RAR', ')', 'and', 'outperform', 'other', 'existing', 'methods', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NNS', 'VBZ', 'IN', 'NNP', 'NNS', 'RB', 'IN', 'NNP', ')', 'CC', 'VB', 'JJ', 'VBG', 'NNS', '.']",17
face_alignment,4,177,"In the more challenging IBUG subset , our method achieves robust performance in large pose , expression and illumination environment .","['In', 'the', 'more', 'challenging', 'IBUG', 'subset', ',', 'our', 'method', 'achieves', 'robust', 'performance', 'in', 'large', 'pose', ',', 'expression', 'and', 'illumination', 'environment', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'RBR', 'JJ', 'NNP', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'NN', 'IN', 'JJ', 'NN', ',', 'NN', 'CC', 'NN', 'NN', '.']",21
face_alignment,4,179,"As shown in , the SIR method outperform the state - of - the - art methods according to the CED curve .","['As', 'shown', 'in', ',', 'the', 'SIR', 'method', 'outperform', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'according', 'to', 'the', 'CED', 'curve', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'DT', 'NNP', 'NN', 'VBD', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'VBG', 'TO', 'DT', 'NNP', 'NN', '.']",23
face_alignment,6,2,Face Alignment using a 3D Deeply - initialized Ensemble of Regression Trees,"['Face', 'Alignment', 'using', 'a', '3D', 'Deeply', '-', 'initialized', 'Ensemble', 'of', 'Regression', 'Trees']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'VBG', 'DT', 'CD', 'NNP', ':', 'JJ', 'NN', 'IN', 'NNP', 'NNP']",12
face_alignment,6,23,"In this paper we present the 3 DDE ( 3D Deeply - initialized Ensemble ) regressor , a robust and efficient face alignment algorithm based on a coarse - to - fine cascade of ERTs .","['In', 'this', 'paper', 'we', 'present', 'the', '3', 'DDE', '(', '3D', 'Deeply', '-', 'initialized', 'Ensemble', ')', 'regressor', ',', 'a', 'robust', 'and', 'efficient', 'face', 'alignment', 'algorithm', 'based', 'on', 'a', 'coarse', '-', 'to', '-', 'fine', 'cascade', 'of', 'ERTs', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBD', 'DT', 'CD', 'NNP', '(', 'CD', 'NNP', ':', 'VBN', 'NNP', ')', 'NN', ',', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'NN', 'NN', 'VBN', 'IN', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'IN', 'NNP', '.']",36
face_alignment,6,25,It is initialized by robustly fitting a 3 D face model to the probability maps produced by a CNN .,"['It', 'is', 'initialized', 'by', 'robustly', 'fitting', 'a', '3', 'D', 'face', 'model', 'to', 'the', 'probability', 'maps', 'produced', 'by', 'a', 'CNN', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['PRP', 'VBZ', 'VBN', 'IN', 'RB', 'VBG', 'DT', 'CD', 'NNP', 'NN', 'NN', 'TO', 'DT', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NNP', '.']",20
face_alignment,6,27,"On the other hand , the ERT implicitly imposes a prior face shape on the solution , addressing the shortcomings of deep models when occlusions and ambiguous face configurations are present .","['On', 'the', 'other', 'hand', ',', 'the', 'ERT', 'implicitly', 'imposes', 'a', 'prior', 'face', 'shape', 'on', 'the', 'solution', ',', 'addressing', 'the', 'shortcomings', 'of', 'deep', 'models', 'when', 'occlusions', 'and', 'ambiguous', 'face', 'configurations', 'are', 'present', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'DT', 'NNP', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'VBG', 'DT', 'NNS', 'IN', 'JJ', 'NNS', 'WRB', 'NNS', 'CC', 'JJ', 'NN', 'NNS', 'VBP', 'JJ', '.']",32
face_alignment,6,28,"Finally , its coarse - to - fine structure tackles the combinatorial explosion of parts deformation , which is also a key limitation of approaches using shape constraints .","['Finally', ',', 'its', 'coarse', '-', 'to', '-', 'fine', 'structure', 'tackles', 'the', 'combinatorial', 'explosion', 'of', 'parts', 'deformation', ',', 'which', 'is', 'also', 'a', 'key', 'limitation', 'of', 'approaches', 'using', 'shape', 'constraints', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP$', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'NN', ',', 'WDT', 'VBZ', 'RB', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'VBG', 'NN', 'NNS', '.']",29
face_alignment,6,31,First we improve the initialization by using a RANSAC - like procedure that increases its robustness in the presence of occlusions .,"['First', 'we', 'improve', 'the', 'initialization', 'by', 'using', 'a', 'RANSAC', '-', 'like', 'procedure', 'that', 'increases', 'its', 'robustness', 'in', 'the', 'presence', 'of', 'occlusions', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O']","['RB', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NNP', ':', 'IN', 'NN', 'WDT', 'VBZ', 'PRP$', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', '.']",22
face_alignment,6,32,We have also introduced early stopping and better data augmentation techniques for increasing the regularization when training both the ERT and the CNN .,"['We', 'have', 'also', 'introduced', 'early', 'stopping', 'and', 'better', 'data', 'augmentation', 'techniques', 'for', 'increasing', 'the', 'regularization', 'when', 'training', 'both', 'the', 'ERT', 'and', 'the', 'CNN', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'O']","['PRP', 'VBP', 'RB', 'VBN', 'JJ', 'NN', 'CC', 'JJR', 'NNS', 'NN', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'WRB', 'VBG', 'DT', 'DT', 'NNP', 'CC', 'DT', 'NNP', '.']",24
face_alignment,6,210,"We use Adam stochastic optimization with ? 1 = 0.9 , ? 2 = 0.999 and = 1 e ? 8 parameters .","['We', 'use', 'Adam', 'stochastic', 'optimization', 'with', '?', '1', '=', '0.9', ',', '?', '2', '=', '0.999', 'and', '=', '1', 'e', '?', '8', 'parameters', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'NNP', 'JJ', 'NN', 'IN', '.', 'CD', 'NN', 'CD', ',', '.', 'CD', 'JJ', 'CD', 'CC', '$', 'CD', 'NN', '.', 'CD', 'NNS', '.']",23
face_alignment,6,211,We train until convergence with an initial learning rate ? = 0.001 .,"['We', 'train', 'until', 'convergence', 'with', 'an', 'initial', 'learning', 'rate', '?', '=', '0.001', '.']","['O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.', '$', 'CD', '.']",13
face_alignment,6,212,"When validation error levels out for 10 epochs , we multiply the learning rate by decay = 0.05 .","['When', 'validation', 'error', 'levels', 'out', 'for', '10', 'epochs', ',', 'we', 'multiply', 'the', 'learning', 'rate', 'by', 'decay', '=', '0.05', '.']","['O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['WRB', 'NN', 'NN', 'NNS', 'RP', 'IN', 'CD', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'NN', 'NN', 'CD', '.']",19
face_alignment,6,214,We apply batch normalization after each convolution .,"['We', 'apply', 'batch', 'normalization', 'after', 'each', 'convolution', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",8
face_alignment,6,215,All layers contain 68 filters to describe the required landmark features .,"['All', 'layers', 'contain', '68', 'filters', 'to', 'describe', 'the', 'required', 'landmark', 'features', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'CD', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NNS', '.']",12
face_alignment,6,216,"We apply a Gaussian filter with ? = 33 to the output probability maps to stabilize the initialization , g 0 .","['We', 'apply', 'a', 'Gaussian', 'filter', 'with', '?', '=', '33', 'to', 'the', 'output', 'probability', 'maps', 'to', 'stabilize', 'the', 'initialization', ',', 'g', '0', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', '.', '$', 'CD', 'TO', 'DT', 'NN', 'NN', 'NNS', 'TO', 'VB', 'DT', 'NN', ',', 'JJ', 'CD', '.']",22
face_alignment,6,217,We train the coarse - to - fine ERT with the Gradient Boosting algorithm ) .,"['We', 'train', 'the', 'coarse', '-', 'to', '-', 'fine', 'ERT', 'with', 'the', 'Gradient', 'Boosting', 'algorithm', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NNP', 'IN', 'DT', 'NNP', 'NNP', 'NN', ')', '.']",16
face_alignment,6,218,It requires a maximum of T = 20 stages of K = 50 regression trees per stage .,"['It', 'requires', 'a', 'maximum', 'of', 'T', '=', '20', 'stages', 'of', 'K', '=', '50', 'regression', 'trees', 'per', 'stage', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBZ', 'DT', 'NN', 'IN', 'NNP', 'NNP', 'CD', 'NNS', 'IN', 'NNP', 'NNP', 'CD', 'NN', 'NNS', 'IN', 'NN', '.']",18
face_alignment,6,219,The depth of trees is set to 4 .,"['The', 'depth', 'of', 'trees', 'is', 'set', 'to', '4', '.']","['O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'NNS', 'VBZ', 'VBN', 'TO', 'CD', '.']",9
face_alignment,6,220,"The number of tests to choose the best split parameters , ? , is set to 200 .","['The', 'number', 'of', 'tests', 'to', 'choose', 'the', 'best', 'split', 'parameters', ',', '?', ',', 'is', 'set', 'to', '200', '.']","['O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'NNS', 'TO', 'VB', 'DT', 'JJS', 'NN', 'NNS', ',', '.', ',', 'VBZ', 'VBN', 'TO', 'CD', '.']",18
face_alignment,6,221,We resize each image to set the face size to 160160 pixels .,"['We', 'resize', 'each', 'image', 'to', 'set', 'the', 'face', 'size', 'to', '160160', 'pixels', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'TO', 'CD', 'NNS', '.']",13
face_alignment,6,223,We generate Z = 25 initializations in the robust soft POSIT scheme of g 0 .,"['We', 'generate', 'Z', '=', '25', 'initializations', 'in', 'the', 'robust', 'soft', 'POSIT', 'scheme', 'of', 'g', '0', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'NNP', 'NNP', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NNP', 'NN', 'IN', 'NN', 'CD', '.']",16
face_alignment,6,224,"We augment the shapes of each face training image to create a set , SA , of at least N A = 60000 samples to train the cascade .","['We', 'augment', 'the', 'shapes', 'of', 'each', 'face', 'training', 'image', 'to', 'create', 'a', 'set', ',', 'SA', ',', 'of', 'at', 'least', 'N', 'A', '=', '60000', 'samples', 'to', 'train', 'the', 'cascade', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'NN', 'TO', 'VB', 'DT', 'NN', ',', 'NNP', ',', 'IN', 'IN', 'JJS', 'NNP', 'NNP', '$', 'CD', 'NNS', 'TO', 'VB', 'DT', 'NN', '.']",29
face_alignment,6,225,To avoid overfitting we use a shrinkage factor ? = 0.1 and subsampling factor ? = 0.5 in the ERT .,"['To', 'avoid', 'overfitting', 'we', 'use', 'a', 'shrinkage', 'factor', '?', '=', '0.1', 'and', 'subsampling', 'factor', '?', '=', '0.5', 'in', 'the', 'ERT', '.']","['B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O']","['TO', 'VB', 'VBG', 'PRP', 'VBP', 'DT', 'NN', 'NN', '.', '$', 'CD', 'CC', 'VBG', 'NN', '.', '$', 'CD', 'IN', 'DT', 'NNP', '.']",21
face_alignment,6,227,"Training the CNN and the coarse - to - fine ensemble of trees takes 48 hours using a NVidia GeForce GTX 1080 Ti ( 11 GB ) GPU and an dual Intel Xeon Silver 4114 CPU at 2.20 GHz ( 210 cores / 20 threads , 128 GB of RAM ) with a batch size of 32 images .","['Training', 'the', 'CNN', 'and', 'the', 'coarse', '-', 'to', '-', 'fine', 'ensemble', 'of', 'trees', 'takes', '48', 'hours', 'using', 'a', 'NVidia', 'GeForce', 'GTX', '1080', 'Ti', '(', '11', 'GB', ')', 'GPU', 'and', 'an', 'dual', 'Intel', 'Xeon', 'Silver', '4114', 'CPU', 'at', '2.20', 'GHz', '(', '210', 'cores', '/', '20', 'threads', ',', '128', 'GB', 'of', 'RAM', ')', 'with', 'a', 'batch', 'size', 'of', '32', 'images', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'NNP', 'CC', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'IN', 'NNS', 'VBZ', 'CD', 'NNS', 'VBG', 'DT', 'NNP', 'NNP', 'NNP', 'CD', 'NNP', '(', 'CD', 'NNP', ')', 'NNP', 'CC', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', 'CD', 'NNP', 'IN', 'CD', 'NNP', '(', 'CD', 'NNS', 'VBP', 'CD', 'NNS', ',', 'CD', 'NNP', 'IN', 'NNP', ')', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'NNS', '.']",59
face_alignment,6,237,"Overall , 3 DDE is better than any other providing a public implementation in the literature .","['Overall', ',', '3', 'DDE', 'is', 'better', 'than', 'any', 'other', 'providing', 'a', 'public', 'implementation', 'in', 'the', 'literature', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', ',', 'CD', 'NNP', 'VBZ', 'RBR', 'IN', 'DT', 'JJ', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",17
face_alignment,6,239,"In general we are able to improve by a large margin other ERT methods as RCPR , ERT or c GPRT because of the better initialization and the robust features provided by the CNN .","['In', 'general', 'we', 'are', 'able', 'to', 'improve', 'by', 'a', 'large', 'margin', 'other', 'ERT', 'methods', 'as', 'RCPR', ',', 'ERT', 'or', 'c', 'GPRT', 'because', 'of', 'the', 'better', 'initialization', 'and', 'the', 'robust', 'features', 'provided', 'by', 'the', 'CNN', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'PRP', 'VBP', 'JJ', 'TO', 'VB', 'IN', 'DT', 'JJ', 'NN', 'JJ', 'NNP', 'NNS', 'IN', 'NNP', ',', 'NNP', 'CC', 'VB', 'NNP', 'IN', 'IN', 'DT', 'JJR', 'NN', 'CC', 'DT', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NNP', '.']",35
face_alignment,6,240,"We also outperform RCN ( without any denoising model ) , a CNN architecture like the one used in 3DDE .","['We', 'also', 'outperform', 'RCN', '(', 'without', 'any', 'denoising', 'model', ')', ',', 'a', 'CNN', 'architecture', 'like', 'the', 'one', 'used', 'in', '3DDE', '.']","['O', 'O', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'NNP', '(', 'IN', 'DT', 'VBG', 'NN', ')', ',', 'DT', 'NNP', 'NN', 'IN', 'DT', 'CD', 'VBN', 'IN', 'CD', '.']",21
face_alignment,6,241,"Even DAN and LAB , that implement a cascade of CNN regressors , can not compete with the regularization obtained by using the cascade of ERT in 3 DDE ( see ) .","['Even', 'DAN', 'and', 'LAB', ',', 'that', 'implement', 'a', 'cascade', 'of', 'CNN', 'regressors', ',', 'can', 'not', 'compete', 'with', 'the', 'regularization', 'obtained', 'by', 'using', 'the', 'cascade', 'of', 'ERT', 'in', '3', 'DDE', '(', 'see', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'NNP', 'CC', 'NNP', ',', 'WDT', 'VBD', 'DT', 'NN', 'IN', 'NNP', 'NNS', ',', 'MD', 'RB', 'VB', 'IN', 'DT', 'NN', 'VBN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'NNP', 'IN', 'CD', 'NNP', '(', 'VB', ')', '.']",33
face_alignment,6,247,Our approach obtains the best overall performance in the indoor and outdoor subsets of the private competition ( see ) and in the full subset of the 300W public test set ( see ) .,"['Our', 'approach', 'obtains', 'the', 'best', 'overall', 'performance', 'in', 'the', 'indoor', 'and', 'outdoor', 'subsets', 'of', 'the', 'private', 'competition', '(', 'see', ')', 'and', 'in', 'the', 'full', 'subset', 'of', 'the', '300W', 'public', 'test', 'set', '(', 'see', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'VB', ')', 'CC', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'CD', 'JJ', 'NN', 'NN', '(', 'VB', ')', '.']",35
face_alignment,6,249,"In the challenging subset of the 300W public competition , SHN gets better results than 3DDE .","['In', 'the', 'challenging', 'subset', 'of', 'the', '300W', 'public', 'competition', ',', 'SHN', 'gets', 'better', 'results', 'than', '3DDE', '.']","['B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'CD', 'JJ', 'NN', ',', 'NNP', 'VBZ', 'JJR', 'NNS', 'IN', 'CD', '.']",17
face_alignment,6,296,"When combined with the cascaded ERT , the 3D initialization is key to achieve top overall performance , see CNN + MS + DE vs CNN + 3D + DE in the full subset .","['When', 'combined', 'with', 'the', 'cascaded', 'ERT', ',', 'the', '3D', 'initialization', 'is', 'key', 'to', 'achieve', 'top', 'overall', 'performance', ',', 'see', 'CNN', '+', 'MS', '+', 'DE', 'vs', 'CNN', '+', '3D', '+', 'DE', 'in', 'the', 'full', 'subset', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['WRB', 'VBN', 'IN', 'DT', 'JJ', 'NNP', ',', 'DT', 'CD', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'JJ', 'JJ', 'NN', ',', 'VBP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'FW', 'NNP', '$', 'CD', 'NNP', 'NNP', 'IN', 'DT', 'JJ', 'NN', '.']",35
face_alignment,6,299,"Of course , the 3D initialization is fundamental to achieve good performance in presence of large face rotations .","['Of', 'course', ',', 'the', '3D', 'initialization', 'is', 'fundamental', 'to', 'achieve', 'good', 'performance', 'in', 'presence', 'of', 'large', 'face', 'rotations', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'DT', 'CD', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'JJ', 'NN', 'IN', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",19
face_alignment,6,302,"The large receptive fields of CNNs are specially helpful in challenging situations , specifically those in the pose and occlusion subsets .","['The', 'large', 'receptive', 'fields', 'of', 'CNNs', 'are', 'specially', 'helpful', 'in', 'challenging', 'situations', ',', 'specifically', 'those', 'in', 'the', 'pose', 'and', 'occlusion', 'subsets', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'JJ', 'NNS', 'IN', 'NNP', 'VBP', 'RB', 'JJ', 'IN', 'VBG', 'NNS', ',', 'RB', 'DT', 'IN', 'DT', 'NN', 'CC', 'NN', 'NNS', '.']",22
face_alignment,6,303,"The coarse - to - fine strategy in our cascaded ERT provides significative local improvements in difficult cases , with rare facial part combinations ( see ) .","['The', 'coarse', '-', 'to', '-', 'fine', 'strategy', 'in', 'our', 'cascaded', 'ERT', 'provides', 'significative', 'local', 'improvements', 'in', 'difficult', 'cases', ',', 'with', 'rare', 'facial', 'part', 'combinations', '(', 'see', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'IN', 'PRP$', 'JJ', 'NNP', 'VBZ', 'JJ', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'IN', 'JJ', 'JJ', 'NN', 'NNS', '(', 'VB', ')', '.']",28
face_alignment,10,2,Wing Loss for Robust Facial Landmark Localisation with Convolutional Neural Networks,"['Wing', 'Loss', 'for', 'Robust', 'Facial', 'Landmark', 'Localisation', 'with', 'Convolutional', 'Neural', 'Networks']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",11
face_alignment,10,14,"Facial landmark localisation , or face alignment , aims at finding the coordinates of a set of pre-defined key points for 2 D face images .","['Facial', 'landmark', 'localisation', ',', 'or', 'face', 'alignment', ',', 'aims', 'at', 'finding', 'the', 'coordinates', 'of', 'a', 'set', 'of', 'pre-defined', 'key', 'points', 'for', '2', 'D', 'face', 'images', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'NN', ',', 'CC', 'NN', 'NN', ',', 'VBZ', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'CD', 'NNP', 'NN', 'NNS', '.']",26
face_alignment,10,34,"a novel loss function , namely the Wing loss , which is designed to improve the deep neural network training capability for small and medium range errors .","['a', 'novel', 'loss', 'function', ',', 'namely', 'the', 'Wing', 'loss', ',', 'which', 'is', 'designed', 'to', 'improve', 'the', 'deep', 'neural', 'network', 'training', 'capability', 'for', 'small', 'and', 'medium', 'range', 'errors', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', ',', 'RB', 'DT', 'NNP', 'NN', ',', 'WDT', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'NN', 'IN', 'JJ', 'CC', 'JJ', 'NN', 'NNS', '.']",28
face_alignment,10,35,"a data augmentation strategy , i.e. pose - based data balancing , that compensates the low frequency of occurrence of samples with large out - of - plane head rotations in the training set .","['a', 'data', 'augmentation', 'strategy', ',', 'i.e.', 'pose', '-', 'based', 'data', 'balancing', ',', 'that', 'compensates', 'the', 'low', 'frequency', 'of', 'occurrence', 'of', 'samples', 'with', 'large', 'out', '-', 'of', '-', 'plane', 'head', 'rotations', 'in', 'the', 'training', 'set', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'NN', ',', 'FW', 'SYM', ':', 'VBN', 'NNS', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NN', 'IN', 'NNS', 'IN', 'JJ', 'IN', ':', 'IN', ':', 'NN', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",35
face_alignment,10,36,a two - stage facial landmark localisation framework for performance boosting .,"['a', 'two', '-', 'stage', 'facial', 'landmark', 'localisation', 'framework', 'for', 'performance', 'boosting', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'CD', ':', 'NN', 'JJ', 'NN', 'NN', 'NN', 'IN', 'NN', 'NN', '.']",12
face_alignment,10,209,"In our experiments , we used Matlab 2017a and the Mat - ConvNet toolbox 2 .","['In', 'our', 'experiments', ',', 'we', 'used', 'Matlab', '2017a', 'and', 'the', 'Mat', '-', 'ConvNet', 'toolbox', '2', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'PRP$', 'NNS', ',', 'PRP', 'VBD', 'NNP', 'CD', 'CC', 'DT', 'NNP', ':', 'NNP', 'NN', 'CD', '.']",16
face_alignment,10,210,"The training and testing of our networks were conducted on a server running Ubuntu 16.04 with 2 Intel Xeon E5-2667 v4 CPU , 256 GB RAM and 4 NVIDIA GeForce GTX Titan X ( Pascal ) cards .","['The', 'training', 'and', 'testing', 'of', 'our', 'networks', 'were', 'conducted', 'on', 'a', 'server', 'running', 'Ubuntu', '16.04', 'with', '2', 'Intel', 'Xeon', 'E5-2667', 'v4', 'CPU', ',', '256', 'GB', 'RAM', 'and', '4', 'NVIDIA', 'GeForce', 'GTX', 'Titan', 'X', '(', 'Pascal', ')', 'cards', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'CC', 'NN', 'IN', 'PRP$', 'NNS', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'VBG', 'NNP', 'CD', 'IN', 'CD', 'NNP', 'NNP', 'NNP', 'NN', 'NNP', ',', 'CD', 'NNP', 'NNP', 'CC', 'CD', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', '.']",38
face_alignment,10,211,Note that we only use one GPU card for measuring the run time .,"['Note', 'that', 'we', 'only', 'use', 'one', 'GPU', 'card', 'for', 'measuring', 'the', 'run', 'time', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NN', 'IN', 'PRP', 'RB', 'VBP', 'CD', 'NNP', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', '.']",14
face_alignment,10,212,"We set the weight decay to 5 10 ? 4 , momentum to 0.9 and batch size to 8 for network training .","['We', 'set', 'the', 'weight', 'decay', 'to', '5', '10', '?', '4', ',', 'momentum', 'to', '0.9', 'and', 'batch', 'size', 'to', '8', 'for', 'network', 'training', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'CD', 'CD', '.', 'CD', ',', 'NN', 'TO', 'CD', 'CC', 'VB', 'NN', 'TO', 'CD', 'IN', 'NN', 'NN', '.']",23
face_alignment,10,213,Each model was trained for 120 k iterations .,"['Each', 'model', 'was', 'trained', 'for', '120', 'k', 'iterations', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBD', 'VBN', 'IN', 'CD', 'NN', 'NNS', '.']",9
face_alignment,10,215,"The standard ReLu function was used for nonlinear activation , and Max pooling with the stride of 2 was used to downsize feature maps .","['The', 'standard', 'ReLu', 'function', 'was', 'used', 'for', 'nonlinear', 'activation', ',', 'and', 'Max', 'pooling', 'with', 'the', 'stride', 'of', '2', 'was', 'used', 'to', 'downsize', 'feature', 'maps', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NNP', 'NN', 'VBD', 'VBN', 'IN', 'JJ', 'NN', ',', 'CC', 'NNP', 'VBG', 'IN', 'DT', 'NN', 'IN', 'CD', 'VBD', 'VBN', 'TO', 'VB', 'NN', 'NNS', '.']",25
face_alignment,10,216,"For the convolutional layer , we used 3 3 kernels with the stride of 1 .","['For', 'the', 'convolutional', 'layer', ',', 'we', 'used', '3', '3', 'kernels', 'with', 'the', 'stride', 'of', '1', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBD', 'CD', 'CD', 'NNS', 'IN', 'DT', 'NN', 'IN', 'CD', '.']",16
face_alignment,10,218,"For the proposed PDB strategy , the number of bins K was set to 17 for AFLW and 9 for 300W .","['For', 'the', 'proposed', 'PDB', 'strategy', ',', 'the', 'number', 'of', 'bins', 'K', 'was', 'set', 'to', '17', 'for', 'AFLW', 'and', '9', 'for', '300W', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'VBN', 'NNP', 'NN', ',', 'DT', 'NN', 'IN', 'NNS', 'NNP', 'VBD', 'VBN', 'TO', 'CD', 'IN', 'NNP', 'CC', 'CD', 'IN', 'CD', '.']",22
face_alignment,10,219,"For CNN - 6 , the input image size is 64 64 3 . We reduced the learning rate from 3 10 ? 6 to 3 10 ?8 for the L2 loss , and from 3 10 ?5 to 3 10 ? 7 for the other loss functions .","['For', 'CNN', '-', '6', ',', 'the', 'input', 'image', 'size', 'is', '64', '64', '3', '.', 'We', 'reduced', 'the', 'learning', 'rate', 'from', '3', '10', '?', '6', 'to', '3', '10', '?8', 'for', 'the', 'L2', 'loss', ',', 'and', 'from', '3', '10', '?5', 'to', '3', '10', '?', '7', 'for', 'the', 'other', 'loss', 'functions', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ':', 'CD', ',', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'CD', 'CD', 'CD', '.', 'PRP', 'VBD', 'DT', 'VBG', 'NN', 'IN', 'CD', 'CD', '.', 'CD', 'TO', 'CD', 'CD', 'NN', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'IN', 'CD', 'CD', 'NN', 'TO', 'CD', 'CD', '.', 'CD', 'IN', 'DT', 'JJ', 'NN', 'NNS', '.']",49
face_alignment,10,220,"The parameters of the Wing loss were set tow = 10 and = 2 . For CNN - 7 , the input image size is 128 128 3 . We reduced the learning rate from 1 10 ? 6 to 1 10 ?8 for the L2 loss , and from 1 10 ? 5 to 1 10 ? 7 for the other loss functions .","['The', 'parameters', 'of', 'the', 'Wing', 'loss', 'were', 'set', 'tow', '=', '10', 'and', '=', '2', '.', 'For', 'CNN', '-', '7', ',', 'the', 'input', 'image', 'size', 'is', '128', '128', '3', '.', 'We', 'reduced', 'the', 'learning', 'rate', 'from', '1', '10', '?', '6', 'to', '1', '10', '?8', 'for', 'the', 'L2', 'loss', ',', 'and', 'from', '1', '10', '?', '5', 'to', '1', '10', '?', '7', 'for', 'the', 'other', 'loss', 'functions', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'DT', 'NNP', 'NN', 'VBD', 'VBN', 'RB', 'JJ', 'CD', 'CC', '$', 'CD', '.', 'IN', 'NNP', ':', 'CD', ',', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'CD', 'CD', 'CD', '.', 'PRP', 'VBD', 'DT', 'VBG', 'NN', 'IN', 'CD', 'CD', '.', 'CD', 'TO', 'CD', 'CD', 'NN', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'IN', 'CD', 'CD', '.', 'CD', 'TO', 'CD', 'CD', '.', 'CD', 'IN', 'DT', 'JJ', 'NN', 'NNS', '.']",65
face_alignment,10,222,"To perform data augmentation , we randomly rotated each training image between [ ? 30 , 30 ] degrees for CNN - 6 and between [ ? 10 , 10 ] degrees for CNN - 7 .","['To', 'perform', 'data', 'augmentation', ',', 'we', 'randomly', 'rotated', 'each', 'training', 'image', 'between', '[', '?', '30', ',', '30', ']', 'degrees', 'for', 'CNN', '-', '6', 'and', 'between', '[', '?', '10', ',', '10', ']', 'degrees', 'for', 'CNN', '-', '7', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'NNS', 'NN', ',', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'NN', 'IN', 'NNP', '.', 'CD', ',', 'CD', 'NN', 'NNS', 'IN', 'NNP', ':', 'CD', 'CC', 'IN', 'NNP', '.', 'CD', ',', 'CD', 'NN', 'NNS', 'IN', 'NNP', ':', 'CD', '.']",37
face_alignment,10,224,"For bounding box perturbation , we applied random translations to the upper-left and bottom - right corners of the face bounding box within 5 % of the bounding .","['For', 'bounding', 'box', 'perturbation', ',', 'we', 'applied', 'random', 'translations', 'to', 'the', 'upper-left', 'and', 'bottom', '-', 'right', 'corners', 'of', 'the', 'face', 'bounding', 'box', 'within', '5', '%', 'of', 'the', 'bounding', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'VBG', 'NN', 'NN', ',', 'PRP', 'VBD', 'JJ', 'NNS', 'TO', 'DT', 'JJ', 'CC', 'JJ', ':', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'NN', '.']",29
face_alignment,10,226,"We compare our method with a set of state - of - the - art approaches , including SDM , ERT , RCPR , CFSS , LBF , GRF , CCL , DAC - CSR and TR - DRN. box size .","['We', 'compare', 'our', 'method', 'with', 'a', 'set', 'of', 'state', '-', 'of', '-', 'the', '-', 'art', 'approaches', ',', 'including', 'SDM', ',', 'ERT', ',', 'RCPR', ',', 'CFSS', ',', 'LBF', ',', 'GRF', ',', 'CCL', ',', 'DAC', '-', 'CSR', 'and', 'TR', '-', 'DRN.', 'box', 'size', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', ',', 'VBG', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ',', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NNP', 'NN', 'NN', '.']",42
face_alignment,10,227,"Last , we randomly injected Gaussian blur (? = 1 ) to each training image with the probability of 50 % .","['Last', ',', 'we', 'randomly', 'injected', 'Gaussian', 'blur', '(?', '=', '1', ')', 'to', 'each', 'training', 'image', 'with', 'the', 'probability', 'of', '50', '%', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['JJ', ',', 'PRP', 'RB', 'VBD', 'JJ', 'NN', 'NNP', 'NNP', 'CD', ')', 'TO', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",22
face_alignment,10,234,Comparison with state of the art 7.2.1 AFLW,"['Comparison', 'with', 'state', 'of', 'the', 'art', '7.2.1', 'AFLW']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['NN', 'IN', 'NN', 'IN', 'DT', 'NN', 'CD', 'NNP']",8
face_alignment,10,246,"As shown in , our CNN - 6/7 network outperforms all the other approaches even when trained with the commonly used L2 loss function ( magenta solid line ) .","['As', 'shown', 'in', ',', 'our', 'CNN', '-', '6/7', 'network', 'outperforms', 'all', 'the', 'other', 'approaches', 'even', 'when', 'trained', 'with', 'the', 'commonly', 'used', 'L2', 'loss', 'function', '(', 'magenta', 'solid', 'line', ')', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NNP', ':', 'CD', 'NN', 'NNS', 'PDT', 'DT', 'JJ', 'NNS', 'RB', 'WRB', 'VBN', 'IN', 'DT', 'RB', 'JJ', 'NNP', 'NN', 'NN', '(', 'JJ', 'JJ', 'NN', ')', '.']",30
face_alignment,10,248,"Second , by simply switching the loss function from L2 to L1 or smooth L1 , the performance of our method has been improved significantly ( red solid and black dashed lines ) .","['Second', ',', 'by', 'simply', 'switching', 'the', 'loss', 'function', 'from', 'L2', 'to', 'L1', 'or', 'smooth', 'L1', ',', 'the', 'performance', 'of', 'our', 'method', 'has', 'been', 'improved', 'significantly', '(', 'red', 'solid', 'and', 'black', 'dashed', 'lines', ')', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'IN', 'RB', 'VBG', 'DT', 'NN', 'NN', 'IN', 'NNP', 'TO', 'NNP', 'CC', 'JJ', 'NNP', ',', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'VBN', 'VBN', 'RB', '(', 'JJ', 'NN', 'CC', 'JJ', 'JJ', 'NNS', ')', '.']",34
face_alignment,10,249,"Last , the use of our newly proposed Wing loss function further improves the accuracy ( black solid line ) .","['Last', ',', 'the', 'use', 'of', 'our', 'newly', 'proposed', 'Wing', 'loss', 'function', 'further', 'improves', 'the', 'accuracy', '(', 'black', 'solid', 'line', ')', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'DT', 'NN', 'IN', 'PRP$', 'RB', 'VBN', 'NNP', 'NN', 'NN', 'RBR', 'VBZ', 'DT', 'NN', '(', 'JJ', 'JJ', 'NN', ')', '.']",21
face_alignment,10,251,300 W,"['300', 'W']","['B-n', 'I-n']","['CD', 'NNP']",2
face_alignment,10,262,"As shown in , our two - stage landmark localisation framework with the PDB strategy and the newly proposed Wing loss function outperforms all the other stateof - the - art algorithms on the 300 W dataset inaccuracy .","['As', 'shown', 'in', ',', 'our', 'two', '-', 'stage', 'landmark', 'localisation', 'framework', 'with', 'the', 'PDB', 'strategy', 'and', 'the', 'newly', 'proposed', 'Wing', 'loss', 'function', 'outperforms', 'all', 'the', 'other', 'stateof', '-', 'the', '-', 'art', 'algorithms', 'on', 'the', '300', 'W', 'dataset', 'inaccuracy', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'CD', ':', 'NN', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NNP', 'NN', 'CC', 'DT', 'RB', 'VBN', 'NNP', 'NN', 'NN', 'IN', 'PDT', 'DT', 'JJ', 'NN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'CD', 'NNP', 'NN', 'NN', '.']",39
face_alignment,10,263,The error has been reduced by almost 20 % as compared to the current best result reported by the RAR algorithm .,"['The', 'error', 'has', 'been', 'reduced', 'by', 'almost', '20', '%', 'as', 'compared', 'to', 'the', 'current', 'best', 'result', 'reported', 'by', 'the', 'RAR', 'algorithm', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'VBN', 'IN', 'RB', 'CD', 'NN', 'IN', 'VBN', 'TO', 'DT', 'JJ', 'JJS', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",22
face_alignment,17,5,"Facial landmark detection , or face alignment , is a fundamental task that has been extensively studied .","['Facial', 'landmark', 'detection', ',', 'or', 'face', 'alignment', ',', 'is', 'a', 'fundamental', 'task', 'that', 'has', 'been', 'extensively', 'studied', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'NN', ',', 'CC', 'NN', 'NN', ',', 'VBZ', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'VBN', 'RB', 'VBN', '.']",18
face_alignment,17,11,The code is made publicly available at https://github.com/thesouthfrog/stylealign.,"['The', 'code', 'is', 'made', 'publicly', 'available', 'at', 'https://github.com/thesouthfrog/stylealign.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['DT', 'NN', 'VBZ', 'VBN', 'RB', 'JJ', 'IN', 'NN']",8
face_alignment,17,30,"To this end , we propose a new framework to augment training for facial landmark detection without using extra knowledge .","['To', 'this', 'end', ',', 'we', 'propose', 'a', 'new', 'framework', 'to', 'augment', 'training', 'for', 'facial', 'landmark', 'detection', 'without', 'using', 'extra', 'knowledge', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['TO', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'NN', 'IN', 'JJ', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NN', '.']",21
face_alignment,17,31,"Instead of directly generating images , we first map face images into the space of structure and style .","['Instead', 'of', 'directly', 'generating', 'images', ',', 'we', 'first', 'map', 'face', 'images', 'into', 'the', 'space', 'of', 'structure', 'and', 'style', '.']","['O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', 'IN', 'RB', 'VBG', 'NNS', ',', 'PRP', 'RB', 'VBD', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NN', 'CC', 'NN', '.']",19
face_alignment,17,32,"To guarantee the disentanglement of these two spaces , we design a conditional variational auto - encoder model , in which Kullback - Leiber ( KL ) divergence loss and skip connections are incorporated for compact representation of style and structure respectively .","['To', 'guarantee', 'the', 'disentanglement', 'of', 'these', 'two', 'spaces', ',', 'we', 'design', 'a', 'conditional', 'variational', 'auto', '-', 'encoder', 'model', ',', 'in', 'which', 'Kullback', '-', 'Leiber', '(', 'KL', ')', 'divergence', 'loss', 'and', 'skip', 'connections', 'are', 'incorporated', 'for', 'compact', 'representation', 'of', 'style', 'and', 'structure', 'respectively', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'CD', 'NNS', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', ':', 'NN', 'NN', ',', 'IN', 'WDT', 'NNP', ':', 'NNP', '(', 'NNP', ')', 'NN', 'NN', 'CC', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'NN', 'IN', 'NN', 'CC', 'NN', 'RB', '.']",43
face_alignment,17,33,"By factoring these features , we perform visual style translation between existing facial geometry .","['By', 'factoring', 'these', 'features', ',', 'we', 'perform', 'visual', 'style', 'translation', 'between', 'existing', 'facial', 'geometry', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'NNS', ',', 'PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NN', '.']",15
face_alignment,17,34,"Given existing facial structure , faces with glasses , of poor quality , under blur or strong lighting are rerendered from corresponding style , which are used to further train the facial landmark detectors for a rather general and robust system to recognize facial geometry .","['Given', 'existing', 'facial', 'structure', ',', 'faces', 'with', 'glasses', ',', 'of', 'poor', 'quality', ',', 'under', 'blur', 'or', 'strong', 'lighting', 'are', 'rerendered', 'from', 'corresponding', 'style', ',', 'which', 'are', 'used', 'to', 'further', 'train', 'the', 'facial', 'landmark', 'detectors', 'for', 'a', 'rather', 'general', 'and', 'robust', 'system', 'to', 'recognize', 'facial', 'geometry', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['VBN', 'VBG', 'JJ', 'NN', ',', 'VBZ', 'IN', 'NNS', ',', 'IN', 'JJ', 'NN', ',', 'IN', 'NN', 'CC', 'JJ', 'NN', 'VBP', 'VBN', 'IN', 'VBG', 'NN', ',', 'WDT', 'VBP', 'VBN', 'TO', 'RBR', 'VB', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'RB', 'JJ', 'CC', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'NN', '.']",46
face_alignment,17,154,"Implementation Details Before training , all images are cropped and resized to 256 256 using provided bounding boxes .","['Implementation', 'Details', 'Before', 'training', ',', 'all', 'images', 'are', 'cropped', 'and', 'resized', 'to', '256', '256', 'using', 'provided', 'bounding', 'boxes', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'NNS', 'IN', 'NN', ',', 'DT', 'NNS', 'VBP', 'VBN', 'CC', 'VBN', 'TO', 'CD', 'CD', 'VBG', 'VBN', 'NN', 'NNS', '.']",19
face_alignment,17,156,"We use 6 residual encoder blocks for downsampling the input feature maps , where batch normalization is removed for better synthetic results .","['We', 'use', '6', 'residual', 'encoder', 'blocks', 'for', 'downsampling', 'the', 'input', 'feature', 'maps', ',', 'where', 'batch', 'normalization', 'is', 'removed', 'for', 'better', 'synthetic', 'results', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NN', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'NN', 'NNS', ',', 'WRB', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'JJR', 'JJ', 'NNS', '.']",23
face_alignment,17,158,"For training of the disentangling step , we use Adam with an initial learning rate of 0.01 , which descends linearly to 0.0001 with no augmentation .","['For', 'training', 'of', 'the', 'disentangling', 'step', ',', 'we', 'use', 'Adam', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.01', ',', 'which', 'descends', 'linearly', 'to', '0.0001', 'with', 'no', 'augmentation', '.']","['B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'WDT', 'VBZ', 'RB', 'TO', 'CD', 'IN', 'DT', 'NN', '.']",27
face_alignment,17,159,"For training of detectors , we first augment each landmark map with k random styles sampled from other face images .","['For', 'training', 'of', 'detectors', ',', 'we', 'first', 'augment', 'each', 'landmark', 'map', 'with', 'k', 'random', 'styles', 'sampled', 'from', 'other', 'face', 'images', '.']","['O', 'O', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'IN', 'NNS', ',', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'VBN', 'IN', 'JJ', 'NN', 'NNS', '.']",21
face_alignment,17,161,"For the detector architecture , a simple baseline network based on ResNet - 18 is chosen by changing the output dimension of the last FC layers to landmark 2 to demonstrate the increase brought by style translation .","['For', 'the', 'detector', 'architecture', ',', 'a', 'simple', 'baseline', 'network', 'based', 'on', 'ResNet', '-', '18', 'is', 'chosen', 'by', 'changing', 'the', 'output', 'dimension', 'of', 'the', 'last', 'FC', 'layers', 'to', 'landmark', '2', 'to', 'demonstrate', 'the', 'increase', 'brought', 'by', 'style', 'translation', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'NNP', ':', 'CD', 'VBZ', 'VBN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NNS', 'TO', 'VB', 'CD', 'TO', 'VB', 'DT', 'NN', 'VBN', 'IN', 'NN', 'NN', '.']",38
face_alignment,17,164,WFLW,['WFLW'],['B-n'],['NN'],1
face_alignment,17,170,The light - weight Res - 18 is improved by 13.8 % .,"['The', 'light', '-', 'weight', 'Res', '-', '18', 'is', 'improved', 'by', '13.8', '%', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', ':', 'NN', 'NNP', ':', 'CD', 'VBZ', 'VBN', 'IN', 'CD', 'NN', '.']",13
face_alignment,17,171,"By utilizing a stronger baseline , our model achieves 4.39 % NME under style - augmented training , outperforms state - of the - art entries by a large margin .","['By', 'utilizing', 'a', 'stronger', 'baseline', ',', 'our', 'model', 'achieves', '4.39', '%', 'NME', 'under', 'style', '-', 'augmented', 'training', ',', 'outperforms', 'state', '-', 'of', 'the', '-', 'art', 'entries', 'by', 'a', 'large', 'margin', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'JJR', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'CD', 'NN', 'NNP', 'IN', 'NN', ':', 'JJ', 'NN', ',', 'VBZ', 'NN', ':', 'IN', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",31
face_alignment,17,172,"In particular , for the strong baselines , our method also brings 15.9 % improvement to SAN model , and 9 % boost to LAB from 5.27 % NME to 4.76 % .","['In', 'particular', ',', 'for', 'the', 'strong', 'baselines', ',', 'our', 'method', 'also', 'brings', '15.9', '%', 'improvement', 'to', 'SAN', 'model', ',', 'and', '9', '%', 'boost', 'to', 'LAB', 'from', '5.27', '%', 'NME', 'to', '4.76', '%', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'JJ', ',', 'IN', 'DT', 'JJ', 'NNS', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'CD', 'NN', 'NN', 'TO', 'NNP', 'NN', ',', 'CC', 'CD', 'NN', 'NN', 'TO', 'NNP', 'IN', 'CD', 'NN', 'NNP', 'TO', 'CD', 'NN', '.']",33
face_alignment,17,175,"With additional "" style- augmented "" synthetic training samples , our model based on a simple backbone outperforms previous state - of - the - art methods .","['With', 'additional', '""', 'style-', 'augmented', '""', 'synthetic', 'training', 'samples', ',', 'our', 'model', 'based', 'on', 'a', 'simple', 'backbone', 'outperforms', 'previous', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NN', 'NN', 'VBD', 'NNP', 'JJ', 'NN', 'NNS', ',', 'PRP$', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",28
face_alignment,17,177,300W,['300W'],['B-n'],['CD'],1
face_alignment,17,183,"However , our model still yields 1.8 % and 3.1 % improvement on LAB and SAN respectively , which manifest the consistent benefit when using the "" style - augmented "" strategy .","['However', ',', 'our', 'model', 'still', 'yields', '1.8', '%', 'and', '3.1', '%', 'improvement', 'on', 'LAB', 'and', 'SAN', 'respectively', ',', 'which', 'manifest', 'the', 'consistent', 'benefit', 'when', 'using', 'the', '""', 'style', '-', 'augmented', '""', 'strategy', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'CD', 'NN', 'CC', 'CD', 'NN', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'RB', ',', 'WDT', 'VBP', 'DT', 'JJ', 'NN', 'WRB', 'VBG', 'DT', 'NNP', 'NN', ':', 'VBN', 'JJ', 'NN', '.']",33
face_alignment,17,185,Common Cross - dataset Evaluation on COFW,"['Common', 'Cross', '-', 'dataset', 'Evaluation', 'on', 'COFW']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', ':', 'NN', 'NN', 'IN', 'NNP']",7
face_alignment,17,188,"Our model performs the best with 4.43 % mean error and 2.82 % failure rate , which indicates high robustness to occlusion due to our proper utilization of style translation .","['Our', 'model', 'performs', 'the', 'best', 'with', '4.43', '%', 'mean', 'error', 'and', '2.82', '%', 'failure', 'rate', ',', 'which', 'indicates', 'high', 'robustness', 'to', 'occlusion', 'due', 'to', 'our', 'proper', 'utilization', 'of', 'style', 'translation', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'IN', 'CD', 'NN', 'JJ', 'NN', 'CC', 'CD', 'NN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'NN', 'TO', 'NN', 'JJ', 'TO', 'PRP$', 'JJ', 'NN', 'IN', 'NN', 'NN', '.']",31
face_alignment,17,189,AFLW,['AFLW'],['B-n'],['NN'],1
face_alignment,17,196,"Exploiting style information also boosts landmark detectors with a large - scale training set ( 25 , 000 images in AFLW ) .","['Exploiting', 'style', 'information', 'also', 'boosts', 'landmark', 'detectors', 'with', 'a', 'large', '-', 'scale', 'training', 'set', '(', '25', ',', '000', 'images', 'in', 'AFLW', ')', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NN', 'NN', 'RB', 'VBZ', 'NN', 'NNS', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', 'VBN', '(', 'CD', ',', 'CD', 'NNS', 'IN', 'NNP', ')', '.']",23
face_alignment,17,197,"Interestingly , our method improves SAN baseline in terms of NME on Full set from 6.94 % to 6.01 % , which indicates that augmenting in style level brings promising improvement on solving large pose variation .","['Interestingly', ',', 'our', 'method', 'improves', 'SAN', 'baseline', 'in', 'terms', 'of', 'NME', 'on', 'Full', 'set', 'from', '6.94', '%', 'to', '6.01', '%', ',', 'which', 'indicates', 'that', 'augmenting', 'in', 'style', 'level', 'brings', 'promising', 'improvement', 'on', 'solving', 'large', 'pose', 'variation', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP$', 'NN', 'VBZ', 'NNP', 'NN', 'IN', 'NNS', 'IN', 'NNP', 'IN', 'NNP', 'NN', 'IN', 'CD', 'NN', 'TO', 'CD', 'NN', ',', 'WDT', 'VBZ', 'IN', 'VBG', 'IN', 'NN', 'NN', 'VBZ', 'VBG', 'NN', 'IN', 'VBG', 'JJ', 'JJ', 'NN', '.']",37
face_alignment,17,198,The visual comparison in shows hidden face part is better modeled with our strategy .,"['The', 'visual', 'comparison', 'in', 'shows', 'hidden', 'face', 'part', 'is', 'better', 'modeled', 'with', 'our', 'strategy', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'NNS', 'VBP', 'NN', 'NN', 'VBZ', 'RBR', 'VBN', 'IN', 'PRP$', 'NN', '.']",15
face_alignment,17,201,Disentanglement of style and structure is the key that influences quality of style - augmented samples .,"['Disentanglement', 'of', 'style', 'and', 'structure', 'is', 'the', 'key', 'that', 'influences', 'quality', 'of', 'style', '-', 'augmented', 'samples', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'NN', 'CC', 'NN', 'VBZ', 'DT', 'NN', 'WDT', 'VBZ', 'NN', 'IN', 'NN', ':', 'VBN', 'NNS', '.']",17
face_alignment,17,210,"Style - augmented synthetic images improve detectors ' performance by a large margin , while the improvement is even larger when the number of training images is quite small .","['Style', '-', 'augmented', 'synthetic', 'images', 'improve', 'detectors', ""'"", 'performance', 'by', 'a', 'large', 'margin', ',', 'while', 'the', 'improvement', 'is', 'even', 'larger', 'when', 'the', 'number', 'of', 'training', 'images', 'is', 'quite', 'small', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['NNP', ':', 'VBD', 'JJ', 'NNS', 'VBP', 'NNS', 'POS', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'JJR', 'WRB', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBZ', 'RB', 'JJ', '.']",30
face_alignment,17,225,We evaluate our method by adding the number of random sampled styles k of each annotated landmarks on a ResNet - 50 baseline .,"['We', 'evaluate', 'our', 'method', 'by', 'adding', 'the', 'number', 'of', 'random', 'sampled', 'styles', 'k', 'of', 'each', 'annotated', 'landmarks', 'on', 'a', 'ResNet', '-', '50', 'baseline', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'NN', 'VBN', 'NNS', 'NNS', 'IN', 'DT', 'VBN', 'NNS', 'IN', 'DT', 'NNP', ':', 'CD', 'NN', '.']",24
face_alignment,17,227,"By adding a number of augmented styles , the model continue gaining improvement .","['By', 'adding', 'a', 'number', 'of', 'augmented', 'styles', ',', 'the', 'model', 'continue', 'gaining', 'improvement', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NNS', ',', 'DT', 'NN', 'VBP', 'VBG', 'NN', '.']",14
face_alignment,2,2,DeCaFA : Deep Convolutional Cascade for Face Alignment In The Wild,"['DeCaFA', ':', 'Deep', 'Convolutional', 'Cascade', 'for', 'Face', 'Alignment', 'In', 'The', 'Wild']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', ':', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'DT', 'NNP']",11
face_alignment,2,4,"Face Alignment is an active computer vision domain , that consists in localizing a number of facial landmarks that vary across datasets .","['Face', 'Alignment', 'is', 'an', 'active', 'computer', 'vision', 'domain', ',', 'that', 'consists', 'in', 'localizing', 'a', 'number', 'of', 'facial', 'landmarks', 'that', 'vary', 'across', 'datasets', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'IN', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'WDT', 'VBP', 'IN', 'NNS', '.']",23
face_alignment,2,22,"In this paper , we introduce a Deep convolutional Cascade for Face Alignment ( DeCaFA ) .","['In', 'this', 'paper', ',', 'we', 'introduce', 'a', 'Deep', 'convolutional', 'Cascade', 'for', 'Face', 'Alignment', '(', 'DeCaFA', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'NNP', 'IN', 'NNP', 'NNP', '(', 'NNP', ')', '.']",17
face_alignment,2,23,"DeCaFA is composed of several stages that each produce landmark - wise attention maps , relatively to heterogeneous annotation markups .","['DeCaFA', 'is', 'composed', 'of', 'several', 'stages', 'that', 'each', 'produce', 'landmark', '-', 'wise', 'attention', 'maps', ',', 'relatively', 'to', 'heterogeneous', 'annotation', 'markups', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'SYM', ':', 'NN', 'NN', 'NNS', ',', 'RB', 'TO', 'JJ', 'NN', 'NNS', '.']",21
face_alignment,2,25,"It illustrates how these attention maps are refined through the successive stages , and how the different prediction tasks can benefit from each other .","['It', 'illustrates', 'how', 'these', 'attention', 'maps', 'are', 'refined', 'through', 'the', 'successive', 'stages', ',', 'and', 'how', 'the', 'different', 'prediction', 'tasks', 'can', 'benefit', 'from', 'each', 'other', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'WRB', 'DT', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNS', ',', 'CC', 'WRB', 'DT', 'JJ', 'NN', 'NNS', 'MD', 'VB', 'IN', 'DT', 'JJ', '.']",25
face_alignment,2,130,"The DeCaFA models that will be investigated below use 1 to 4 stages that each contains 12 3 3 convolutional layers with 64 ? 64 ? 128 ? 128 ? 256 ? 256 channels for the downsampling portion , and vice - versa for the upsampling portion .","['The', 'DeCaFA', 'models', 'that', 'will', 'be', 'investigated', 'below', 'use', '1', 'to', '4', 'stages', 'that', 'each', 'contains', '12', '3', '3', 'convolutional', 'layers', 'with', '64', '?', '64', '?', '128', '?', '128', '?', '256', '?', '256', 'channels', 'for', 'the', 'downsampling', 'portion', ',', 'and', 'vice', '-', 'versa', 'for', 'the', 'upsampling', 'portion', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'NNS', 'WDT', 'MD', 'VB', 'VBN', 'IN', 'NN', 'CD', 'TO', 'CD', 'NNS', 'IN', 'DT', 'VBZ', 'CD', 'CD', 'CD', 'JJ', 'NNS', 'IN', 'CD', '.', 'CD', '.', 'CD', '.', 'CD', '.', 'CD', '.', 'CD', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'NN', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",48
face_alignment,2,131,The input images are resized to 128 128 grayscale images prior to being processed by the network .,"['The', 'input', 'images', 'are', 'resized', 'to', '128', '128', 'grayscale', 'images', 'prior', 'to', 'being', 'processed', 'by', 'the', 'network', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'NNS', 'VBP', 'VBN', 'TO', 'CD', 'CD', 'NN', 'NNS', 'RB', 'TO', 'VBG', 'VBN', 'IN', 'DT', 'NN', '.']",18
face_alignment,2,132,Each convolution is followed by a batch normalization layer with ReLU activation .,"['Each', 'convolution', 'is', 'followed', 'by', 'a', 'batch', 'normalization', 'layer', 'with', 'ReLU', 'activation', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', 'NN', 'IN', 'NNP', 'NN', '.']",13
face_alignment,2,133,In order to generate smooth feature maps we do not use transposed convolution but bilinear image upsampling followed with 3 3 convolutional layers .,"['In', 'order', 'to', 'generate', 'smooth', 'feature', 'maps', 'we', 'do', 'not', 'use', 'transposed', 'convolution', 'but', 'bilinear', 'image', 'upsampling', 'followed', 'with', '3', '3', 'convolutional', 'layers', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'PRP', 'VBP', 'RB', 'VB', 'JJ', 'NN', 'CC', 'JJ', 'NN', 'VBG', 'VBD', 'IN', 'CD', 'CD', 'JJ', 'NNS', '.']",24
face_alignment,2,134,The whole architecture is trained using ADAM optimizer with a 5e ? 4 learning rate with momentum 0.9 and learning rate annealing with power 0.9 .,"['The', 'whole', 'architecture', 'is', 'trained', 'using', 'ADAM', 'optimizer', 'with', 'a', '5e', '?', '4', 'learning', 'rate', 'with', 'momentum', '0.9', 'and', 'learning', 'rate', 'annealing', 'with', 'power', '0.9', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'NN', 'IN', 'DT', 'CD', '.', 'CD', 'VBG', 'NN', 'IN', 'NN', 'CD', 'CC', 'VBG', 'NN', 'VBG', 'IN', 'NN', 'CD', '.']",26
face_alignment,2,135,"We apply 400000 updates with batch size 8 for each database , with alternating updates between the databases .","['We', 'apply', '400000', 'updates', 'with', 'batch', 'size', '8', 'for', 'each', 'database', ',', 'with', 'alternating', 'updates', 'between', 'the', 'databases', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'IN', 'NN', 'NN', 'CD', 'IN', 'DT', 'NN', ',', 'IN', 'VBG', 'NNS', 'IN', 'DT', 'NNS', '.']",19
face_alignment,2,153,"The accuracy steadily increases as we add more stages , and saturates after the third on LFPW and HELEN , which is a well - known behavior of cascaded models , showing that DeCaFA with weighted intermediate supervision indeed works as a cascade , by first providing coarse estimates and refining in the later stages .","['The', 'accuracy', 'steadily', 'increases', 'as', 'we', 'add', 'more', 'stages', ',', 'and', 'saturates', 'after', 'the', 'third', 'on', 'LFPW', 'and', 'HELEN', ',', 'which', 'is', 'a', 'well', '-', 'known', 'behavior', 'of', 'cascaded', 'models', ',', 'showing', 'that', 'DeCaFA', 'with', 'weighted', 'intermediate', 'supervision', 'indeed', 'works', 'as', 'a', 'cascade', ',', 'by', 'first', 'providing', 'coarse', 'estimates', 'and', 'refining', 'in', 'the', 'later', 'stages', '.']","['O', 'B-n', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'RB', 'VBZ', 'IN', 'PRP', 'VBP', 'JJR', 'NNS', ',', 'CC', 'NNS', 'IN', 'DT', 'JJ', 'IN', 'NNP', 'CC', 'NNP', ',', 'WDT', 'VBZ', 'DT', 'RB', ':', 'VBN', 'NN', 'IN', 'JJ', 'NNS', ',', 'VBG', 'IN', 'NNP', 'IN', 'JJ', 'JJ', 'NN', 'RB', 'VBZ', 'IN', 'DT', 'NN', ',', 'IN', 'JJ', 'VBG', 'NN', 'NNS', 'CC', 'NN', 'IN', 'DT', 'JJ', 'NNS', '.']",56
face_alignment,2,156,"Coarsely annotated data ( 5 landmarks ) significantly helps the fine - grained landmark localization , as it is integrated a kind of weakly supervised scheme .","['Coarsely', 'annotated', 'data', '(', '5', 'landmarks', ')', 'significantly', 'helps', 'the', 'fine', '-', 'grained', 'landmark', 'localization', ',', 'as', 'it', 'is', 'integrated', 'a', 'kind', 'of', 'weakly', 'supervised', 'scheme', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'VBN', 'NNS', '(', 'CD', 'NNS', ')', 'RB', 'VBZ', 'DT', 'JJ', ':', 'VBN', 'JJ', 'NN', ',', 'IN', 'PRP', 'VBZ', 'VBN', 'DT', 'NN', 'IN', 'NN', 'VBN', 'NN', '.']",27
face_alignment,2,160,"First , reinjecting the whole input image ( F 3 - Equation vs F 2 - Equation ) significantly improves the accuracy on challenging data such as 300 W - challenging or WFLW - pose , where the first cascade stages may commit errors .","['First', ',', 'reinjecting', 'the', 'whole', 'input', 'image', '(', 'F', '3', '-', 'Equation', 'vs', 'F', '2', '-', 'Equation', ')', 'significantly', 'improves', 'the', 'accuracy', 'on', 'challenging', 'data', 'such', 'as', '300', 'W', '-', 'challenging', 'or', 'WFLW', '-', 'pose', ',', 'where', 'the', 'first', 'cascade', 'stages', 'may', 'commit', 'errors', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VBG', 'DT', 'JJ', 'NN', 'NN', '(', 'NNP', 'CD', ':', 'NN', 'NN', 'NNP', 'CD', ':', 'NN', ')', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'NNS', 'JJ', 'IN', 'CD', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NN', ',', 'WRB', 'DT', 'JJ', 'NN', 'NNS', 'MD', 'VB', 'NNS', '.']",45
face_alignment,2,161,F 4 - Equation ( 7 ) and F 3 fusion ( cascaded models ) using local + global information rivals the basic deep approach F 1 - Equation ( 4 ) .,"['F', '4', '-', 'Equation', '(', '7', ')', 'and', 'F', '3', 'fusion', '(', 'cascaded', 'models', ')', 'using', 'local', '+', 'global', 'information', 'rivals', 'the', 'basic', 'deep', 'approach', 'F', '1', '-', 'Equation', '(', '4', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'CD', ':', 'NN', '(', 'CD', ')', 'CC', '$', 'CD', 'NN', '(', 'JJ', 'NNS', ')', 'VBG', 'JJ', 'NNP', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'NNP', 'CD', ':', 'NN', '(', 'CD', ')', '.']",33
face_alignment,2,162,"Furthermore , F 5 - Equation fusion , which uses local and global cues is the best by a significant margin .","['Furthermore', ',', 'F', '5', '-', 'Equation', 'fusion', ',', 'which', 'uses', 'local', 'and', 'global', 'cues', 'is', 'the', 'best', 'by', 'a', 'significant', 'margin', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'NNP', 'CD', ':', 'NN', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'CC', 'JJ', 'NNS', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'JJ', 'NN', '.']",22
face_alignment,2,163,"Furthermore , chaining the transfer layers is better than using independant transfer layers : likewise , in such a case , the first transfer layer benefits from the gradients from the subsequents layer at train time .","['Furthermore', ',', 'chaining', 'the', 'transfer', 'layers', 'is', 'better', 'than', 'using', 'independant', 'transfer', 'layers', ':', 'likewise', ',', 'in', 'such', 'a', 'case', ',', 'the', 'first', 'transfer', 'layer', 'benefits', 'from', 'the', 'gradients', 'from', 'the', 'subsequents', 'layer', 'at', 'train', 'time', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VBG', 'DT', 'NN', 'NNS', 'VBZ', 'JJR', 'IN', 'VBG', 'JJ', 'NN', 'NNS', ':', 'NN', ',', 'IN', 'PDT', 'DT', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'NN', 'IN', 'NN', 'NN', '.']",37
face_alignment,2,176,"Finally , shows a comparison of our method and state - of - the - art approaches on Celeb A .","['Finally', ',', 'shows', 'a', 'comparison', 'of', 'our', 'method', 'and', 'state', '-', 'of', '-', 'the', '-', 'art', 'approaches', 'on', 'Celeb', 'A', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'CC', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'NNP', 'NNP', '.']",21
face_alignment,2,181,"Overall , DeCaFA sets a new state - of - the - art on the three databases with several evaluation metrics .","['Overall', ',', 'DeCaFA', 'sets', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'on', 'the', 'three', 'databases', 'with', 'several', 'evaluation', 'metrics', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'IN', 'DT', 'CD', 'NNS', 'IN', 'JJ', 'NN', 'NNS', '.']",22
face_alignment,3,2,Adaptive Wing Loss for Robust Face Alignment via Heatmap Regression,"['Adaptive', 'Wing', 'Loss', 'for', 'Robust', 'Face', 'Alignment', 'via', 'Heatmap', 'Regression']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",10
face_alignment,3,13,Code will be made publicly available at https://github.com/protossw512/AdaptiveWingLoss.,"['Code', 'will', 'be', 'made', 'publicly', 'available', 'at', 'https://github.com/protossw512/AdaptiveWingLoss.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['NNP', 'MD', 'VB', 'VBN', 'RB', 'JJ', 'IN', 'NN']",8
face_alignment,3,15,"Face alignment , also known as facial landmark localization , seeks to localize pre-defined landmarks on human faces .","['Face', 'alignment', ',', 'also', 'known', 'as', 'facial', 'landmark', 'localization', ',', 'seeks', 'to', 'localize', 'pre-defined', 'landmarks', 'on', 'human', 'faces', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ',', 'RB', 'VBN', 'IN', 'JJ', 'NN', 'NN', ',', 'VBZ', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJ', 'VBZ', '.']",19
face_alignment,3,30,"We thus propose a new loss function and name it Adaptive Wing loss ( Sec. , that is able to significantly improve the quality of heatmap regression results .","['We', 'thus', 'propose', 'a', 'new', 'loss', 'function', 'and', 'name', 'it', 'Adaptive', 'Wing', 'loss', '(', 'Sec.', ',', 'that', 'is', 'able', 'to', 'significantly', 'improve', 'the', 'quality', 'of', 'heatmap', 'regression', 'results', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VB', 'DT', 'JJ', 'NN', 'NN', 'CC', 'NN', 'PRP', 'NNP', 'NNP', 'NN', '(', 'NNP', ',', 'WDT', 'VBZ', 'JJ', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",29
face_alignment,3,31,"Due to the translation invariance of the convolution operation in bottom - up and top - down CNN structures such as stacked Hourglass ( HG ) , the network is notable to capture coordinate information , which we believe is useful for facial landmark localization , since the structure of human faces is relatively stable .","['Due', 'to', 'the', 'translation', 'invariance', 'of', 'the', 'convolution', 'operation', 'in', 'bottom', '-', 'up', 'and', 'top', '-', 'down', 'CNN', 'structures', 'such', 'as', 'stacked', 'Hourglass', '(', 'HG', ')', ',', 'the', 'network', 'is', 'notable', 'to', 'capture', 'coordinate', 'information', ',', 'which', 'we', 'believe', 'is', 'useful', 'for', 'facial', 'landmark', 'localization', ',', 'since', 'the', 'structure', 'of', 'human', 'faces', 'is', 'relatively', 'stable', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'TO', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', ':', 'RB', 'CC', 'JJ', ':', 'RB', 'NNP', 'NNS', 'JJ', 'IN', 'JJ', 'NNP', '(', 'NNP', ')', ',', 'DT', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'JJ', 'NN', ',', 'WDT', 'PRP', 'VBP', 'VBZ', 'JJ', 'IN', 'JJ', 'NN', 'NN', ',', 'IN', 'DT', 'NN', 'IN', 'JJ', 'VBZ', 'VBZ', 'RB', 'JJ', '.']",56
face_alignment,3,32,"Inspired by the Coord - Conv layer proposed by Liu et al. , we encode into our model the full coordinate information and the information only on boundaries predicted from the previous HG module into our model .","['Inspired', 'by', 'the', 'Coord', '-', 'Conv', 'layer', 'proposed', 'by', 'Liu', 'et', 'al.', ',', 'we', 'encode', 'into', 'our', 'model', 'the', 'full', 'coordinate', 'information', 'and', 'the', 'information', 'only', 'on', 'boundaries', 'predicted', 'from', 'the', 'previous', 'HG', 'module', 'into', 'our', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'VBN', 'IN', 'NNP', 'FW', 'NN', ',', 'PRP', 'VBP', 'IN', 'PRP$', 'NN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'DT', 'NN', 'RB', 'IN', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'PRP$', 'NN', '.']",38
face_alignment,3,34,"To encode boundary coordinates , we also add a sub-task of boundary prediction by concatenating an additional boundary channel into the ground truth heatmap which is jointly trained with other channels .","['To', 'encode', 'boundary', 'coordinates', ',', 'we', 'also', 'add', 'a', 'sub-task', 'of', 'boundary', 'prediction', 'by', 'concatenating', 'an', 'additional', 'boundary', 'channel', 'into', 'the', 'ground', 'truth', 'heatmap', 'which', 'is', 'jointly', 'trained', 'with', 'other', 'channels', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'JJ', 'NNS', ',', 'PRP', 'RB', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'RB', 'VBN', 'IN', 'JJ', 'NNS', '.']",32
face_alignment,3,231,"During training , we use RM - SProp with an initial learning rate of 1 10 ?4 .","['During', 'training', ',', 'we', 'use', 'RM', '-', 'SProp', 'with', 'an', 'initial', 'learning', 'rate', 'of', '1', '10', '?4', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CD', 'NN', '.']",18
face_alignment,3,232,We set the momentum to be 0 ( adopted from ) and the weight decay to be 1 10 ?5 .,"['We', 'set', 'the', 'momentum', 'to', 'be', '0', '(', 'adopted', 'from', ')', 'and', 'the', 'weight', 'decay', 'to', 'be', '1', '10', '?5', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'TO', 'VB', 'CD', '(', 'VBN', 'IN', ')', 'CC', 'DT', 'NN', 'NN', 'TO', 'VB', 'CD', 'CD', 'NN', '.']",21
face_alignment,3,233,"We train for 240 epoches , and the learning rate is reduced to 1 10 ?5 and 1 10 ? 6 after 80 and 160 epoches .","['We', 'train', 'for', '240', 'epoches', ',', 'and', 'the', 'learning', 'rate', 'is', 'reduced', 'to', '1', '10', '?5', 'and', '1', '10', '?', '6', 'after', '80', 'and', '160', 'epoches', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'CD', 'NNS', ',', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'CD', 'NN', 'CC', 'CD', 'CD', '.', 'CD', 'IN', 'CD', 'CC', 'CD', 'NNS', '.']",27
face_alignment,3,234,"Data augmentation is performed with random rotation ( 50 ) , translation ( 25 px ) , flipping ( 50 % ) , and rescaling ( 15 % ) .","['Data', 'augmentation', 'is', 'performed', 'with', 'random', 'rotation', '(', '50', ')', ',', 'translation', '(', '25', 'px', ')', ',', 'flipping', '(', '50', '%', ')', ',', 'and', 'rescaling', '(', '15', '%', ')', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O']","['NNP', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', '(', 'CD', ')', ',', 'NN', '(', 'CD', 'NN', ')', ',', 'VBG', '(', 'CD', 'NN', ')', ',', 'CC', 'VBG', '(', 'CD', 'NN', ')', '.']",30
face_alignment,3,235,"Random Gaussian blur , noise and occlusion are also used .","['Random', 'Gaussian', 'blur', ',', 'noise', 'and', 'occlusion', 'are', 'also', 'used', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-p', 'O']","['NNP', 'NNP', 'NN', ',', 'NN', 'CC', 'NN', 'VBP', 'RB', 'VBN', '.']",11
face_alignment,3,244,Evaluation on 300W,"['Evaluation', 'on', '300W']","['O', 'B-p', 'B-n']","['NN', 'IN', 'CD']",3
face_alignment,3,245,"Our method is able to achieve the state - of - the - art performance on the 300W testing dataset , see .","['Our', 'method', 'is', 'able', 'to', 'achieve', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'the', '300W', 'testing', 'dataset', ',', 'see', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'CD', 'NN', 'NN', ',', 'VBP', '.']",23
face_alignment,3,246,"For the challenge subset ( iBug dataset ) , we are able to outperform","['For', 'the', 'challenge', 'subset', '(', 'iBug', 'dataset', ')', ',', 'we', 'are', 'able', 'to', 'outperform']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n']","['IN', 'DT', 'NN', 'NN', '(', 'JJ', 'NN', ')', ',', 'PRP', 'VBP', 'JJ', 'TO', 'VB']",14
face_alignment,3,247,"Wing by a significant margin , which also proves the robustness of our approach against occlusion and large pose variation .","['Wing', 'by', 'a', 'significant', 'margin', ',', 'which', 'also', 'proves', 'the', 'robustness', 'of', 'our', 'approach', 'against', 'occlusion', 'and', 'large', 'pose', 'variation', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'NN', 'CC', 'JJ', 'JJ', 'NN', '.']",21
face_alignment,3,248,"Furthermore , on the 300 W private test dataset ) , we again outperform the previous state - of - theart on variant metrics including NME , AUC and FR measured with either 8 % NME and 10 % NME .","['Furthermore', ',', 'on', 'the', '300', 'W', 'private', 'test', 'dataset', ')', ',', 'we', 'again', 'outperform', 'the', 'previous', 'state', '-', 'of', '-', 'theart', 'on', 'variant', 'metrics', 'including', 'NME', ',', 'AUC', 'and', 'FR', 'measured', 'with', 'either', '8', '%', 'NME', 'and', '10', '%', 'NME', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'IN', 'DT', 'CD', 'NNP', 'JJ', 'NN', 'NN', ')', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'NN', 'IN', 'JJ', 'NNS', 'VBG', 'NNP', ',', 'NNP', 'CC', 'NNP', 'VBD', 'IN', 'DT', 'CD', 'NN', 'NNP', 'CC', 'CD', 'NN', 'NNP', '.']",41
face_alignment,3,250,Evaluation on WFLW,"['Evaluation', 'on', 'WFLW']","['O', 'O', 'B-n']","['NN', 'IN', 'NNP']",3
face_alignment,3,251,"Our method again achieves the best results on the WFLW dataset in , which is significantly more difficult than COFW and 300W ( see for visualizations ) .","['Our', 'method', 'again', 'achieves', 'the', 'best', 'results', 'on', 'the', 'WFLW', 'dataset', 'in', ',', 'which', 'is', 'significantly', 'more', 'difficult', 'than', 'COFW', 'and', '300W', '(', 'see', 'for', 'visualizations', ')', '.']","['B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'RB', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'DT', 'NNP', 'NN', 'IN', ',', 'WDT', 'VBZ', 'RB', 'RBR', 'JJ', 'IN', 'NNP', 'CC', 'CD', '(', 'VB', 'IN', 'NNS', ')', '.']",28
face_alignment,3,252,On every subset we outperform the previous state - of - the - art ap - :,"['On', 'every', 'subset', 'we', 'outperform', 'the', 'previous', 'state', '-', 'of', '-', 'the', '-', 'art', 'ap', '-', ':']","['B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'VBZ', ':', ':']",17
face_alignment,3,256,"All in all , our approach fails on only 2.84 % of all images , more than a two times improvement compared with 7.6 .","['All', 'in', 'all', ',', 'our', 'approach', 'fails', 'on', 'only', '2.84', '%', 'of', 'all', 'images', ',', 'more', 'than', 'a', 'two', 'times', 'improvement', 'compared', 'with', '7.6', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'IN', 'DT', ',', 'PRP$', 'NN', 'VBZ', 'IN', 'RB', 'CD', 'NN', 'IN', 'DT', 'NNS', ',', 'JJR', 'IN', 'DT', 'CD', 'NNS', 'NN', 'VBN', 'IN', 'CD', '.']",25
face_alignment,15,2,Face Alignment Across Large Poses : A 3D Solution,"['Face', 'Alignment', 'Across', 'Large', 'Poses', ':', 'A', '3D', 'Solution']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'NNP', 'VBZ', ':', 'DT', 'CD', 'NN']",9
face_alignment,15,4,"Face alignment , which fits a face model to an image and extracts the semantic meanings of facial pixels , has been an important topic in CV community .","['Face', 'alignment', ',', 'which', 'fits', 'a', 'face', 'model', 'to', 'an', 'image', 'and', 'extracts', 'the', 'semantic', 'meanings', 'of', 'facial', 'pixels', ',', 'has', 'been', 'an', 'important', 'topic', 'in', 'CV', 'community', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'NN', 'TO', 'DT', 'NN', 'CC', 'VBZ', 'DT', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'VBZ', 'VBN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NN', '.']",29
face_alignment,15,45,"poses , we propose to fit the 3D dense face model rather than the sparse landmark shape model to the image .","['poses', ',', 'we', 'propose', 'to', 'fit', 'the', '3D', 'dense', 'face', 'model', 'rather', 'than', 'the', 'sparse', 'landmark', 'shape', 'model', 'to', 'the', 'image', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['NNS', ',', 'PRP', 'VBP', 'TO', 'VB', 'DT', 'CD', 'NN', 'NN', 'NN', 'RB', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'TO', 'DT', 'NN', '.']",22
face_alignment,15,47,We call this method 3D Dense Face Alignment ( 3DDFA ) .,"['We', 'call', 'this', 'method', '3D', 'Dense', 'Face', 'Alignment', '(', '3DDFA', ')', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'CD', 'NNP', 'NNP', 'NNP', '(', 'CD', ')', '.']",12
face_alignment,15,50,"To resolve the fitting process in 3 DDFA , we propose a cascaded convolutional neutral network ( CNN ) based regression method .","['To', 'resolve', 'the', 'fitting', 'process', 'in', '3', 'DDFA', ',', 'we', 'propose', 'a', 'cascaded', 'convolutional', 'neutral', 'network', '(', 'CNN', ')', 'based', 'regression', 'method', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'CD', 'NNP', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'JJ', 'NN', '(', 'NNP', ')', 'VBN', 'NN', 'NN', '.']",23
face_alignment,15,52,"In this work , we adopt CNN to fit the 3D face model with a specifically designed feature , namely Projected Normalized Coordinate Code ( PNCC ) .","['In', 'this', 'work', ',', 'we', 'adopt', 'CNN', 'to', 'fit', 'the', '3D', 'face', 'model', 'with', 'a', 'specifically', 'designed', 'feature', ',', 'namely', 'Projected', 'Normalized', 'Coordinate', 'Code', '(', 'PNCC', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNP', 'TO', 'VB', 'DT', 'CD', 'NN', 'NN', 'IN', 'DT', 'RB', 'VBN', 'NN', ',', 'RB', 'VBN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",28
face_alignment,15,53,"Besides , Weighted Parameter Distance Cost ( WPDC ) is proposed as the cost function .","['Besides', ',', 'Weighted', 'Parameter', 'Distance', 'Cost', '(', 'WPDC', ')', 'is', 'proposed', 'as', 'the', 'cost', 'function', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', ',', 'VBD', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",16
face_alignment,15,54,"To the best of our knowledge , this is the first attempt to solve the 3D face alignment with CNN .","['To', 'the', 'best', 'of', 'our', 'knowledge', ',', 'this', 'is', 'the', 'first', 'attempt', 'to', 'solve', 'the', '3D', 'face', 'alignment', 'with', 'CNN', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['TO', 'DT', 'JJS', 'IN', 'PRP$', 'NN', ',', 'DT', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'CD', 'NN', 'NN', 'IN', 'NNP', '.']",21
face_alignment,15,56,"To enable the training of the 3DDFA , we construct a face database containing pairs of 2D face images and 3D face models .","['To', 'enable', 'the', 'training', 'of', 'the', '3DDFA', ',', 'we', 'construct', 'a', 'face', 'database', 'containing', 'pairs', 'of', '2D', 'face', 'images', 'and', '3D', 'face', 'models', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'CD', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'VBG', 'NNS', 'IN', 'CD', 'NN', 'NNS', 'CC', 'CD', 'NN', 'NNS', '.']",24
face_alignment,15,57,We further propose a face profiling algorithm to synthesize 60 k + training samples across large poses .,"['We', 'further', 'propose', 'a', 'face', 'profiling', 'algorithm', 'to', 'synthesize', '60', 'k', '+', 'training', 'samples', 'across', 'large', 'poses', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'VB', 'DT', 'NN', 'VBG', 'NN', 'TO', 'VB', 'CD', 'NN', 'NNP', 'NN', 'NNS', 'IN', 'JJ', 'NNS', '.']",18
face_alignment,15,58,The synthesized samples well simulate the face appearances in large poses and boost the performance of both prior and our proposed face alignment algorithms .,"['The', 'synthesized', 'samples', 'well', 'simulate', 'the', 'face', 'appearances', 'in', 'large', 'poses', 'and', 'boost', 'the', 'performance', 'of', 'both', 'prior', 'and', 'our', 'proposed', 'face', 'alignment', 'algorithms', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'RB', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'JJ', 'NNS', 'CC', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'CC', 'PRP$', 'VBN', 'NN', 'NN', 'NN', '.']",25
face_alignment,15,59,"The database , face profiling code and 3 DDFA code are released at http://www.cbsr.ia.ac.cn/users / xiangyuzhu/.","['The', 'database', ',', 'face', 'profiling', 'code', 'and', '3', 'DDFA', 'code', 'are', 'released', 'at', 'http://www.cbsr.ia.ac.cn/users', '/', 'xiangyuzhu/.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['DT', 'NN', ',', 'NN', 'VBG', 'NN', 'CC', 'CD', 'NNP', 'NN', 'VBP', 'VBN', 'IN', 'NNS', 'VBP', 'NN']",16
face_alignment,15,221,Error Reduction in Cascade :,"['Error', 'Reduction', 'in', 'Cascade', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'IN', 'NNP', ':']",5
face_alignment,15,225,"As observed , the testing error is reduced due to initialization regeneration .","['As', 'observed', ',', 'the', 'testing', 'error', 'is', 'reduced', 'due', 'to', 'initialization', 'regeneration', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', ',', 'DT', 'VBG', 'NN', 'VBZ', 'VBN', 'JJ', 'TO', 'VB', 'NN', '.']",13
face_alignment,15,226,In the generic cascade process the training and testing errors converge fast after 2 iterations .,"['In', 'the', 'generic', 'cascade', 'process', 'the', 'training', 'and', 'testing', 'errors', 'converge', 'fast', 'after', '2', 'iterations', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'NN', 'DT', 'NN', 'CC', 'VBG', 'NNS', 'VBP', 'RB', 'IN', 'CD', 'NNS', '.']",16
face_alignment,15,227,"While with initialization regeneration , the training error is updated at the beginning of each iteration and the testing error continues to descend .","['While', 'with', 'initialization', 'regeneration', ',', 'the', 'training', 'error', 'is', 'updated', 'at', 'the', 'beginning', 'of', 'each', 'iteration', 'and', 'the', 'testing', 'error', 'continues', 'to', 'descend', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'IN', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'DT', 'VBG', 'NN', 'VBZ', 'TO', 'VB', '.']",24
face_alignment,15,231,Performance with Different Costs :,"['Performance', 'with', 'Different', 'Costs', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'JJ', 'NNS', ':']",5
face_alignment,15,235,It is shown that PDC can not well model the fitting error and converges to an unsatisfied result .,"['It', 'is', 'shown', 'that', 'PDC', 'can', 'not', 'well', 'model', 'the', 'fitting', 'error', 'and', 'converges', 'to', 'an', 'unsatisfied', 'result', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'VBN', 'IN', 'NNP', 'MD', 'RB', 'RB', 'VB', 'DT', 'JJ', 'NN', 'CC', 'NNS', 'TO', 'DT', 'JJ', 'NN', '.']",19
face_alignment,15,237,"WPDC explicitly models the priority of each parameter and adaptively optimizes them with the parameter weights , leading to the best result .","['WPDC', 'explicitly', 'models', 'the', 'priority', 'of', 'each', 'parameter', 'and', 'adaptively', 'optimizes', 'them', 'with', 'the', 'parameter', 'weights', ',', 'leading', 'to', 'the', 'best', 'result', '.']","['B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'RB', 'NNS', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'RB', 'VBZ', 'PRP', 'IN', 'DT', 'NN', 'NNS', ',', 'VBG', 'TO', 'DT', 'JJS', 'NN', '.']",23
face_alignment,15,240,Large Pose Face Alignment in AFLW Protocol :,"['Large', 'Pose', 'Face', 'Alignment', 'in', 'AFLW', 'Protocol', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', ':']",8
face_alignment,15,258,"Firstly , the results indicate that all the methods benefits substantially from face profiling when dealing with large poses .","['Firstly', ',', 'the', 'results', 'indicate', 'that', 'all', 'the', 'methods', 'benefits', 'substantially', 'from', 'face', 'profiling', 'when', 'dealing', 'with', 'large', 'poses', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'NNS', 'VBP', 'IN', 'PDT', 'DT', 'NNS', 'NNS', 'RB', 'IN', 'NN', 'VBG', 'WRB', 'VBG', 'IN', 'JJ', 'NNS', '.']",20
face_alignment,15,262,"Secondly , 3DDFA reaches the state of the art above all the 2D methods especially beyond medium poses .","['Secondly', ',', '3DDFA', 'reaches', 'the', 'state', 'of', 'the', 'art', 'above', 'all', 'the', '2D', 'methods', 'especially', 'beyond', 'medium', 'poses', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'CD', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'PDT', 'DT', 'CD', 'NNS', 'RB', 'IN', 'NN', 'NNS', '.']",19
face_alignment,15,263,The minimum standard deviation of 3DDFA also demonstrates its robustness to pose variations .,"['The', 'minimum', 'standard', 'deviation', 'of', '3DDFA', 'also', 'demonstrates', 'its', 'robustness', 'to', 'pose', 'variations', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'JJ', 'NN', 'IN', 'CD', 'RB', 'VBZ', 'PRP$', 'NN', 'TO', 'VB', 'NNS', '.']",14
face_alignment,15,264,"Finally , the performance of 3DDFA can be further improved with the SDM landmark refinement in Section 5.2 .","['Finally', ',', 'the', 'performance', 'of', '3DDFA', 'can', 'be', 'further', 'improved', 'with', 'the', 'SDM', 'landmark', 'refinement', 'in', 'Section', '5.2', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NN', 'IN', 'CD', 'MD', 'VB', 'JJ', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'NN', 'IN', 'NNP', 'CD', '.']",19
face_alignment,15,265,3D Face Alignment in AFLW2000-3D,"['3D', 'Face', 'Alignment', 'in', 'AFLW2000-3D']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['CD', 'NNP', 'NNP', 'IN', 'NNP']",5
face_alignment,15,270,"For all the methods , despite with ground truth bounding boxes the performance in [ 60 , 90 ] and the standard deviation are obviously reduced when considering all the landmarks .","['For', 'all', 'the', 'methods', ',', 'despite', 'with', 'ground', 'truth', 'bounding', 'boxes', 'the', 'performance', 'in', '[', '60', ',', '90', ']', 'and', 'the', 'standard', 'deviation', 'are', 'obviously', 'reduced', 'when', 'considering', 'all', 'the', 'landmarks', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'PDT', 'DT', 'NNS', ',', 'IN', 'IN', 'NN', 'NN', 'VBG', 'NNS', 'DT', 'NN', 'IN', 'JJ', 'CD', ',', 'CD', 'NN', 'CC', 'DT', 'JJ', 'NN', 'VBP', 'RB', 'VBN', 'WRB', 'VBG', 'PDT', 'DT', 'NNS', '.']",32
face_alignment,15,279,Common Challenging Full TSPM,"['Common', 'Challenging', 'Full', 'TSPM']","['B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'NNP']",4
face_alignment,15,280,"8 that even as a generic face alignment algorithm , 3 DDFA still demonstrates competitive performance on the common set and state - of - the - art performance on the challenging set .","['8', 'that', 'even', 'as', 'a', 'generic', 'face', 'alignment', 'algorithm', ',', '3', 'DDFA', 'still', 'demonstrates', 'competitive', 'performance', 'on', 'the', 'common', 'set', 'and', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'on', 'the', 'challenging', 'set', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['CD', 'WDT', 'RB', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', ',', 'CD', 'NNP', 'RB', 'VBZ', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",34
face_alignment,12,2,Dense Face Alignment,"['Dense', 'Face', 'Alignment']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_alignment,12,4,Face alignment is a classic problem in the computer vision field .,"['Face', 'alignment', 'is', 'a', 'classic', 'problem', 'in', 'the', 'computer', 'vision', 'field', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",12
face_alignment,12,38,"With the objective of addressing both challenges , we learn a CNN to fit a 3 D face model to the face image .","['With', 'the', 'objective', 'of', 'addressing', 'both', 'challenges', ',', 'we', 'learn', 'a', 'CNN', 'to', 'fit', 'a', '3', 'D', 'face', 'model', 'to', 'the', 'face', 'image', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NNP', 'TO', 'VB', 'DT', 'CD', 'NNP', 'NN', 'NN', 'TO', 'DT', 'NN', 'NN', '.']",24
face_alignment,12,41,"To tackle first challenge of limited landmark labeling , we propose to employ additional constraints .","['To', 'tackle', 'first', 'challenge', 'of', 'limited', 'landmark', 'labeling', ',', 'we', 'propose', 'to', 'employ', 'additional', 'constraints', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNS', '.']",16
face_alignment,12,42,"We include contour constraint where the contour of the predicted shape should match the detected 2 D face boundary , and SIFT constraint where the SIFT key points detected on two face images of the same individual should map to the same vertexes on the 3D face model .","['We', 'include', 'contour', 'constraint', 'where', 'the', 'contour', 'of', 'the', 'predicted', 'shape', 'should', 'match', 'the', 'detected', '2', 'D', 'face', 'boundary', ',', 'and', 'SIFT', 'constraint', 'where', 'the', 'SIFT', 'key', 'points', 'detected', 'on', 'two', 'face', 'images', 'of', 'the', 'same', 'individual', 'should', 'map', 'to', 'the', 'same', 'vertexes', 'on', 'the', '3D', 'face', 'model', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'WRB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'MD', 'VB', 'DT', 'JJ', 'CD', 'NNP', 'NN', 'NN', ',', 'CC', 'NNP', 'NN', 'WRB', 'DT', 'NNP', 'JJ', 'NNS', 'VBN', 'IN', 'CD', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'MD', 'VB', 'TO', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'CD', 'NN', 'NN', '.']",49
face_alignment,12,43,"Both constraints are integrated into the CNN training as additional loss function terms , where the end - to - end training results in an enhanced CNN for 3 D face model fitting .","['Both', 'constraints', 'are', 'integrated', 'into', 'the', 'CNN', 'training', 'as', 'additional', 'loss', 'function', 'terms', ',', 'where', 'the', 'end', '-', 'to', '-', 'end', 'training', 'results', 'in', 'an', 'enhanced', 'CNN', 'for', '3', 'D', 'face', 'model', 'fitting', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'JJ', 'NN', 'NN', 'NNS', ',', 'WRB', 'DT', 'NN', ':', 'TO', ':', 'VB', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NNP', 'IN', 'CD', 'NNP', 'NN', 'NN', 'NN', '.']",34
face_alignment,12,44,"For the second challenge of leveraging multiple datasets , the 3D face model fitting approach has the inherent advantage in handling multiple training databases .","['For', 'the', 'second', 'challenge', 'of', 'leveraging', 'multiple', 'datasets', ',', 'the', '3D', 'face', 'model', 'fitting', 'approach', 'has', 'the', 'inherent', 'advantage', 'in', 'handling', 'multiple', 'training', 'databases', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'NNS', ',', 'DT', 'CD', 'NN', 'NN', 'VBG', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'NNS', '.']",25
face_alignment,12,83,Dense Face Alignment,"['Dense', 'Face', 'Alignment']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_alignment,12,203,"To train the network , we use 20 , 10 , and 10 epochs for stage 1 to 3 .","['To', 'train', 'the', 'network', ',', 'we', 'use', '20', ',', '10', ',', 'and', '10', 'epochs', 'for', 'stage', '1', 'to', '3', '.']","['B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', ',', 'PRP', 'VBP', 'CD', ',', 'CD', ',', 'CC', 'CD', 'NN', 'IN', 'NN', 'CD', 'TO', 'CD', '.']",20
face_alignment,12,204,"We set the initial global learning rate as 1 e ? 3 , and reduce the learning rate by a factor of 10 when the training error approaches a plateau .","['We', 'set', 'the', 'initial', 'global', 'learning', 'rate', 'as', '1', 'e', '?', '3', ',', 'and', 'reduce', 'the', 'learning', 'rate', 'by', 'a', 'factor', 'of', '10', 'when', 'the', 'training', 'error', 'approaches', 'a', 'plateau', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'CD', 'NN', '.', 'CD', ',', 'CC', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'WRB', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', '.']",31
face_alignment,12,205,"The minibatch size is 32 , weight decay is 0.005 , and the leak factor for Leaky ReLU is 0.01 .","['The', 'minibatch', 'size', 'is', '32', ',', 'weight', 'decay', 'is', '0.005', ',', 'and', 'the', 'leak', 'factor', 'for', 'Leaky', 'ReLU', 'is', '0.01', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', ',', 'NN', 'NN', 'VBZ', 'CD', ',', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NNP', 'VBZ', 'CD', '.']",21
face_alignment,12,218,"For AFLW - LFPA , our method outperforms the best methods with a large margin of 17.8 % improvement .","['For', 'AFLW', '-', 'LFPA', ',', 'our', 'method', 'outperforms', 'the', 'best', 'methods', 'with', 'a', 'large', 'margin', 'of', '17.8', '%', 'improvement', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ':', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NN', 'NN', '.']",20
face_alignment,12,219,"For AFLW2000 - 3D , our method also shows a large improvement .","['For', 'AFLW2000', '-', '3D', ',', 'our', 'method', 'also', 'shows', 'a', 'large', 'improvement', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNP', ':', 'CD', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', '.']",13
face_alignment,12,220,"Specifically , for images with yaw angle in [ 60 , 90 ] , our method improves the performance by 28 % ( from 7.93 to 5.68 ) .","['Specifically', ',', 'for', 'images', 'with', 'yaw', 'angle', 'in', '[', '60', ',', '90', ']', ',', 'our', 'method', 'improves', 'the', 'performance', 'by', '28', '%', '(', 'from', '7.93', 'to', '5.68', ')', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O']","['RB', ',', 'IN', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'JJ', 'CD', ',', 'CD', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'CD', 'NN', '(', 'IN', 'CD', 'TO', 'CD', ')', '.']",29
face_alignment,12,221,"For the IJB - A dataset , even though we are able to only compare the accuracy for the three labeled landmarks , our method still reaches a higher accuracy .","['For', 'the', 'IJB', '-', 'A', 'dataset', ',', 'even', 'though', 'we', 'are', 'able', 'to', 'only', 'compare', 'the', 'accuracy', 'for', 'the', 'three', 'labeled', 'landmarks', ',', 'our', 'method', 'still', 'reaches', 'a', 'higher', 'accuracy', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ':', 'DT', 'NN', ',', 'RB', 'IN', 'PRP', 'VBP', 'JJ', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'CD', 'VBD', 'NNS', ',', 'PRP$', 'NN', 'RB', 'VBZ', 'DT', 'JJR', 'NN', '.']",31
face_alignment,12,225,"Even though the proposed method can handle largepose alignment , to show its performance on the near- frontal datasets , we evaluate our method on the 300W dataset .","['Even', 'though', 'the', 'proposed', 'method', 'can', 'handle', 'largepose', 'alignment', ',', 'to', 'show', 'its', 'performance', 'on', 'the', 'near-', 'frontal', 'datasets', ',', 'we', 'evaluate', 'our', 'method', 'on', 'the', '300W', 'dataset', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', 'IN', 'DT', 'VBN', 'NN', 'MD', 'VB', 'JJ', 'NN', ',', 'TO', 'VB', 'PRP$', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'PRP$', 'NN', 'IN', 'DT', 'CD', 'NN', '.']",29
face_alignment,12,228,Our method is the second best method on the challenging set .,"['Our', 'method', 'is', 'the', 'second', 'best', 'method', 'on', 'the', 'challenging', 'set', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'RBS', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",12
face_alignment,12,229,"In general , the performance of our method is comparable to other methods that are designed for near - frontal datasets , especially under the following consideration .","['In', 'general', ',', 'the', 'performance', 'of', 'our', 'method', 'is', 'comparable', 'to', 'other', 'methods', 'that', 'are', 'designed', 'for', 'near', '-', 'frontal', 'datasets', ',', 'especially', 'under', 'the', 'following', 'consideration', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', ',', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'JJ', 'NNS', 'WDT', 'VBP', 'VBN', 'IN', 'IN', ':', 'JJ', 'NNS', ',', 'RB', 'IN', 'DT', 'JJ', 'NN', '.']",28
face_alignment,12,238,The accuracy of our method on the AFLW2000 - 3D consistently improves by adding more datasets .,"['The', 'accuracy', 'of', 'our', 'method', 'on', 'the', 'AFLW2000', '-', '3D', 'consistently', 'improves', 'by', 'adding', 'more', 'datasets', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NNP', ':', 'CD', 'RB', 'NNS', 'IN', 'VBG', 'JJR', 'NNS', '.']",17
face_alignment,12,239,"For the AFLW - PIFA dataset , our method achieves 9.5 % and 20 % relative improvement by utilizing the datasets in the stage 2 and stage 3 over the first stage , respectively .","['For', 'the', 'AFLW', '-', 'PIFA', 'dataset', ',', 'our', 'method', 'achieves', '9.5', '%', 'and', '20', '%', 'relative', 'improvement', 'by', 'utilizing', 'the', 'datasets', 'in', 'the', 'stage', '2', 'and', 'stage', '3', 'over', 'the', 'first', 'stage', ',', 'respectively', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'NNP', ':', 'NNP', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'CD', 'NN', 'CC', 'CD', 'NN', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', 'CD', 'CC', 'NN', 'CD', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', '.']",35
face_alignment,12,240,"If including the datasets from both the second and third stages , we can have 26 % relative improvement and achieve NME of 3.86 % .","['If', 'including', 'the', 'datasets', 'from', 'both', 'the', 'second', 'and', 'third', 'stages', ',', 'we', 'can', 'have', '26', '%', 'relative', 'improvement', 'and', 'achieve', 'NME', 'of', '3.86', '%', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'NNS', 'IN', 'CC', 'DT', 'JJ', 'CC', 'JJ', 'NNS', ',', 'PRP', 'MD', 'VB', 'CD', 'NN', 'JJ', 'NN', 'CC', 'VBP', 'NNP', 'IN', 'CD', 'NN', '.']",26
face_alignment,12,248,Comparing LFC + SPC and LFC + CFC performances shows that the CFC is more helpful than the SPC .,"['Comparing', 'LFC', '+', 'SPC', 'and', 'LFC', '+', 'CFC', 'performances', 'shows', 'that', 'the', 'CFC', 'is', 'more', 'helpful', 'than', 'the', 'SPC', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['VBG', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'VBZ', 'VBZ', 'IN', 'DT', 'NNP', 'VBZ', 'RBR', 'JJ', 'IN', 'DT', 'NNP', '.']",20
face_alignment,12,250,Using all constraints achieves the best performance .,"['Using', 'all', 'constraints', 'achieves', 'the', 'best', 'performance', '.']","['B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'NNS', 'VBZ', 'DT', 'JJS', 'NN', '.']",8
face_alignment,12,254,This result shows that for the images with NME - lp between 5 % and 15 % the SPC is helpful .,"['This', 'result', 'shows', 'that', 'for', 'the', 'images', 'with', 'NME', '-', 'lp', 'between', '5', '%', 'and', '15', '%', 'the', 'SPC', 'is', 'helpful', '.']","['O', 'B-n', 'B-p', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'IN', 'DT', 'NNS', 'IN', 'NNP', ':', 'NN', 'IN', 'CD', 'NN', 'CC', 'CD', 'NN', 'DT', 'NNP', 'VBZ', 'JJ', '.']",22
face_alignment,0,4,"3D Morphable Models ( 3 DMMs ) are powerful statistical models of 3D facial shape and texture , and among the stateof - the - art methods for reconstructing facial shape from single images .","['3D', 'Morphable', 'Models', '(', '3', 'DMMs', ')', 'are', 'powerful', 'statistical', 'models', 'of', '3D', 'facial', 'shape', 'and', 'texture', ',', 'and', 'among', 'the', 'stateof', '-', 'the', '-', 'art', 'methods', 'for', 'reconstructing', 'facial', 'shape', 'from', 'single', 'images', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', 'JJ', 'NNP', '(', 'CD', 'NNP', ')', 'VBP', 'JJ', 'JJ', 'NNS', 'IN', 'CD', 'JJ', 'NN', 'CC', 'NN', ',', 'CC', 'IN', 'DT', 'NN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",35
face_alignment,0,18,3 D facial shape estimation from single images has attracted the attention of many researchers the past twenty years .,"['3', 'D', 'facial', 'shape', 'estimation', 'from', 'single', 'images', 'has', 'attracted', 'the', 'attention', 'of', 'many', 'researchers', 'the', 'past', 'twenty', 'years', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'VBZ', 'VBN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'DT', 'JJ', 'NN', 'NNS', '.']",20
face_alignment,0,41,"We propose a methodology for learning a statistical texture model from "" in - the -wild "" facial images , which is in full correspondence with a statistical shape prior that exhibits both identity and expression variations .","['We', 'propose', 'a', 'methodology', 'for', 'learning', 'a', 'statistical', 'texture', 'model', 'from', '""', 'in', '-', 'the', '-wild', '""', 'facial', 'images', ',', 'which', 'is', 'in', 'full', 'correspondence', 'with', 'a', 'statistical', 'shape', 'prior', 'that', 'exhibits', 'both', 'identity', 'and', 'expression', 'variations', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'IN', ':', 'DT', 'JJ', 'NNP', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'RB', 'IN', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'NNS', '.']",38
face_alignment,0,42,"Motivated by the success of feature - based ( e.g. , HOG , SIFT ) Active Appearance Models ( AAMs ) we further show how to learn featurebased texture models for 3 DMMs .","['Motivated', 'by', 'the', 'success', 'of', 'feature', '-', 'based', '(', 'e.g.', ',', 'HOG', ',', 'SIFT', ')', 'Active', 'Appearance', 'Models', '(', 'AAMs', ')', 'we', 'further', 'show', 'how', 'to', 'learn', 'featurebased', 'texture', 'models', 'for', '3', 'DMMs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['VBN', 'IN', 'DT', 'NN', 'IN', 'NN', ':', 'VBN', '(', 'JJ', ',', 'NNP', ',', 'NNP', ')', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'PRP', 'VBP', 'VB', 'WRB', 'TO', 'VB', 'JJ', 'NN', 'NNS', 'IN', 'CD', 'NNP', '.']",34
face_alignment,0,43,"We show that the advantage of using the "" in - the -wild "" feature - based texture model is that the fitting strategy gets simplified since there is not need to optimize with respect to the illumination parameters .","['We', 'show', 'that', 'the', 'advantage', 'of', 'using', 'the', '""', 'in', '-', 'the', '-wild', '""', 'feature', '-', 'based', 'texture', 'model', 'is', 'that', 'the', 'fitting', 'strategy', 'gets', 'simplified', 'since', 'there', 'is', 'not', 'need', 'to', 'optimize', 'with', 'respect', 'to', 'the', 'illumination', 'parameters', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', ':', 'DT', 'JJ', 'JJ', 'NN', ':', 'VBN', 'NN', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'EX', 'VBZ', 'RB', 'VBN', 'TO', 'VB', 'IN', 'NN', 'TO', 'DT', 'NN', 'NNS', '.']",40
face_alignment,0,210,3D Shape Recovery,"['3D', 'Shape', 'Recovery']","['B-n', 'I-n', 'I-n']","['CD', 'NNP', 'NNP']",3
face_alignment,0,222,"The Classic model struggles to fit to the "" in - the -wild "" conditions present in the test set , and performs the worst .","['The', 'Classic', 'model', 'struggles', 'to', 'fit', 'to', 'the', '""', 'in', '-', 'the', '-wild', '""', 'conditions', 'present', 'in', 'the', 'test', 'set', ',', 'and', 'performs', 'the', 'worst', '.']","['O', 'B-n', 'I-n', 'B-n', 'B-p', 'I-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'TO', 'DT', 'NN', 'IN', ':', 'DT', 'JJ', 'JJ', 'NNS', 'VBP', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'VBZ', 'DT', 'JJS', '.']",26
face_alignment,0,223,"The texture - free Linear model does better , but the ITW model is most able to recover the facial shapes due to its ideal feature basis for the "" in - the -wild "" conditions .","['The', 'texture', '-', 'free', 'Linear', 'model', 'does', 'better', ',', 'but', 'the', 'ITW', 'model', 'is', 'most', 'able', 'to', 'recover', 'the', 'facial', 'shapes', 'due', 'to', 'its', 'ideal', 'feature', 'basis', 'for', 'the', '""', 'in', '-', 'the', '-wild', '""', 'conditions', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', ':', 'JJ', 'JJ', 'NN', 'VBZ', 'RBR', ',', 'CC', 'DT', 'NNP', 'NN', 'VBZ', 'RBS', 'JJ', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'JJ', 'TO', 'PRP$', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', ':', 'DT', 'JJ', 'JJ', 'NNS', '.']",37
face_alignment,0,225,"We note that in a wide variety of expression , identity , lighting and occlusion conditions our model is able to robustly reconstruct a realistic 3 D facial shape that stands up to scrutiny .","['We', 'note', 'that', 'in', 'a', 'wide', 'variety', 'of', 'expression', ',', 'identity', ',', 'lighting', 'and', 'occlusion', 'conditions', 'our', 'model', 'is', 'able', 'to', 'robustly', 'reconstruct', 'a', 'realistic', '3', 'D', 'facial', 'shape', 'that', 'stands', 'up', 'to', 'scrutiny', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', ',', 'NN', ',', 'VBG', 'CC', 'NN', 'NNS', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'VB', 'DT', 'JJ', 'CD', 'NNP', 'JJ', 'NN', 'WDT', 'VBZ', 'RP', 'TO', 'VB', '.']",35
face_alignment,0,226,Quantitative Normal Recovery,"['Quantitative', 'Normal', 'Recovery']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
face_alignment,0,231,ITW slightly outperforms IMM even though both IMM and PS - NL use all four available images of each subject .,"['ITW', 'slightly', 'outperforms', 'IMM', 'even', 'though', 'both', 'IMM', 'and', 'PS', '-', 'NL', 'use', 'all', 'four', 'available', 'images', 'of', 'each', 'subject', '.']","['B-n', 'B-n', 'I-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'RB', 'VBZ', 'NNP', 'RB', 'IN', 'DT', 'NNP', 'CC', 'NNP', ':', 'NN', 'IN', 'DT', 'CD', 'JJ', 'NNS', 'IN', 'DT', 'NN', '.']",21
natural_language_inference,16,2,Text Understanding with the Attention Sum Reader Network,"['Text', 'Understanding', 'with', 'the', 'Attention', 'Sum', 'Reader', 'Network']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'NNP']",8
natural_language_inference,16,5,"Thanks to the size of these datasets , the associated text comprehension task is well suited for deep - learning techniques that currently seem to outperform all alternative approaches .","['Thanks', 'to', 'the', 'size', 'of', 'these', 'datasets', ',', 'the', 'associated', 'text', 'comprehension', 'task', 'is', 'well', 'suited', 'for', 'deep', '-', 'learning', 'techniques', 'that', 'currently', 'seem', 'to', 'outperform', 'all', 'alternative', 'approaches', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNS', 'TO', 'DT', 'NN', 'IN', 'DT', 'NNS', ',', 'DT', 'VBN', 'NN', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'JJ', ':', 'VBG', 'NNS', 'WDT', 'RB', 'VBP', 'TO', 'VB', 'DT', 'JJ', 'NNS', '.']",30
natural_language_inference,16,65,Our model called the Attention Sum Reader ( AS Reader ) 4 is tailor - made to leverage the fact that the answer is a word from the context document .,"['Our', 'model', 'called', 'the', 'Attention', 'Sum', 'Reader', '(', 'AS', 'Reader', ')', '4', 'is', 'tailor', '-', 'made', 'to', 'leverage', 'the', 'fact', 'that', 'the', 'answer', 'is', 'a', 'word', 'from', 'the', 'context', 'document', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBD', 'DT', 'NNP', 'NNP', 'NNP', '(', 'IN', 'NNP', ')', 'CD', 'VBZ', 'VBN', ':', 'VBN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",31
natural_language_inference,16,70,We compute a vector embedding of the query .,"['We', 'compute', 'a', 'vector', 'embedding', 'of', 'the', 'query', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",9
natural_language_inference,16,72,We compute a vector embedding of each individual word in the context of the whole document ( contextual embedding ) .,"['We', 'compute', 'a', 'vector', 'embedding', 'of', 'each', 'individual', 'word', 'in', 'the', 'context', 'of', 'the', 'whole', 'document', '(', 'contextual', 'embedding', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', '(', 'JJ', 'NN', ')', '.']",21
natural_language_inference,16,74,"Using a dot product between the question embedding and the contextual embedding of each occurrence of a candidate answer in the document , we select the most likely answer .","['Using', 'a', 'dot', 'product', 'between', 'the', 'question', 'embedding', 'and', 'the', 'contextual', 'embedding', 'of', 'each', 'occurrence', 'of', 'a', 'candidate', 'answer', 'in', 'the', 'document', ',', 'we', 'select', 'the', 'most', 'likely', 'answer', '.']","['B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'RBS', 'JJ', 'NN', '.']",30
natural_language_inference,16,172,To train the model we used stochastic gradient descent with the ADAM update rule and learning rate of 0.001 or 0.0005 .,"['To', 'train', 'the', 'model', 'we', 'used', 'stochastic', 'gradient', 'descent', 'with', 'the', 'ADAM', 'update', 'rule', 'and', 'learning', 'rate', 'of', '0.001', 'or', '0.0005', '.']","['O', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'PRP', 'VBD', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NN', 'CC', 'VBG', 'NN', 'IN', 'CD', 'CC', 'CD', '.']",22
natural_language_inference,16,178,Weights in the GRU networks were initialized by random orthogonal matrices and biases were initialized to zero .,"['Weights', 'in', 'the', 'GRU', 'networks', 'were', 'initialized', 'by', 'random', 'orthogonal', 'matrices', 'and', 'biases', 'were', 'initialized', 'to', 'zero', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['NNS', 'IN', 'DT', 'NNP', 'NNS', 'VBD', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', 'CC', 'NNS', 'VBD', 'VBN', 'TO', 'CD', '.']",18
natural_language_inference,16,179,We also used a gradient clipping threshold of 10 and batches of size 32 .,"['We', 'also', 'used', 'a', 'gradient', 'clipping', 'threshold', 'of', '10', 'and', 'batches', 'of', 'size', '32', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBD', 'DT', 'JJ', 'VBG', 'NN', 'IN', 'CD', 'CC', 'NNS', 'IN', 'NN', 'CD', '.']",15
natural_language_inference,16,212,mance of our single model is a little bit worse than performance of simultaneously published models .,"['mance', 'of', 'our', 'single', 'model', 'is', 'a', 'little', 'bit', 'worse', 'than', 'performance', 'of', 'simultaneously', 'published', 'models', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'PRP$', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'JJR', 'IN', 'NN', 'IN', 'RB', 'VBN', 'NNS', '.']",17
natural_language_inference,16,214,"However , ensemble of our models outperforms these models even though they use pre-trained word embeddings .","['However', ',', 'ensemble', 'of', 'our', 'models', 'outperforms', 'these', 'models', 'even', 'though', 'they', 'use', 'pre-trained', 'word', 'embeddings', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NN', 'IN', 'PRP$', 'NNS', 'IN', 'DT', 'NNS', 'RB', 'IN', 'PRP', 'VBP', 'JJ', 'NN', 'NNS', '.']",17
natural_language_inference,16,215,On the CNN dataset our single model with best validation accuracy achieves a test accuracy of 69.5 % .,"['On', 'the', 'CNN', 'dataset', 'our', 'single', 'model', 'with', 'best', 'validation', 'accuracy', 'achieves', 'a', 'test', 'accuracy', 'of', '69.5', '%', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'VB', 'PRP$', 'JJ', 'NN', 'IN', 'JJS', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'CD', 'NN', '.']",19
natural_language_inference,16,216,The average performance of the top 20 % models according to validation accuracy is 69.9 % which is even 0.5 % better than the single best - validation model .,"['The', 'average', 'performance', 'of', 'the', 'top', '20', '%', 'models', 'according', 'to', 'validation', 'accuracy', 'is', '69.9', '%', 'which', 'is', 'even', '0.5', '%', 'better', 'than', 'the', 'single', 'best', '-', 'validation', 'model', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'CD', 'NN', 'NNS', 'VBG', 'TO', 'NN', 'NN', 'VBZ', 'CD', 'NN', 'WDT', 'VBZ', 'RB', 'CD', 'NN', 'JJR', 'IN', 'DT', 'JJ', 'RBS', ':', 'NN', 'NN', '.']",30
natural_language_inference,16,218,Fusing multiple models then gives a significant further increase in accuracy on both CNN and Daily Mail datasets ..,"['Fusing', 'multiple', 'models', 'then', 'gives', 'a', 'significant', 'further', 'increase', 'in', 'accuracy', 'on', 'both', 'CNN', 'and', 'Daily', 'Mail', 'datasets', '..']","['B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'JJ', 'NNS', 'RB', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'NNS', 'VBP']",19
natural_language_inference,16,220,"In named entity prediction our best single model with accuracy of 68.6 % performs 2 % absolute better than the MemNN with self supervision , the averaging ensemble performs 4 % absolute better than the best previous result .","['In', 'named', 'entity', 'prediction', 'our', 'best', 'single', 'model', 'with', 'accuracy', 'of', '68.6', '%', 'performs', '2', '%', 'absolute', 'better', 'than', 'the', 'MemNN', 'with', 'self', 'supervision', ',', 'the', 'averaging', 'ensemble', 'performs', '4', '%', 'absolute', 'better', 'than', 'the', 'best', 'previous', 'result', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', 'NN', 'NN', 'PRP$', 'JJS', 'JJ', 'NN', 'IN', 'NN', 'IN', 'CD', 'NN', 'NNS', 'CD', 'NN', 'NN', 'JJR', 'IN', 'DT', 'NNP', 'IN', 'JJ', 'NN', ',', 'DT', 'VBG', 'JJ', 'NNS', 'CD', 'NN', 'NN', 'JJR', 'IN', 'DT', 'JJS', 'JJ', 'NN', '.']",39
natural_language_inference,16,221,In common noun prediction our single models is 0.4 % absolute better than Mem NN however the ensemble improves the performance to 69 % which is 6 % absolute better than MemNN .,"['In', 'common', 'noun', 'prediction', 'our', 'single', 'models', 'is', '0.4', '%', 'absolute', 'better', 'than', 'Mem', 'NN', 'however', 'the', 'ensemble', 'improves', 'the', 'performance', 'to', '69', '%', 'which', 'is', '6', '%', 'absolute', 'better', 'than', 'MemNN', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-p', 'B-n', 'O']","['IN', 'JJ', 'NN', 'NN', 'PRP$', 'JJ', 'NNS', 'VBZ', 'CD', 'NN', 'NN', 'JJR', 'IN', 'NNP', 'NNP', 'RB', 'DT', 'JJ', 'VBZ', 'DT', 'NN', 'TO', 'CD', 'NN', 'WDT', 'VBZ', 'CD', 'NN', 'NN', 'JJR', 'IN', 'NNP', '.']",33
natural_language_inference,13,2,Natural Language Comprehension with the EpiReader,"['Natural', 'Language', 'Comprehension', 'with', 'the', 'EpiReader']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['JJ', 'NNP', 'NN', 'IN', 'DT', 'NN']",6
natural_language_inference,13,4,"We present the EpiReader , a novel model for machine comprehension of text .","['We', 'present', 'the', 'EpiReader', ',', 'a', 'novel', 'model', 'for', 'machine', 'comprehension', 'of', 'text', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', ',', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NN', 'IN', 'NN', '.']",14
natural_language_inference,13,5,"Machine comprehension of unstructured , real - world text is a major research goal for natural language processing .","['Machine', 'comprehension', 'of', 'unstructured', ',', 'real', '-', 'world', 'text', 'is', 'a', 'major', 'research', 'goal', 'for', 'natural', 'language', 'processing', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'IN', 'JJ', ',', 'JJ', ':', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",19
natural_language_inference,13,6,"Current tests of machine comprehension pose questions whose answers can be inferred from some supporting text , and evaluate a model 's response to the questions .","['Current', 'tests', 'of', 'machine', 'comprehension', 'pose', 'questions', 'whose', 'answers', 'can', 'be', 'inferred', 'from', 'some', 'supporting', 'text', ',', 'and', 'evaluate', 'a', 'model', ""'s"", 'response', 'to', 'the', 'questions', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'IN', 'NN', 'NN', 'JJ', 'NNS', 'WP$', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'DT', 'VBG', 'NN', ',', 'CC', 'VB', 'DT', 'NN', 'POS', 'NN', 'TO', 'DT', 'NNS', '.']",27
natural_language_inference,13,13,"We propose a deep , end - to - end , neural comprehension model that we call the EpiReader .","['We', 'propose', 'a', 'deep', ',', 'end', '-', 'to', '-', 'end', ',', 'neural', 'comprehension', 'model', 'that', 'we', 'call', 'the', 'EpiReader', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NN', ',', 'VB', ':', 'TO', ':', 'NN', ',', 'JJ', 'NN', 'NN', 'IN', 'PRP', 'VBP', 'DT', 'NNP', '.']",20
natural_language_inference,13,26,The EpiReader factors into two components .,"['The', 'EpiReader', 'factors', 'into', 'two', 'components', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NNS', 'IN', 'CD', 'NNS', '.']",7
natural_language_inference,13,27,The first component extracts a small set of potential answers based on a shallow comparison of the question with its supporting text ; we call this the Extractor .,"['The', 'first', 'component', 'extracts', 'a', 'small', 'set', 'of', 'potential', 'answers', 'based', 'on', 'a', 'shallow', 'comparison', 'of', 'the', 'question', 'with', 'its', 'supporting', 'text', ';', 'we', 'call', 'this', 'the', 'Extractor', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'VBG', 'NN', ':', 'PRP', 'VBP', 'DT', 'DT', 'NNP', '.']",29
natural_language_inference,13,28,The second component reranks the proposed answers based on deeper semantic comparisons with the text ; we call this the Reasoner .,"['The', 'second', 'component', 'reranks', 'the', 'proposed', 'answers', 'based', 'on', 'deeper', 'semantic', 'comparisons', 'with', 'the', 'text', ';', 'we', 'call', 'this', 'the', 'Reasoner', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'VBN', 'NNS', 'VBN', 'IN', 'JJR', 'JJ', 'NNS', 'IN', 'DT', 'NN', ':', 'PRP', 'VBP', 'DT', 'DT', 'NNP', '.']",22
natural_language_inference,13,32,"The semantic comparisons implemented by the Reasoner are based on the concept of recognizing textual entailment ( RTE ) , also known as natural language inference .","['The', 'semantic', 'comparisons', 'implemented', 'by', 'the', 'Reasoner', 'are', 'based', 'on', 'the', 'concept', 'of', 'recognizing', 'textual', 'entailment', '(', 'RTE', ')', ',', 'also', 'known', 'as', 'natural', 'language', 'inference', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'NN', '(', 'NNP', ')', ',', 'RB', 'VBN', 'IN', 'JJ', 'NN', 'NN', '.']",27
natural_language_inference,13,34,"Thus , the Extractor serves the important function of filtering a large set of potential answers down to a small , tractable set of likely candidates for more thorough testing .","['Thus', ',', 'the', 'Extractor', 'serves', 'the', 'important', 'function', 'of', 'filtering', 'a', 'large', 'set', 'of', 'potential', 'answers', 'down', 'to', 'a', 'small', ',', 'tractable', 'set', 'of', 'likely', 'candidates', 'for', 'more', 'thorough', 'testing', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'RP', 'TO', 'DT', 'JJ', ',', 'JJ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'JJR', 'JJ', 'NN', '.']",31
natural_language_inference,13,35,"The Extractor follows the form of a pointer network , and uses a differentiable attention mechanism to indicate words in the text that potentially answer the question .","['The', 'Extractor', 'follows', 'the', 'form', 'of', 'a', 'pointer', 'network', ',', 'and', 'uses', 'a', 'differentiable', 'attention', 'mechanism', 'to', 'indicate', 'words', 'in', 'the', 'text', 'that', 'potentially', 'answer', 'the', 'question', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['DT', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'NNS', 'IN', 'DT', 'NN', 'WDT', 'RB', 'VBP', 'DT', 'NN', '.']",28
natural_language_inference,13,36,This approach was used ( on it s own ) for question answering with the Attention Sum Reader .,"['This', 'approach', 'was', 'used', '(', 'on', 'it', 's', 'own', ')', 'for', 'question', 'answering', 'with', 'the', 'Attention', 'Sum', 'Reader', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBD', 'VBN', '(', 'IN', 'PRP', 'PRP', 'JJ', ')', 'IN', 'NN', 'VBG', 'IN', 'DT', 'NNP', 'NNP', 'NNP', '.']",19
natural_language_inference,13,37,The Extractor outputs a small set of answer candidates along with their estimated probabilities of correctness .,"['The', 'Extractor', 'outputs', 'a', 'small', 'set', 'of', 'answer', 'candidates', 'along', 'with', 'their', 'estimated', 'probabilities', 'of', 'correctness', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NNS', 'IN', 'IN', 'PRP$', 'JJ', 'NNS', 'IN', 'NN', '.']",17
natural_language_inference,13,38,"The Reasoner forms hypotheses by inserting the candidate answers into the question , then estimates the concordance of each hypothesis with each sentence in the supporting text .","['The', 'Reasoner', 'forms', 'hypotheses', 'by', 'inserting', 'the', 'candidate', 'answers', 'into', 'the', 'question', ',', 'then', 'estimates', 'the', 'concordance', 'of', 'each', 'hypothesis', 'with', 'each', 'sentence', 'in', 'the', 'supporting', 'text', '.']","['O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NNS', 'NNS', 'IN', 'VBG', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NN', ',', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'VBG', 'NN', '.']",28
natural_language_inference,13,39,"We use these estimates as a measure of the evidence for a hypothesis , and aggregate evidence overall sentences .","['We', 'use', 'these', 'estimates', 'as', 'a', 'measure', 'of', 'the', 'evidence', 'for', 'a', 'hypothesis', ',', 'and', 'aggregate', 'evidence', 'overall', 'sentences', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'CC', 'JJ', 'NN', 'JJ', 'NNS', '.']",20
natural_language_inference,13,40,"In the end , we combine the Reasoner 's evidence with the Extractor 's probability estimates to produce a final ranking of the answer candidates .","['In', 'the', 'end', ',', 'we', 'combine', 'the', 'Reasoner', ""'s"", 'evidence', 'with', 'the', 'Extractor', ""'s"", 'probability', 'estimates', 'to', 'produce', 'a', 'final', 'ranking', 'of', 'the', 'answer', 'candidates', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'POS', 'NN', 'IN', 'DT', 'NNP', 'POS', 'NN', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",26
natural_language_inference,13,221,"To train our model we used stochastic gradient descent with the ADAM optimizer ( Kingma and Ba , 2014 ) , with an initial learning rate of 0.001 .","['To', 'train', 'our', 'model', 'we', 'used', 'stochastic', 'gradient', 'descent', 'with', 'the', 'ADAM', 'optimizer', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', ',', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.001', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['TO', 'VB', 'PRP$', 'NN', 'PRP', 'VBD', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', ',', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.']",29
natural_language_inference,13,222,"The word embeddings were initialized randomly , drawing from the uniform distribution over .","['The', 'word', 'embeddings', 'were', 'initialized', 'randomly', ',', 'drawing', 'from', 'the', 'uniform', 'distribution', 'over', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O']","['DT', 'NN', 'NNS', 'VBD', 'VBN', 'RB', ',', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', '.']",14
natural_language_inference,13,223,"We used batches of 32 examples , and early stopping with a patience of 2 epochs .","['We', 'used', 'batches', 'of', '32', 'examples', ',', 'and', 'early', 'stopping', 'with', 'a', 'patience', 'of', '2', 'epochs', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'NNS', 'IN', 'CD', 'NNS', ',', 'CC', 'RB', 'VBG', 'IN', 'DT', 'NN', 'IN', 'CD', 'NNS', '.']",17
natural_language_inference,13,224,Our model was implement in Theano using the Keras framework .,"['Our', 'model', 'was', 'implement', 'in', 'Theano', 'using', 'the', 'Keras', 'framework', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBD', 'JJ', 'IN', 'NNP', 'VBG', 'DT', 'NNP', 'NN', '.']",11
natural_language_inference,13,229,"All our models used 2 - regularization at 0.001 , ? = 50 , and ? = 0.04 .","['All', 'our', 'models', 'used', '2', '-', 'regularization', 'at', '0.001', ',', '?', '=', '50', ',', 'and', '?', '=', '0.04', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'PRP$', 'NNS', 'VBN', 'CD', ':', 'NN', 'IN', 'CD', ',', '.', 'UH', 'CD', ',', 'CC', '.', '$', 'CD', '.']",19
natural_language_inference,13,236,The EpiReader achieves state - of - the - art performance across the board for both datasets .,"['The', 'EpiReader', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'across', 'the', 'board', 'for', 'both', 'datasets', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NNS', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', '.']",18
natural_language_inference,13,237,"On CNN , we score 2.2 % higher on test than the best previous model of .","['On', 'CNN', ',', 'we', 'score', '2.2', '%', 'higher', 'on', 'test', 'than', 'the', 'best', 'previous', 'model', 'of', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ',', 'PRP', 'VBP', 'CD', 'NN', 'JJR', 'IN', 'NN', 'IN', 'DT', 'JJS', 'JJ', 'NN', 'IN', '.']",17
natural_language_inference,13,242,On CBT - CN our single model scores 4.0 % higher than the previous best of the AS Reader .,"['On', 'CBT', '-', 'CN', 'our', 'single', 'model', 'scores', '4.0', '%', 'higher', 'than', 'the', 'previous', 'best', 'of', 'the', 'AS', 'Reader', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNP', ':', 'NNP', 'PRP$', 'JJ', 'NN', 'VBZ', 'CD', 'NN', 'JJR', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNP', '.']",20
natural_language_inference,13,243,The improvement on CBT - NE is more modest at 1.1 % .,"['The', 'improvement', 'on', 'CBT', '-', 'NE', 'is', 'more', 'modest', 'at', '1.1', '%', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', ':', 'NN', 'VBZ', 'RBR', 'JJ', 'IN', 'CD', 'NN', '.']",13
natural_language_inference,13,244,"Looking more closely at our CBT - NE results , we found that the validation and test accuracies had relatively high variance even in late epochs of training .","['Looking', 'more', 'closely', 'at', 'our', 'CBT', '-', 'NE', 'results', ',', 'we', 'found', 'that', 'the', 'validation', 'and', 'test', 'accuracies', 'had', 'relatively', 'high', 'variance', 'even', 'in', 'late', 'epochs', 'of', 'training', '.']","['B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['VBG', 'RBR', 'RB', 'IN', 'PRP$', 'NNP', ':', 'NN', 'NNS', ',', 'PRP', 'VBD', 'IN', 'DT', 'NN', 'CC', 'NN', 'NNS', 'VBD', 'RB', 'JJ', 'NN', 'RB', 'IN', 'JJ', 'NN', 'IN', 'NN', '.']",29
natural_language_inference,27,2,SDNET : CONTEXTUALIZED ATTENTION - BASED DEEP NETWORK FOR CONVERSATIONAL QUESTION AN - SWERING,"['SDNET', ':', 'CONTEXTUALIZED', 'ATTENTION', '-', 'BASED', 'DEEP', 'NETWORK', 'FOR', 'CONVERSATIONAL', 'QUESTION', 'AN', '-', 'SWERING']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', ':', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NN']",14
natural_language_inference,27,4,Conversational question answering ( CQA ) is a novel QA task that requires understanding of dialogue context .,"['Conversational', 'question', 'answering', '(', 'CQA', ')', 'is', 'a', 'novel', 'QA', 'task', 'that', 'requires', 'understanding', 'of', 'dialogue', 'context', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', '(', 'NNP', ')', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'WDT', 'VBZ', 'VBG', 'IN', 'NN', 'NN', '.']",18
natural_language_inference,27,5,"Different from traditional single - turn machine reading comprehension ( MRC ) tasks , CQA includes passage comprehension , coreference resolution , and contextual understanding .","['Different', 'from', 'traditional', 'single', '-', 'turn', 'machine', 'reading', 'comprehension', '(', 'MRC', ')', 'tasks', ',', 'CQA', 'includes', 'passage', 'comprehension', ',', 'coreference', 'resolution', ',', 'and', 'contextual', 'understanding', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'IN', 'JJ', 'JJ', ':', 'NN', 'NN', 'VBG', 'NN', '(', 'NNP', ')', 'NNS', ',', 'NNP', 'VBZ', 'NN', 'NN', ',', 'NN', 'NN', ',', 'CC', 'JJ', 'NN', '.']",26
natural_language_inference,27,19,"In this paper , we propose SDNet , a contextual attention - based deep neural network for the task of conversational question answering .","['In', 'this', 'paper', ',', 'we', 'propose', 'SDNet', ',', 'a', 'contextual', 'attention', '-', 'based', 'deep', 'neural', 'network', 'for', 'the', 'task', 'of', 'conversational', 'question', 'answering', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNP', ',', 'DT', 'JJ', 'NN', ':', 'VBN', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",24
natural_language_inference,27,21,"Firstly , we apply both inter-attention and self - attention on passage and question to obtain a more effective understanding of the passage and dialogue history .","['Firstly', ',', 'we', 'apply', 'both', 'inter-attention', 'and', 'self', '-', 'attention', 'on', 'passage', 'and', 'question', 'to', 'obtain', 'a', 'more', 'effective', 'understanding', 'of', 'the', 'passage', 'and', 'dialogue', 'history', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'PRP', ':', 'NN', 'IN', 'NN', 'CC', 'NN', 'TO', 'VB', 'DT', 'RBR', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NN', 'NN', '.']",27
natural_language_inference,27,22,"Secondly , SDNet leverages the latest breakthrough in NLP : BERT contextual embedding .","['Secondly', ',', 'SDNet', 'leverages', 'the', 'latest', 'breakthrough', 'in', 'NLP', ':', 'BERT', 'contextual', 'embedding', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'NNP', ':', 'NNP', 'JJ', 'NN', '.']",14
natural_language_inference,27,23,"Different from the canonical way of appending a thin layer after BERT structure according to , we innovatively employed a weighted sum of BERT layer outputs , with locked BERT parameters .","['Different', 'from', 'the', 'canonical', 'way', 'of', 'appending', 'a', 'thin', 'layer', 'after', 'BERT', 'structure', 'according', 'to', ',', 'we', 'innovatively', 'employed', 'a', 'weighted', 'sum', 'of', 'BERT', 'layer', 'outputs', ',', 'with', 'locked', 'BERT', 'parameters', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NN', 'VBG', 'TO', ',', 'PRP', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NN', 'NNS', ',', 'IN', 'VBN', 'NNP', 'NNS', '.']",32
natural_language_inference,27,24,"Thirdly , we prepend previous rounds of questions and answers to the current question to incorporate contextual information .","['Thirdly', ',', 'we', 'prepend', 'previous', 'rounds', 'of', 'questions', 'and', 'answers', 'to', 'the', 'current', 'question', 'to', 'incorporate', 'contextual', 'information', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'NNS', 'TO', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'NN', '.']",19
natural_language_inference,27,128,"As shown , SDNet achieves significantly better results than baseline models .","['As', 'shown', ',', 'SDNet', 'achieves', 'significantly', 'better', 'results', 'than', 'baseline', 'models', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', ',', 'NNP', 'VBZ', 'RB', 'JJR', 'NNS', 'IN', 'JJ', 'NNS', '.']",12
natural_language_inference,27,129,"In detail , the single SDNet model improves overall F 1 by 1.6 % , compared with previous state - of - art model on CoQA , Flow QA .","['In', 'detail', ',', 'the', 'single', 'SDNet', 'model', 'improves', 'overall', 'F', '1', 'by', '1.6', '%', ',', 'compared', 'with', 'previous', 'state', '-', 'of', '-', 'art', 'model', 'on', 'CoQA', ',', 'Flow', 'QA', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'NN', ',', 'DT', 'JJ', 'NNP', 'NN', 'VBZ', 'JJ', 'NNP', 'CD', 'IN', 'CD', 'NN', ',', 'VBN', 'IN', 'JJ', 'NN', ':', 'IN', ':', 'NN', 'NN', 'IN', 'NNP', ',', 'NNP', 'NNP', '.']",30
natural_language_inference,27,130,"Ensemble SDNet model further improves overall F 1 score by 2.7 % , and it 's the first model to achieve over 80 % F 1 score on in - domain datasets ( 80.7 % ) .","['Ensemble', 'SDNet', 'model', 'further', 'improves', 'overall', 'F', '1', 'score', 'by', '2.7', '%', ',', 'and', 'it', ""'s"", 'the', 'first', 'model', 'to', 'achieve', 'over', '80', '%', 'F', '1', 'score', 'on', 'in', '-', 'domain', 'datasets', '(', '80.7', '%', ')', '.']","['B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'NNP', 'NN', 'RBR', 'VBZ', 'JJ', 'NNP', 'CD', 'NN', 'IN', 'CD', 'NN', ',', 'CC', 'PRP', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'IN', 'CD', 'NN', 'NNP', 'CD', 'NN', 'IN', 'IN', ':', 'NN', 'NNS', '(', 'CD', 'NN', ')', '.']",37
natural_language_inference,27,132,"As seen , SDNet overpasses all but one baseline models after the second epoch , and achieves state - of - the - art results only after 8 epochs .","['As', 'seen', ',', 'SDNet', 'overpasses', 'all', 'but', 'one', 'baseline', 'models', 'after', 'the', 'second', 'epoch', ',', 'and', 'achieves', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'only', 'after', '8', 'epochs', '.']","['O', 'O', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'VBN', ',', 'NNP', 'VBZ', 'DT', 'CC', 'CD', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'NNS', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'RB', 'IN', 'CD', 'NN', '.']",30
natural_language_inference,8,2,Learning Natural Language Inference using Bidirectional LSTM model and Inner- Attention,"['Learning', 'Natural', 'Language', 'Inference', 'using', 'Bidirectional', 'LSTM', 'model', 'and', 'Inner-', 'Attention']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNP', 'NNP', 'NNP', 'VBG', 'NNP', 'NNP', 'NN', 'CC', 'JJ', 'NN']",11
natural_language_inference,8,4,"In this paper , we proposed a sentence encoding - based model for recognizing text entailment .","['In', 'this', 'paper', ',', 'we', 'proposed', 'a', 'sentence', 'encoding', '-', 'based', 'model', 'for', 'recognizing', 'text', 'entailment', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBD', 'DT', 'NN', 'VBG', ':', 'VBN', 'NN', 'IN', 'VBG', 'JJ', 'NN', '.']",17
natural_language_inference,8,13,"Given a pair of sentences , the goal of recognizing text entailment ( RTE ) is to determine whether the hypothesis can reasonably be inferred from the premises .","['Given', 'a', 'pair', 'of', 'sentences', ',', 'the', 'goal', 'of', 'recognizing', 'text', 'entailment', '(', 'RTE', ')', 'is', 'to', 'determine', 'whether', 'the', 'hypothesis', 'can', 'reasonably', 'be', 'inferred', 'from', 'the', 'premises', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'DT', 'NN', 'IN', 'NNS', ',', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'NN', '(', 'NNP', ')', 'VBZ', 'TO', 'VB', 'IN', 'DT', 'NN', 'MD', 'RB', 'VB', 'VBN', 'IN', 'DT', 'NNS', '.']",29
natural_language_inference,8,14,"There were three types of relation in RTE , Entailment ( inferred to be true ) , Contradiction ( inferred to be false ) and Neutral ( truth unknown ) .","['There', 'were', 'three', 'types', 'of', 'relation', 'in', 'RTE', ',', 'Entailment', '(', 'inferred', 'to', 'be', 'true', ')', ',', 'Contradiction', '(', 'inferred', 'to', 'be', 'false', ')', 'and', 'Neutral', '(', 'truth', 'unknown', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['EX', 'VBD', 'CD', 'NNS', 'IN', 'NN', 'IN', 'NNP', ',', 'NNP', '(', 'VBN', 'TO', 'VB', 'JJ', ')', ',', 'NNP', '(', 'VBN', 'TO', 'VB', 'JJ', ')', 'CC', 'NNP', '(', 'RB', 'RB', ')', '.']",31
natural_language_inference,8,30,"In this paper , we proposed a unified deep learning framework for recognizing textual entailment which dose not require any feature engineering , or external resources .","['In', 'this', 'paper', ',', 'we', 'proposed', 'a', 'unified', 'deep', 'learning', 'framework', 'for', 'recognizing', 'textual', 'entailment', 'which', 'dose', 'not', 'require', 'any', 'feature', 'engineering', ',', 'or', 'external', 'resources', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBD', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'WDT', 'VBZ', 'RB', 'VB', 'DT', 'NN', 'NN', ',', 'CC', 'JJ', 'NNS', '.']",27
natural_language_inference,8,31,The basic model is based on building biL - STM models on both premises and hypothesis .,"['The', 'basic', 'model', 'is', 'based', 'on', 'building', 'biL', '-', 'STM', 'models', 'on', 'both', 'premises', 'and', 'hypothesis', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'NN', 'SYM', ':', 'NNP', 'NNS', 'IN', 'DT', 'NNS', 'CC', 'NN', '.']",17
natural_language_inference,8,32,The basic mean pooling encoder can roughly form a intuition about what this sentence is talking about .,"['The', 'basic', 'mean', 'pooling', 'encoder', 'can', 'roughly', 'form', 'a', 'intuition', 'about', 'what', 'this', 'sentence', 'is', 'talking', 'about', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBG', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'WP', 'DT', 'NN', 'VBZ', 'VBG', 'IN', '.']",18
natural_language_inference,8,35,"In addition , we introduced a simple effective input strategy that get ride of same words in hypothesis and premise , which further boosts our performance .","['In', 'addition', ',', 'we', 'introduced', 'a', 'simple', 'effective', 'input', 'strategy', 'that', 'get', 'ride', 'of', 'same', 'words', 'in', 'hypothesis', 'and', 'premise', ',', 'which', 'further', 'boosts', 'our', 'performance', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'PRP', 'VBD', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'VBP', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'CC', 'NN', ',', 'WDT', 'RB', 'VBZ', 'PRP$', 'NN', '.']",27
natural_language_inference,8,77,"The training objective of our model is cross - entropy loss , and we use minibatch SGD with the Rmsprop ( Tieleman and Hinton , 2012 ) for optimization .","['The', 'training', 'objective', 'of', 'our', 'model', 'is', 'cross', '-', 'entropy', 'loss', ',', 'and', 'we', 'use', 'minibatch', 'SGD', 'with', 'the', 'Rmsprop', '(', 'Tieleman', 'and', 'Hinton', ',', '2012', ')', 'for', 'optimization', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'JJ', ':', 'NN', 'NN', ',', 'CC', 'PRP', 'VBP', 'JJ', 'NNP', 'IN', 'DT', 'NNP', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'IN', 'NN', '.']",30
natural_language_inference,8,78,The batch size is 128 .,"['The', 'batch', 'size', 'is', '128', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', '.']",6
natural_language_inference,8,79,A dropout layer was applied in the output of the network with the dropout rate set to 0.25 .,"['A', 'dropout', 'layer', 'was', 'applied', 'in', 'the', 'output', 'of', 'the', 'network', 'with', 'the', 'dropout', 'rate', 'set', 'to', '0.25', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBN', 'TO', 'CD', '.']",19
natural_language_inference,8,80,"In our model , we used pretrained 300D Glove 840B vectors to initialize the word embedding .","['In', 'our', 'model', ',', 'we', 'used', 'pretrained', '300D', 'Glove', '840B', 'vectors', 'to', 'initialize', 'the', 'word', 'embedding', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'PRP$', 'NN', ',', 'PRP', 'VBD', 'VBD', 'CD', 'NNP', 'CD', 'NNS', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",17
natural_language_inference,8,81,"Out - of - vocabulary words in the training set are randomly initialized by sampling values uniformly from ( 0.05 , 0.05 ) .","['Out', '-', 'of', '-', 'vocabulary', 'words', 'in', 'the', 'training', 'set', 'are', 'randomly', 'initialized', 'by', 'sampling', 'values', 'uniformly', 'from', '(', '0.05', ',', '0.05', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', ':', 'IN', ':', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'VBN', 'VBP', 'JJ', 'VBN', 'IN', 'VBG', 'NNS', 'RB', 'IN', '(', 'CD', ',', 'CD', ')', '.']",24
natural_language_inference,8,107,"We observed that more attention was given to Nones , Verbs and Adjectives .","['We', 'observed', 'that', 'more', 'attention', 'was', 'given', 'to', 'Nones', ',', 'Verbs', 'and', 'Adjectives', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'IN', 'JJR', 'NN', 'VBD', 'VBN', 'TO', 'NNP', ',', 'NNP', 'CC', 'NNP', '.']",14
natural_language_inference,8,109,"While mean pooling regarded each word of equal importance , the attention mechanism helps re-weight words according to their importance .","['While', 'mean', 'pooling', 'regarded', 'each', 'word', 'of', 'equal', 'importance', ',', 'the', 'attention', 'mechanism', 'helps', 're-weight', 'words', 'according', 'to', 'their', 'importance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'B-p', 'I-p', 'O', 'O', 'O']","['IN', 'JJ', 'VBG', 'JJ', 'DT', 'NN', 'IN', 'JJ', 'NN', ',', 'DT', 'NN', 'NN', 'VBZ', 'JJ', 'NNS', 'VBG', 'TO', 'PRP$', 'NN', '.']",21
natural_language_inference,9,2,A BERT Baseline for the Natural Questions,"['A', 'BERT', 'Baseline', 'for', 'the', 'Natural', 'Questions']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'NNP', 'NNP', 'IN', 'DT', 'NNP', 'NNS']",7
natural_language_inference,9,14,In this technical note we describe a BERT - based model for the Natural Questions .,"['In', 'this', 'technical', 'note', 'we', 'describe', 'a', 'BERT', '-', 'based', 'model', 'for', 'the', 'Natural', 'Questions', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'PRP', 'VBP', 'DT', 'NNP', ':', 'VBN', 'NN', 'IN', 'DT', 'NNP', 'NNP', '.']",16
natural_language_inference,9,17,"The key insights in our approach are 1 . to jointly predict short and long answers in a single model rather than using a pipeline approach , 2 . to split each document into multiple training instances by using overlapping windows of tokens , like in the original BERT model for the SQuAD task , 3 . to aggressively downsample null instances ( i.e. instances without an answer ) at training time to create a balanced training set , 4 . to use the "" [ CLS ] "" token at training time to predict null instances and rank spans at inference time by the difference between the span score and the "" [ CLS ] "" score .","['The', 'key', 'insights', 'in', 'our', 'approach', 'are', '1', '.', 'to', 'jointly', 'predict', 'short', 'and', 'long', 'answers', 'in', 'a', 'single', 'model', 'rather', 'than', 'using', 'a', 'pipeline', 'approach', ',', '2', '.', 'to', 'split', 'each', 'document', 'into', 'multiple', 'training', 'instances', 'by', 'using', 'overlapping', 'windows', 'of', 'tokens', ',', 'like', 'in', 'the', 'original', 'BERT', 'model', 'for', 'the', 'SQuAD', 'task', ',', '3', '.', 'to', 'aggressively', 'downsample', 'null', 'instances', '(', 'i.e.', 'instances', 'without', 'an', 'answer', ')', 'at', 'training', 'time', 'to', 'create', 'a', 'balanced', 'training', 'set', ',', '4', '.', 'to', 'use', 'the', '""', '[', 'CLS', ']', '""', 'token', 'at', 'training', 'time', 'to', 'predict', 'null', 'instances', 'and', 'rank', 'spans', 'at', 'inference', 'time', 'by', 'the', 'difference', 'between', 'the', 'span', 'score', 'and', 'the', '""', '[', 'CLS', ']', '""', 'score', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'VBP', 'CD', '.', 'TO', 'RB', 'VB', 'JJ', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'RB', 'IN', 'VBG', 'DT', 'NN', 'NN', ',', 'CD', '.', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'VBG', 'VBG', 'NNS', 'IN', 'NNS', ',', 'IN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'DT', 'NNP', 'NN', ',', 'CD', '.', 'TO', 'RB', 'VB', 'JJ', 'NNS', '(', 'JJ', 'NNS', 'IN', 'DT', 'NN', ')', 'IN', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'VBN', ',', 'CD', '.', 'TO', 'VB', 'DT', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', 'IN', 'NN', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'CC', 'NN', 'NNS', 'IN', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', '.']",119
natural_language_inference,9,54,We initialized our model from a BERT model already finetuned on SQ u AD 1.1 .,"['We', 'initialized', 'our', 'model', 'from', 'a', 'BERT', 'model', 'already', 'finetuned', 'on', 'SQ', 'u', 'AD', '1.1', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'PRP$', 'NN', 'IN', 'DT', 'NNP', 'NN', 'RB', 'VBN', 'IN', 'NNP', 'JJ', 'NNP', 'CD', '.']",16
natural_language_inference,9,56,"We trained the model by minimizing loss L from Section 3 with the Adam optimizer ( Kingma and Ba , 2014 ) with a batch size of 8 .","['We', 'trained', 'the', 'model', 'by', 'minimizing', 'loss', 'L', 'from', 'Section', '3', 'with', 'the', 'Adam', 'optimizer', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', 'with', 'a', 'batch', 'size', 'of', '8', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'IN', 'VBG', 'NN', 'NNP', 'IN', 'NNP', 'CD', 'IN', 'DT', 'NNP', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",29
natural_language_inference,9,57,"As is common practice for BERT models , we only tuned the number of epochs and the initial learning rate for finetuning and found that training for 1 epoch with an initial learning rate of 3 10 ? 5 was the best setting .","['As', 'is', 'common', 'practice', 'for', 'BERT', 'models', ',', 'we', 'only', 'tuned', 'the', 'number', 'of', 'epochs', 'and', 'the', 'initial', 'learning', 'rate', 'for', 'finetuning', 'and', 'found', 'that', 'training', 'for', '1', 'epoch', 'with', 'an', 'initial', 'learning', 'rate', 'of', '3', '10', '?', '5', 'was', 'the', 'best', 'setting', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBZ', 'JJ', 'NN', 'IN', 'NNP', 'NNS', ',', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'IN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'CC', 'VBD', 'IN', 'VBG', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CD', '.', 'CD', 'VBD', 'DT', 'JJS', 'NN', '.']",44
natural_language_inference,9,58,Evaluation completed in about 5 hours on the NQ dev and test set with a single Tesla P100 GPU .,"['Evaluation', 'completed', 'in', 'about', '5', 'hours', 'on', 'the', 'NQ', 'dev', 'and', 'test', 'set', 'with', 'a', 'single', 'Tesla', 'P100', 'GPU', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'VBN', 'IN', 'RB', 'CD', 'NNS', 'IN', 'DT', 'NNP', 'NN', 'CC', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', '.']",20
natural_language_inference,9,60,Our BERT model for NQ performs dramatically better than the models presented in the original NQ paper .,"['Our', 'BERT', 'model', 'for', 'NQ', 'performs', 'dramatically', 'better', 'than', 'the', 'models', 'presented', 'in', 'the', 'original', 'NQ', 'paper', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNP', 'NN', 'IN', 'NNP', 'NNS', 'RB', 'JJR', 'IN', 'DT', 'NNS', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NN', '.']",18
natural_language_inference,9,61,Our model closes the gap between the F 1 score achieved by the original baseline systems and the super - annotator upper bound by 30 % for the long answer NQ task and by 50 % for the short answer NQ task .,"['Our', 'model', 'closes', 'the', 'gap', 'between', 'the', 'F', '1', 'score', 'achieved', 'by', 'the', 'original', 'baseline', 'systems', 'and', 'the', 'super', '-', 'annotator', 'upper', 'bound', 'by', '30', '%', 'for', 'the', 'long', 'answer', 'NQ', 'task', 'and', 'by', '50', '%', 'for', 'the', 'short', 'answer', 'NQ', 'task', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NNP', 'CD', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'CC', 'DT', 'JJ', ':', 'NN', 'JJ', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'NN', 'CC', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'NN', '.']",43
natural_language_inference,25,2,A Deep Cascade Model for Multi - Document Reading Comprehension,"['A', 'Deep', 'Cascade', 'Model', 'for', 'Multi', '-', 'Document', 'Reading', 'Comprehension']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', ':', 'NN', 'VBG', 'NN']",10
natural_language_inference,25,13,"Machine reading comprehension ( MRC ) , which empowers computers with the ability to read and comprehend knowledge and then answer questions from textual data , has made rapid progress in recent years .","['Machine', 'reading', 'comprehension', '(', 'MRC', ')', ',', 'which', 'empowers', 'computers', 'with', 'the', 'ability', 'to', 'read', 'and', 'comprehend', 'knowledge', 'and', 'then', 'answer', 'questions', 'from', 'textual', 'data', ',', 'has', 'made', 'rapid', 'progress', 'in', 'recent', 'years', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', 'NN', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'NNS', 'IN', 'DT', 'NN', 'TO', 'VB', 'CC', 'VB', 'NN', 'CC', 'RB', 'VB', 'NNS', 'IN', 'JJ', 'NN', ',', 'VBZ', 'VBN', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",34
natural_language_inference,25,14,"From the early cloze - style test to answer extraction from a single paragraph , and to the more complex open - domain question answering from web data , great efforts have been made to push the MRC technique to more practical applications .","['From', 'the', 'early', 'cloze', '-', 'style', 'test', 'to', 'answer', 'extraction', 'from', 'a', 'single', 'paragraph', ',', 'and', 'to', 'the', 'more', 'complex', 'open', '-', 'domain', 'question', 'answering', 'from', 'web', 'data', ',', 'great', 'efforts', 'have', 'been', 'made', 'to', 'push', 'the', 'MRC', 'technique', 'to', 'more', 'practical', 'applications', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'TO', 'VB', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'TO', 'DT', 'RBR', 'JJ', 'JJ', ':', 'NN', 'NN', 'VBG', 'IN', 'NN', 'NNS', ',', 'JJ', 'NNS', 'VBP', 'VBN', 'VBN', 'TO', 'VB', 'DT', 'NNP', 'NN', 'TO', 'RBR', 'JJ', 'NNS', '.']",44
natural_language_inference,25,29,"To address the above problems , we propose a deep cascade model which combines the advantages of both methods in a coarse - to - fine manner .","['To', 'address', 'the', 'above', 'problems', ',', 'we', 'propose', 'a', 'deep', 'cascade', 'model', 'which', 'combines', 'the', 'advantages', 'of', 'both', 'methods', 'in', 'a', 'coarse', '-', 'to', '-', 'fine', 'manner', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', '.']",28
natural_language_inference,25,30,The deep cascade model is designed to properly keep the balance between the effectiveness and efficiency .,"['The', 'deep', 'cascade', 'model', 'is', 'designed', 'to', 'properly', 'keep', 'the', 'balance', 'between', 'the', 'effectiveness', 'and', 'efficiency', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'NN', '.']",17
natural_language_inference,25,31,"At early stages of the model , simple features and ranking functions are used to select a candidate set of most relevant contents , filtering out the irrelevant documents and paragraphs as much as possible .","['At', 'early', 'stages', 'of', 'the', 'model', ',', 'simple', 'features', 'and', 'ranking', 'functions', 'are', 'used', 'to', 'select', 'a', 'candidate', 'set', 'of', 'most', 'relevant', 'contents', ',', 'filtering', 'out', 'the', 'irrelevant', 'documents', 'and', 'paragraphs', 'as', 'much', 'as', 'possible', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', ',', 'JJ', 'NNS', 'CC', 'JJ', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'NN', 'VBN', 'IN', 'JJS', 'JJ', 'NNS', ',', 'VBG', 'RP', 'DT', 'JJ', 'NNS', 'CC', 'VB', 'RB', 'JJ', 'IN', 'JJ', '.']",36
natural_language_inference,25,32,Then the selected paragraphs are passed to the attention - based deep MRC model for extracting the actual answer span at word level .,"['Then', 'the', 'selected', 'paragraphs', 'are', 'passed', 'to', 'the', 'attention', '-', 'based', 'deep', 'MRC', 'model', 'for', 'extracting', 'the', 'actual', 'answer', 'span', 'at', 'word', 'level', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'DT', 'VBN', 'NN', 'VBP', 'VBN', 'TO', 'DT', 'NN', ':', 'VBN', 'JJ', 'NNP', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'NN', '.']",24
natural_language_inference,25,33,"To better support the answer extraction , we also introduce the document extraction and paragraph extraction as two auxiliary tasks , which helps to quickly narrow down the entire search space .","['To', 'better', 'support', 'the', 'answer', 'extraction', ',', 'we', 'also', 'introduce', 'the', 'document', 'extraction', 'and', 'paragraph', 'extraction', 'as', 'two', 'auxiliary', 'tasks', ',', 'which', 'helps', 'to', 'quickly', 'narrow', 'down', 'the', 'entire', 'search', 'space', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'RBR', 'VB', 'DT', 'NN', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'NN', 'NN', 'CC', 'NN', 'NN', 'IN', 'CD', 'JJ', 'NNS', ',', 'WDT', 'VBZ', 'TO', 'RB', 'VB', 'RP', 'DT', 'JJ', 'NN', 'NN', '.']",32
natural_language_inference,25,34,"We jointly optimize all the three tasks in a unified deep MRC model , which shares some common bottom layers .","['We', 'jointly', 'optimize', 'all', 'the', 'three', 'tasks', 'in', 'a', 'unified', 'deep', 'MRC', 'model', ',', 'which', 'shares', 'some', 'common', 'bottom', 'layers', '.']","['O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'PDT', 'DT', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NNP', 'NN', ',', 'WDT', 'NNS', 'DT', 'JJ', 'NN', 'NNS', '.']",21
natural_language_inference,25,35,"This cascaded structure enables the models to perform a coarse - to - fine pruning at different stages , better models can be learnt effectively and efficiently .","['This', 'cascaded', 'structure', 'enables', 'the', 'models', 'to', 'perform', 'a', 'coarse', '-', 'to', '-', 'fine', 'pruning', 'at', 'different', 'stages', ',', 'better', 'models', 'can', 'be', 'learnt', 'effectively', 'and', 'efficiently', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'NNS', 'TO', 'VB', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'IN', 'JJ', 'NNS', ',', 'JJR', 'NNS', 'MD', 'VB', 'VBN', 'RB', 'CC', 'RB', '.']",28
natural_language_inference,25,36,"The overall framework of our model is demonstrated in , which consists of three modules : document retrieval , paragraph retrieval and answer extraction .","['The', 'overall', 'framework', 'of', 'our', 'model', 'is', 'demonstrated', 'in', ',', 'which', 'consists', 'of', 'three', 'modules', ':', 'document', 'retrieval', ',', 'paragraph', 'retrieval', 'and', 'answer', 'extraction', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', 'VBZ', 'VBN', 'IN', ',', 'WDT', 'VBZ', 'IN', 'CD', 'NNS', ':', 'NN', 'NN', ',', 'NN', 'NN', 'CC', 'JJR', 'NN', '.']",25
natural_language_inference,25,37,The first module takes the question and a collection of raw documents as input .,"['The', 'first', 'module', 'takes', 'the', 'question', 'and', 'a', 'collection', 'of', 'raw', 'documents', 'as', 'input', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'CC', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', '.']",15
natural_language_inference,25,38,"The module at each subsequent stage consumes the output from the previous stage , and further prunes the documents , paragraphs and answer spans given the question .","['The', 'module', 'at', 'each', 'subsequent', 'stage', 'consumes', 'the', 'output', 'from', 'the', 'previous', 'stage', ',', 'and', 'further', 'prunes', 'the', 'documents', ',', 'paragraphs', 'and', 'answer', 'spans', 'given', 'the', 'question', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'RB', 'VB', 'DT', 'NNS', ',', 'NN', 'CC', 'NN', 'NNS', 'VBN', 'DT', 'NN', '.']",28
natural_language_inference,25,40,"The ranking function is first used as a preliminary filter to discard most of the irrelevant documents or paragraphs , so as to keep our framework efficient .","['The', 'ranking', 'function', 'is', 'first', 'used', 'as', 'a', 'preliminary', 'filter', 'to', 'discard', 'most', 'of', 'the', 'irrelevant', 'documents', 'or', 'paragraphs', ',', 'so', 'as', 'to', 'keep', 'our', 'framework', 'efficient', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJS', 'IN', 'DT', 'JJ', 'NNS', 'CC', 'NN', ',', 'RB', 'IN', 'TO', 'VB', 'PRP$', 'NN', 'NN', '.']",28
natural_language_inference,25,41,"The extraction function is then designed to deal with the auxiliary document and paragraph extraction tasks , which is jointly optimized with the final answer extraction module for better extraction performance .","['The', 'extraction', 'function', 'is', 'then', 'designed', 'to', 'deal', 'with', 'the', 'auxiliary', 'document', 'and', 'paragraph', 'extraction', 'tasks', ',', 'which', 'is', 'jointly', 'optimized', 'with', 'the', 'final', 'answer', 'extraction', 'module', 'for', 'better', 'extraction', 'performance', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'TO', 'VB', 'IN', 'DT', 'JJ', 'NN', 'CC', 'NN', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'IN', 'JJR', 'NN', 'NN', '.']",32
natural_language_inference,25,208,We choose K = 4 and N = 2 for the good performance when evaluating on the dev set .,"['We', 'choose', 'K', '=', '4', 'and', 'N', '=', '2', 'for', 'the', 'good', 'performance', 'when', 'evaluating', 'on', 'the', 'dev', 'set', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'NNP', 'NNP', 'CD', 'CC', 'NNP', 'NNP', 'CD', 'IN', 'DT', 'JJ', 'NN', 'WRB', 'VBG', 'IN', 'DT', 'NN', 'NN', '.']",20
natural_language_inference,25,211,"For the multi-task deep attention framework , we adopt the Adam optimizer for training , with a mini-batch size of 32 and initial learning rate of 0.0005 .","['For', 'the', 'multi-task', 'deep', 'attention', 'framework', ',', 'we', 'adopt', 'the', 'Adam', 'optimizer', 'for', 'training', ',', 'with', 'a', 'mini-batch', 'size', 'of', '32', 'and', 'initial', 'learning', 'rate', 'of', '0.0005', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'IN', 'NN', ',', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'CC', 'JJ', 'VBG', 'NN', 'IN', 'CD', '.']",28
natural_language_inference,25,212,We use the GloVe 300 dimensional word embeddings in TriviaQA and train a word2 vec word embeddings with the whole DuReader corpus for DuReader .,"['We', 'use', 'the', 'GloVe', '300', 'dimensional', 'word', 'embeddings', 'in', 'TriviaQA', 'and', 'train', 'a', 'word2', 'vec', 'word', 'embeddings', 'with', 'the', 'whole', 'DuReader', 'corpus', 'for', 'DuReader', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'CD', 'JJ', 'NN', 'NNS', 'IN', 'NNP', 'CC', 'VB', 'DT', 'NN', 'NN', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'NNP', '.']",25
natural_language_inference,25,213,The word embeddings are fixed during training .,"['The', 'word', 'embeddings', 'are', 'fixed', 'during', 'training', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'NN', '.']",8
natural_language_inference,25,214,The hidden size of LSTM is set as 150 for TriviaQA and 128 for DuReader .,"['The', 'hidden', 'size', 'of', 'LSTM', 'is', 'set', 'as', '150', 'for', 'TriviaQA', 'and', '128', 'for', 'DuReader', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'NNP', 'VBZ', 'VBN', 'IN', 'CD', 'IN', 'NNP', 'CC', 'CD', 'IN', 'NNP', '.']",16
natural_language_inference,25,215,The task - specific hyper - parameters ? 1 and ? 2 in Equ. 15 are set as ? 1 = ? 2 = 0.5 . Regularization parameter ? in Equ.,"['The', 'task', '-', 'specific', 'hyper', '-', 'parameters', '?', '1', 'and', '?', '2', 'in', 'Equ.', '15', 'are', 'set', 'as', '?', '1', '=', '?', '2', '=', '0.5', '.', 'Regularization', 'parameter', '?', 'in', 'Equ.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['DT', 'NN', ':', 'JJ', 'JJ', ':', 'NNS', '.', 'CD', 'CC', '.', 'CD', 'IN', 'NNP', 'CD', 'VBP', 'VBN', 'IN', '.', 'CD', 'NN', '.', 'CD', 'JJ', 'CD', '.', 'NN', 'NN', '.', 'IN', 'NNP']",31
natural_language_inference,25,216,16 is set as a small value of 0.01 .,"['16', 'is', 'set', 'as', 'a', 'small', 'value', 'of', '0.01', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['CD', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', '.']",10
natural_language_inference,25,217,All models are trained on Nvidia Tesla M40 GPU with Cudnn LSTM cell in Tensorflow 1.3 .,"['All', 'models', 'are', 'trained', 'on', 'Nvidia', 'Tesla', 'M40', 'GPU', 'with', 'Cudnn', 'LSTM', 'cell', 'in', 'Tensorflow', '1.3', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NN', 'IN', 'NNP', 'CD', '.']",17
natural_language_inference,25,221,"We can see that by adopting the deep cascade learning framework , the proposed model outperforms the previous state - of - the - art methods by an evident margin on both datasets , which validates the effectiveness of the proposed method in addressing the challenging multi-document MRC task .","['We', 'can', 'see', 'that', 'by', 'adopting', 'the', 'deep', 'cascade', 'learning', 'framework', ',', 'the', 'proposed', 'model', 'outperforms', 'the', 'previous', 'state', '-', 'of', '-', 'the', '-', 'art', 'methods', 'by', 'an', 'evident', 'margin', 'on', 'both', 'datasets', ',', 'which', 'validates', 'the', 'effectiveness', 'of', 'the', 'proposed', 'method', 'in', 'addressing', 'the', 'challenging', 'multi-document', 'MRC', 'task', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'IN', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'VBG', 'NN', ',', 'DT', 'VBN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NN', 'IN', 'VBG', 'DT', 'VBG', 'JJ', 'NNP', 'NN', '.']",50
natural_language_inference,25,226,"From the results , we can see that : 1 ) the shared LSTM plays an important role in answer extraction among multiple documents , the benefit lies in two parts : a ) it helps to normalize the content probability score from multiple documents so that the answers extracted from different documents can be directly compared ; b ) it can keep the ranking order from document ranking component in mind , which may serve as an additional signal when predicting the best answer .","['From', 'the', 'results', ',', 'we', 'can', 'see', 'that', ':', '1', ')', 'the', 'shared', 'LSTM', 'plays', 'an', 'important', 'role', 'in', 'answer', 'extraction', 'among', 'multiple', 'documents', ',', 'the', 'benefit', 'lies', 'in', 'two', 'parts', ':', 'a', ')', 'it', 'helps', 'to', 'normalize', 'the', 'content', 'probability', 'score', 'from', 'multiple', 'documents', 'so', 'that', 'the', 'answers', 'extracted', 'from', 'different', 'documents', 'can', 'be', 'directly', 'compared', ';', 'b', ')', 'it', 'can', 'keep', 'the', 'ranking', 'order', 'from', 'document', 'ranking', 'component', 'in', 'mind', ',', 'which', 'may', 'serve', 'as', 'an', 'additional', 'signal', 'when', 'predicting', 'the', 'best', 'answer', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'MD', 'VB', 'DT', ':', 'CD', ')', 'DT', 'VBN', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJR', 'NN', 'IN', 'JJ', 'NNS', ',', 'DT', 'NN', 'VBZ', 'IN', 'CD', 'NNS', ':', 'DT', ')', 'PRP', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'NN', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'IN', 'DT', 'NNS', 'VBD', 'IN', 'JJ', 'NNS', 'MD', 'VB', 'RB', 'VBN', ':', 'NN', ')', 'PRP', 'MD', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN', 'VBG', 'NN', 'IN', 'NN', ',', 'WDT', 'MD', 'VB', 'IN', 'DT', 'JJ', 'NN', 'WRB', 'VBG', 'DT', 'JJS', 'NN', '.']",86
natural_language_inference,25,227,"By incorporating the manual features , the performance can be further improved slightly .","['By', 'incorporating', 'the', 'manual', 'features', ',', 'the', 'performance', 'can', 'be', 'further', 'improved', 'slightly', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'JJ', 'NNS', ',', 'DT', 'NN', 'MD', 'VB', 'RB', 'VBN', 'RB', '.']",14
natural_language_inference,25,228,"2 ) Both the preliminary cascade ranking and multi-task answer extraction strategy are vital for the final performance , which serve as a good trade - off between the pure pipeline method and fully joint learning method .","['2', ')', 'Both', 'the', 'preliminary', 'cascade', 'ranking', 'and', 'multi-task', 'answer', 'extraction', 'strategy', 'are', 'vital', 'for', 'the', 'final', 'performance', ',', 'which', 'serve', 'as', 'a', 'good', 'trade', '-', 'off', 'between', 'the', 'pure', 'pipeline', 'method', 'and', 'fully', 'joint', 'learning', 'method', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', ')', 'CC', 'DT', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', 'NN', 'NN', 'VBP', 'JJ', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBP', 'IN', 'DT', 'JJ', 'NN', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'RB', 'JJ', 'VBG', 'NN', '.']",38
natural_language_inference,25,230,"Jointly training the three extraction tasks can provide great benefits , which shows that the three tasks are actually closely related and can boost each other with shared representations at bottom layers .","['Jointly', 'training', 'the', 'three', 'extraction', 'tasks', 'can', 'provide', 'great', 'benefits', ',', 'which', 'shows', 'that', 'the', 'three', 'tasks', 'are', 'actually', 'closely', 'related', 'and', 'can', 'boost', 'each', 'other', 'with', 'shared', 'representations', 'at', 'bottom', 'layers', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'VBG', 'DT', 'CD', 'NN', 'NNS', 'MD', 'VB', 'JJ', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'DT', 'CD', 'NNS', 'VBP', 'RB', 'RB', 'JJ', 'CC', 'MD', 'VB', 'DT', 'JJ', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', '.']",33
natural_language_inference,26,2,U - Net : Machine Reading Comprehension with Unanswerable Questions,"['U', '-', 'Net', ':', 'Machine', 'Reading', 'Comprehension', 'with', 'Unanswerable', 'Questions']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', ':', 'NN', 'VBG', 'NNP', 'IN', 'JJ', 'NNS']",10
natural_language_inference,26,12,"Machine reading comprehension ( MRC ) is a challenging task in natural language processing , which requires that machine can read , understand , and answer questions about a text .","['Machine', 'reading', 'comprehension', '(', 'MRC', ')', 'is', 'a', 'challenging', 'task', 'in', 'natural', 'language', 'processing', ',', 'which', 'requires', 'that', 'machine', 'can', 'read', ',', 'understand', ',', 'and', 'answer', 'questions', 'about', 'a', 'text', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', 'NN', '(', 'NNP', ')', 'VBZ', 'DT', 'VBG', 'NN', 'IN', 'JJ', 'NN', 'NN', ',', 'WDT', 'VBZ', 'IN', 'NN', 'MD', 'VB', ',', 'VB', ',', 'CC', 'VB', 'NNS', 'IN', 'DT', 'NN', '.']",31
natural_language_inference,26,13,"Benefiting from the rapid development of deep learning techniques and large - scale benchmarks , the end - to - end neural methods have achieved promising results on MRC task .","['Benefiting', 'from', 'the', 'rapid', 'development', 'of', 'deep', 'learning', 'techniques', 'and', 'large', '-', 'scale', 'benchmarks', ',', 'the', 'end', '-', 'to', '-', 'end', 'neural', 'methods', 'have', 'achieved', 'promising', 'results', 'on', 'MRC', 'task', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'CC', 'JJ', ':', 'NN', 'NNS', ',', 'DT', 'NN', ':', 'TO', ':', 'VB', 'JJ', 'NNS', 'VBP', 'VBN', 'JJ', 'NNS', 'IN', 'NNP', 'NN', '.']",31
natural_language_inference,26,37,"In this paper , we decompose the problem of MRC with unanswerable questions into three sub - tasks : answer pointer , no - answer pointer , and answer verifier .","['In', 'this', 'paper', ',', 'we', 'decompose', 'the', 'problem', 'of', 'MRC', 'with', 'unanswerable', 'questions', 'into', 'three', 'sub', '-', 'tasks', ':', 'answer', 'pointer', ',', 'no', '-', 'answer', 'pointer', ',', 'and', 'answer', 'verifier', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NNP', 'IN', 'JJ', 'NNS', 'IN', 'CD', 'SYM', ':', 'NNS', ':', 'NN', 'NN', ',', 'DT', ':', 'NN', 'NN', ',', 'CC', 'JJR', 'NN', '.']",31
natural_language_inference,26,39,We propose the U - Net to incorporate these three sub - tasks into a unified model :,"['We', 'propose', 'the', 'U', '-', 'Net', 'to', 'incorporate', 'these', 'three', 'sub', '-', 'tasks', 'into', 'a', 'unified', 'model', ':']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', ':', 'NN', 'TO', 'VB', 'DT', 'CD', 'SYM', ':', 'NNS', 'IN', 'DT', 'JJ', 'NN', ':']",18
natural_language_inference,26,40,"1 ) an answer pointer to predict a can - didate answer span for a question ; 2 ) a no -answer pointer to avoid selecting any text span when a question has no answer ; and 3 ) an answer verifier to determine the probability of the "" unanswerability "" of a question with candidate answer information .","['1', ')', 'an', 'answer', 'pointer', 'to', 'predict', 'a', 'can', '-', 'didate', 'answer', 'span', 'for', 'a', 'question', ';', '2', ')', 'a', 'no', '-answer', 'pointer', 'to', 'avoid', 'selecting', 'any', 'text', 'span', 'when', 'a', 'question', 'has', 'no', 'answer', ';', 'and', '3', ')', 'an', 'answer', 'verifier', 'to', 'determine', 'the', 'probability', 'of', 'the', '""', 'unanswerability', '""', 'of', 'a', 'question', 'with', 'candidate', 'answer', 'information', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['CD', ')', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'MD', ':', 'VB', 'JJR', 'NN', 'IN', 'DT', 'NN', ':', 'CD', ')', 'DT', 'DT', 'JJR', 'NN', 'TO', 'VB', 'VBG', 'DT', 'NN', 'NN', 'WRB', 'DT', 'NN', 'VBZ', 'DT', 'NN', ':', 'CC', 'CD', ')', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NNP', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', 'NN', '.']",59
natural_language_inference,26,41,"Additionally , we also introduce a universal node and process the question and its context passage as a single contiguous sequence of tokens , which greatly improves the conciseness of U - Net .","['Additionally', ',', 'we', 'also', 'introduce', 'a', 'universal', 'node', 'and', 'process', 'the', 'question', 'and', 'its', 'context', 'passage', 'as', 'a', 'single', 'contiguous', 'sequence', 'of', 'tokens', ',', 'which', 'greatly', 'improves', 'the', 'conciseness', 'of', 'U', '-', 'Net', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', 'CC', 'NN', 'DT', 'NN', 'CC', 'PRP$', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NNS', ',', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'NNP', ':', 'NN', '.']",34
natural_language_inference,26,42,The universal node acts on both question and passage to learn whether the question is answerable .,"['The', 'universal', 'node', 'acts', 'on', 'both', 'question', 'and', 'passage', 'to', 'learn', 'whether', 'the', 'question', 'is', 'answerable', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'CC', 'NN', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'JJ', '.']",17
natural_language_inference,26,180,"We use Spacy to process each question and passage to obtain tokens , POS tags , NER tags and lemmas tags of each text .","['We', 'use', 'Spacy', 'to', 'process', 'each', 'question', 'and', 'passage', 'to', 'obtain', 'tokens', ',', 'POS', 'tags', ',', 'NER', 'tags', 'and', 'lemmas', 'tags', 'of', 'each', 'text', '.']","['O', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', 'TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'TO', 'VB', 'NNS', ',', 'NNP', 'NN', ',', 'NNP', 'NNS', 'CC', 'NN', 'NNS', 'IN', 'DT', 'NN', '.']",25
natural_language_inference,26,181,"We use 12 dimensions to embed POS tags , 8 for NER tags .","['We', 'use', '12', 'dimensions', 'to', 'embed', 'POS', 'tags', ',', '8', 'for', 'NER', 'tags', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'NNS', 'TO', 'VB', 'NNP', 'NNS', ',', 'CD', 'IN', 'NNP', 'NNS', '.']",14
natural_language_inference,26,182,"We use 3 binary features : exact match , lower - case match and lemma match between the question and passage .","['We', 'use', '3', 'binary', 'features', ':', 'exact', 'match', ',', 'lower', '-', 'case', 'match', 'and', 'lemma', 'match', 'between', 'the', 'question', 'and', 'passage', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', ':', 'JJ', 'NN', ',', 'JJR', ':', 'NN', 'NN', 'CC', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NN', '.']",22
natural_language_inference,26,183,We use 100 - dim Glove pretrained word embeddings and 1024 - dim Elmo embeddings .,"['We', 'use', '100', '-', 'dim', 'Glove', 'pretrained', 'word', 'embeddings', 'and', '1024', '-', 'dim', 'Elmo', 'embeddings', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', ':', 'NN', 'NNP', 'VBD', 'NN', 'NNS', 'CC', 'CD', ':', 'NN', 'NNP', 'NNS', '.']",16
natural_language_inference,26,184,All the LSTM blocks are bi-directional with one single layer .,"['All', 'the', 'LSTM', 'blocks', 'are', 'bi-directional', 'with', 'one', 'single', 'layer', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PDT', 'DT', 'NNP', 'NNS', 'VBP', 'JJ', 'IN', 'CD', 'JJ', 'NN', '.']",11
natural_language_inference,26,185,"We set the hidden layer dimension as 125 , attention layer dimension as 250 .","['We', 'set', 'the', 'hidden', 'layer', 'dimension', 'as', '125', ',', 'attention', 'layer', 'dimension', 'as', '250', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'NN', 'NN', 'NN', 'IN', 'CD', '.']",15
natural_language_inference,26,186,"We added a dropout layer overall the modeling layers , including the embedding layer , at a dropout rate of 0.3 .","['We', 'added', 'a', 'dropout', 'layer', 'overall', 'the', 'modeling', 'layers', ',', 'including', 'the', 'embedding', 'layer', ',', 'at', 'a', 'dropout', 'rate', 'of', '0.3', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NNS', ',', 'VBG', 'DT', 'NN', 'NN', ',', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",22
natural_language_inference,26,187,We use Adam optimizer with a learning rate of 0.002 ( Kingma and Ba 2014 ) .,"['We', 'use', 'Adam', 'optimizer', 'with', 'a', 'learning', 'rate', 'of', '0.002', '(', 'Kingma', 'and', 'Ba', '2014', ')', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '(', 'NNP', 'CC', 'NNP', 'CD', ')', '.']",17
natural_language_inference,26,191,"Our model achieves an F 1 score of 74.0 and an EM score of 70.3 on the development set , and an F 1 score of 72.6 and an EM score of 69.2 on Test set 1 , as shown in .","['Our', 'model', 'achieves', 'an', 'F', '1', 'score', 'of', '74.0', 'and', 'an', 'EM', 'score', 'of', '70.3', 'on', 'the', 'development', 'set', ',', 'and', 'an', 'F', '1', 'score', 'of', '72.6', 'and', 'an', 'EM', 'score', 'of', '69.2', 'on', 'Test', 'set', '1', ',', 'as', 'shown', 'in', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'NNP', 'CD', 'NN', 'IN', 'CD', 'CC', 'DT', 'NNP', 'NN', 'IN', 'CD', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'DT', 'NNP', 'CD', 'NN', 'IN', 'CD', 'CC', 'DT', 'NNP', 'NN', 'IN', 'CD', 'IN', 'NNP', 'VBD', 'CD', ',', 'IN', 'VBN', 'IN', '.']",42
natural_language_inference,26,192,Our model outperforms most of the previous approaches .,"['Our', 'model', 'outperforms', 'most', 'of', 'the', 'previous', 'approaches', '.']","['O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'JJS', 'IN', 'DT', 'JJ', 'NNS', '.']",9
natural_language_inference,26,193,"Comparing to the best - performing systems , our model has a simple architecture and is an end - to - end model .","['Comparing', 'to', 'the', 'best', '-', 'performing', 'systems', ',', 'our', 'model', 'has', 'a', 'simple', 'architecture', 'and', 'is', 'an', 'end', '-', 'to', '-', 'end', 'model', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'TO', 'DT', 'JJS', ':', 'VBG', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'CC', 'VBZ', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', '.']",24
natural_language_inference,26,194,"In fact , among all the end - to - end models , we achieve the best F1 scores .","['In', 'fact', ',', 'among', 'all', 'the', 'end', '-', 'to', '-', 'end', 'models', ',', 'we', 'achieve', 'the', 'best', 'F1', 'scores', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'IN', 'PDT', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'JJS', 'NN', 'NNS', '.']",20
natural_language_inference,26,203,"Our results showed that when node U is shared , as it is called ' universal ' , it learns information interaction between the question and passage , and when it is not shared , the performance slightly degraded .","['Our', 'results', 'showed', 'that', 'when', 'node', 'U', 'is', 'shared', ',', 'as', 'it', 'is', 'called', ""'"", 'universal', ""'"", ',', 'it', 'learns', 'information', 'interaction', 'between', 'the', 'question', 'and', 'passage', ',', 'and', 'when', 'it', 'is', 'not', 'shared', ',', 'the', 'performance', 'slightly', 'degraded', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBD', 'IN', 'WRB', 'JJ', 'NNP', 'VBZ', 'VBN', ',', 'IN', 'PRP', 'VBZ', 'VBN', ""''"", 'NN', ""''"", ',', 'PRP', 'VBZ', 'NN', 'NN', 'IN', 'DT', 'NN', 'CC', 'NN', ',', 'CC', 'WRB', 'PRP', 'VBZ', 'RB', 'VBN', ',', 'DT', 'NN', 'RB', 'VBD', '.']",40
natural_language_inference,26,206,"Results show that the performance dropped slightly , suggesting sharing BiLSTM is an effective method to improve the quality of the encoder .","['Results', 'show', 'that', 'the', 'performance', 'dropped', 'slightly', ',', 'suggesting', 'sharing', 'BiLSTM', 'is', 'an', 'effective', 'method', 'to', 'improve', 'the', 'quality', 'of', 'the', 'encoder', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['NNS', 'VBP', 'IN', 'DT', 'NN', 'VBD', 'RB', ',', 'VBG', 'VBG', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",23
natural_language_inference,26,207,"After removing the plausible answer pointer , the performance also dropped , indicating the plausible answers are useful to improve the model even though they are incorrect .","['After', 'removing', 'the', 'plausible', 'answer', 'pointer', ',', 'the', 'performance', 'also', 'dropped', ',', 'indicating', 'the', 'plausible', 'answers', 'are', 'useful', 'to', 'improve', 'the', 'model', 'even', 'though', 'they', 'are', 'incorrect', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'DT', 'JJ', 'NN', 'NN', ',', 'DT', 'NN', 'RB', 'VBD', ',', 'VBG', 'DT', 'JJ', 'NNS', 'VBP', 'JJ', 'TO', 'VB', 'DT', 'NN', 'RB', 'IN', 'PRP', 'VBP', 'JJ', '.']",28
natural_language_inference,26,208,"After removing the answer verifier , the performance dropped greatly , indicating it is vital for our model .","['After', 'removing', 'the', 'answer', 'verifier', ',', 'the', 'performance', 'dropped', 'greatly', ',', 'indicating', 'it', 'is', 'vital', 'for', 'our', 'model', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'DT', 'NN', 'NN', ',', 'DT', 'NN', 'VBD', 'RB', ',', 'VBG', 'PRP', 'VBZ', 'JJ', 'IN', 'PRP$', 'NN', '.']",19
natural_language_inference,26,210,"In the second block ( multi - level attention ) of the U - Net , we do not split the output of the encoded presentation and let it pass through a self - attention layer .","['In', 'the', 'second', 'block', '(', 'multi', '-', 'level', 'attention', ')', 'of', 'the', 'U', '-', 'Net', ',', 'we', 'do', 'not', 'split', 'the', 'output', 'of', 'the', 'encoded', 'presentation', 'and', 'let', 'it', 'pass', 'through', 'a', 'self', '-', 'attention', 'layer', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', '(', 'SYM', ':', 'NN', 'NN', ')', 'IN', 'DT', 'NNP', ':', 'NN', ',', 'PRP', 'VBP', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'VB', 'PRP', 'VB', 'IN', 'DT', 'NN', ':', 'NN', 'NN', '.']",37
natural_language_inference,1,2,Cut to the Chase : A Context Zoom - in Network for Reading Comprehension,"['Cut', 'to', 'the', 'Chase', ':', 'A', 'Context', 'Zoom', '-', 'in', 'Network', 'for', 'Reading', 'Comprehension']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'TO', 'DT', 'NNP', ':', 'DT', 'NNP', 'NNP', ':', 'IN', 'NNP', 'IN', 'NNP', 'NNP']",14
natural_language_inference,1,4,In recent years many deep neural networks have been proposed to solve Reading Comprehension ( RC ) tasks .,"['In', 'recent', 'years', 'many', 'deep', 'neural', 'networks', 'have', 'been', 'proposed', 'to', 'solve', 'Reading', 'Comprehension', '(', 'RC', ')', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'JJ', 'NNS', 'JJ', 'JJ', 'JJ', 'NNS', 'VBP', 'VBN', 'VBN', 'TO', 'VB', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', '.']",19
natural_language_inference,1,7,"To show the effectiveness of our architecture , we conducted several experiments on the recently proposed and challenging RC dataset ' Nar - rative QA ' .","['To', 'show', 'the', 'effectiveness', 'of', 'our', 'architecture', ',', 'we', 'conducted', 'several', 'experiments', 'on', 'the', 'recently', 'proposed', 'and', 'challenging', 'RC', 'dataset', ""'"", 'Nar', '-', 'rative', 'QA', ""'"", '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'PRP$', 'NN', ',', 'PRP', 'VBD', 'JJ', 'NNS', 'IN', 'DT', 'RB', 'VBN', 'CC', 'VBG', 'NNP', 'NN', ""''"", 'NNP', ':', 'JJ', 'NNP', 'POS', '.']",27
natural_language_inference,1,19,"To address the issues above we develop a novel context zoom - in network ( ConZNet ) for RC tasks , which can skip through irrelevant parts of a document and generate an answer using only the relevant regions of text .","['To', 'address', 'the', 'issues', 'above', 'we', 'develop', 'a', 'novel', 'context', 'zoom', '-', 'in', 'network', '(', 'ConZNet', ')', 'for', 'RC', 'tasks', ',', 'which', 'can', 'skip', 'through', 'irrelevant', 'parts', 'of', 'a', 'document', 'and', 'generate', 'an', 'answer', 'using', 'only', 'the', 'relevant', 'regions', 'of', 'text', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NNS', 'IN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', ':', 'IN', 'NN', '(', 'NNP', ')', 'IN', 'NNP', 'NNS', ',', 'WDT', 'MD', 'VB', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'CC', 'VB', 'DT', 'NN', 'VBG', 'RB', 'DT', 'JJ', 'NNS', 'IN', 'NN', '.']",42
natural_language_inference,1,20,The ConZNet architecture consists of two phases .,"['The', 'ConZNet', 'architecture', 'consists', 'of', 'two', 'phases', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'IN', 'CD', 'NNS', '.']",8
natural_language_inference,1,21,In the first phase we identify the relevant regions of text by employing a reinforcement learning algorithm .,"['In', 'the', 'first', 'phase', 'we', 'identify', 'the', 'relevant', 'regions', 'of', 'text', 'by', 'employing', 'a', 'reinforcement', 'learning', 'algorithm', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NNS', 'IN', 'NN', 'IN', 'VBG', 'DT', 'NN', 'VBG', 'NN', '.']",18
natural_language_inference,1,23,"The second phase is based on an encoder - decoder architecture , which comprehends the identified regions of text and generates the answer by using a residual self - attention network as encoder and a RNNbased sequence generator along with a pointer network as the decoder .","['The', 'second', 'phase', 'is', 'based', 'on', 'an', 'encoder', '-', 'decoder', 'architecture', ',', 'which', 'comprehends', 'the', 'identified', 'regions', 'of', 'text', 'and', 'generates', 'the', 'answer', 'by', 'using', 'a', 'residual', 'self', '-', 'attention', 'network', 'as', 'encoder', 'and', 'a', 'RNNbased', 'sequence', 'generator', 'along', 'with', 'a', 'pointer', 'network', 'as', 'the', 'decoder', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NNS', 'IN', 'NN', 'CC', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'IN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",47
natural_language_inference,1,27,"Unlike existing approaches , our method has the ability to select relevant regions of text not just based on the question but also on how well regions are related to each other .","['Unlike', 'existing', 'approaches', ',', 'our', 'method', 'has', 'the', 'ability', 'to', 'select', 'relevant', 'regions', 'of', 'text', 'not', 'just', 'based', 'on', 'the', 'question', 'but', 'also', 'on', 'how', 'well', 'regions', 'are', 'related', 'to', 'each', 'other', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'VBG', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NN', 'RB', 'RB', 'VBN', 'IN', 'DT', 'NN', 'CC', 'RB', 'IN', 'WRB', 'JJ', 'NNS', 'VBP', 'VBN', 'TO', 'DT', 'JJ', '.']",33
natural_language_inference,1,28,"Moreover , our decoder combines span prediction and sequence generation .","['Moreover', ',', 'our', 'decoder', 'combines', 'span', 'prediction', 'and', 'sequence', 'generation', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'NN', 'NNS', 'VBP', 'NN', 'CC', 'NN', 'NN', '.']",11
natural_language_inference,1,29,This allows the decoder to copy words from the relevant regions of text as well as to generate words from a fixed vocabulary .,"['This', 'allows', 'the', 'decoder', 'to', 'copy', 'words', 'from', 'the', 'relevant', 'regions', 'of', 'text', 'as', 'well', 'as', 'to', 'generate', 'words', 'from', 'a', 'fixed', 'vocabulary', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'NN', 'RB', 'RB', 'IN', 'TO', 'VB', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",24
natural_language_inference,1,117,"We compare our model against reported models in ( Seq2Seq , ASR , BiDAF ) and the Multi-range Reasoning Unit ( MRU ) in .","['We', 'compare', 'our', 'model', 'against', 'reported', 'models', 'in', '(', 'Seq2Seq', ',', 'ASR', ',', 'BiDAF', ')', 'and', 'the', 'Multi-range', 'Reasoning', 'Unit', '(', 'MRU', ')', 'in', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'IN', 'VBN', 'NNS', 'IN', '(', 'NNP', ',', 'NNP', ',', 'NNP', ')', 'CC', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'IN', '.']",25
natural_language_inference,1,118,"We implemented two baseline models ( Baseline 1 , Baseline 2 ) with Context Zoom layer similar to .","['We', 'implemented', 'two', 'baseline', 'models', '(', 'Baseline', '1', ',', 'Baseline', '2', ')', 'with', 'Context', 'Zoom', 'layer', 'similar', 'to', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBD', 'CD', 'NN', 'NNS', '(', 'NNP', 'CD', ',', 'NNP', 'CD', ')', 'IN', 'NNP', 'NNP', 'VBD', 'JJ', 'TO', '.']",19
natural_language_inference,1,125,The model is implemented using Python and Tensorflow .,"['The', 'model', 'is', 'implemented', 'using', 'Python', 'and', 'Tensorflow', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'CC', 'NNP', '.']",9
natural_language_inference,1,126,All the weights of the model are initialized by Glorot Initialization and biases are initialized with zeros .,"['All', 'the', 'weights', 'of', 'the', 'model', 'are', 'initialized', 'by', 'Glorot', 'Initialization', 'and', 'biases', 'are', 'initialized', 'with', 'zeros', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['PDT', 'DT', 'NNS', 'IN', 'DT', 'NN', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'CC', 'NNS', 'VBP', 'VBN', 'IN', 'NN', '.']",18
natural_language_inference,1,127,"We use a 300 dimensional word vectors from GloVe ( with 840 billion pre-trained vectors ) to initialize the word embeddings , which we kept constant during training .","['We', 'use', 'a', '300', 'dimensional', 'word', 'vectors', 'from', 'GloVe', '(', 'with', '840', 'billion', 'pre-trained', 'vectors', ')', 'to', 'initialize', 'the', 'word', 'embeddings', ',', 'which', 'we', 'kept', 'constant', 'during', 'training', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'CD', 'JJ', 'NN', 'NNS', 'IN', 'NNP', '(', 'IN', 'CD', 'CD', 'JJ', 'NNS', ')', 'TO', 'VB', 'DT', 'NN', 'NNS', ',', 'WDT', 'PRP', 'VBD', 'JJ', 'IN', 'NN', '.']",29
natural_language_inference,1,128,All the words that do not appear in Glove are initialized by sampling from a uniform random distribution between .,"['All', 'the', 'words', 'that', 'do', 'not', 'appear', 'in', 'Glove', 'are', 'initialized', 'by', 'sampling', 'from', 'a', 'uniform', 'random', 'distribution', 'between', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['PDT', 'DT', 'NNS', 'WDT', 'VBP', 'RB', 'VB', 'IN', 'NNP', 'VBP', 'VBN', 'IN', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', '.']",20
natural_language_inference,1,129,We apply dropout between the layers with keep probability of 0.8 ( i.e dropout = 0.2 ) .,"['We', 'apply', 'dropout', 'between', 'the', 'layers', 'with', 'keep', 'probability', 'of', '0.8', '(', 'i.e', 'dropout', '=', '0.2', ')', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'RB', 'IN', 'DT', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'CD', '(', 'NN', 'NN', 'NNP', 'CD', ')', '.']",18
natural_language_inference,1,130,The number of hidden units are set to 100 .,"['The', 'number', 'of', 'hidden', 'units', 'are', 'set', 'to', '100', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'JJ', 'NNS', 'VBP', 'VBN', 'TO', 'CD', '.']",10
natural_language_inference,1,131,"We trained our model with the AdaDelta ( Zeiler , 2012 ) optimizer for 50 epochs , an initial learning rate of 0.1 , and a minibatch size of 32 .","['We', 'trained', 'our', 'model', 'with', 'the', 'AdaDelta', '(', 'Zeiler', ',', '2012', ')', 'optimizer', 'for', '50', 'epochs', ',', 'an', 'initial', 'learning', 'rate', 'of', '0.1', ',', 'and', 'a', 'minibatch', 'size', 'of', '32', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'PRP$', 'NN', 'IN', 'DT', 'NNP', '(', 'NNP', ',', 'CD', ')', 'NN', 'IN', 'CD', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'CC', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",31
natural_language_inference,1,138,The performance of our model gradually dropped from sample size 7 onwards .,"['The', 'performance', 'of', 'our', 'model', 'gradually', 'dropped', 'from', 'sample', 'size', '7', 'onwards', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'PRP$', 'NN', 'RB', 'VBD', 'IN', 'JJ', 'NN', 'CD', 'NNS', '.']",13
natural_language_inference,1,139,This result shows evidence that only a few relevant sentences are sufficient to answer a question .,"['This', 'result', 'shows', 'evidence', 'that', 'only', 'a', 'few', 'relevant', 'sentences', 'are', 'sufficient', 'to', 'answer', 'a', 'question', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'NN', 'IN', 'RB', 'DT', 'JJ', 'JJ', 'NNS', 'VBP', 'JJ', 'TO', 'VB', 'DT', 'NN', '.']",17
natural_language_inference,1,141,The performance of the model improved dramatically with sample sizes 3 and 5 compared to the sample size of 1 .,"['The', 'performance', 'of', 'the', 'model', 'improved', 'dramatically', 'with', 'sample', 'sizes', '3', 'and', '5', 'compared', 'to', 'the', 'sample', 'size', 'of', '1', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NN', 'VBD', 'RB', 'IN', 'NN', 'NNS', 'CD', 'CC', 'CD', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'IN', 'CD', '.']",21
natural_language_inference,1,144,This result points out that the self - attention mechanism in the Context zoom layer is an important component to identify related relevant sentences .,"['This', 'result', 'points', 'out', 'that', 'the', 'self', '-', 'attention', 'mechanism', 'in', 'the', 'Context', 'zoom', 'layer', 'is', 'an', 'important', 'component', 'to', 'identify', 'related', 'relevant', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'RP', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'JJ', 'NNS', '.']",25
natural_language_inference,21,2,Attention - over - Attention Neural Networks for Reading Comprehension,"['Attention', '-', 'over', '-', 'Attention', 'Neural', 'Networks', 'for', 'Reading', 'Comprehension']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', ':', 'IN', ':', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",10
natural_language_inference,21,4,Cloze - style reading comprehension is a representative problem in mining relationship between document and query .,"['Cloze', '-', 'style', 'reading', 'comprehension', 'is', 'a', 'representative', 'problem', 'in', 'mining', 'relationship', 'between', 'document', 'and', 'query', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NN', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'NN', 'IN', 'NN', 'CC', 'NN', '.']",17
natural_language_inference,21,11,"To read and comprehend the human languages are challenging tasks for the machines , which requires that the understanding of natural languages and the ability to do reasoning over various clues .","['To', 'read', 'and', 'comprehend', 'the', 'human', 'languages', 'are', 'challenging', 'tasks', 'for', 'the', 'machines', ',', 'which', 'requires', 'that', 'the', 'understanding', 'of', 'natural', 'languages', 'and', 'the', 'ability', 'to', 'do', 'reasoning', 'over', 'various', 'clues', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'CC', 'VB', 'DT', 'JJ', 'NNS', 'VBP', 'VBG', 'NNS', 'IN', 'DT', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'CC', 'DT', 'NN', 'TO', 'VB', 'VBG', 'IN', 'JJ', 'NNS', '.']",32
natural_language_inference,21,20,"In this paper , we present a novel neural network architecture , called attention - over - attention model .","['In', 'this', 'paper', ',', 'we', 'present', 'a', 'novel', 'neural', 'network', 'architecture', ',', 'called', 'attention', '-', 'over', '-', 'attention', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', ',', 'VBN', 'NN', ':', 'IN', ':', 'NN', 'NN', '.']",20
natural_language_inference,21,21,"As we can understand the meaning literally , our model aims to place another attention mechanism over the existing document - level attention .","['As', 'we', 'can', 'understand', 'the', 'meaning', 'literally', ',', 'our', 'model', 'aims', 'to', 'place', 'another', 'attention', 'mechanism', 'over', 'the', 'existing', 'document', '-', 'level', 'attention', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', 'DT', 'NN', 'RB', ',', 'PRP$', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'VBG', 'NN', ':', 'NN', 'NN', '.']",24
natural_language_inference,21,22,"Unlike the previous works , that are using heuristic merging functions , or setting various pre-defined non-trainable terms , our model could automatically generate an "" attended attention "" over various document - level attentions , and make a mutual look not only from query - to - document but also document - to - query , which will benefit from the interactive information .","['Unlike', 'the', 'previous', 'works', ',', 'that', 'are', 'using', 'heuristic', 'merging', 'functions', ',', 'or', 'setting', 'various', 'pre-defined', 'non-trainable', 'terms', ',', 'our', 'model', 'could', 'automatically', 'generate', 'an', '""', 'attended', 'attention', '""', 'over', 'various', 'document', '-', 'level', 'attentions', ',', 'and', 'make', 'a', 'mutual', 'look', 'not', 'only', 'from', 'query', '-', 'to', '-', 'document', 'but', 'also', 'document', '-', 'to', '-', 'query', ',', 'which', 'will', 'benefit', 'from', 'the', 'interactive', 'information', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NNS', ',', 'WDT', 'VBP', 'VBG', 'JJ', 'NN', 'NNS', ',', 'CC', 'VBG', 'JJ', 'JJ', 'JJ', 'NNS', ',', 'PRP$', 'NN', 'MD', 'RB', 'VB', 'DT', 'NN', 'VBD', 'NN', 'NN', 'IN', 'JJ', 'JJ', ':', 'NN', 'NNS', ',', 'CC', 'VB', 'DT', 'JJ', 'NN', 'RB', 'RB', 'IN', 'JJ', ':', 'TO', ':', 'NN', 'CC', 'RB', 'JJ', ':', 'TO', ':', 'NN', ',', 'WDT', 'MD', 'VB', 'IN', 'DT', 'JJ', 'NN', '.']",65
natural_language_inference,21,141,Embedding Layer :,"['Embedding', 'Layer', ':']","['B-n', 'I-n', 'O']","['VBG', 'NN', ':']",3
natural_language_inference,21,142,"The embedding weights are randomly initialized with the uniformed distribution in the interval [ ? 0.05 , 0.05 ].","['The', 'embedding', 'weights', 'are', 'randomly', 'initialized', 'with', 'the', 'uniformed', 'distribution', 'in', 'the', 'interval', '[', '?', '0.05', ',', '0.05', '].']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'VBG', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NNP', '.', 'CD', ',', 'CD', 'NN']",19
natural_language_inference,21,148,Hidden Layer : Internal weights of GRUs are initialized with random orthogonal matrices .,"['Hidden', 'Layer', ':', 'Internal', 'weights', 'of', 'GRUs', 'are', 'initialized', 'with', 'random', 'orthogonal', 'matrices', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', ':', 'NNP', 'NNS', 'IN', 'NNP', 'VBP', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', '.']",14
natural_language_inference,21,150,"We adopted ADAM optimizer for weight updating , with an initial learning rate of 0.001 .","['We', 'adopted', 'ADAM', 'optimizer', 'for', 'weight', 'updating', ',', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.001', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'NNP', 'NN', 'IN', 'NN', 'NN', ',', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.']",16
natural_language_inference,21,151,"As the GRU units still suffer from the gradient exploding issues , we set the gradient clipping threshold to 5 .","['As', 'the', 'GRU', 'units', 'still', 'suffer', 'from', 'the', 'gradient', 'exploding', 'issues', ',', 'we', 'set', 'the', 'gradient', 'clipping', 'threshold', 'to', '5', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NNP', 'NNS', 'RB', 'VBP', 'IN', 'DT', 'NN', 'VBG', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'VBG', 'NN', 'TO', 'CD', '.']",21
natural_language_inference,21,152,We used batched training strategy of 32 samples .,"['We', 'used', 'batched', 'training', 'strategy', 'of', '32', 'samples', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'VBN', 'VBG', 'NN', 'IN', 'CD', 'NNS', '.']",9
natural_language_inference,21,154,"In re-ranking step , we generate 5 - best list from the baseline neural network model , as we did not observe a significant variance when changing the N - best list size .","['In', 're-ranking', 'step', ',', 'we', 'generate', '5', '-', 'best', 'list', 'from', 'the', 'baseline', 'neural', 'network', 'model', ',', 'as', 'we', 'did', 'not', 'observe', 'a', 'significant', 'variance', 'when', 'changing', 'the', 'N', '-', 'best', 'list', 'size', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NN', ',', 'PRP', 'VBP', 'CD', ':', 'JJS', 'NN', 'IN', 'DT', 'NN', 'JJ', 'NN', 'NN', ',', 'IN', 'PRP', 'VBD', 'RB', 'VB', 'DT', 'JJ', 'NN', 'WRB', 'VBG', 'DT', 'NNP', ':', 'JJS', 'NN', 'NN', '.']",34
natural_language_inference,21,155,"All language model features are trained on the training proportion of each dataset , with 8 - gram wordbased setting and Kneser - Ney smoothing trained by SRILM toolkit .","['All', 'language', 'model', 'features', 'are', 'trained', 'on', 'the', 'training', 'proportion', 'of', 'each', 'dataset', ',', 'with', '8', '-', 'gram', 'wordbased', 'setting', 'and', 'Kneser', '-', 'Ney', 'smoothing', 'trained', 'by', 'SRILM', 'toolkit', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'IN', 'CD', ':', 'NN', 'VBD', 'NN', 'CC', 'NNP', ':', 'NNP', 'VBG', 'VBN', 'IN', 'NNP', 'NN', '.']",30
natural_language_inference,21,158,"Implementation is done with Theano ( Theano Development Team , 2016 ) and Keras , and all models are trained on Tesla K40 GPU . :","['Implementation', 'is', 'done', 'with', 'Theano', '(', 'Theano', 'Development', 'Team', ',', '2016', ')', 'and', 'Keras', ',', 'and', 'all', 'models', 'are', 'trained', 'on', 'Tesla', 'K40', 'GPU', '.', ':']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['NN', 'VBZ', 'VBN', 'IN', 'NNP', '(', 'NNP', 'NNP', 'NNP', ',', 'CD', ')', 'CC', 'NNP', ',', 'CC', 'DT', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'NNP', '.', ':']",26
natural_language_inference,21,163,"As we can see that , our AoA Reader outperforms state - of - the - art systems by a large margin , where 2.3 % and 2.0 % absolute improvements over EpiReader in CBTest NE and CN test sets , which demonstrate the effectiveness of our model .","['As', 'we', 'can', 'see', 'that', ',', 'our', 'AoA', 'Reader', 'outperforms', 'state', '-', 'of', '-', 'the', '-', 'art', 'systems', 'by', 'a', 'large', 'margin', ',', 'where', '2.3', '%', 'and', '2.0', '%', 'absolute', 'improvements', 'over', 'EpiReader', 'in', 'CBTest', 'NE', 'and', 'CN', 'test', 'sets', ',', 'which', 'demonstrate', 'the', 'effectiveness', 'of', 'our', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP', 'MD', 'VB', 'DT', ',', 'PRP$', 'NNP', 'NNP', 'VBZ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'WRB', 'CD', 'NN', 'CC', 'CD', 'NN', 'JJ', 'NNS', 'IN', 'NNP', 'IN', 'NNP', 'NNP', 'CC', 'NNP', 'NN', 'NNS', ',', 'WDT', 'VBP', 'DT', 'NN', 'IN', 'PRP$', 'NN', '.']",49
natural_language_inference,21,164,"Also by adding additional features in the re-ranking step , there is another significant boost 2.0 % to 3.7 % over Ao A Reader in CBTest NE / CN test sets .","['Also', 'by', 'adding', 'additional', 'features', 'in', 'the', 're-ranking', 'step', ',', 'there', 'is', 'another', 'significant', 'boost', '2.0', '%', 'to', '3.7', '%', 'over', 'Ao', 'A', 'Reader', 'in', 'CBTest', 'NE', '/', 'CN', 'test', 'sets', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'EX', 'VBZ', 'DT', 'JJ', 'NN', 'CD', 'NN', 'TO', 'CD', 'NN', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', 'NNS', '.']",32
natural_language_inference,21,165,"We have also found that our single model could stay on par with the previous best ensemble system , and even we have an absolute improvement of 0.9 % beyond the best ensemble model ( Iterative Attention ) in the CBTest NE validation set .","['We', 'have', 'also', 'found', 'that', 'our', 'single', 'model', 'could', 'stay', 'on', 'par', 'with', 'the', 'previous', 'best', 'ensemble', 'system', ',', 'and', 'even', 'we', 'have', 'an', 'absolute', 'improvement', 'of', '0.9', '%', 'beyond', 'the', 'best', 'ensemble', 'model', '(', 'Iterative', 'Attention', ')', 'in', 'the', 'CBTest', 'NE', 'validation', 'set', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'RB', 'VBN', 'IN', 'PRP$', 'JJ', 'NN', 'MD', 'VB', 'IN', 'NN', 'IN', 'DT', 'JJ', 'RBS', 'JJ', 'NN', ',', 'CC', 'RB', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJS', 'JJ', 'NN', '(', 'JJ', 'NNP', ')', 'IN', 'DT', 'NNP', 'NNP', 'NN', 'NN', '.']",45
natural_language_inference,21,166,"When it comes to ensemble model , our AoA Reader also shows significant improvements over previous best ensemble models by a large margin and setup a new state - of - the - art system .","['When', 'it', 'comes', 'to', 'ensemble', 'model', ',', 'our', 'AoA', 'Reader', 'also', 'shows', 'significant', 'improvements', 'over', 'previous', 'best', 'ensemble', 'models', 'by', 'a', 'large', 'margin', 'and', 'setup', 'a', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'system', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['WRB', 'PRP', 'VBZ', 'TO', 'JJ', 'NN', ',', 'PRP$', 'NNP', 'NNP', 'RB', 'VBZ', 'JJ', 'NNS', 'IN', 'JJ', 'RBS', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'CC', 'VB', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '.']",36
natural_language_inference,21,168,"Instead of using pre-defined merging heuristics , and letting the model explicitly learn the weights between individual attentions results in a significant boost in the performance , where 4.1 % and 3.7 % improvements can be made in CNN validation and test set against CAS Reader .","['Instead', 'of', 'using', 'pre-defined', 'merging', 'heuristics', ',', 'and', 'letting', 'the', 'model', 'explicitly', 'learn', 'the', 'weights', 'between', 'individual', 'attentions', 'results', 'in', 'a', 'significant', 'boost', 'in', 'the', 'performance', ',', 'where', '4.1', '%', 'and', '3.7', '%', 'improvements', 'can', 'be', 'made', 'in', 'CNN', 'validation', 'and', 'test', 'set', 'against', 'CAS', 'Reader', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'IN', 'VBG', 'JJ', 'NN', 'NNS', ',', 'CC', 'VBG', 'DT', 'NN', 'RB', 'VBZ', 'DT', 'NNS', 'IN', 'JJ', 'NNS', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'WRB', 'CD', 'NN', 'CC', 'CD', 'NN', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'NNP', 'NN', 'CC', 'NN', 'VBN', 'IN', 'NNP', 'NNP', '.']",47
natural_language_inference,21,172,"From the results in , we found that the NE and CN category both benefit a lot from the re-ranking features , but the proportions are quite different .","['From', 'the', 'results', 'in', ',', 'we', 'found', 'that', 'the', 'NE', 'and', 'CN', 'category', 'both', 'benefit', 'a', 'lot', 'from', 'the', 're-ranking', 'features', ',', 'but', 'the', 'proportions', 'are', 'quite', 'different', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNS', 'IN', ',', 'PRP', 'VBD', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NN', 'DT', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', ',', 'CC', 'DT', 'NNS', 'VBP', 'RB', 'JJ', '.']",29
natural_language_inference,21,173,"Generally speaking , in NE category , the performance is mainly boosted by the LM local feature .","['Generally', 'speaking', ',', 'in', 'NE', 'category', ',', 'the', 'performance', 'is', 'mainly', 'boosted', 'by', 'the', 'LM', 'local', 'feature', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', 'VBG', ',', 'IN', 'NNP', 'NN', ',', 'DT', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'JJ', 'NN', '.']",18
natural_language_inference,5,2,Sentence Similarity Learning by Lexical Decomposition and Composition,"['Sentence', 'Similarity', 'Learning', 'by', 'Lexical', 'Decomposition', 'and', 'Composition']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'CC', 'NNP']",8
natural_language_inference,5,4,"Most conventional sentence similarity methods only focus on similar parts of two input sentences , and simply ignore the dissimilar parts , which usually give us some clues and semantic meanings about the sentences .","['Most', 'conventional', 'sentence', 'similarity', 'methods', 'only', 'focus', 'on', 'similar', 'parts', 'of', 'two', 'input', 'sentences', ',', 'and', 'simply', 'ignore', 'the', 'dissimilar', 'parts', ',', 'which', 'usually', 'give', 'us', 'some', 'clues', 'and', 'semantic', 'meanings', 'about', 'the', 'sentences', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJS', 'JJ', 'NN', 'NN', 'NNS', 'RB', 'VB', 'IN', 'JJ', 'NNS', 'IN', 'CD', 'NN', 'NNS', ',', 'CC', 'RB', 'VB', 'DT', 'NN', 'NNS', ',', 'WDT', 'RB', 'VBP', 'PRP', 'DT', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NNS', '.']",35
natural_language_inference,5,45,"In this paper , we propose a novel model to tackle all these challenges jointly by decomposing and composing lexical semantics over sentences .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'model', 'to', 'tackle', 'all', 'these', 'challenges', 'jointly', 'by', 'decomposing', 'and', 'composing', 'lexical', 'semantics', 'over', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'PDT', 'DT', 'NNS', 'RB', 'IN', 'VBG', 'CC', 'VBG', 'JJ', 'NNS', 'IN', 'NNS', '.']",24
natural_language_inference,5,46,"Given a sentence pair , the model represents each word as a low -dimensional vector ( challenge 1 ) , and calculates a semantic matching vector for each word based on all words in the other sentence ( challenge 2 ) .","['Given', 'a', 'sentence', 'pair', ',', 'the', 'model', 'represents', 'each', 'word', 'as', 'a', 'low', '-dimensional', 'vector', '(', 'challenge', '1', ')', ',', 'and', 'calculates', 'a', 'semantic', 'matching', 'vector', 'for', 'each', 'word', 'based', 'on', 'all', 'words', 'in', 'the', 'other', 'sentence', '(', 'challenge', '2', ')', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['VBN', 'DT', 'NN', 'NN', ',', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', '(', 'VB', 'CD', ')', ',', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'VBN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'VB', 'CD', ')', '.']",42
natural_language_inference,5,47,"Then based on the semantic matching vector , each word vector is decomposed into two components : a similar component and a dissimilar component ( challenge 3 ) .","['Then', 'based', 'on', 'the', 'semantic', 'matching', 'vector', ',', 'each', 'word', 'vector', 'is', 'decomposed', 'into', 'two', 'components', ':', 'a', 'similar', 'component', 'and', 'a', 'dissimilar', 'component', '(', 'challenge', '3', ')', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['RB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'CD', 'NNS', ':', 'DT', 'JJ', 'NN', 'CC', 'DT', 'JJ', 'NN', '(', 'VB', 'CD', ')', '.']",29
natural_language_inference,5,48,"We use similar components of all the words to represent the similar parts of the sentence pair , and dissimilar components of every word to model the dissimilar parts explicitly .","['We', 'use', 'similar', 'components', 'of', 'all', 'the', 'words', 'to', 'represent', 'the', 'similar', 'parts', 'of', 'the', 'sentence', 'pair', ',', 'and', 'dissimilar', 'components', 'of', 'every', 'word', 'to', 'model', 'the', 'dissimilar', 'parts', 'explicitly', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'NNS', 'IN', 'PDT', 'DT', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'RB', '.']",31
natural_language_inference,5,49,"After this , a two - channel CNN operation is performed to compose the similar and dissimilar components into a feature vector ( challenge 2 and 3 ) .","['After', 'this', ',', 'a', 'two', '-', 'channel', 'CNN', 'operation', 'is', 'performed', 'to', 'compose', 'the', 'similar', 'and', 'dissimilar', 'components', 'into', 'a', 'feature', 'vector', '(', 'challenge', '2', 'and', '3', ')', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', ',', 'DT', 'CD', ':', 'NN', 'NNP', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '(', 'VB', 'CD', 'CC', 'CD', ')', '.']",29
natural_language_inference,5,50,"Finally , the composed feature vector is utilized to predict the sentence similarity .","['Finally', ',', 'the', 'composed', 'feature', 'vector', 'is', 'utilized', 'to', 'predict', 'the', 'sentence', 'similarity', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",14
natural_language_inference,5,202,QASent dataset .,"['QASent', 'dataset', '.']","['B-n', 'I-n', 'O']","['JJ', 'NN', '.']",3
natural_language_inference,5,207,"After adding some word overlap features between the two sentences , the performance was improved significantly ( the third row of ) .","['After', 'adding', 'some', 'word', 'overlap', 'features', 'between', 'the', 'two', 'sentences', ',', 'the', 'performance', 'was', 'improved', 'significantly', '(', 'the', 'third', 'row', 'of', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'DT', 'NN', 'NN', 'NNS', 'IN', 'DT', 'CD', 'NNS', ',', 'DT', 'NN', 'VBD', 'VBN', 'RB', '(', 'DT', 'JJ', 'NN', 'IN', ')', '.']",23
natural_language_inference,5,214,"We can see that our model ( the last row of ) got the best MAP among all previous work , and a comparable MRR than dos .","['We', 'can', 'see', 'that', 'our', 'model', '(', 'the', 'last', 'row', 'of', ')', 'got', 'the', 'best', 'MAP', 'among', 'all', 'previous', 'work', ',', 'and', 'a', 'comparable', 'MRR', 'than', 'dos', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'MD', 'VB', 'IN', 'PRP$', 'NN', '(', 'DT', 'JJ', 'NN', 'IN', ')', 'VBD', 'DT', 'JJS', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'DT', 'JJ', 'NNP', 'IN', 'NN', '.']",28
natural_language_inference,5,215,Wiki QA dataset .,"['Wiki', 'QA', 'dataset', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NN', '.']",4
natural_language_inference,5,218,The best performance ( shown at the second row of ) was acquired by a bigram CNN model combining with the word overlap features .,"['The', 'best', 'performance', '(', 'shown', 'at', 'the', 'second', 'row', 'of', ')', 'was', 'acquired', 'by', 'a', 'bigram', 'CNN', 'model', 'combining', 'with', 'the', 'word', 'overlap', 'features', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJS', 'NN', '(', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', ')', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'NNP', 'NN', 'VBG', 'IN', 'DT', 'NN', 'NN', 'NNS', '.']",25
natural_language_inference,5,225,MSRP dataset .,"['MSRP', 'dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NN', '.']",3
natural_language_inference,5,237,"Comparing to these neural network based models , our model obtained a comparable performance ( the last row of ) without using any sparse features , extra annotated resources and specific training strategies .","['Comparing', 'to', 'these', 'neural', 'network', 'based', 'models', ',', 'our', 'model', 'obtained', 'a', 'comparable', 'performance', '(', 'the', 'last', 'row', 'of', ')', 'without', 'using', 'any', 'sparse', 'features', ',', 'extra', 'annotated', 'resources', 'and', 'specific', 'training', 'strategies', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['VBG', 'TO', 'DT', 'JJ', 'NN', 'VBN', 'NNS', ',', 'PRP$', 'NN', 'VBD', 'DT', 'JJ', 'NN', '(', 'DT', 'JJ', 'NN', 'IN', ')', 'IN', 'VBG', 'DT', 'NN', 'NNS', ',', 'JJ', 'JJ', 'NNS', 'CC', 'JJ', 'NN', 'NNS', '.']",34
natural_language_inference,11,2,Published as a conference paper at ICLR 2017 DYNAMIC COATTENTION NETWORKS FOR QUESTION ANSWERING,"['Published', 'as', 'a', 'conference', 'paper', 'at', 'ICLR', '2017', 'DYNAMIC', 'COATTENTION', 'NETWORKS', 'FOR', 'QUESTION', 'ANSWERING']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'NNP', 'CD', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP']",14
natural_language_inference,11,12,Question answering ( QA ) is a crucial task in natural language processing that requires both natural language understanding and world knowledge .,"['Question', 'answering', '(', 'QA', ')', 'is', 'a', 'crucial', 'task', 'in', 'natural', 'language', 'processing', 'that', 'requires', 'both', 'natural', 'language', 'understanding', 'and', 'world', 'knowledge', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', '(', 'NNP', ')', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",23
natural_language_inference,11,13,"Previous QA datasets tend to be high in quality due to human annotation , but small in size .","['Previous', 'QA', 'datasets', 'tend', 'to', 'be', 'high', 'in', 'quality', 'due', 'to', 'human', 'annotation', ',', 'but', 'small', 'in', 'size', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNS', 'VBP', 'TO', 'VB', 'JJ', 'IN', 'NN', 'JJ', 'TO', 'JJ', 'NN', ',', 'CC', 'JJ', 'IN', 'NN', '.']",19
natural_language_inference,11,22,"We introduce the Dynamic Coattention Network ( DCN ) , illustrated in , an end - to - end neural network for question answering .","['We', 'introduce', 'the', 'Dynamic', 'Coattention', 'Network', '(', 'DCN', ')', ',', 'illustrated', 'in', ',', 'an', 'end', '-', 'to', '-', 'end', 'neural', 'network', 'for', 'question', 'answering', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'VBN', 'IN', ',', 'DT', 'NN', ':', 'TO', ':', 'VB', 'JJ', 'NN', 'IN', 'NN', 'NN', '.']",25
natural_language_inference,11,23,"The model consists of a coattentive encoder that captures the interactions between the question and the document , as well as a dynamic pointing decoder that alternates between estimating the start and end of the answer span .","['The', 'model', 'consists', 'of', 'a', 'coattentive', 'encoder', 'that', 'captures', 'the', 'interactions', 'between', 'the', 'question', 'and', 'the', 'document', ',', 'as', 'well', 'as', 'a', 'dynamic', 'pointing', 'decoder', 'that', 'alternates', 'between', 'estimating', 'the', 'start', 'and', 'end', 'of', 'the', 'answer', 'span', '.']","['B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'NN', 'CC', 'DT', 'NN', ',', 'RB', 'RB', 'IN', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'IN', 'VBG', 'DT', 'NN', 'CC', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",38
natural_language_inference,11,127,"To preprocess the corpus , we use the tokenizer from Stanford CoreNLP .","['To', 'preprocess', 'the', 'corpus', ',', 'we', 'use', 'the', 'tokenizer', 'from', 'Stanford', 'CoreNLP', '.']","['B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NNP', 'NNP', '.']",13
natural_language_inference,11,128,We use as Glo Ve word vectors pretrained on the 840B Common Crawl corpus .,"['We', 'use', 'as', 'Glo', 'Ve', 'word', 'vectors', 'pretrained', 'on', 'the', '840B', 'Common', 'Crawl', 'corpus', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'NNP', 'NNP', 'NN', 'NNS', 'VBD', 'IN', 'DT', 'CD', 'NNP', 'NNP', 'NN', '.']",15
natural_language_inference,11,129,We limit the vocabulary to words that are present in the Common Crawl corpus and set embeddings for out - of - vocabulary words to zero .,"['We', 'limit', 'the', 'vocabulary', 'to', 'words', 'that', 'are', 'present', 'in', 'the', 'Common', 'Crawl', 'corpus', 'and', 'set', 'embeddings', 'for', 'out', '-', 'of', '-', 'vocabulary', 'words', 'to', 'zero', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'TO', 'NNS', 'WDT', 'VBP', 'JJ', 'IN', 'DT', 'NNP', 'NNP', 'NN', 'CC', 'NN', 'NNS', 'IN', 'IN', ':', 'IN', ':', 'JJ', 'NNS', 'TO', 'CD', '.']",27
natural_language_inference,11,131,"We use a max sequence length of 600 during training and a hidden state size of 200 for all recurrent units , maxout layers , and linear layers .","['We', 'use', 'a', 'max', 'sequence', 'length', 'of', '600', 'during', 'training', 'and', 'a', 'hidden', 'state', 'size', 'of', '200', 'for', 'all', 'recurrent', 'units', ',', 'maxout', 'layers', ',', 'and', 'linear', 'layers', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'NN', 'IN', 'CD', 'IN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'IN', 'DT', 'JJ', 'NNS', ',', 'NN', 'NNS', ',', 'CC', 'JJ', 'NNS', '.']",29
natural_language_inference,11,132,All LSTMs have randomly initialized parameters and an initial state of zero .,"['All', 'LSTMs', 'have', 'randomly', 'initialized', 'parameters', 'and', 'an', 'initial', 'state', 'of', 'zero', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNP', 'VBP', 'VBN', 'VBN', 'NNS', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",13
natural_language_inference,11,133,Sentinel vectors are randomly initialized and optimized during training .,"['Sentinel', 'vectors', 'are', 'randomly', 'initialized', 'and', 'optimized', 'during', 'training', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['NNP', 'NNS', 'VBP', 'RB', 'VBN', 'CC', 'VBN', 'IN', 'NN', '.']",10
natural_language_inference,11,134,"For the dynamic decoder , we set the maximum number of iterations to 4 and use a maxout pool size of 16 .","['For', 'the', 'dynamic', 'decoder', ',', 'we', 'set', 'the', 'maximum', 'number', 'of', 'iterations', 'to', '4', 'and', 'use', 'a', 'maxout', 'pool', 'size', 'of', '16', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'TO', 'CD', 'CC', 'VB', 'DT', 'NN', 'NN', 'NN', 'IN', 'CD', '.']",23
natural_language_inference,11,135,"We use dropout to regularize our network during training , and optimize the model using ADAM .","['We', 'use', 'dropout', 'to', 'regularize', 'our', 'network', 'during', 'training', ',', 'and', 'optimize', 'the', 'model', 'using', 'ADAM', '.']","['O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'TO', 'VB', 'PRP$', 'NN', 'IN', 'NN', ',', 'CC', 'VB', 'DT', 'NN', 'VBG', 'NNP', '.']",17
natural_language_inference,11,136,All models are implemented and trained with Chainer .,"['All', 'models', 'are', 'implemented', 'and', 'trained', 'with', 'Chainer', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'CC', 'VBN', 'IN', 'NNP', '.']",9
natural_language_inference,11,145,"The performance of the Dynamic Coattention Network on the SQuAD dataset , compared to other submitted models on the leaderboard 3 , is shown in The DCN has the capability to estimate the start and end points of the answer span multiple times , each time conditioned on its previous estimates .","['The', 'performance', 'of', 'the', 'Dynamic', 'Coattention', 'Network', 'on', 'the', 'SQuAD', 'dataset', ',', 'compared', 'to', 'other', 'submitted', 'models', 'on', 'the', 'leaderboard', '3', ',', 'is', 'shown', 'in', 'The', 'DCN', 'has', 'the', 'capability', 'to', 'estimate', 'the', 'start', 'and', 'end', 'points', 'of', 'the', 'answer', 'span', 'multiple', 'times', ',', 'each', 'time', 'conditioned', 'on', 'its', 'previous', 'estimates', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NNP', 'NN', ',', 'VBN', 'TO', 'JJ', 'VBN', 'NNS', 'IN', 'DT', 'NN', 'CD', ',', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'JJ', 'NNS', ',', 'DT', 'NN', 'VBN', 'IN', 'PRP$', 'JJ', 'NNS', '.']",52
natural_language_inference,11,146,"By doing so , the model is able to explore local maxima corresponding to multiple plausible answers , as is shown in .","['By', 'doing', 'so', ',', 'the', 'model', 'is', 'able', 'to', 'explore', 'local', 'maxima', 'corresponding', 'to', 'multiple', 'plausible', 'answers', ',', 'as', 'is', 'shown', 'in', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'RB', ',', 'DT', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'JJ', 'NN', 'VBG', 'TO', 'VB', 'JJ', 'NNS', ',', 'IN', 'VBZ', 'VBN', 'IN', '.']",23
natural_language_inference,23,2,Deep Fusion LSTMs for Text Semantic Matching,"['Deep', 'Fusion', 'LSTMs', 'for', 'Text', 'Semantic', 'Matching']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",7
natural_language_inference,23,14,"Among many natural language processing ( NLP ) tasks , such as text classification , question answering and machine translation , a common problem is modelling the relevance / similarity of a pair of texts , which is also called text semantic matching .","['Among', 'many', 'natural', 'language', 'processing', '(', 'NLP', ')', 'tasks', ',', 'such', 'as', 'text', 'classification', ',', 'question', 'answering', 'and', 'machine', 'translation', ',', 'a', 'common', 'problem', 'is', 'modelling', 'the', 'relevance', '/', 'similarity', 'of', 'a', 'pair', 'of', 'texts', ',', 'which', 'is', 'also', 'called', 'text', 'semantic', 'matching', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NNS', ',', 'JJ', 'IN', 'JJ', 'NN', ',', 'NN', 'NN', 'CC', 'NN', 'NN', ',', 'DT', 'JJ', 'NN', 'VBZ', 'VBG', 'DT', 'NN', 'NNP', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'NN', 'JJ', 'NN', '.']",44
natural_language_inference,23,25,"In this paper , we adopt a deep fusion strategy to model the strong interactions of two sentences .","['In', 'this', 'paper', ',', 'we', 'adopt', 'a', 'deep', 'fusion', 'strategy', 'to', 'model', 'the', 'strong', 'interactions', 'of', 'two', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'CD', 'NNS', '.']",19
natural_language_inference,23,28,"Thus , text matching can be regarded as modelling the interaction of two texts in a recursive matching way .","['Thus', ',', 'text', 'matching', 'can', 'be', 'regarded', 'as', 'modelling', 'the', 'interaction', 'of', 'two', 'texts', 'in', 'a', 'recursive', 'matching', 'way', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'IN', 'NN', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NN', '.']",20
natural_language_inference,23,29,"Following this idea , we propose deep fusion long short - term memory neural networks ( DF - LSTMs ) to model the interactions recursively .","['Following', 'this', 'idea', ',', 'we', 'propose', 'deep', 'fusion', 'long', 'short', '-', 'term', 'memory', 'neural', 'networks', '(', 'DF', '-', 'LSTMs', ')', 'to', 'model', 'the', 'interactions', 'recursively', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-n', 'O']","['VBG', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'RB', 'JJ', ':', 'NN', 'NN', 'JJ', 'NNS', '(', 'NNP', ':', 'NN', ')', 'TO', 'VB', 'DT', 'NNS', 'RB', '.']",26
natural_language_inference,23,30,"More concretely , DF - LSTMs consist of two interconnected conditional LSTMs , each of which models apiece of text under the influence of another .","['More', 'concretely', ',', 'DF', '-', 'LSTMs', 'consist', 'of', 'two', 'interconnected', 'conditional', 'LSTMs', ',', 'each', 'of', 'which', 'models', 'apiece', 'of', 'text', 'under', 'the', 'influence', 'of', 'another', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['RBR', 'RB', ',', 'NNP', ':', 'NNP', 'NN', 'IN', 'CD', 'JJ', 'JJ', 'NNP', ',', 'DT', 'IN', 'WDT', 'NNS', 'IN', 'IN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', '.']",26
natural_language_inference,23,31,The output vector of DF - LSTMs is fed into a task - specific output layer to compute the match - ing score .,"['The', 'output', 'vector', 'of', 'DF', '-', 'LSTMs', 'is', 'fed', 'into', 'a', 'task', '-', 'specific', 'output', 'layer', 'to', 'compute', 'the', 'match', '-', 'ing', 'score', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'IN', 'NNP', ':', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', ':', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', ':', 'NN', 'NN', '.']",24
natural_language_inference,23,139,Neural bag - of - words ( NBOW ) :,"['Neural', 'bag', '-', 'of', '-', 'words', '(', 'NBOW', ')', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'SYM', ':', 'IN', ':', 'NNS', '(', 'NNP', ')', ':']",10
natural_language_inference,23,140,"Each sequence is represented as the sum of the embeddings of the words it contains , then they are concatenated and fed to a MLP .","['Each', 'sequence', 'is', 'represented', 'as', 'the', 'sum', 'of', 'the', 'embeddings', 'of', 'the', 'words', 'it', 'contains', ',', 'then', 'they', 'are', 'concatenated', 'and', 'fed', 'to', 'a', 'MLP', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNS', 'PRP', 'VBZ', ',', 'RB', 'PRP', 'VBP', 'VBN', 'CC', 'VBN', 'TO', 'DT', 'NNP', '.']",26
natural_language_inference,23,141,"Single LSTM : Two sequences are encoded by a single LSTM , proposed by .","['Single', 'LSTM', ':', 'Two', 'sequences', 'are', 'encoded', 'by', 'a', 'single', 'LSTM', ',', 'proposed', 'by', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'NNP', ':', 'CD', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNP', ',', 'VBN', 'IN', '.']",15
natural_language_inference,23,142,"Parallel LSTMs : Two sequences are first encoded by two LSTMs separately , then they are concatenated and fed to a MLP .","['Parallel', 'LSTMs', ':', 'Two', 'sequences', 'are', 'first', 'encoded', 'by', 'two', 'LSTMs', 'separately', ',', 'then', 'they', 'are', 'concatenated', 'and', 'fed', 'to', 'a', 'MLP', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', ':', 'CD', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'CD', 'NNP', 'RB', ',', 'RB', 'PRP', 'VBP', 'VBN', 'CC', 'VBN', 'TO', 'DT', 'NNP', '.']",23
natural_language_inference,23,143,"Attention LSTMs : Two sequences are encoded by LSTMs with attention mechanism , proposed by .","['Attention', 'LSTMs', ':', 'Two', 'sequences', 'are', 'encoded', 'by', 'LSTMs', 'with', 'attention', 'mechanism', ',', 'proposed', 'by', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['NNP', 'NNP', ':', 'CD', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'IN', 'NN', 'NN', ',', 'VBN', 'IN', '.']",16
natural_language_inference,23,144,"Word - by - word Attention LSTMs : An improved strategy of attention LSTMs , which introduces word - by - word attention mechanism and is proposed by . :","['Word', '-', 'by', '-', 'word', 'Attention', 'LSTMs', ':', 'An', 'improved', 'strategy', 'of', 'attention', 'LSTMs', ',', 'which', 'introduces', 'word', '-', 'by', '-', 'word', 'attention', 'mechanism', 'and', 'is', 'proposed', 'by', '.', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'IN', ':', 'NN', 'NNP', 'NNP', ':', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NNP', ',', 'WDT', 'VBZ', 'NN', ':', 'IN', ':', 'NN', 'NN', 'NN', 'CC', 'VBZ', 'VBN', 'IN', '.', ':']",30
natural_language_inference,23,155,"we can see that the proposed model also shows its superiority on this task , which outperforms the stateof - the - arts methods on both metrics ( P@1 ( 5 ) and P@1 ( 10 ) ) with a large margin .","['we', 'can', 'see', 'that', 'the', 'proposed', 'model', 'also', 'shows', 'its', 'superiority', 'on', 'this', 'task', ',', 'which', 'outperforms', 'the', 'stateof', '-', 'the', '-', 'arts', 'methods', 'on', 'both', 'metrics', '(', 'P@1', '(', '5', ')', 'and', 'P@1', '(', '10', ')', ')', 'with', 'a', 'large', 'margin', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'IN', 'DT', 'VBN', 'NN', 'RB', 'VBZ', 'PRP$', 'NN', 'IN', 'DT', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', ':', 'DT', ':', 'NNS', 'NNS', 'IN', 'DT', 'NNS', '(', 'NNP', '(', 'CD', ')', 'CC', 'NNP', '(', 'CD', ')', ')', 'IN', 'DT', 'JJ', 'NN', '.']",43
natural_language_inference,23,156,"By analyzing the evaluation results of questionanswer matching in , we can see strong interaction models ( attention LSTMs , our DF - LSTMs ) consistently outperform the weak interaction models ( NBOW , parallel LSTMs ) with a large margin , which suggests the importance of modelling strong interaction of two sentences .","['By', 'analyzing', 'the', 'evaluation', 'results', 'of', 'questionanswer', 'matching', 'in', ',', 'we', 'can', 'see', 'strong', 'interaction', 'models', '(', 'attention', 'LSTMs', ',', 'our', 'DF', '-', 'LSTMs', ')', 'consistently', 'outperform', 'the', 'weak', 'interaction', 'models', '(', 'NBOW', ',', 'parallel', 'LSTMs', ')', 'with', 'a', 'large', 'margin', ',', 'which', 'suggests', 'the', 'importance', 'of', 'modelling', 'strong', 'interaction', 'of', 'two', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'DT', 'NN', 'NNS', 'IN', 'JJR', 'NN', 'IN', ',', 'PRP', 'MD', 'VB', 'JJ', 'NN', 'NNS', '(', 'NN', 'NNP', ',', 'PRP$', 'NNP', ':', 'NNP', ')', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'NNS', '(', 'NNP', ',', 'RB', 'NNP', ')', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'CD', 'NNS', '.']",54
natural_language_inference,24,2,Reading Wikipedia to Answer Open-Domain Questions,"['Reading', 'Wikipedia', 'to', 'Answer', 'Open-Domain', 'Questions']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['VBG', 'NNP', 'TO', 'VB', 'NNP', 'NNS']",6
natural_language_inference,24,9,"This paper considers the problem of answering factoid questions in an open - domain setting using Wikipedia as the unique knowledge source , such as one does when looking for answers in an encyclopedia .","['This', 'paper', 'considers', 'the', 'problem', 'of', 'answering', 'factoid', 'questions', 'in', 'an', 'open', '-', 'domain', 'setting', 'using', 'Wikipedia', 'as', 'the', 'unique', 'knowledge', 'source', ',', 'such', 'as', 'one', 'does', 'when', 'looking', 'for', 'answers', 'in', 'an', 'encyclopedia', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'DT', 'JJ', ':', 'NN', 'VBG', 'VBG', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'JJ', 'IN', 'CD', 'VBZ', 'WRB', 'VBG', 'IN', 'NNS', 'IN', 'DT', 'NN', '.']",35
natural_language_inference,24,11,"Unlike knowledge bases ( KBs ) such as Freebase or DB - Pedia , which are easier for computers to process but too sparsely populated for open - domain question answering , Wikipedia contains up - to - date knowledge that humans are interested in .","['Unlike', 'knowledge', 'bases', '(', 'KBs', ')', 'such', 'as', 'Freebase', 'or', 'DB', '-', 'Pedia', ',', 'which', 'are', 'easier', 'for', 'computers', 'to', 'process', 'but', 'too', 'sparsely', 'populated', 'for', 'open', '-', 'domain', 'question', 'answering', ',', 'Wikipedia', 'contains', 'up', '-', 'to', '-', 'date', 'knowledge', 'that', 'humans', 'are', 'interested', 'in', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'NNS', '(', 'NNP', ')', 'JJ', 'IN', 'NNP', 'CC', 'NNP', ':', 'NNP', ',', 'WDT', 'VBP', 'JJR', 'IN', 'NNS', 'TO', 'VB', 'CC', 'RB', 'RB', 'JJ', 'IN', 'JJ', ':', 'NN', 'NN', 'NN', ',', 'NNP', 'VBZ', 'RP', ':', 'TO', ':', 'NN', 'NN', 'IN', 'NNS', 'VBP', 'JJ', 'IN', '.']",46
natural_language_inference,24,14,"In order to answer any question , one must first retrieve the few relevant articles among more than 5 million items , and then scan them carefully to identify the answer .","['In', 'order', 'to', 'answer', 'any', 'question', ',', 'one', 'must', 'first', 'retrieve', 'the', 'few', 'relevant', 'articles', 'among', 'more', 'than', '5', 'million', 'items', ',', 'and', 'then', 'scan', 'them', 'carefully', 'to', 'identify', 'the', 'answer', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'NN', ',', 'CD', 'MD', 'VB', 'VB', 'DT', 'JJ', 'JJ', 'NNS', 'IN', 'JJR', 'IN', 'CD', 'CD', 'NNS', ',', 'CC', 'RB', 'VB', 'PRP', 'RB', 'TO', 'VB', 'DT', 'NN', '.']",32
natural_language_inference,24,15,"We term this setting , machine reading at scale ( MRS ) .","['We', 'term', 'this', 'setting', ',', 'machine', 'reading', 'at', 'scale', '(', 'MRS', ')', '.']","['O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'NN', 'DT', 'NN', ',', 'NN', 'NN', 'IN', 'NN', '(', 'NNP', ')', '.']",13
natural_language_inference,24,16,Our work treats Wikipedia as a collection of articles and does not rely on its internal graph structure .,"['Our', 'work', 'treats', 'Wikipedia', 'as', 'a', 'collection', 'of', 'articles', 'and', 'does', 'not', 'rely', 'on', 'its', 'internal', 'graph', 'structure', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'RB', 'NNP', 'IN', 'DT', 'NN', 'IN', 'NNS', 'CC', 'VBZ', 'RB', 'VB', 'IN', 'PRP$', 'JJ', 'NN', 'NN', '.']",19
natural_language_inference,24,17,"As a result , our approach is generic and could be switched to other collections of documents , books , or even daily updated newspapers .","['As', 'a', 'result', ',', 'our', 'approach', 'is', 'generic', 'and', 'could', 'be', 'switched', 'to', 'other', 'collections', 'of', 'documents', ',', 'books', ',', 'or', 'even', 'daily', 'updated', 'newspapers', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'CC', 'MD', 'VB', 'VBN', 'TO', 'JJ', 'NNS', 'IN', 'NNS', ',', 'NNS', ',', 'CC', 'RB', 'RB', 'JJ', 'NNS', '.']",26
natural_language_inference,24,20,Having a single knowledge source forces the model to be very precise while searching for an answer as the evidence might appear only once .,"['Having', 'a', 'single', 'knowledge', 'source', 'forces', 'the', 'model', 'to', 'be', 'very', 'precise', 'while', 'searching', 'for', 'an', 'answer', 'as', 'the', 'evidence', 'might', 'appear', 'only', 'once', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'RB', 'JJ', 'IN', 'VBG', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'MD', 'VB', 'RB', 'RB', '.']",25
natural_language_inference,24,174,We use 3 - layer bidirectional LSTMs with h = 128 hidden units for both paragraph and question encoding .,"['We', 'use', '3', '-', 'layer', 'bidirectional', 'LSTMs', 'with', 'h', '=', '128', 'hidden', 'units', 'for', 'both', 'paragraph', 'and', 'question', 'encoding', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', ':', 'NN', 'JJ', 'NNP', 'IN', 'NN', '$', 'CD', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'CC', 'NN', 'NN', '.']",20
natural_language_inference,24,175,"We apply the Stanford CoreNLP toolkit for tokenization and also generating lemma , partof - speech , and named entity tags .","['We', 'apply', 'the', 'Stanford', 'CoreNLP', 'toolkit', 'for', 'tokenization', 'and', 'also', 'generating', 'lemma', ',', 'partof', '-', 'speech', ',', 'and', 'named', 'entity', 'tags', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'NNP', 'NN', 'IN', 'NN', 'CC', 'RB', 'VBG', 'NN', ',', 'SYM', ':', 'NN', ',', 'CC', 'VBN', 'NN', 'NNS', '.']",22
natural_language_inference,24,176,"Lastly , all the training examples are sorted by the length of paragraph and divided into minibatches of 32 examples each .","['Lastly', ',', 'all', 'the', 'training', 'examples', 'are', 'sorted', 'by', 'the', 'length', 'of', 'paragraph', 'and', 'divided', 'into', 'minibatches', 'of', '32', 'examples', 'each', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PDT', 'DT', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NN', 'CC', 'VBD', 'IN', 'NNS', 'IN', 'CD', 'NNS', 'DT', '.']",22
natural_language_inference,24,177,We use Adamax for optimization as described in .,"['We', 'use', 'Adamax', 'for', 'optimization', 'as', 'described', 'in', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'NNP', 'IN', 'NN', 'IN', 'VBN', 'IN', '.']",9
natural_language_inference,24,178,Dropout with p = 0.3 is applied to word embeddings and all the hidden units of LSTMs .,"['Dropout', 'with', 'p', '=', '0.3', 'is', 'applied', 'to', 'word', 'embeddings', 'and', 'all', 'the', 'hidden', 'units', 'of', 'LSTMs', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'IN', 'NN', 'NN', 'CD', 'VBZ', 'VBN', 'TO', 'NN', 'NNS', 'CC', 'PDT', 'DT', 'JJ', 'NNS', 'IN', 'NNP', '.']",18
natural_language_inference,24,182,"Our system ( single model ) can achieve 70.0 % exact match and 79.0 % F 1 scores on the test set , which surpasses all the published results and can match the top performance on the SQuAD leaderboard at the time of writing .","['Our', 'system', '(', 'single', 'model', ')', 'can', 'achieve', '70.0', '%', 'exact', 'match', 'and', '79.0', '%', 'F', '1', 'scores', 'on', 'the', 'test', 'set', ',', 'which', 'surpasses', 'all', 'the', 'published', 'results', 'and', 'can', 'match', 'the', 'top', 'performance', 'on', 'the', 'SQuAD', 'leaderboard', 'at', 'the', 'time', 'of', 'writing', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', '(', 'JJ', 'NN', ')', 'MD', 'VB', 'CD', 'NN', 'JJ', 'NN', 'CC', 'CD', 'NN', 'NNP', 'CD', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'WDT', 'VBZ', 'PDT', 'DT', 'VBN', 'NNS', 'CC', 'MD', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', '.']",45
natural_language_inference,24,186,"Without the aligned question embedding feature ( only word embedding and a few manual features ) , our system is still able to achieve F1 over 77 % .","['Without', 'the', 'aligned', 'question', 'embedding', 'feature', '(', 'only', 'word', 'embedding', 'and', 'a', 'few', 'manual', 'features', ')', ',', 'our', 'system', 'is', 'still', 'able', 'to', 'achieve', 'F1', 'over', '77', '%', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'VBG', 'NN', '(', 'RB', 'NN', 'NN', 'CC', 'DT', 'JJ', 'JJ', 'NNS', ')', ',', 'PRP$', 'NN', 'VBZ', 'RB', 'JJ', 'TO', 'VB', 'NNP', 'IN', 'CD', 'NN', '.']",29
natural_language_inference,24,187,"More interestingly , if we remove both f aligned and f exact match , the performance drops dramatically , so we conclude that both features play a similar but complementary role in the feature representation related to the paraphrased nature of a question vs. the context around an answer .","['More', 'interestingly', ',', 'if', 'we', 'remove', 'both', 'f', 'aligned', 'and', 'f', 'exact', 'match', ',', 'the', 'performance', 'drops', 'dramatically', ',', 'so', 'we', 'conclude', 'that', 'both', 'features', 'play', 'a', 'similar', 'but', 'complementary', 'role', 'in', 'the', 'feature', 'representation', 'related', 'to', 'the', 'paraphrased', 'nature', 'of', 'a', 'question', 'vs.', 'the', 'context', 'around', 'an', 'answer', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RBR', 'RB', ',', 'IN', 'PRP', 'VBP', 'DT', 'NNS', 'VBN', 'CC', 'JJ', 'JJ', 'NN', ',', 'DT', 'NN', 'VBZ', 'RB', ',', 'IN', 'PRP', 'VBP', 'IN', 'DT', 'NNS', 'VBP', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']",50
natural_language_inference,14,2,End - To - End Memory Networks,"['End', '-', 'To', '-', 'End', 'Memory', 'Networks']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NN', ':', 'TO', ':', 'NN', 'NN', 'NNS']",7
natural_language_inference,14,14,"In this work , we present a novel recurrent neural network ( RNN ) architecture where the recurrence reads from a possibly large external memory multiple times before outputting a symbol .","['In', 'this', 'work', ',', 'we', 'present', 'a', 'novel', 'recurrent', 'neural', 'network', '(', 'RNN', ')', 'architecture', 'where', 'the', 'recurrence', 'reads', 'from', 'a', 'possibly', 'large', 'external', 'memory', 'multiple', 'times', 'before', 'outputting', 'a', 'symbol', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'JJ', 'NN', '(', 'NNP', ')', 'NN', 'WRB', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'RB', 'JJ', 'JJ', 'NN', 'JJ', 'NNS', 'IN', 'VBG', 'DT', 'NN', '.']",32
natural_language_inference,14,15,Our model can be considered a continuous form of the Memory Network implemented in [ 23 ] .,"['Our', 'model', 'can', 'be', 'considered', 'a', 'continuous', 'form', 'of', 'the', 'Memory', 'Network', 'implemented', 'in', '[', '23', ']', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'MD', 'VB', 'VBN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'VBD', 'IN', 'JJ', 'CD', 'NN', '.']",18
natural_language_inference,14,17,"The continuity of the model we present here means that it can be trained end - to - end from input - output pairs , and so is applicable to more tasks , i.e. tasks where such supervision is not available , such as in language modeling or realistically supervised question answering tasks .","['The', 'continuity', 'of', 'the', 'model', 'we', 'present', 'here', 'means', 'that', 'it', 'can', 'be', 'trained', 'end', '-', 'to', '-', 'end', 'from', 'input', '-', 'output', 'pairs', ',', 'and', 'so', 'is', 'applicable', 'to', 'more', 'tasks', ',', 'i.e.', 'tasks', 'where', 'such', 'supervision', 'is', 'not', 'available', ',', 'such', 'as', 'in', 'language', 'modeling', 'or', 'realistically', 'supervised', 'question', 'answering', 'tasks', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'DT', 'NN', 'PRP', 'VBP', 'RB', 'VBZ', 'IN', 'PRP', 'MD', 'VB', 'VBN', 'JJ', ':', 'TO', ':', 'NN', 'IN', 'NN', ':', 'NN', 'NNS', ',', 'CC', 'RB', 'VBZ', 'JJ', 'TO', 'RBR', 'NNS', ',', 'FW', 'NNS', 'WRB', 'JJ', 'NN', 'VBZ', 'RB', 'JJ', ',', 'JJ', 'IN', 'IN', 'NN', 'NN', 'CC', 'RB', 'JJ', 'NN', 'VBG', 'NNS', '.']",54
natural_language_inference,14,18,"Our model can also be seen as a version of RNNsearch [ 2 ] with multiple computational steps ( which we term "" hops "" ) per output symbol .","['Our', 'model', 'can', 'also', 'be', 'seen', 'as', 'a', 'version', 'of', 'RNNsearch', '[', '2', ']', 'with', 'multiple', 'computational', 'steps', '(', 'which', 'we', 'term', '""', 'hops', '""', ')', 'per', 'output', 'symbol', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'MD', 'RB', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NNP', 'CD', 'NN', 'IN', 'JJ', 'JJ', 'NNS', '(', 'WDT', 'PRP', 'NN', 'NNP', 'VBZ', 'NNP', ')', 'IN', 'NN', 'NN', '.']",30
natural_language_inference,14,133,"For each mini-batch update , the 2 norm of the whole gradient of all parameters is measured 5 and if larger than L = 50 , then it is scaled down to have norm L.","['For', 'each', 'mini-batch', 'update', ',', 'the', '2', 'norm', 'of', 'the', 'whole', 'gradient', 'of', 'all', 'parameters', 'is', 'measured', '5', 'and', 'if', 'larger', 'than', 'L', '=', '50', ',', 'then', 'it', 'is', 'scaled', 'down', 'to', 'have', 'norm', 'L.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'DT', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'VBZ', 'VBN', 'CD', 'CC', 'IN', 'JJR', 'IN', 'NNP', 'NNP', 'CD', ',', 'RB', 'PRP', 'VBZ', 'VBN', 'RB', 'TO', 'VB', 'VBN', 'NNP']",35
natural_language_inference,14,135,"We use the learning rate annealing schedule from , namely , if the validation cost has not decreased after one epoch , then the learning rate is scaled down by a factor 1.5 .","['We', 'use', 'the', 'learning', 'rate', 'annealing', 'schedule', 'from', ',', 'namely', ',', 'if', 'the', 'validation', 'cost', 'has', 'not', 'decreased', 'after', 'one', 'epoch', ',', 'then', 'the', 'learning', 'rate', 'is', 'scaled', 'down', 'by', 'a', 'factor', '1.5', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'VBG', 'NN', 'IN', ',', 'RB', ',', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'CD', 'NN', ',', 'RB', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'RP', 'IN', 'DT', 'NN', 'CD', '.']",34
natural_language_inference,14,137,"Weights are initialized using N ( 0 , 0.05 ) and batch size is set to 128 .","['Weights', 'are', 'initialized', 'using', 'N', '(', '0', ',', '0.05', ')', 'and', 'batch', 'size', 'is', 'set', 'to', '128', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['NNS', 'VBP', 'VBN', 'VBG', 'NNP', '(', 'CD', ',', 'CD', ')', 'CC', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",18
natural_language_inference,14,138,"On the Penn tree dataset , we repeat each training 10 times with different random initializations and pick the one with smallest validation cost .","['On', 'the', 'Penn', 'tree', 'dataset', ',', 'we', 'repeat', 'each', 'training', '10', 'times', 'with', 'different', 'random', 'initializations', 'and', 'pick', 'the', 'one', 'with', 'smallest', 'validation', 'cost', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'CD', 'NNS', 'IN', 'JJ', 'JJ', 'NNS', 'CC', 'VB', 'DT', 'NN', 'IN', 'JJS', 'NN', 'NN', '.']",25
natural_language_inference,14,153,"MemNN : The strongly supervised AM + NG + NL Memory Networks approach , proposed in .","['MemNN', ':', 'The', 'strongly', 'supervised', 'AM', '+', 'NG', '+', 'NL', 'Memory', 'Networks', 'approach', ',', 'proposed', 'in', '.']","['B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NN', ':', 'DT', 'RB', 'VBN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', ',', 'VBN', 'IN', '.']",17
natural_language_inference,14,157,MemNN- WSH :,"['MemNN-', 'WSH', ':']","['B-n', 'I-n', 'O']","['JJ', 'NNP', ':']",3
natural_language_inference,14,158,A weakly supervised heuristic version of MemNN where the supporting sentence labels are not used in training .,"['A', 'weakly', 'supervised', 'heuristic', 'version', 'of', 'MemNN', 'where', 'the', 'supporting', 'sentence', 'labels', 'are', 'not', 'used', 'in', 'training', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBN', 'JJ', 'NN', 'IN', 'NNP', 'WRB', 'DT', 'VBG', 'NN', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'NN', '.']",18
natural_language_inference,14,161,"LSTM : A standard LSTM model , trained using question / answer pairs only ( i.e. also weakly supervised ) .","['LSTM', ':', 'A', 'standard', 'LSTM', 'model', ',', 'trained', 'using', 'question', '/', 'answer', 'pairs', 'only', '(', 'i.e.', 'also', 'weakly', 'supervised', ')', '.']","['B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', ':', 'DT', 'JJ', 'NNP', 'NN', ',', 'VBD', 'VBG', 'NN', 'NNP', 'NN', 'VBZ', 'RB', '(', 'FW', 'RB', 'RB', 'VBN', ')', '.']",21
natural_language_inference,7,5,"Machine reading systems can be tested on their ability to answer questions posed on the contents of documents that they have seen , but until now large scale training and test datasets have been missing for this type of evaluation .","['Machine', 'reading', 'systems', 'can', 'be', 'tested', 'on', 'their', 'ability', 'to', 'answer', 'questions', 'posed', 'on', 'the', 'contents', 'of', 'documents', 'that', 'they', 'have', 'seen', ',', 'but', 'until', 'now', 'large', 'scale', 'training', 'and', 'test', 'datasets', 'have', 'been', 'missing', 'for', 'this', 'type', 'of', 'evaluation', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', 'NNS', 'MD', 'VB', 'VBN', 'IN', 'PRP$', 'NN', 'TO', 'VB', 'NNS', 'VBN', 'IN', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'PRP', 'VBP', 'VBN', ',', 'CC', 'IN', 'RB', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NNS', 'VBP', 'VBN', 'VBG', 'IN', 'DT', 'NN', 'IN', 'NN', '.']",41
natural_language_inference,7,10,"Traditional approaches to machine reading and comprehension have been based on either hand engineered grammars , or information extraction methods of detecting predicate argument triples that can later be queried as a relational database .","['Traditional', 'approaches', 'to', 'machine', 'reading', 'and', 'comprehension', 'have', 'been', 'based', 'on', 'either', 'hand', 'engineered', 'grammars', ',', 'or', 'information', 'extraction', 'methods', 'of', 'detecting', 'predicate', 'argument', 'triples', 'that', 'can', 'later', 'be', 'queried', 'as', 'a', 'relational', 'database', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'TO', 'NN', 'NN', 'CC', 'NN', 'VBP', 'VBN', 'VBN', 'IN', 'DT', 'NN', 'VBD', 'NNS', ',', 'CC', 'NN', 'NN', 'NNS', 'IN', 'VBG', 'NN', 'NN', 'VBZ', 'WDT', 'MD', 'RB', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NN', '.']",35
natural_language_inference,7,16,In this work we seek to directly address the lack of real natural language training data by introducing a novel approach to building a supervised reading comprehension data set .,"['In', 'this', 'work', 'we', 'seek', 'to', 'directly', 'address', 'the', 'lack', 'of', 'real', 'natural', 'language', 'training', 'data', 'by', 'introducing', 'a', 'novel', 'approach', 'to', 'building', 'a', 'supervised', 'reading', 'comprehension', 'data', 'set', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'TO', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'NNS', 'NN', '.']",30
natural_language_inference,7,17,"We observe that summary and paraphrase sentences , with their associated documents , can be readily converted to context - query - answer triples using simple entity detection and anonymisation algorithms .","['We', 'observe', 'that', 'summary', 'and', 'paraphrase', 'sentences', ',', 'with', 'their', 'associated', 'documents', ',', 'can', 'be', 'readily', 'converted', 'to', 'context', '-', 'query', '-', 'answer', 'triples', 'using', 'simple', 'entity', 'detection', 'and', 'anonymisation', 'algorithms', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'CC', 'JJ', 'NNS', ',', 'IN', 'PRP$', 'JJ', 'NNS', ',', 'MD', 'VB', 'RB', 'VBN', 'TO', 'VB', ':', 'NN', ':', 'NN', 'NNS', 'VBG', 'JJ', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",32
natural_language_inference,7,18,Using this approach we have collected two new corpora of roughly a million news stories with associated queries from the CNN and Daily Mail websites .,"['Using', 'this', 'approach', 'we', 'have', 'collected', 'two', 'new', 'corpora', 'of', 'roughly', 'a', 'million', 'news', 'stories', 'with', 'associated', 'queries', 'from', 'the', 'CNN', 'and', 'Daily', 'Mail', 'websites', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'DT', 'NN', 'PRP', 'VBP', 'VBN', 'CD', 'JJ', 'NNS', 'IN', 'RB', 'DT', 'CD', 'NN', 'NNS', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'NNS', '.']",26
natural_language_inference,7,19,We demonstrate the efficacy of our new corpora by building novel deep learning models for reading comprehension .,"['We', 'demonstrate', 'the', 'efficacy', 'of', 'our', 'new', 'corpora', 'by', 'building', 'novel', 'deep', 'learning', 'models', 'for', 'reading', 'comprehension', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'PRP$', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'JJ', 'NN', 'NNS', 'IN', 'VBG', 'NN', '.']",18
natural_language_inference,7,140,We expect that the attention - based models would therefore outperform the pure LSTM - based approaches .,"['We', 'expect', 'that', 'the', 'attention', '-', 'based', 'models', 'would', 'therefore', 'outperform', 'the', 'pure', 'LSTM', '-', 'based', 'approaches', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', ':', 'VBN', 'NNS', 'MD', 'VB', 'IN', 'DT', 'NN', 'NNP', ':', 'VBN', 'NNS', '.']",18
natural_language_inference,7,156,Word distance benchmark,"['Word', 'distance', 'benchmark']","['B-n', 'I-n', 'I-n']","['NNP', 'NN', 'NN']",3
natural_language_inference,7,157,"More surprising perhaps is the relatively strong performance of the word distance benchmark , particularly relative to the frame - semantic benchmark , which we had expected to perform better .","['More', 'surprising', 'perhaps', 'is', 'the', 'relatively', 'strong', 'performance', 'of', 'the', 'word', 'distance', 'benchmark', ',', 'particularly', 'relative', 'to', 'the', 'frame', '-', 'semantic', 'benchmark', ',', 'which', 'we', 'had', 'expected', 'to', 'perform', 'better', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O']","['RBR', 'JJ', 'RB', 'VBZ', 'DT', 'RB', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NN', ',', 'RB', 'JJ', 'TO', 'DT', 'NN', ':', 'JJ', 'NN', ',', 'WDT', 'PRP', 'VBD', 'VBN', 'TO', 'VB', 'JJR', '.']",31
natural_language_inference,7,164,Neural models,"['Neural', 'models']","['B-n', 'I-n']","['JJ', 'NNS']",2
natural_language_inference,7,165,"Within the group of neural models explored here , the results paint a clear picture with the Impatient and the Attentive Readers outperforming all other models .","['Within', 'the', 'group', 'of', 'neural', 'models', 'explored', 'here', ',', 'the', 'results', 'paint', 'a', 'clear', 'picture', 'with', 'the', 'Impatient', 'and', 'the', 'Attentive', 'Readers', 'outperforming', 'all', 'other', 'models', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'VBN', 'RB', ',', 'DT', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'CC', 'DT', 'NNP', 'NNPS', 'VBG', 'DT', 'JJ', 'NNS', '.']",27
natural_language_inference,7,167,The Deep LSTM,"['The', 'Deep', 'LSTM']","['B-n', 'I-n', 'I-n']","['DT', 'NNP', 'NNP']",3
natural_language_inference,7,168,"Reader performs surprisingly well , once again demonstrating that this simple sequential architecture can do a reasonable job of learning to abstract long sequences , even when they are up to two thousand tokens in length .","['Reader', 'performs', 'surprisingly', 'well', ',', 'once', 'again', 'demonstrating', 'that', 'this', 'simple', 'sequential', 'architecture', 'can', 'do', 'a', 'reasonable', 'job', 'of', 'learning', 'to', 'abstract', 'long', 'sequences', ',', 'even', 'when', 'they', 'are', 'up', 'to', 'two', 'thousand', 'tokens', 'in', 'length', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'NNS', 'RB', 'RB', ',', 'RB', 'RB', 'VBG', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'MD', 'VB', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'TO', 'VB', 'JJ', 'NNS', ',', 'RB', 'WRB', 'PRP', 'VBP', 'RB', 'TO', 'CD', 'NN', 'NNS', 'IN', 'NN', '.']",37
natural_language_inference,28,2,TRACKING THE WORLD STATE WITH RECURRENT ENTITY NETWORKS,"['TRACKING', 'THE', 'WORLD', 'STATE', 'WITH', 'RECURRENT', 'ENTITY', 'NETWORKS']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP']",8
natural_language_inference,28,23,"In this paper , we investigate this problem through a simple story understanding scenario , in which the agent is given a sequence of textual statements and events , and then given another series of statements about the final state of the world .","['In', 'this', 'paper', ',', 'we', 'investigate', 'this', 'problem', 'through', 'a', 'simple', 'story', 'understanding', 'scenario', ',', 'in', 'which', 'the', 'agent', 'is', 'given', 'a', 'sequence', 'of', 'textual', 'statements', 'and', 'events', ',', 'and', 'then', 'given', 'another', 'series', 'of', 'statements', 'about', 'the', 'final', 'state', 'of', 'the', 'world', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'NN', ',', 'IN', 'WDT', 'DT', 'NN', 'VBZ', 'VBN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'CC', 'NNS', ',', 'CC', 'RB', 'VBN', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",44
natural_language_inference,28,28,We propose to handle this scenario with a new kind of memory - augmented neural network that uses a distributed memory and processor architecture : the Recurrent Entity Network ( EntNet ) .,"['We', 'propose', 'to', 'handle', 'this', 'scenario', 'with', 'a', 'new', 'kind', 'of', 'memory', '-', 'augmented', 'neural', 'network', 'that', 'uses', 'a', 'distributed', 'memory', 'and', 'processor', 'architecture', ':', 'the', 'Recurrent', 'Entity', 'Network', '(', 'EntNet', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', ':', 'VBN', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'CC', 'NN', 'NN', ':', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",33
natural_language_inference,28,29,"The model consists of a fixed number of dynamic memory cells , each containing a vector key w j and a vector value ( or content ) h j .","['The', 'model', 'consists', 'of', 'a', 'fixed', 'number', 'of', 'dynamic', 'memory', 'cells', ',', 'each', 'containing', 'a', 'vector', 'key', 'w', 'j', 'and', 'a', 'vector', 'value', '(', 'or', 'content', ')', 'h', 'j', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NNS', ',', 'DT', 'VBG', 'DT', 'NN', 'JJ', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', '(', 'CC', 'NN', ')', 'NN', 'NN', '.']",30
natural_language_inference,28,30,"Each cell is associated with its own "" processor "" , a simple gated recurrent network that may update the cell value given an input .","['Each', 'cell', 'is', 'associated', 'with', 'its', 'own', '""', 'processor', '""', ',', 'a', 'simple', 'gated', 'recurrent', 'network', 'that', 'may', 'update', 'the', 'cell', 'value', 'given', 'an', 'input', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'PRP$', 'JJ', 'NN', 'NN', 'NNP', ',', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'MD', 'VB', 'DT', 'NN', 'NN', 'VBN', 'DT', 'NN', '.']",26
natural_language_inference,28,33,"Alternatively , the EntNet can be seen as a bank of gated RNNs ( all sharing the same parameters ) , whose hidden states correspond to latent concepts and attributes , and whose parameters describe the laws of the world according to which the attributes of objects are updated .","['Alternatively', ',', 'the', 'EntNet', 'can', 'be', 'seen', 'as', 'a', 'bank', 'of', 'gated', 'RNNs', '(', 'all', 'sharing', 'the', 'same', 'parameters', ')', ',', 'whose', 'hidden', 'states', 'correspond', 'to', 'latent', 'concepts', 'and', 'attributes', ',', 'and', 'whose', 'parameters', 'describe', 'the', 'laws', 'of', 'the', 'world', 'according', 'to', 'which', 'the', 'attributes', 'of', 'objects', 'are', 'updated', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NNP', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNP', '(', 'DT', 'VBG', 'DT', 'JJ', 'NNS', ')', ',', 'WP$', 'JJ', 'NNS', 'VBP', 'TO', 'VB', 'NNS', 'CC', 'NNS', ',', 'CC', 'WP$', 'NNS', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'TO', 'WDT', 'DT', 'NNS', 'IN', 'NNS', 'VBP', 'VBN', '.']",50
natural_language_inference,28,35,"Their hidden state is updated only when new information relevant to their concept is received , and remains otherwise unchanged .","['Their', 'hidden', 'state', 'is', 'updated', 'only', 'when', 'new', 'information', 'relevant', 'to', 'their', 'concept', 'is', 'received', ',', 'and', 'remains', 'otherwise', 'unchanged', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'VBN', 'RB', 'WRB', 'JJ', 'NN', 'NN', 'TO', 'PRP$', 'NN', 'VBZ', 'VBN', ',', 'CC', 'VBZ', 'RB', 'JJ', '.']",21
natural_language_inference,28,36,"The keys used in the addressing / gating mechanism also correspond to concepts or entities , but are modified only during learning , not during inference .","['The', 'keys', 'used', 'in', 'the', 'addressing', '/', 'gating', 'mechanism', 'also', 'correspond', 'to', 'concepts', 'or', 'entities', ',', 'but', 'are', 'modified', 'only', 'during', 'learning', ',', 'not', 'during', 'inference', '.']","['O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'NN', 'VBG', 'NN', 'RB', 'NN', 'TO', 'NNS', 'CC', 'NNS', ',', 'CC', 'VBP', 'VBN', 'RB', 'IN', 'VBG', ',', 'RB', 'IN', 'NN', '.']",27
natural_language_inference,28,127,SYNTHETIC WORLD MODEL TASK,"['SYNTHETIC', 'WORLD', 'MODEL', 'TASK']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP']",4
natural_language_inference,28,134,"For the MemN2N , we set the number of hops equal to T ? 2 and the embedding dimension to d = 20 .","['For', 'the', 'MemN2N', ',', 'we', 'set', 'the', 'number', 'of', 'hops', 'equal', 'to', 'T', '?', '2', 'and', 'the', 'embedding', 'dimension', 'to', 'd', '=', '20', '.']","['B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NNS', 'JJ', 'TO', 'VB', '.', 'CD', 'CC', 'DT', 'VBG', 'NN', 'TO', 'VB', 'JJ', 'CD', '.']",24
natural_language_inference,28,135,"The EntNet had embedding dimension d = 20 and 5 memory slots , and the LSTM had 50 hidden units which resulted in it having significantly more parameters than the other two models .","['The', 'EntNet', 'had', 'embedding', 'dimension', 'd', '=', '20', 'and', '5', 'memory', 'slots', ',', 'and', 'the', 'LSTM', 'had', '50', 'hidden', 'units', 'which', 'resulted', 'in', 'it', 'having', 'significantly', 'more', 'parameters', 'than', 'the', 'other', 'two', 'models', '.']","['O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'VBD', 'VBG', 'NN', 'NN', '$', 'CD', 'CC', 'CD', 'NN', 'NNS', ',', 'CC', 'DT', 'NNP', 'VBD', 'CD', 'VBN', 'NNS', 'WDT', 'VBD', 'IN', 'PRP', 'VBG', 'RB', 'JJR', 'NNS', 'IN', 'DT', 'JJ', 'CD', 'NNS', '.']",34
natural_language_inference,28,137,"All models were trained with ADAM with initial learning rates set by grid search over { 0.1 , 0.01 , 0.001 } and divided by 2 every 10,000 updates .","['All', 'models', 'were', 'trained', 'with', 'ADAM', 'with', 'initial', 'learning', 'rates', 'set', 'by', 'grid', 'search', 'over', '{', '0.1', ',', '0.01', ',', '0.001', '}', 'and', 'divided', 'by', '2', 'every', '10,000', 'updates', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBD', 'VBN', 'IN', 'NNP', 'IN', 'JJ', 'VBG', 'NNS', 'VBN', 'IN', 'JJ', 'NN', 'IN', '(', 'CD', ',', 'CD', ',', 'CD', ')', 'CC', 'VBN', 'IN', 'CD', 'DT', 'CD', 'NNS', '.']",30
natural_language_inference,28,139,"The MemN2N has the worst performance , which degrades quickly as the length of the sequence increases .","['The', 'MemN2N', 'has', 'the', 'worst', 'performance', ',', 'which', 'degrades', 'quickly', 'as', 'the', 'length', 'of', 'the', 'sequence', 'increases', '.']","['O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-n', 'O']","['DT', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', ',', 'WDT', 'VBZ', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",18
natural_language_inference,28,140,"The LSTM performs better , but still loses accuracy as the length of the sequence increases .","['The', 'LSTM', 'performs', 'better', ',', 'but', 'still', 'loses', 'accuracy', 'as', 'the', 'length', 'of', 'the', 'sequence', 'increases', '.']","['O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-n', 'O']","['DT', 'NNP', 'NNS', 'RBR', ',', 'CC', 'RB', 'VBZ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",17
natural_language_inference,28,171,CHILDRE N'S BOOK TEST ( CBT ),"['CHILDRE', ""N'S"", 'BOOK', 'TEST', '(', 'CBT', ')']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')']",7
natural_language_inference,28,175,"It was shown in that methods with limited memory such as LSTMs perform well on more frequent , syntax based words such as prepositions and verbs , being similar to human performance , but poorly relative to humans on more semantically meaningful words such as named entities and common nouns .","['It', 'was', 'shown', 'in', 'that', 'methods', 'with', 'limited', 'memory', 'such', 'as', 'LSTMs', 'perform', 'well', 'on', 'more', 'frequent', ',', 'syntax', 'based', 'words', 'such', 'as', 'prepositions', 'and', 'verbs', ',', 'being', 'similar', 'to', 'human', 'performance', ',', 'but', 'poorly', 'relative', 'to', 'humans', 'on', 'more', 'semantically', 'meaningful', 'words', 'such', 'as', 'named', 'entities', 'and', 'common', 'nouns', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'VBN', 'IN', 'DT', 'NNS', 'IN', 'JJ', 'NN', 'JJ', 'IN', 'NNP', 'VBP', 'RB', 'IN', 'RBR', 'JJ', ',', 'NN', 'VBN', 'NNS', 'JJ', 'IN', 'NNS', 'CC', 'NNS', ',', 'VBG', 'JJ', 'TO', 'JJ', 'NN', ',', 'CC', 'RB', 'JJ', 'TO', 'NNS', 'IN', 'RBR', 'RB', 'JJ', 'NNS', 'JJ', 'IN', 'VBN', 'NNS', 'CC', 'JJ', 'NNS', '.']",51
natural_language_inference,19,2,Natural Language Inference by Tree - Based Convolution and Heuristic Matching,"['Natural', 'Language', 'Inference', 'by', 'Tree', '-', 'Based', 'Convolution', 'and', 'Heuristic', 'Matching']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', ':', 'VBN', 'NNP', 'CC', 'NNP', 'NNP']",11
natural_language_inference,19,4,"In this paper , we propose the TBCNNpair model to recognize entailment and contradiction between two sentences .","['In', 'this', 'paper', ',', 'we', 'propose', 'the', 'TBCNNpair', 'model', 'to', 'recognize', 'entailment', 'and', 'contradiction', 'between', 'two', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'TO', 'VB', 'NN', 'CC', 'NN', 'IN', 'CD', 'NNS', '.']",18
natural_language_inference,19,8,Recognizing entailment and contradiction between two sentences ( called a premise and a hypothesis ) is known as natural language inference ( NLI ) in .,"['Recognizing', 'entailment', 'and', 'contradiction', 'between', 'two', 'sentences', '(', 'called', 'a', 'premise', 'and', 'a', 'hypothesis', ')', 'is', 'known', 'as', 'natural', 'language', 'inference', '(', 'NLI', ')', 'in', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['VBG', 'NN', 'CC', 'NN', 'IN', 'CD', 'NNS', '(', 'VBN', 'DT', 'NN', 'CC', 'DT', 'NN', ')', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'IN', '.']",26
natural_language_inference,19,10,"Several examples are illustrated in NLI is in the core of natural language understanding and has wide applications in NLP , e.g. , question answering and automatic summarization .","['Several', 'examples', 'are', 'illustrated', 'in', 'NLI', 'is', 'in', 'the', 'core', 'of', 'natural', 'language', 'understanding', 'and', 'has', 'wide', 'applications', 'in', 'NLP', ',', 'e.g.', ',', 'question', 'answering', 'and', 'automatic', 'summarization', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', 'CC', 'VBZ', 'JJ', 'NNS', 'IN', 'NNP', ',', 'NN', ',', 'NN', 'NN', 'CC', 'JJ', 'NN', '.']",29
natural_language_inference,19,33,"In this paper , we propose the TBCNN - pair neural model to recognize entailment and contradiction between two sentences .","['In', 'this', 'paper', ',', 'we', 'propose', 'the', 'TBCNN', '-', 'pair', 'neural', 'model', 'to', 'recognize', 'entailment', 'and', 'contradiction', 'between', 'two', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', ':', 'NN', 'JJ', 'NN', 'TO', 'VB', 'NN', 'CC', 'NN', 'IN', 'CD', 'NNS', '.']",21
natural_language_inference,19,34,"We lever- age our newly proposed TBCNN model to capture structural information in sentences , which is important to NLI .","['We', 'lever-', 'age', 'our', 'newly', 'proposed', 'TBCNN', 'model', 'to', 'capture', 'structural', 'information', 'in', 'sentences', ',', 'which', 'is', 'important', 'to', 'NLI', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'JJ', 'NN', 'PRP$', 'RB', 'VBN', 'NNP', 'NN', 'TO', 'VB', 'JJ', 'NN', 'IN', 'NNS', ',', 'WDT', 'VBZ', 'JJ', 'TO', 'NNP', '.']",21
natural_language_inference,19,36,"As we can see , TBCNN is more robust than sequential convolution in terms of word order distortion , which maybe introduced by determinators , modifiers , etc .","['As', 'we', 'can', 'see', ',', 'TBCNN', 'is', 'more', 'robust', 'than', 'sequential', 'convolution', 'in', 'terms', 'of', 'word', 'order', 'distortion', ',', 'which', 'maybe', 'introduced', 'by', 'determinators', ',', 'modifiers', ',', 'etc', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP', 'MD', 'VB', ',', 'NNP', 'VBZ', 'RBR', 'JJ', 'IN', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'NN', 'NN', 'NN', ',', 'WDT', 'RB', 'VBN', 'IN', 'NNS', ',', 'NNS', ',', 'FW', '.']",29
natural_language_inference,19,37,"A pooling layer then aggregates information along the tree , serving as away of semantic compositonality .","['A', 'pooling', 'layer', 'then', 'aggregates', 'information', 'along', 'the', 'tree', ',', 'serving', 'as', 'away', 'of', 'semantic', 'compositonality', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'RB', 'VBZ', 'NN', 'IN', 'DT', 'NN', ',', 'VBG', 'IN', 'RB', 'IN', 'JJ', 'NN', '.']",17
natural_language_inference,19,38,"Finally , two sentences ' information is combined by several heuristic matching layers , including concatenation , element - wise product and difference ; they are effective in capturing relationships between two sentences , but remain low complexity .","['Finally', ',', 'two', 'sentences', ""'"", 'information', 'is', 'combined', 'by', 'several', 'heuristic', 'matching', 'layers', ',', 'including', 'concatenation', ',', 'element', '-', 'wise', 'product', 'and', 'difference', ';', 'they', 'are', 'effective', 'in', 'capturing', 'relationships', 'between', 'two', 'sentences', ',', 'but', 'remain', 'low', 'complexity', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'CD', 'NNS', 'POS', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'JJ', 'NN', 'NNS', ',', 'VBG', 'NN', ',', 'JJ', ':', 'NN', 'NN', 'CC', 'NN', ':', 'PRP', 'VBP', 'JJ', 'IN', 'VBG', 'NNS', 'IN', 'CD', 'NNS', ',', 'CC', 'VBP', 'JJ', 'NN', '.']",39
natural_language_inference,19,128,"All our neural layers , including embeddings , were set to 300 dimensions .","['All', 'our', 'neural', 'layers', ',', 'including', 'embeddings', ',', 'were', 'set', 'to', '300', 'dimensions', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'PRP$', 'JJ', 'NNS', ',', 'VBG', 'NNS', ',', 'VBD', 'VBN', 'TO', 'CD', 'NNS', '.']",14
natural_language_inference,19,130,Word embeddings were pretrained ourselves by word2vec on the English Wikipedia corpus and fined tuned during training as apart of model parameters .,"['Word', 'embeddings', 'were', 'pretrained', 'ourselves', 'by', 'word2vec', 'on', 'the', 'English', 'Wikipedia', 'corpus', 'and', 'fined', 'tuned', 'during', 'training', 'as', 'apart', 'of', 'model', 'parameters', '.']","['B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O']","['NNP', 'NNS', 'VBD', 'VBN', 'NNS', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'CC', 'VBD', 'VBN', 'IN', 'NN', 'IN', 'NN', 'IN', 'NN', 'NNS', '.']",23
natural_language_inference,19,131,We applied 2 penalty of 310 ? 4 ; dropout was chosen by validation with a granularity of 0.1 .,"['We', 'applied', '2', 'penalty', 'of', '310', '?', '4', ';', 'dropout', 'was', 'chosen', 'by', 'validation', 'with', 'a', 'granularity', 'of', '0.1', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'CD', 'NN', 'IN', 'CD', '.', 'CD', ':', 'NN', 'VBD', 'VBN', 'IN', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', '.']",20
natural_language_inference,19,134,"Initial learning rate was set to 1 , and a power decay was applied .","['Initial', 'learning', 'rate', 'was', 'set', 'to', '1', ',', 'and', 'a', 'power', 'decay', 'was', 'applied', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O']","['JJ', 'VBG', 'NN', 'VBD', 'VBN', 'TO', 'CD', ',', 'CC', 'DT', 'NN', 'NN', 'VBD', 'VBN', '.']",15
natural_language_inference,19,135,We used stochastic gradient descent with a batch size of 50 .,"['We', 'used', 'stochastic', 'gradient', 'descent', 'with', 'a', 'batch', 'size', 'of', '50', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",12
natural_language_inference,19,138,"As seen , the TBCNN sentence pair model , followed by simple concatenation alone , outperforms existing sentence encoding - based approaches ( without pretraining ) , including a feature - rich method using 6 groups of humanengineered features , long short term memory .","['As', 'seen', ',', 'the', 'TBCNN', 'sentence', 'pair', 'model', ',', 'followed', 'by', 'simple', 'concatenation', 'alone', ',', 'outperforms', 'existing', 'sentence', 'encoding', '-', 'based', 'approaches', '(', 'without', 'pretraining', ')', ',', 'including', 'a', 'feature', '-', 'rich', 'method', 'using', '6', 'groups', 'of', 'humanengineered', 'features', ',', 'long', 'short', 'term', 'memory', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', ',', 'DT', 'NNP', 'NN', 'NN', 'NN', ',', 'VBN', 'IN', 'JJ', 'NN', 'RB', ',', 'VBZ', 'VBG', 'NN', 'VBG', ':', 'VBN', 'NNS', '(', 'IN', 'VBG', ')', ',', 'VBG', 'DT', 'NN', ':', 'JJ', 'NN', 'VBG', 'CD', 'NNS', 'IN', 'JJ', 'NNS', ',', 'RB', 'JJ', 'NN', 'NN', '.']",45
natural_language_inference,19,140,Model Variant,"['Model', 'Variant']","['B-n', 'I-n']","['NNP', 'NNP']",2
natural_language_inference,19,144,We first analyze each heuristic separately : using element - wise product alone is significantly worse than concatenation or element - wise difference ; the latter two are comparable to each other .,"['We', 'first', 'analyze', 'each', 'heuristic', 'separately', ':', 'using', 'element', '-', 'wise', 'product', 'alone', 'is', 'significantly', 'worse', 'than', 'concatenation', 'or', 'element', '-', 'wise', 'difference', ';', 'the', 'latter', 'two', 'are', 'comparable', 'to', 'each', 'other', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'RB', ':', 'VBG', 'JJ', ':', 'NN', 'NN', 'RB', 'VBZ', 'RB', 'JJR', 'IN', 'NN', 'CC', 'JJ', ':', 'NN', 'NN', ':', 'DT', 'JJ', 'CD', 'VBP', 'JJ', 'TO', 'DT', 'JJ', '.']",33
natural_language_inference,19,145,"Combining different matching heuristics improves the result : the TBCNN - pair model with concatenation , element - wise product and difference yields the highest performance of 82.1 % .","['Combining', 'different', 'matching', 'heuristics', 'improves', 'the', 'result', ':', 'the', 'TBCNN', '-', 'pair', 'model', 'with', 'concatenation', ',', 'element', '-', 'wise', 'product', 'and', 'difference', 'yields', 'the', 'highest', 'performance', 'of', '82.1', '%', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['VBG', 'JJ', 'VBG', 'NNS', 'VBZ', 'DT', 'NN', ':', 'DT', 'NNP', ':', 'NN', 'NN', 'IN', 'NN', ',', 'JJ', ':', 'NN', 'NN', 'CC', 'NN', 'NNS', 'DT', 'JJS', 'NN', 'IN', 'CD', 'NN', '.']",30
natural_language_inference,19,148,Further applying element - wise product improves the accuracy by another 0.5 % .,"['Further', 'applying', 'element', '-', 'wise', 'product', 'improves', 'the', 'accuracy', 'by', 'another', '0.5', '%', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', 'VBG', 'JJ', ':', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'CD', 'NN', '.']",14
natural_language_inference,19,149,"The full TBCNN - pair model outperforms all existing sentence encoding - based approaches , in - cluding a 1024d gated recurrent unit ( GRU ) - based RNN with "" skip - thought "" pretraining .","['The', 'full', 'TBCNN', '-', 'pair', 'model', 'outperforms', 'all', 'existing', 'sentence', 'encoding', '-', 'based', 'approaches', ',', 'in', '-', 'cluding', 'a', '1024d', 'gated', 'recurrent', 'unit', '(', 'GRU', ')', '-', 'based', 'RNN', 'with', '""', 'skip', '-', 'thought', '""', 'pretraining', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNP', ':', 'NN', 'NN', 'VBZ', 'DT', 'VBG', 'NN', 'VBG', ':', 'VBN', 'NNS', ',', 'IN', ':', 'VBG', 'DT', 'CD', 'JJ', 'NN', 'NN', '(', 'NNP', ')', ':', 'VBN', 'NNP', 'IN', 'NNP', 'SYM', ':', 'NN', 'IN', 'VBG', '.']",37
natural_language_inference,20,2,Neural Tree Indexers for Text Understanding,"['Neural', 'Tree', 'Indexers', 'for', 'Text', 'Understanding']","['O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",6
natural_language_inference,20,19,"In this study , we introduce Neural Tree Indexers ( NTI ) , a class of tree structured models for NLP tasks .","['In', 'this', 'study', ',', 'we', 'introduce', 'Neural', 'Tree', 'Indexers', '(', 'NTI', ')', ',', 'a', 'class', 'of', 'tree', 'structured', 'models', 'for', 'NLP', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'DT', 'NN', 'IN', 'NN', 'VBN', 'NNS', 'IN', 'NNP', 'NNS', '.']",23
natural_language_inference,20,20,NTI takes a sequence of tokens and produces its representation by constructing a full n-ary tree in a bottom - up fashion .,"['NTI', 'takes', 'a', 'sequence', 'of', 'tokens', 'and', 'produces', 'its', 'representation', 'by', 'constructing', 'a', 'full', 'n-ary', 'tree', 'in', 'a', 'bottom', '-', 'up', 'fashion', '.']","['B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'CC', 'VBZ', 'PRP$', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'IN', 'NN', '.']",23
natural_language_inference,20,21,Each node in NTI is associated with one of the node transformation functions : leaf node mapping and non-leaf node composition functions .,"['Each', 'node', 'in', 'NTI', 'is', 'associated', 'with', 'one', 'of', 'the', 'node', 'transformation', 'functions', ':', 'leaf', 'node', 'mapping', 'and', 'non-leaf', 'node', 'composition', 'functions', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', 'VBZ', 'VBN', 'IN', 'CD', 'IN', 'DT', 'JJ', 'NN', 'NNS', ':', 'NN', 'NN', 'NN', 'CC', 'JJ', 'NN', 'NN', 'NNS', '.']",23
natural_language_inference,20,23,"Furthermore , we propose different variants of node composition function and attention over tree for our NTI models .","['Furthermore', ',', 'we', 'propose', 'different', 'variants', 'of', 'node', 'composition', 'function', 'and', 'attention', 'over', 'tree', 'for', 'our', 'NTI', 'models', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NN', 'CC', 'NN', 'IN', 'NN', 'IN', 'PRP$', 'NNP', 'NNS', '.']",19
natural_language_inference,20,24,"When a sequential leaf node transformer such as LSTM is chosen , the NTI network forms a sequence - tree hybrid model taking advantage of both conditional and compositional powers of sequential and recursive models . :","['When', 'a', 'sequential', 'leaf', 'node', 'transformer', 'such', 'as', 'LSTM', 'is', 'chosen', ',', 'the', 'NTI', 'network', 'forms', 'a', 'sequence', '-', 'tree', 'hybrid', 'model', 'taking', 'advantage', 'of', 'both', 'conditional', 'and', 'compositional', 'powers', 'of', 'sequential', 'and', 'recursive', 'models', '.', ':']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['WRB', 'DT', 'JJ', 'NN', 'JJ', 'NN', 'JJ', 'IN', 'NNP', 'VBZ', 'VBN', ',', 'DT', 'NNP', 'NN', 'VBZ', 'DT', 'NN', ':', 'JJ', 'JJ', 'NN', 'VBG', 'NN', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NNS', 'IN', 'JJ', 'CC', 'JJ', 'NNS', '.', ':']",37
natural_language_inference,20,147,Natural Language Inference,"['Natural', 'Language', 'Inference']","['B-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NN']",3
natural_language_inference,20,193,Our best score on this task is 87.3 % accuracy obtained with the full tree matching NTI model .,"['Our', 'best', 'score', 'on', 'this', 'task', 'is', '87.3', '%', 'accuracy', 'obtained', 'with', 'the', 'full', 'tree', 'matching', 'NTI', 'model', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'JJS', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'CD', 'NN', 'NN', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'NNP', 'NN', '.']",19
natural_language_inference,20,195,Our results show that NTI - SLSTM improved the performance of the sequential LSTM encoder by approximately 2 % .,"['Our', 'results', 'show', 'that', 'NTI', '-', 'SLSTM', 'improved', 'the', 'performance', 'of', 'the', 'sequential', 'LSTM', 'encoder', 'by', 'approximately', '2', '%', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBP', 'IN', 'NNP', ':', 'NNP', 'VBD', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'RB', 'CD', 'NN', '.']",20
natural_language_inference,20,198,"The node - by - node attention models improve the performance , indicating that modeling inter-sentence interaction is an important element in NLI .","['The', 'node', '-', 'by', '-', 'node', 'attention', 'models', 'improve', 'the', 'performance', ',', 'indicating', 'that', 'modeling', 'inter-sentence', 'interaction', 'is', 'an', 'important', 'element', 'in', 'NLI', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', ':', 'IN', ':', 'NN', 'NN', 'NNS', 'VBP', 'DT', 'NN', ',', 'VBG', 'IN', 'VBG', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNP', '.']",24
natural_language_inference,20,204,Answer Sentence Selection,"['Answer', 'Sentence', 'Selection']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
natural_language_inference,20,221,"The Deep LSTM and LSTM attention models outperform the previous best result by a large margin , nearly 5 - 6 % .","['The', 'Deep', 'LSTM', 'and', 'LSTM', 'attention', 'models', 'outperform', 'the', 'previous', 'best', 'result', 'by', 'a', 'large', 'margin', ',', 'nearly', '5', '-', '6', '%', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NNP', 'CC', 'NNP', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'RBS', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', 'CD', ':', 'CD', 'NN', '.']",23
natural_language_inference,20,222,NASM improves the result further and sets a strong baseline by combining variational autoencoder with the soft attention .,"['NASM', 'improves', 'the', 'result', 'further', 'and', 'sets', 'a', 'strong', 'baseline', 'by', 'combining', 'variational', 'autoencoder', 'with', 'the', 'soft', 'attention', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'NN', 'RBR', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",19
natural_language_inference,20,224,Our NTI model exceeds NASM by approximately 0.4 % on MAP for this task .,"['Our', 'NTI', 'model', 'exceeds', 'NASM', 'by', 'approximately', '0.4', '%', 'on', 'MAP', 'for', 'this', 'task', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O']","['PRP$', 'NNP', 'NN', 'NNS', 'NNP', 'IN', 'RB', 'CD', 'NN', 'IN', 'NNP', 'IN', 'DT', 'NN', '.']",15
natural_language_inference,20,225,Sentence Classification,"['Sentence', 'Classification']","['B-n', 'I-n']","['NN', 'NN']",2
natural_language_inference,20,234,Our NTI - SLSTM model performed slightly worse A dog mouth holds a retrieved ball .,"['Our', 'NTI', '-', 'SLSTM', 'model', 'performed', 'slightly', 'worse', 'A', 'dog', 'mouth', 'holds', 'a', 'retrieved', 'ball', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNP', ':', 'NNP', 'NN', 'VBD', 'RB', 'JJR', 'NNP', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', '.']",16
natural_language_inference,20,255,"After we transformed the input with the LSTM leaf node function , we achieved the best performance on this task .","['After', 'we', 'transformed', 'the', 'input', 'with', 'the', 'LSTM', 'leaf', 'node', 'function', ',', 'we', 'achieved', 'the', 'best', 'performance', 'on', 'this', 'task', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'PRP', 'VBD', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NN', 'NN', ',', 'PRP', 'VBD', 'DT', 'JJS', 'NN', 'IN', 'DT', 'NN', '.']",21
natural_language_inference,18,2,Parameter Re-Initialization through Cyclical Batch Size Schedules,"['Parameter', 'Re-Initialization', 'through', 'Cyclical', 'Batch', 'Size', 'Schedules']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NN', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNP']",7
natural_language_inference,18,4,Optimal parameter initialization remains a crucial problem for neural network training .,"['Optimal', 'parameter', 'initialization', 'remains', 'a', 'crucial', 'problem', 'for', 'neural', 'network', 'training', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",12
natural_language_inference,18,19,Our work explores the idea of adapting the weight initialization to the optimization dynamics of the specific learning task at hand .,"['Our', 'work', 'explores', 'the', 'idea', 'of', 'adapting', 'the', 'weight', 'initialization', 'to', 'the', 'optimization', 'dynamics', 'of', 'the', 'specific', 'learning', 'task', 'at', 'hand', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'TO', 'DT', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', '.']",22
natural_language_inference,18,20,"From the Bayesian perspective , improved weight initialization can be viewed as starting with a better prior , which leads to a more accurate posterior and thus better generalization ability .","['From', 'the', 'Bayesian', 'perspective', ',', 'improved', 'weight', 'initialization', 'can', 'be', 'viewed', 'as', 'starting', 'with', 'a', 'better', 'prior', ',', 'which', 'leads', 'to', 'a', 'more', 'accurate', 'posterior', 'and', 'thus', 'better', 'generalization', 'ability', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'VBN', 'JJ', 'NN', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'IN', 'DT', 'JJR', 'NN', ',', 'WDT', 'VBZ', 'TO', 'DT', 'RBR', 'JJ', 'NN', 'CC', 'RB', 'JJR', 'NN', 'NN', '.']",31
natural_language_inference,18,22,"For example , in the seminal works , an adaptive prior is implemented via Markov Chain Monte Carlo ( MCMC ) methods .","['For', 'example', ',', 'in', 'the', 'seminal', 'works', ',', 'an', 'adaptive', 'prior', 'is', 'implemented', 'via', 'Markov', 'Chain', 'Monte', 'Carlo', '(', 'MCMC', ')', 'methods', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'IN', 'DT', 'JJ', 'NN', ',', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', '.']",23
natural_language_inference,18,23,"Motivated by these ideas , we incorporate an "" adaptive initialization "" for neural network training ( see section 2 for details ) , where we use cyclical batch size schedules to control the noise ( or temperature ) of SGD .","['Motivated', 'by', 'these', 'ideas', ',', 'we', 'incorporate', 'an', '""', 'adaptive', 'initialization', '""', 'for', 'neural', 'network', 'training', '(', 'see', 'section', '2', 'for', 'details', ')', ',', 'where', 'we', 'use', 'cyclical', 'batch', 'size', 'schedules', 'to', 'control', 'the', 'noise', '(', 'or', 'temperature', ')', 'of', 'SGD', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['VBN', 'IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', '(', 'VB', 'NN', 'CD', 'IN', 'NNS', ')', ',', 'WRB', 'PRP', 'VBP', 'JJ', 'NN', 'NN', 'NNS', 'TO', 'VB', 'DT', 'NN', '(', 'CC', 'NN', ')', 'IN', 'NNP', '.']",42
natural_language_inference,18,26,"Here , we build upon this work by studying different cyclical annealing strategies for a wide range of problems .","['Here', ',', 'we', 'build', 'upon', 'this', 'work', 'by', 'studying', 'different', 'cyclical', 'annealing', 'strategies', 'for', 'a', 'wide', 'range', 'of', 'problems', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['RB', ',', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', '.']",20
natural_language_inference,18,82,Language Results,"['Language', 'Results']","['B-n', 'I-n']","['NN', 'NNS']",2
natural_language_inference,18,83,Language modeling is a challenging problem due to the complex and long - range interactions between distant words .,"['Language', 'modeling', 'is', 'a', 'challenging', 'problem', 'due', 'to', 'the', 'complex', 'and', 'long', '-', 'range', 'interactions', 'between', 'distant', 'words', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'JJ', 'TO', 'DT', 'JJ', 'CC', 'JJ', ':', 'NN', 'NNS', 'IN', 'JJ', 'NNS', '.']",19
natural_language_inference,18,85,"CBS schedules effectively help us avoid overfitting , and in addition snapshot ensembling enables even greater performance .","['CBS', 'schedules', 'effectively', 'help', 'us', 'avoid', 'overfitting', ',', 'and', 'in', 'addition', 'snapshot', 'ensembling', 'enables', 'even', 'greater', 'performance', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'RB', 'VB', 'PRP', 'VB', 'NN', ',', 'CC', 'IN', 'NN', 'NN', 'VBG', 'NNS', 'RB', 'JJR', 'NN', '.']",18
natural_language_inference,18,88,"As we can see , the best performing CBS schedules result in significant improvements in perplexity ( up to 7.91 ) over the baseline schedules and also offer reductions in the number of SGD training iterations ( up to 33 % ) .","['As', 'we', 'can', 'see', ',', 'the', 'best', 'performing', 'CBS', 'schedules', 'result', 'in', 'significant', 'improvements', 'in', 'perplexity', '(', 'up', 'to', '7.91', ')', 'over', 'the', 'baseline', 'schedules', 'and', 'also', 'offer', 'reductions', 'in', 'the', 'number', 'of', 'SGD', 'training', 'iterations', '(', 'up', 'to', '33', '%', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', ',', 'DT', 'JJS', 'NN', 'NNP', 'VBZ', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NN', '(', 'IN', 'TO', 'CD', ')', 'IN', 'DT', 'NN', 'NNS', 'CC', 'RB', 'VBP', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NN', 'NNS', '(', 'IN', 'TO', 'CD', 'NN', ')', '.']",43
natural_language_inference,18,90,Notice that almost all CBS schedules outperform the baseline schedule .,"['Notice', 'that', 'almost', 'all', 'CBS', 'schedules', 'outperform', 'the', 'baseline', 'schedule', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'O']","['NNP', 'IN', 'RB', 'DT', 'NNP', 'NNS', 'VBP', 'DT', 'NN', 'NN', '.']",11
natural_language_inference,18,97,"In our experiments , CBS schedules do not yield large performance improvements on models like E1 which exhibit smaller disparities between training and testing performance .","['In', 'our', 'experiments', ',', 'CBS', 'schedules', 'do', 'not', 'yield', 'large', 'performance', 'improvements', 'on', 'models', 'like', 'E1', 'which', 'exhibit', 'smaller', 'disparities', 'between', 'training', 'and', 'testing', 'performance', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'PRP$', 'NNS', ',', 'NNP', 'NNS', 'VBP', 'RB', 'VB', 'JJ', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'NNP', 'WDT', 'VBP', 'JJR', 'NNS', 'IN', 'NN', 'CC', 'VBG', 'NN', '.']",26
natural_language_inference,18,102,Image Classification Results,"['Image', 'Classification', 'Results']","['B-n', 'I-n', 'I-n']","['NN', 'NN', 'NNS']",3
natural_language_inference,18,103,"As seen in , the training curves of CBS schedules also exhibit the aforementioned cyclical spikes both in training loss and testing accuracy .","['As', 'seen', 'in', ',', 'the', 'training', 'curves', 'of', 'CBS', 'schedules', 'also', 'exhibit', 'the', 'aforementioned', 'cyclical', 'spikes', 'both', 'in', 'training', 'loss', 'and', 'testing', 'accuracy', '.']","['O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'DT', 'NN', 'NNS', 'IN', 'NNP', 'NNS', 'RB', 'VBP', 'DT', 'JJ', 'JJ', 'NNS', 'DT', 'IN', 'NN', 'NN', 'CC', 'VBG', 'NN', '.']",24
natural_language_inference,18,105,We observe that CBS achieves similar performance to the baseline .,"['We', 'observe', 'that', 'CBS', 'achieves', 'similar', 'performance', 'to', 'the', 'baseline', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'NNP', 'VBZ', 'JJ', 'NN', 'TO', 'DT', 'NN', '.']",11
natural_language_inference,18,107,"With CBS - 15 , we see 90.71 % training accuracy and 56. 44 % testing accuracy , which is a larger improvement than that offered by CBS on convolutional models on Cifar - 10 .","['With', 'CBS', '-', '15', ',', 'we', 'see', '90.71', '%', 'training', 'accuracy', 'and', '56.', '44', '%', 'testing', 'accuracy', ',', 'which', 'is', 'a', 'larger', 'improvement', 'than', 'that', 'offered', 'by', 'CBS', 'on', 'convolutional', 'models', 'on', 'Cifar', '-', '10', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', ':', 'CD', ',', 'PRP', 'VBP', 'CD', 'NN', 'NN', 'NN', 'CC', 'CD', 'CD', 'NN', 'VBG', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJR', 'NN', 'IN', 'DT', 'VBN', 'IN', 'NNP', 'IN', 'JJ', 'NNS', 'IN', 'NNP', ':', 'CD', '.']",36
natural_language_inference,18,109,Combining CBS - 15 on C2 with this strategy improves accuracy to 94.82 % .,"['Combining', 'CBS', '-', '15', 'on', 'C2', 'with', 'this', 'strategy', 'improves', 'accuracy', 'to', '94.82', '%', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['VBG', 'NNP', ':', 'CD', 'IN', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'NN', 'TO', 'CD', 'NN', '.']",15
natural_language_inference,18,111,Applying snapshot ensembling on C3 trained with CBS - 15 - 2 leads to improved accuracy of 93. 56 % as compared to 92.58 % .,"['Applying', 'snapshot', 'ensembling', 'on', 'C3', 'trained', 'with', 'CBS', '-', '15', '-', '2', 'leads', 'to', 'improved', 'accuracy', 'of', '93.', '56', '%', 'as', 'compared', 'to', '92.58', '%', '.']","['B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['VBG', 'JJ', 'VBG', 'IN', 'NNP', 'VBD', 'IN', 'NNP', ':', 'CD', ':', 'CD', 'NNS', 'TO', 'VBN', 'NN', 'IN', 'CD', 'CD', 'NN', 'IN', 'VBN', 'TO', 'CD', 'NN', '.']",26
natural_language_inference,18,112,"After ensembling ResNet50 on Imagenet with snapshots from the last two cycles , the performance increases to 76.401 % from 75.336 % .","['After', 'ensembling', 'ResNet50', 'on', 'Imagenet', 'with', 'snapshots', 'from', 'the', 'last', 'two', 'cycles', ',', 'the', 'performance', 'increases', 'to', '76.401', '%', 'from', '75.336', '%', '.']","['B-p', 'B-n', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'VBG', 'NNP', 'IN', 'NNP', 'IN', 'NNS', 'IN', 'DT', 'JJ', 'CD', 'NNS', ',', 'DT', 'NN', 'VBZ', 'TO', 'CD', 'NN', 'IN', 'CD', 'NN', '.']",23
natural_language_inference,4,2,MemoReader : Large - Scale Reading Comprehension through Neural Memory Controller,"['MemoReader', ':', 'Large', '-', 'Scale', 'Reading', 'Comprehension', 'through', 'Neural', 'Memory', 'Controller']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NN', ':', 'JJ', ':', 'NN', 'VBG', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",11
natural_language_inference,4,4,Machine reading comprehension helps machines learn to utilize most of the human knowledge written in the form of text .,"['Machine', 'reading', 'comprehension', 'helps', 'machines', 'learn', 'to', 'utilize', 'most', 'of', 'the', 'human', 'knowledge', 'written', 'in', 'the', 'form', 'of', 'text', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'VBG', 'NN', 'VBZ', 'NNS', 'NN', 'TO', 'VB', 'JJS', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NN', '.']",20
natural_language_inference,4,6,"In this paper , we propose a novel deep neural network architecture to handle a long - range dependency in RC tasks .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'novel', 'deep', 'neural', 'network', 'architecture', 'to', 'handle', 'a', 'long', '-', 'range', 'dependency', 'in', 'RC', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', 'NNP', 'NNS', '.']",23
natural_language_inference,4,13,Reading comprehension ( RC ) to understand this knowledge is a major challenge that can vastly increase the range of knowledge available to the machines .,"['Reading', 'comprehension', '(', 'RC', ')', 'to', 'understand', 'this', 'knowledge', 'is', 'a', 'major', 'challenge', 'that', 'can', 'vastly', 'increase', 'the', 'range', 'of', 'knowledge', 'available', 'to', 'the', 'machines', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NN', '(', 'NNP', ')', 'TO', 'VB', 'DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'WDT', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'NN', 'JJ', 'TO', 'DT', 'NNS', '.']",26
natural_language_inference,4,23,"To overcome this issue , we propose two novel strategies that improve the memory - handling capability while mitigating the information distortion .","['To', 'overcome', 'this', 'issue', ',', 'we', 'propose', 'two', 'novel', 'strategies', 'that', 'improve', 'the', 'memory', '-', 'handling', 'capability', 'while', 'mitigating', 'the', 'information', 'distortion', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', ',', 'PRP', 'VBP', 'CD', 'JJ', 'NNS', 'WDT', 'VBP', 'DT', 'NN', ':', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', '.']",23
natural_language_inference,4,24,We extend the memory controller with a residual connection to alleviate the information distortion occurring in it .,"['We', 'extend', 'the', 'memory', 'controller', 'with', 'a', 'residual', 'connection', 'to', 'alleviate', 'the', 'information', 'distortion', 'occurring', 'in', 'it', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'VBG', 'IN', 'PRP', '.']",18
natural_language_inference,4,25,We also expand the gated recurrent unit ( GRU ) with a dense connection that conveys enriched features to the next layer containing the original as well as the transformed information .,"['We', 'also', 'expand', 'the', 'gated', 'recurrent', 'unit', '(', 'GRU', ')', 'with', 'a', 'dense', 'connection', 'that', 'conveys', 'enriched', 'features', 'to', 'the', 'next', 'layer', 'containing', 'the', 'original', 'as', 'well', 'as', 'the', 'transformed', 'information', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'VBD', 'NNS', 'TO', 'DT', 'JJ', 'NN', 'VBG', 'DT', 'JJ', 'RB', 'RB', 'IN', 'DT', 'JJ', 'NN', '.']",32
natural_language_inference,4,120,Implementation details . to build the model and Sonnet 2 to implement the memory interface .,"['Implementation', 'details', '.', 'to', 'build', 'the', 'model', 'and', 'Sonnet', '2', 'to', 'implement', 'the', 'memory', 'interface', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NN', 'NNS', '.', 'TO', 'VB', 'DT', 'NN', 'CC', 'NNP', 'CD', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",16
natural_language_inference,4,121,NLTK is used for tokenizing words .,"['NLTK', 'is', 'used', 'for', 'tokenizing', 'words', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'O']","['NNP', 'VBZ', 'VBN', 'IN', 'VBG', 'NNS', '.']",7
natural_language_inference,4,122,"In the memory controller , we use four read heads and one write head , and the memory size is set to 100 36 , with all initialized as 0 .","['In', 'the', 'memory', 'controller', ',', 'we', 'use', 'four', 'read', 'heads', 'and', 'one', 'write', 'head', ',', 'and', 'the', 'memory', 'size', 'is', 'set', 'to', '100', '36', ',', 'with', 'all', 'initialized', 'as', '0', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'CD', 'NN', 'NNS', 'CC', 'CD', 'NN', 'NN', ',', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'CD', ',', 'IN', 'DT', 'VBN', 'IN', 'CD', '.']",31
natural_language_inference,4,123,The hidden vector dimension l is set to 200 .,"['The', 'hidden', 'vector', 'dimension', 'l', 'is', 'set', 'to', '200', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",10
natural_language_inference,4,124,"We use AdaDelta ( Zeiler , 2012 ) as an optimizer with a learning rate of 0.5 .","['We', 'use', 'AdaDelta', '(', 'Zeiler', ',', '2012', ')', 'as', 'an', 'optimizer', 'with', 'a', 'learning', 'rate', 'of', '0.5', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'NNP', '(', 'NNP', ',', 'CD', ')', 'IN', 'DT', 'NN', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '.']",18
natural_language_inference,4,125,The batch size is set to 20 for TriviaQA and 30 for SQuAD and QUASAR - T .,"['The', 'batch', 'size', 'is', 'set', 'to', '20', 'for', 'TriviaQA', 'and', '30', 'for', 'SQuAD', 'and', 'QUASAR', '-', 'T', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'IN', 'NNP', 'CC', 'CD', 'IN', 'NNP', 'CC', 'NNP', ':', 'NN', '.']",18
natural_language_inference,4,126,We use an exponential moving average of weights with a decaying factor of 0.001 .,"['We', 'use', 'an', 'exponential', 'moving', 'average', 'of', 'weights', 'with', 'a', 'decaying', 'factor', 'of', '0.001', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NNS', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', '.']",15
natural_language_inference,4,127,"Our model does require more memory than existing methods , but a single GPU ( e.g. , M40 with 12 GB memory ) was enough to train model within a reasonable amount of time .","['Our', 'model', 'does', 'require', 'more', 'memory', 'than', 'existing', 'methods', ',', 'but', 'a', 'single', 'GPU', '(', 'e.g.', ',', 'M40', 'with', '12', 'GB', 'memory', ')', 'was', 'enough', 'to', 'train', 'model', 'within', 'a', 'reasonable', 'amount', 'of', 'time', '.']","['B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'VB', 'JJR', 'NN', 'IN', 'VBG', 'NNS', ',', 'CC', 'DT', 'JJ', 'NNP', '(', 'NN', ',', 'NNP', 'IN', 'CD', 'NNP', 'NN', ')', 'VBD', 'JJ', 'TO', 'VB', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",35
natural_language_inference,4,131,"Overall , in lengthy - document cases such as Trivi aQA and QUASAR - T , our model outperforms all the published results , as seen in Tables 2 and 3 , while in the short - document case such as SQuAD , we mostly achieve the best results , as seen in .","['Overall', ',', 'in', 'lengthy', '-', 'document', 'cases', 'such', 'as', 'Trivi', 'aQA', 'and', 'QUASAR', '-', 'T', ',', 'our', 'model', 'outperforms', 'all', 'the', 'published', 'results', ',', 'as', 'seen', 'in', 'Tables', '2', 'and', '3', ',', 'while', 'in', 'the', 'short', '-', 'document', 'case', 'such', 'as', 'SQuAD', ',', 'we', 'mostly', 'achieve', 'the', 'best', 'results', ',', 'as', 'seen', 'in', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'IN', 'JJ', ':', 'NN', 'NNS', 'JJ', 'IN', 'NNP', 'NN', 'CC', 'NNP', ':', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'PDT', 'DT', 'VBN', 'NNS', ',', 'IN', 'VBN', 'IN', 'NNP', 'CD', 'CC', 'CD', ',', 'IN', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', 'JJ', 'IN', 'NNP', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJS', 'NNS', ',', 'IN', 'VBN', 'IN', '.']",54
natural_language_inference,4,164,We assume that the concatenation of the layer outputs in DEBS helps the memory controller store contextual representations clearly .,"['We', 'assume', 'that', 'the', 'concatenation', 'of', 'the', 'layer', 'outputs', 'in', 'DEBS', 'helps', 'the', 'memory', 'controller', 'store', 'contextual', 'representations', 'clearly', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'NNP', 'VBZ', 'DT', 'NN', 'NN', 'NN', 'JJ', 'NNS', 'RB', '.']",20
natural_language_inference,4,166,"As can be seen in , using DEBS in all the places improves the performance most , and furthermore , the memory controller with DEBS gives the largest performance margin .","['As', 'can', 'be', 'seen', 'in', ',', 'using', 'DEBS', 'in', 'all', 'the', 'places', 'improves', 'the', 'performance', 'most', ',', 'and', 'furthermore', ',', 'the', 'memory', 'controller', 'with', 'DEBS', 'gives', 'the', 'largest', 'performance', 'margin', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'MD', 'VB', 'VBN', 'IN', ',', 'VBG', 'NNP', 'IN', 'PDT', 'DT', 'NNS', 'VBZ', 'DT', 'NN', 'RBS', ',', 'CC', 'RB', ',', 'DT', 'NN', 'NN', 'IN', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'NN', '.']",31
natural_language_inference,6,2,Dynamic Self - Attention : Computing Attention over Words Dynamically for Sentence Embedding,"['Dynamic', 'Self', '-', 'Attention', ':', 'Computing', 'Attention', 'over', 'Words', 'Dynamically', 'for', 'Sentence', 'Embedding']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', ':', 'NN', ':', 'JJ', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",13
natural_language_inference,6,4,"In this paper , we propose Dynamic Self - Attention ( DSA ) , a new self - attention mechanism for sentence embedding .","['In', 'this', 'paper', ',', 'we', 'propose', 'Dynamic', 'Self', '-', 'Attention', '(', 'DSA', ')', ',', 'a', 'new', 'self', '-', 'attention', 'mechanism', 'for', 'sentence', 'embedding', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNP', 'NNP', ':', 'NN', '(', 'NNP', ')', ',', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'IN', 'NN', 'NN', '.']",24
natural_language_inference,6,5,"We design DSA by modifying dynamic routing in capsule network ( Sabour et al. , 2017 ) for natural language processing .","['We', 'design', 'DSA', 'by', 'modifying', 'dynamic', 'routing', 'in', 'capsule', 'network', '(', 'Sabour', 'et', 'al.', ',', '2017', ')', 'for', 'natural', 'language', 'processing', '.']","['O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'VBN', 'IN', 'VBG', 'JJ', 'NN', 'IN', 'NN', 'NN', '(', 'NNP', 'CC', 'NN', ',', 'CD', ')', 'IN', 'JJ', 'NN', 'NN', '.']",22
natural_language_inference,6,23,"Motivated by dynamic routing ) , we propose a new self - attention mechanism for sentence embedding , namely Dynamic Self - Attention ( DSA ) .","['Motivated', 'by', 'dynamic', 'routing', ')', ',', 'we', 'propose', 'a', 'new', 'self', '-', 'attention', 'mechanism', 'for', 'sentence', 'embedding', ',', 'namely', 'Dynamic', 'Self', '-', 'Attention', '(', 'DSA', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBN', 'IN', 'JJ', 'NN', ')', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'RB', 'NNP', 'NNP', ':', 'NN', '(', 'NNP', ')', '.']",27
natural_language_inference,6,24,"To this end , we modify dynamic routing such that it functions as self - attention with the dynamic weight vector .","['To', 'this', 'end', ',', 'we', 'modify', 'dynamic', 'routing', 'such', 'that', 'it', 'functions', 'as', 'self', '-', 'attention', 'with', 'the', 'dynamic', 'weight', 'vector', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'JJ', 'IN', 'PRP', 'VBZ', 'IN', 'NN', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",22
natural_language_inference,6,25,"DSA , which is stacked on CNN with Dense Connection , achieves new state - of - the - art results among the sentence encoding methods in Stanford Natural Language Inference ( SNLI ) dataset with the least number of parameters , while obtaining comparative results in Stanford Sentiment Treebank ( SST ) dataset .","['DSA', ',', 'which', 'is', 'stacked', 'on', 'CNN', 'with', 'Dense', 'Connection', ',', 'achieves', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', 'among', 'the', 'sentence', 'encoding', 'methods', 'in', 'Stanford', 'Natural', 'Language', 'Inference', '(', 'SNLI', ')', 'dataset', 'with', 'the', 'least', 'number', 'of', 'parameters', ',', 'while', 'obtaining', 'comparative', 'results', 'in', 'Stanford', 'Sentiment', 'Treebank', '(', 'SST', ')', 'dataset', '.']","['B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ',', 'WDT', 'VBZ', 'VBN', 'IN', 'NNP', 'IN', 'NNP', 'NNP', ',', 'VBZ', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', 'IN', 'DT', 'JJS', 'NN', 'IN', 'NNS', ',', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', '.']",55
natural_language_inference,6,26,It also outperforms recent models in terms of time efficiency due to its simplicity and highly parallelized computations .,"['It', 'also', 'outperforms', 'recent', 'models', 'in', 'terms', 'of', 'time', 'efficiency', 'due', 'to', 'its', 'simplicity', 'and', 'highly', 'parallelized', 'computations', '.']","['O', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBZ', 'JJ', 'NNS', 'IN', 'NNS', 'IN', 'NN', 'NN', 'JJ', 'TO', 'PRP$', 'NN', 'CC', 'RB', 'JJ', 'NNS', '.']",19
natural_language_inference,6,102,Natural Language Inference Results,"['Natural', 'Language', 'Inference', 'Results']","['B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'NNP']",4
natural_language_inference,6,105,"Entailment , Contradiction and Neutral .","['Entailment', ',', 'Contradiction', 'and', 'Neutral', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', ',', 'NNP', 'CC', 'NNP', '.']",6
natural_language_inference,6,106,"As the task considers the semantic relationship , SNLI is used as a benchmark for evaluating the performance of a sentence encoder .","['As', 'the', 'task', 'considers', 'the', 'semantic', 'relationship', ',', 'SNLI', 'is', 'used', 'as', 'a', 'benchmark', 'for', 'evaluating', 'the', 'performance', 'of', 'a', 'sentence', 'encoder', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', ',', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",23
natural_language_inference,6,115,"With tradeoffs in terms of parameters and learning time per epoch , multiple DSA outperforms other models by a large margin ( + 1.1 % ) .","['With', 'tradeoffs', 'in', 'terms', 'of', 'parameters', 'and', 'learning', 'time', 'per', 'epoch', ',', 'multiple', 'DSA', 'outperforms', 'other', 'models', 'by', 'a', 'large', 'margin', '(', '+', '1.1', '%', ')', '.']","['B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NNS', 'IN', 'NNS', 'IN', 'NNS', 'CC', 'JJ', 'NN', 'IN', 'NN', ',', 'JJ', 'NNP', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'JJ', 'CD', 'NN', ')', '.']",27
natural_language_inference,6,116,"In comparison to the baseline , single DSA shows better performance than self - attention ( + 2.2 % ) .","['In', 'comparison', 'to', 'the', 'baseline', ',', 'single', 'DSA', 'shows', 'better', 'performance', 'than', 'self', '-', 'attention', '(', '+', '2.2', '%', ')', '.']","['B-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'DT', 'NN', ',', 'JJ', 'NNP', 'NNS', 'RBR', 'NN', 'IN', 'PRP', ':', 'NN', '(', 'JJ', 'CD', 'NN', ')', '.']",21
natural_language_inference,6,118,"Note that our implementation of the baseline , selfattention stacked on CNN with Dense Connection , shows better performance ( + 0.4 % ) than the one stacked on BiLSTM .","['Note', 'that', 'our', 'implementation', 'of', 'the', 'baseline', ',', 'selfattention', 'stacked', 'on', 'CNN', 'with', 'Dense', 'Connection', ',', 'shows', 'better', 'performance', '(', '+', '0.4', '%', ')', 'than', 'the', 'one', 'stacked', 'on', 'BiLSTM', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NN', ',', 'NN', 'VBD', 'IN', 'NNP', 'IN', 'NNP', 'NNP', ',', 'VBZ', 'JJR', 'NN', '(', 'JJ', 'CD', 'NN', ')', 'IN', 'DT', 'CD', 'VBD', 'IN', 'NNP', '.']",31
natural_language_inference,6,119,Sentiment Analysis Results,"['Sentiment', 'Analysis', 'Results']","['B-n', 'I-n', 'I-n']","['JJ', 'NN', 'NNS']",3
natural_language_inference,6,127,"Single DSA outperforms all the baseline models in SST - 2 dataset , and achieves comparative results in SST - 5 , which again verifies the effectiveness of the dynamic weight vector .","['Single', 'DSA', 'outperforms', 'all', 'the', 'baseline', 'models', 'in', 'SST', '-', '2', 'dataset', ',', 'and', 'achieves', 'comparative', 'results', 'in', 'SST', '-', '5', ',', 'which', 'again', 'verifies', 'the', 'effectiveness', 'of', 'the', 'dynamic', 'weight', 'vector', '.']","['B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'VBZ', 'PDT', 'DT', 'NN', 'NNS', 'IN', 'NNP', ':', 'CD', 'NN', ',', 'CC', 'NNS', 'JJ', 'NNS', 'IN', 'NNP', ':', 'CD', ',', 'WDT', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",33
natural_language_inference,6,128,"In contrast to the distinguished results in SNLI dataset ( + 2.2 % ) , in SST dataset , only marginal differences in the performance between DSA and the previous self - attentive models are found .","['In', 'contrast', 'to', 'the', 'distinguished', 'results', 'in', 'SNLI', 'dataset', '(', '+', '2.2', '%', ')', ',', 'in', 'SST', 'dataset', ',', 'only', 'marginal', 'differences', 'in', 'the', 'performance', 'between', 'DSA', 'and', 'the', 'previous', 'self', '-', 'attentive', 'models', 'are', 'found', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['IN', 'NN', 'TO', 'DT', 'VBN', 'NNS', 'IN', 'NNP', 'NN', '(', 'JJ', 'CD', 'NN', ')', ',', 'IN', 'NNP', 'NN', ',', 'RB', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NNP', 'CC', 'DT', 'JJ', 'NN', ':', 'JJ', 'NNS', 'VBP', 'VBN', '.']",37
natural_language_inference,10,2,A Simple and Effective Approach to the Story Cloze Test,"['A', 'Simple', 'and', 'Effective', 'Approach', 'to', 'the', 'Story', 'Cloze', 'Test']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['DT', 'JJ', 'CC', 'JJ', 'NN', 'TO', 'DT', 'NNP', 'NNP', 'NNP']",10
natural_language_inference,10,26,"Where previous approaches rely on feature engineering or involved neural network architectures , we achieve high accuracy with a fully neural approach involving only a single feedforward network and pre-trained skip - thought embeddings .","['Where', 'previous', 'approaches', 'rely', 'on', 'feature', 'engineering', 'or', 'involved', 'neural', 'network', 'architectures', ',', 'we', 'achieve', 'high', 'accuracy', 'with', 'a', 'fully', 'neural', 'approach', 'involving', 'only', 'a', 'single', 'feedforward', 'network', 'and', 'pre-trained', 'skip', '-', 'thought', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['WRB', 'JJ', 'NNS', 'RB', 'IN', 'NN', 'NN', 'CC', 'VBN', 'JJ', 'NN', 'NNS', ',', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'RB', 'JJ', 'NN', 'VBG', 'RB', 'DT', 'JJ', 'NN', 'NN', 'CC', 'JJ', 'NN', ':', 'JJ', 'NNS', '.']",35
natural_language_inference,10,27,"Second , we find that considering only the last sentence of the context outperforms models that consider the full context .","['Second', ',', 'we', 'find', 'that', 'considering', 'only', 'the', 'last', 'sentence', 'of', 'the', 'context', 'outperforms', 'models', 'that', 'consider', 'the', 'full', 'context', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-n', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['JJ', ',', 'PRP', 'VBP', 'IN', 'VBG', 'RB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'NNS', 'IN', 'VBP', 'DT', 'JJ', 'NN', '.']",21
natural_language_inference,10,29,"In sum , our approach differs from previous efforts in the joint use of three strategies : ( 1 ) using skip - thought embeddings for sentences in the story in a feed - forward neural network , ( 2 ) training the model on the provided validation set , and ( 3 ) considering the two endings with only the last sentence in the prompt .","['In', 'sum', ',', 'our', 'approach', 'differs', 'from', 'previous', 'efforts', 'in', 'the', 'joint', 'use', 'of', 'three', 'strategies', ':', '(', '1', ')', 'using', 'skip', '-', 'thought', 'embeddings', 'for', 'sentences', 'in', 'the', 'story', 'in', 'a', 'feed', '-', 'forward', 'neural', 'network', ',', '(', '2', ')', 'training', 'the', 'model', 'on', 'the', 'provided', 'validation', 'set', ',', 'and', '(', '3', ')', 'considering', 'the', 'two', 'endings', 'with', 'only', 'the', 'last', 'sentence', 'in', 'the', 'prompt', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'NN', ',', 'PRP$', 'NN', 'NNS', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NNS', ':', '(', 'CD', ')', 'VBG', 'JJ', ':', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', ':', 'RB', 'JJ', 'NN', ',', '(', 'CD', ')', 'VBG', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'VBN', ',', 'CC', '(', 'CD', ')', 'VBG', 'DT', 'CD', 'NNS', 'IN', 'RB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",67
natural_language_inference,10,83,We use cross-entropy loss and SGD with learning rate of 0.01 .,"['We', 'use', 'cross-entropy', 'loss', 'and', 'SGD', 'with', 'learning', 'rate', 'of', '0.01', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'CC', 'NNP', 'IN', 'VBG', 'NN', 'IN', 'CD', '.']",12
natural_language_inference,10,84,"During training , we save the model every 3000 iterations , and calculate the validation accuracy .","['During', 'training', ',', 'we', 'save', 'the', 'model', 'every', '3000', 'iterations', ',', 'and', 'calculate', 'the', 'validation', 'accuracy', '.']","['B-p', 'B-p', 'O', 'O', 'B-p', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'DT', 'CD', 'NNS', ',', 'CC', 'VB', 'DT', 'NN', 'NN', '.']",17
natural_language_inference,10,89,The 3 - layer feed - forward neural network trained on the validation set by summing the skip - thought embeddings of the last sentence ( LS ) of the story prompt and the ending gives the best accuracy ( 76.5 % ) .,"['The', '3', '-', 'layer', 'feed', '-', 'forward', 'neural', 'network', 'trained', 'on', 'the', 'validation', 'set', 'by', 'summing', 'the', 'skip', '-', 'thought', 'embeddings', 'of', 'the', 'last', 'sentence', '(', 'LS', ')', 'of', 'the', 'story', 'prompt', 'and', 'the', 'ending', 'gives', 'the', 'best', 'accuracy', '(', '76.5', '%', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'CD', ':', 'NN', 'NN', ':', 'RB', 'JJ', 'NN', 'VBN', 'IN', 'DT', 'NN', 'VBN', 'IN', 'VBG', 'DT', 'NN', ':', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'VBG', 'VBZ', 'DT', 'JJS', 'NN', '(', 'CD', 'NN', ')', '.']",44
natural_language_inference,10,91,"Comparing ' val - LS- skip ' to ' val - LS - Glo Ve ' ( i.e. , using skip - thought embeddings for sentences vs. GloVe word embeddings ) , we confirm that the success of this approach lies in the sizable boost to accuracy from the use of pretrained skip - thought embeddings .","['Comparing', ""'"", 'val', '-', 'LS-', 'skip', ""'"", 'to', ""'"", 'val', '-', 'LS', '-', 'Glo', 'Ve', ""'"", '(', 'i.e.', ',', 'using', 'skip', '-', 'thought', 'embeddings', 'for', 'sentences', 'vs.', 'GloVe', 'word', 'embeddings', ')', ',', 'we', 'confirm', 'that', 'the', 'success', 'of', 'this', 'approach', 'lies', 'in', 'the', 'sizable', 'boost', 'to', 'accuracy', 'from', 'the', 'use', 'of', 'pretrained', 'skip', '-', 'thought', 'embeddings', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', ""''"", 'JJ', ':', 'JJ', 'NN', ""''"", 'TO', 'POS', 'JJ', ':', 'NNP', ':', 'NNP', 'NNP', 'POS', '(', 'FW', ',', 'VBG', 'SYM', ':', 'JJ', 'NNS', 'IN', 'NNS', 'FW', 'NNP', 'NN', 'NNS', ')', ',', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NN', 'TO', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'FW', ':', 'NN', 'NNS', '.']",57
natural_language_inference,10,95,"We note that the model trained using only the last sentence ( LS ) of the story context has higher accuracy compared to the model that uses a GRU to encode the full context ( FC ) , and even the model which encodes the entire context .","['We', 'note', 'that', 'the', 'model', 'trained', 'using', 'only', 'the', 'last', 'sentence', '(', 'LS', ')', 'of', 'the', 'story', 'context', 'has', 'higher', 'accuracy', 'compared', 'to', 'the', 'model', 'that', 'uses', 'a', 'GRU', 'to', 'encode', 'the', 'full', 'context', '(', 'FC', ')', ',', 'and', 'even', 'the', 'model', 'which', 'encodes', 'the', 'entire', 'context', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'VBD', 'VBG', 'RB', 'DT', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'JJR', 'NN', 'VBN', 'TO', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'TO', 'VB', 'DT', 'JJ', 'NN', '(', 'NNP', ')', ',', 'CC', 'RB', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', '.']",48
natural_language_inference,29,2,PHASE CONDUCTOR ON MULTI - LAYERED ATTEN - TIONS FOR MACHINE COMPREHENSION,"['PHASE', 'CONDUCTOR', 'ON', 'MULTI', '-', 'LAYERED', 'ATTEN', '-', 'TIONS', 'FOR', 'MACHINE', 'COMPREHENSION']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', ':', 'NN', 'IN', 'NNP', 'NNP']",12
natural_language_inference,29,13,"Benefiting from the availability of large - scale benchmark datasets such as SQuAD , the attention - based neural networks has spread to machine comprehension and question answering tasks to allow the model to attend over past output vectors .","['Benefiting', 'from', 'the', 'availability', 'of', 'large', '-', 'scale', 'benchmark', 'datasets', 'such', 'as', 'SQuAD', ',', 'the', 'attention', '-', 'based', 'neural', 'networks', 'has', 'spread', 'to', 'machine', 'comprehension', 'and', 'question', 'answering', 'tasks', 'to', 'allow', 'the', 'model', 'to', 'attend', 'over', 'past', 'output', 'vectors', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'IN', 'DT', 'NN', 'IN', 'JJ', ':', 'NN', 'NN', 'NNS', 'JJ', 'IN', 'NNP', ',', 'DT', 'NN', ':', 'VBN', 'JJ', 'NNS', 'VBZ', 'VBN', 'TO', 'NN', 'NN', 'CC', 'NN', 'VBG', 'NNS', 'TO', 'VB', 'DT', 'NN', 'TO', 'VB', 'IN', 'JJ', 'NN', 'NNS', '.']",40
natural_language_inference,29,19,"Inspired by the above - mentioned works , we are proposing to introduce a general framework PhaseCond for the use of multiple attention layers .","['Inspired', 'by', 'the', 'above', '-', 'mentioned', 'works', ',', 'we', 'are', 'proposing', 'to', 'introduce', 'a', 'general', 'framework', 'PhaseCond', 'for', 'the', 'use', 'of', 'multiple', 'attention', 'layers', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['VBN', 'IN', 'DT', 'JJ', ':', 'VBN', 'NNS', ',', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NNP', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', '.']",25
natural_language_inference,29,21,"First , previous research on the self - attention model is to purely capture long - distance dependencies , and therefore a multi-hops architecture is used to alternatively captures question - aware passage representations and refines the results by using a self - attention model .","['First', ',', 'previous', 'research', 'on', 'the', 'self', '-', 'attention', 'model', 'is', 'to', 'purely', 'capture', 'long', '-', 'distance', 'dependencies', ',', 'and', 'therefore', 'a', 'multi-hops', 'architecture', 'is', 'used', 'to', 'alternatively', 'captures', 'question', '-', 'aware', 'passage', 'representations', 'and', 'refines', 'the', 'results', 'by', 'using', 'a', 'self', '-', 'attention', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'VBZ', 'TO', 'RB', 'VB', 'JJ', ':', 'NN', 'NNS', ',', 'CC', 'RB', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'TO', 'RB', 'VB', 'NN', ':', 'JJ', 'NN', 'NNS', 'CC', 'VBZ', 'DT', 'NNS', 'IN', 'VBG', 'DT', 'NN', ':', 'NN', 'NN', '.']",46
natural_language_inference,29,24,"Second , unlike the domains such as machine translation which jointly align and translate words , question - passage attention models for machine comprehension and question answering calculate the alignment matrix corresponding to all question and passage word pairs .","['Second', ',', 'unlike', 'the', 'domains', 'such', 'as', 'machine', 'translation', 'which', 'jointly', 'align', 'and', 'translate', 'words', ',', 'question', '-', 'passage', 'attention', 'models', 'for', 'machine', 'comprehension', 'and', 'question', 'answering', 'calculate', 'the', 'alignment', 'matrix', 'corresponding', 'to', 'all', 'question', 'and', 'passage', 'word', 'pairs', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', ',', 'IN', 'DT', 'NNS', 'JJ', 'IN', 'NN', 'NN', 'WDT', 'RB', 'VBP', 'CC', 'VBP', 'NNS', ',', 'NN', ':', 'NN', 'NN', 'NNS', 'IN', 'NN', 'NN', 'CC', 'NN', 'VBG', 'VB', 'DT', 'NN', 'NN', 'VBG', 'TO', 'DT', 'NN', 'CC', 'NN', 'NN', 'NN', '.']",40
natural_language_inference,29,126,"The EM result of our baseline Iterative Aligner is lower than RNET , confirming that the problem is not caused by our proposed model .","['The', 'EM', 'result', 'of', 'our', 'baseline', 'Iterative', 'Aligner', 'is', 'lower', 'than', 'RNET', ',', 'confirming', 'that', 'the', 'problem', 'is', 'not', 'caused', 'by', 'our', 'proposed', 'model', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'NN', 'IN', 'PRP$', 'NN', 'NNP', 'NNP', 'VBZ', 'JJR', 'IN', 'NNP', ',', 'VBG', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'PRP$', 'VBN', 'NN', '.']",25
natural_language_inference,29,127,"Our explanations is that 1 ) RNET uses a different feature set ( e.g. , Glo Ve 300 dimensional word vectors are employed ) and different encoding steps ( e.g. , three GRU layers are used for encoding question and passage representations ) , and 2 ) RNET uses a different ensemble method from our implementation .","['Our', 'explanations', 'is', 'that', '1', ')', 'RNET', 'uses', 'a', 'different', 'feature', 'set', '(', 'e.g.', ',', 'Glo', 'Ve', '300', 'dimensional', 'word', 'vectors', 'are', 'employed', ')', 'and', 'different', 'encoding', 'steps', '(', 'e.g.', ',', 'three', 'GRU', 'layers', 'are', 'used', 'for', 'encoding', 'question', 'and', 'passage', 'representations', ')', ',', 'and', '2', ')', 'RNET', 'uses', 'a', 'different', 'ensemble', 'method', 'from', 'our', 'implementation', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNS', 'VBZ', 'IN', 'CD', ')', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'VBN', '(', 'JJ', ',', 'NNP', 'NNP', 'CD', 'JJ', 'NN', 'NNS', 'VBP', 'VBN', ')', 'CC', 'JJ', 'VBG', 'NNS', '(', 'NN', ',', 'CD', 'NNP', 'NNS', 'VBP', 'VBN', 'IN', 'VBG', 'NN', 'CC', 'NN', 'NNS', ')', ',', 'CC', 'CD', ')', 'NNP', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'PRP$', 'NN', '.']",57
natural_language_inference,29,128,shows the performance with different number of layers for both question - passage attention phase and self - attention phase .,"['shows', 'the', 'performance', 'with', 'different', 'number', 'of', 'layers', 'for', 'both', 'question', '-', 'passage', 'attention', 'phase', 'and', 'self', '-', 'attention', 'phase', '.']","['B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['VBZ', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'NN', 'CC', 'PRP', ':', 'NN', 'NN', '.']",21
natural_language_inference,29,130,"For the question - passage attention phase , using single layer does n't degrade the performance significantly from the default setting of two layers , resulting in a different conclusion from ; .","['For', 'the', 'question', '-', 'passage', 'attention', 'phase', ',', 'using', 'single', 'layer', 'does', ""n't"", 'degrade', 'the', 'performance', 'significantly', 'from', 'the', 'default', 'setting', 'of', 'two', 'layers', ',', 'resulting', 'in', 'a', 'different', 'conclusion', 'from', ';', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'DT', 'NN', ':', 'NN', 'NN', 'NN', ',', 'VBG', 'JJ', 'NN', 'VBZ', 'RB', 'VB', 'DT', 'NN', 'RB', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'NNS', ',', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', ':', '.']",33
natural_language_inference,29,132,"In contrast , multiple stacking layers are needed to allow the evidence fully propagated through the passage .","['In', 'contrast', ',', 'multiple', 'stacking', 'layers', 'are', 'needed', 'to', 'allow', 'the', 'evidence', 'fully', 'propagated', 'through', 'the', 'passage', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'NN', ',', 'JJ', 'NN', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'NN', 'RB', 'VBN', 'IN', 'DT', 'NN', '.']",18
natural_language_inference,17,2,GLUE : A MULTI - TASK BENCHMARK AND ANALYSIS PLATFORM FOR NATURAL LANGUAGE UNDERSTAND - ING,"['GLUE', ':', 'A', 'MULTI', '-', 'TASK', 'BENCHMARK', 'AND', 'ANALYSIS', 'PLATFORM', 'FOR', 'NATURAL', 'LANGUAGE', 'UNDERSTAND', '-', 'ING']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', ':', 'DT', 'NNP', ':', 'NN', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NN']",16
natural_language_inference,17,4,"For natural language understanding ( NLU ) technology to be maximally useful , it must be able to process language in away that is not exclusive to a single task , genre , or dataset .","['For', 'natural', 'language', 'understanding', '(', 'NLU', ')', 'technology', 'to', 'be', 'maximally', 'useful', ',', 'it', 'must', 'be', 'able', 'to', 'process', 'language', 'in', 'away', 'that', 'is', 'not', 'exclusive', 'to', 'a', 'single', 'task', ',', 'genre', ',', 'or', 'dataset', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NN', 'TO', 'VB', 'RB', 'JJ', ',', 'PRP', 'MD', 'VB', 'JJ', 'TO', 'VB', 'NN', 'IN', 'RB', 'DT', 'VBZ', 'RB', 'JJ', 'TO', 'DT', 'JJ', 'NN', ',', 'NN', ',', 'CC', 'NN', '.']",36
natural_language_inference,17,9,"However , the low absolute performance of our best model indicates the need for improved general NLU systems .","['However', ',', 'the', 'low', 'absolute', 'performance', 'of', 'our', 'best', 'model', 'indicates', 'the', 'need', 'for', 'improved', 'general', 'NLU', 'systems', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O']","['RB', ',', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'PRP$', 'JJS', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNP', 'NNS', '.']",19
natural_language_inference,17,15,"To facilitate research in this direction , we present the General Language Understanding Evaluation ( GLUE ) benchmark : a collection of NLU tasks including question answering , sentiment analysis , and textual entailment , and an associated online platform for model evaluation , comparison , and analysis .","['To', 'facilitate', 'research', 'in', 'this', 'direction', ',', 'we', 'present', 'the', 'General', 'Language', 'Understanding', 'Evaluation', '(', 'GLUE', ')', 'benchmark', ':', 'a', 'collection', 'of', 'NLU', 'tasks', 'including', 'question', 'answering', ',', 'sentiment', 'analysis', ',', 'and', 'textual', 'entailment', ',', 'and', 'an', 'associated', 'online', 'platform', 'for', 'model', 'evaluation', ',', 'comparison', ',', 'and', 'analysis', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', ':', 'DT', 'NN', 'IN', 'NNP', 'NNS', 'VBG', 'NN', 'NN', ',', 'NN', 'NN', ',', 'CC', 'JJ', 'NN', ',', 'CC', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'NN', ',', 'CC', 'NN', '.']",49
natural_language_inference,17,16,GLUE does not place any constraints on model architecture beyond the ability to process single - sentence and sentence - pair inputs and to make corresponding predictions .,"['GLUE', 'does', 'not', 'place', 'any', 'constraints', 'on', 'model', 'architecture', 'beyond', 'the', 'ability', 'to', 'process', 'single', '-', 'sentence', 'and', 'sentence', '-', 'pair', 'inputs', 'and', 'to', 'make', 'corresponding', 'predictions', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'RB', 'VB', 'DT', 'NNS', 'IN', 'NN', 'NN', 'IN', 'DT', 'NN', 'TO', 'VB', 'JJ', ':', 'NN', 'CC', 'NN', ':', 'NN', 'NNS', 'CC', 'TO', 'VB', 'JJ', 'NNS', '.']",28
natural_language_inference,17,17,"For some GLUE tasks , training data is plentiful , but for others it is limited or fails to match the genre of the test set .","['For', 'some', 'GLUE', 'tasks', ',', 'training', 'data', 'is', 'plentiful', ',', 'but', 'for', 'others', 'it', 'is', 'limited', 'or', 'fails', 'to', 'match', 'the', 'genre', 'of', 'the', 'test', 'set', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'NNS', ',', 'VBG', 'NNS', 'VBZ', 'JJ', ',', 'CC', 'IN', 'NNS', 'PRP', 'VBZ', 'JJ', 'CC', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",27
natural_language_inference,17,20,"Four of the datasets feature privately - held test data , which will be used to ensure that the benchmark is used fairly .","['Four', 'of', 'the', 'datasets', 'feature', 'privately', '-', 'held', 'test', 'data', ',', 'which', 'will', 'be', 'used', 'to', 'ensure', 'that', 'the', 'benchmark', 'is', 'used', 'fairly', '.']","['B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-p', 'I-p', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'O']","['CD', 'IN', 'DT', 'NNS', 'VBP', 'RB', ':', 'VBN', 'NN', 'NNS', ',', 'WDT', 'MD', 'VB', 'VBN', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'VBN', 'RB', '.']",24
natural_language_inference,17,157,Original code for the baselines is available at https://github.com/nyu-mll/GLUE-baselines and a newer version is available at https://github.com/jsalt18-sentence-repl/jiant.,"['Original', 'code', 'for', 'the', 'baselines', 'is', 'available', 'at', 'https://github.com/nyu-mll/GLUE-baselines', 'and', 'a', 'newer', 'version', 'is', 'available', 'at', 'https://github.com/jsalt18-sentence-repl/jiant.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['JJ', 'NN', 'IN', 'DT', 'NNS', 'VBZ', 'JJ', 'IN', 'NNS', 'CC', 'DT', 'JJR', 'NN', 'VBZ', 'JJ', 'IN', 'NN']",17
natural_language_inference,17,159,"Our simplest baseline architecture is based on sentence - to - vector encoders , and sets aside GLUE 's ability to evaluate models with more complex structures .","['Our', 'simplest', 'baseline', 'architecture', 'is', 'based', 'on', 'sentence', '-', 'to', '-', 'vector', 'encoders', ',', 'and', 'sets', 'aside', 'GLUE', ""'s"", 'ability', 'to', 'evaluate', 'models', 'with', 'more', 'complex', 'structures', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJS', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'NN', ':', 'TO', ':', 'NN', 'NNS', ',', 'CC', 'NNS', 'VBP', 'NNP', 'POS', 'NN', 'TO', 'VB', 'NNS', 'IN', 'RBR', 'JJ', 'NNS', '.']",28
natural_language_inference,17,183,We find that multi-task training yields better overall scores over single - task training amongst models using attention or ELMo .,"['We', 'find', 'that', 'multi-task', 'training', 'yields', 'better', 'overall', 'scores', 'over', 'single', '-', 'task', 'training', 'amongst', 'models', 'using', 'attention', 'or', 'ELMo', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'JJ', 'NN', 'NNS', 'RBR', 'JJ', 'NNS', 'IN', 'JJ', ':', 'NN', 'NN', 'NN', 'NNS', 'VBG', 'NN', 'CC', 'NNP', '.']",21
natural_language_inference,17,185,"We see a consistent improvement in using ELMo embeddings in place of GloVe or CoVe embeddings , particularly for single - sentence tasks .","['We', 'see', 'a', 'consistent', 'improvement', 'in', 'using', 'ELMo', 'embeddings', 'in', 'place', 'of', 'GloVe', 'or', 'CoVe', 'embeddings', ',', 'particularly', 'for', 'single', '-', 'sentence', 'tasks', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'NNP', 'NNS', 'IN', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'NNS', ',', 'RB', 'IN', 'JJ', ':', 'NN', 'NNS', '.']",24
natural_language_inference,17,187,"Among the pre-trained sentence representation models , we observe fairly consistent gains moving from CBoW to Skip - Thought to Infersent and GenSen .","['Among', 'the', 'pre-trained', 'sentence', 'representation', 'models', ',', 'we', 'observe', 'fairly', 'consistent', 'gains', 'moving', 'from', 'CBoW', 'to', 'Skip', '-', 'Thought', 'to', 'Infersent', 'and', 'GenSen', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'NN', 'NNS', ',', 'PRP', 'VBP', 'RB', 'JJ', 'NNS', 'VBG', 'IN', 'NNP', 'TO', 'NNP', ':', 'NN', 'TO', 'NNP', 'CC', 'NNP', '.']",24
natural_language_inference,17,188,"Relative to the models trained directly on the GLUE tasks , InferSent is competitive and GenSen outperforms all but the two best .","['Relative', 'to', 'the', 'models', 'trained', 'directly', 'on', 'the', 'GLUE', 'tasks', ',', 'InferSent', 'is', 'competitive', 'and', 'GenSen', 'outperforms', 'all', 'but', 'the', 'two', 'best', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'TO', 'DT', 'NNS', 'VBN', 'RB', 'IN', 'DT', 'NNP', 'NNS', ',', 'NNP', 'VBZ', 'JJ', 'CC', 'NNP', 'VBZ', 'DT', 'CC', 'DT', 'CD', 'JJS', '.']",23
natural_language_inference,17,189,"Looking at results per task , we find that the sentence representation models substantially underperform on CoLA compared to the models directly trained on the task .","['Looking', 'at', 'results', 'per', 'task', ',', 'we', 'find', 'that', 'the', 'sentence', 'representation', 'models', 'substantially', 'underperform', 'on', 'CoLA', 'compared', 'to', 'the', 'models', 'directly', 'trained', 'on', 'the', 'task', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'O', 'O']","['VBG', 'IN', 'NNS', 'IN', 'NN', ',', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'NN', 'NNS', 'RB', 'VBP', 'IN', 'NNP', 'VBN', 'TO', 'DT', 'NNS', 'RB', 'VBN', 'IN', 'DT', 'NN', '.']",27
natural_language_inference,17,190,"On the other hand , for STS - B , models trained directly on the task lag significantly behind the performance of the best sentence representation model .","['On', 'the', 'other', 'hand', ',', 'for', 'STS', '-', 'B', ',', 'models', 'trained', 'directly', 'on', 'the', 'task', 'lag', 'significantly', 'behind', 'the', 'performance', 'of', 'the', 'best', 'sentence', 'representation', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'IN', 'NNP', ':', 'NNP', ',', 'NNS', 'VBN', 'RB', 'IN', 'DT', 'NN', 'NN', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJS', 'NN', 'NN', 'NN', '.']",28
natural_language_inference,17,192,"On WNLI , no model exceeds most - frequent - class guessing ( 65.1 % ) and we substitute the model predictions for the most -frequent baseline .","['On', 'WNLI', ',', 'no', 'model', 'exceeds', 'most', '-', 'frequent', '-', 'class', 'guessing', '(', '65.1', '%', ')', 'and', 'we', 'substitute', 'the', 'model', 'predictions', 'for', 'the', 'most', '-frequent', 'baseline', '.']","['B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ',', 'DT', 'NN', 'VBZ', 'RBS', ':', 'JJ', ':', 'NN', 'NN', '(', 'CD', 'NN', ')', 'CC', 'PRP', 'VBP', 'DT', 'NN', 'NNS', 'IN', 'DT', 'RBS', 'JJ', 'NN', '.']",28
natural_language_inference,17,193,"On RTE and in aggregate , even our best baselines leave room for improvement .","['On', 'RTE', 'and', 'in', 'aggregate', ',', 'even', 'our', 'best', 'baselines', 'leave', 'room', 'for', 'improvement', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', 'CC', 'IN', 'NN', ',', 'RB', 'PRP$', 'JJS', 'NNS', 'VBP', 'NN', 'IN', 'NN', '.']",15
natural_language_inference,2,2,Stochastic Answer Networks for Natural Language Inference,"['Stochastic', 'Answer', 'Networks', 'for', 'Natural', 'Language', 'Inference']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",7
natural_language_inference,2,9,"The natural language inference task , also known as recognizing textual entailment ( RTE ) , is to infer the relation between a pair of sentences ( e.g. , premise and hypothesis ) .","['The', 'natural', 'language', 'inference', 'task', ',', 'also', 'known', 'as', 'recognizing', 'textual', 'entailment', '(', 'RTE', ')', ',', 'is', 'to', 'infer', 'the', 'relation', 'between', 'a', 'pair', 'of', 'sentences', '(', 'e.g.', ',', 'premise', 'and', 'hypothesis', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'NN', 'NN', ',', 'RB', 'VBN', 'IN', 'VBG', 'JJ', 'NN', '(', 'NNP', ')', ',', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', '(', 'NN', ',', 'NN', 'CC', 'NN', ')', '.']",34
natural_language_inference,2,17,"Inspired by the recent success of multi-step inference on Machine Reading Comprehension ( MRC ) , we explore the multi-step inference strategies on NLI .","['Inspired', 'by', 'the', 'recent', 'success', 'of', 'multi-step', 'inference', 'on', 'Machine', 'Reading', 'Comprehension', '(', 'MRC', ')', ',', 'we', 'explore', 'the', 'multi-step', 'inference', 'strategies', 'on', 'NLI', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'NNP', '.']",25
natural_language_inference,2,18,"Rather than directly predicting the results given the inputs , the model maintains a state and iteratively refines its predictions .","['Rather', 'than', 'directly', 'predicting', 'the', 'results', 'given', 'the', 'inputs', ',', 'the', 'model', 'maintains', 'a', 'state', 'and', 'iteratively', 'refines', 'its', 'predictions', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['RB', 'IN', 'RB', 'VBG', 'DT', 'NNS', 'VBN', 'DT', 'NNS', ',', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'CC', 'RB', 'VB', 'PRP$', 'NNS', '.']",21
natural_language_inference,2,80,The spaCy tool 2 is used to tokenize all the dataset and PyTorch is used to implement our models .,"['The', 'spaCy', 'tool', '2', 'is', 'used', 'to', 'tokenize', 'all', 'the', 'dataset', 'and', 'PyTorch', 'is', 'used', 'to', 'implement', 'our', 'models', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'CD', 'VBZ', 'VBN', 'TO', 'VB', 'PDT', 'DT', 'NN', 'CC', 'NNP', 'VBZ', 'VBN', 'TO', 'VB', 'PRP$', 'NNS', '.']",20
natural_language_inference,2,81,We fix word embedding with 300 - dimensional GloVe word vectors .,"['We', 'fix', 'word', 'embedding', 'with', '300', '-', 'dimensional', 'GloVe', 'word', 'vectors', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'NN', 'VBG', 'IN', 'CD', ':', 'JJ', 'NNP', 'NN', 'NNS', '.']",12
natural_language_inference,2,82,"For the character encoding , we use a concatenation of the multi-filter Convolutional Neural Nets with windows 1 , 3 , 5 and the hidden size 50 , 100 , 150 .","['For', 'the', 'character', 'encoding', ',', 'we', 'use', 'a', 'concatenation', 'of', 'the', 'multi-filter', 'Convolutional', 'Neural', 'Nets', 'with', 'windows', '1', ',', '3', ',', '5', 'and', 'the', 'hidden', 'size', '50', ',', '100', ',', '150', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNS', 'CD', ',', 'CD', ',', 'CD', 'CC', 'DT', 'JJ', 'NN', 'CD', ',', 'CD', ',', 'CD', '.']",32
natural_language_inference,2,84,So lexicon embeddings are d =600 - dimensions .,"['So', 'lexicon', 'embeddings', 'are', 'd', '=600', '-', 'dimensions', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'JJ', 'NNS', 'VBP', 'JJ', 'NNP', ':', 'NNS', '.']",9
natural_language_inference,2,85,The embedding for the out - of - vocabulary is zeroed .,"['The', 'embedding', 'for', 'the', 'out', '-', 'of', '-', 'vocabulary', 'is', 'zeroed', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'DT', 'RP', ':', 'IN', ':', 'NN', 'VBZ', 'VBN', '.']",12
natural_language_inference,2,86,"The hidden size of LSTM in the contextual encoding layer , memory generation layer is set to 128 , thus the input size of output layer is 1024 ( 128 * 2 * 4 ) as Eq 2 .","['The', 'hidden', 'size', 'of', 'LSTM', 'in', 'the', 'contextual', 'encoding', 'layer', ',', 'memory', 'generation', 'layer', 'is', 'set', 'to', '128', ',', 'thus', 'the', 'input', 'size', 'of', 'output', 'layer', 'is', '1024', '(', '128', '*', '2', '*', '4', ')', 'as', 'Eq', '2', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'IN', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'NN', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', ',', 'RB', 'DT', 'NN', 'NN', 'IN', 'NN', 'NN', 'VBZ', 'CD', '(', 'CD', 'RB', 'CD', 'JJ', 'CD', ')', 'IN', 'NNP', 'CD', '.']",39
natural_language_inference,2,87,The projection size in the attention layer is set to 256 .,"['The', 'projection', 'size', 'in', 'the', 'attention', 'layer', 'is', 'set', 'to', '256', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",12
natural_language_inference,2,88,"To speedup training , we use weight normalization .","['To', 'speedup', 'training', ',', 'we', 'use', 'weight', 'normalization', '.']","['O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', '.']",9
natural_language_inference,2,89,"The dropout rate is 0.2 , and the dropout mask is fixed through time steps in LSTM .","['The', 'dropout', 'rate', 'is', '0.2', ',', 'and', 'the', 'dropout', 'mask', 'is', 'fixed', 'through', 'time', 'steps', 'in', 'LSTM', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', ',', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'NN', 'NNS', 'IN', 'NNP', '.']",18
natural_language_inference,2,90,The mini - batch size is set to 32 .,"['The', 'mini', '-', 'batch', 'size', 'is', 'set', 'to', '32', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', ':', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",10
natural_language_inference,2,91,Our optimizer is Adamax and its learning rate is initialized as 0.002 and decreased by 0.5 after each 10 epochs .,"['Our', 'optimizer', 'is', 'Adamax', 'and', 'its', 'learning', 'rate', 'is', 'initialized', 'as', '0.002', 'and', 'decreased', 'by', '0.5', 'after', 'each', '10', 'epochs', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'NNP', 'CC', 'PRP$', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'CD', 'CC', 'VBN', 'IN', 'CD', 'IN', 'DT', 'CD', 'NN', '.']",21
natural_language_inference,2,101,shows that our multi-step model consistently outperforms the single - step model on the dev set of all four datasets in terms of accuracy .,"['shows', 'that', 'our', 'multi-step', 'model', 'consistently', 'outperforms', 'the', 'single', '-', 'step', 'model', 'on', 'the', 'dev', 'set', 'of', 'all', 'four', 'datasets', 'in', 'terms', 'of', 'accuracy', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'O']","['NNS', 'WDT', 'PRP$', 'JJ', 'NN', 'RB', 'VBZ', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'CD', 'NNS', 'IN', 'NNS', 'IN', 'NN', '.']",25
natural_language_inference,2,102,"For example , on SciTail dataset , SAN outperforms the single - step model by .","['For', 'example', ',', 'on', 'SciTail', 'dataset', ',', 'SAN', 'outperforms', 'the', 'single', '-', 'step', 'model', 'by', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'NN', ',', 'IN', 'NNP', 'NN', ',', 'NNP', 'VBZ', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', '.']",16
natural_language_inference,2,105,"On SciTail dataset , SAN even outperforms GPT .","['On', 'SciTail', 'dataset', ',', 'SAN', 'even', 'outperforms', 'GPT', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'B-n', 'O']","['IN', 'NNP', 'NN', ',', 'NNP', 'RB', 'VBZ', 'NNP', '.']",9
natural_language_inference,2,108,"Comparing with Single - step baseline , the proposed model obtains + 2.8 improvement on the Sc - iTail test set ( 94.0 vs 91.2 ) and + 2.1 improvement on the SciTail dev set ( 96.1 vs 93.9 ) .","['Comparing', 'with', 'Single', '-', 'step', 'baseline', ',', 'the', 'proposed', 'model', 'obtains', '+', '2.8', 'improvement', 'on', 'the', 'Sc', '-', 'iTail', 'test', 'set', '(', '94.0', 'vs', '91.2', ')', 'and', '+', '2.1', 'improvement', 'on', 'the', 'SciTail', 'dev', 'set', '(', '96.1', 'vs', '93.9', ')', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['VBG', 'IN', 'NNP', ':', 'NN', 'NN', ',', 'DT', 'VBN', 'NN', 'VBZ', 'JJ', 'CD', 'NN', 'IN', 'DT', 'NNP', ':', 'JJ', 'NN', 'NN', '(', 'CD', 'RB', 'CD', ')', 'CC', '$', 'CD', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NN', '(', 'CD', 'RB', 'CD', ')', '.']",41
natural_language_inference,2,128,"Our model outperforms the best system in RepEval 2017 inmost cases , except on "" Conditional "" and "" Tense Difference "" categories .","['Our', 'model', 'outperforms', 'the', 'best', 'system', 'in', 'RepEval', '2017', 'inmost', 'cases', ',', 'except', 'on', '""', 'Conditional', '""', 'and', '""', 'Tense', 'Difference', '""', 'categories', '.']","['B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'JJ', 'CD', 'NN', 'NNS', ',', 'IN', 'IN', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNS', '.']",24
natural_language_inference,2,129,"We also find that SAN works extremely well on "" Active / Passive "" and "" Paraphrase "" categories .","['We', 'also', 'find', 'that', 'SAN', 'works', 'extremely', 'well', 'on', '""', 'Active', '/', 'Passive', '""', 'and', '""', 'Paraphrase', '""', 'categories', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'IN', 'NNP', 'VBZ', 'RB', 'RB', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNS', '.']",20
natural_language_inference,2,130,"Comparing with Chen 's model , the biggest improvement of SAN ( 50 % vs 77 % and 58 % vs 85 % on Matched and Mismatched settings respectively ) is on the "" Antonym "" category .","['Comparing', 'with', 'Chen', ""'s"", 'model', ',', 'the', 'biggest', 'improvement', 'of', 'SAN', '(', '50', '%', 'vs', '77', '%', 'and', '58', '%', 'vs', '85', '%', 'on', 'Matched', 'and', 'Mismatched', 'settings', 'respectively', ')', 'is', 'on', 'the', '""', 'Antonym', '""', 'category', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'IN', 'NNP', 'POS', 'NN', ',', 'DT', 'JJS', 'NN', 'IN', 'NNP', '(', 'CD', 'NN', 'JJ', 'CD', 'NN', 'CC', 'CD', 'NN', 'JJ', 'CD', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'NNS', 'RB', ')', 'VBZ', 'IN', 'DT', 'NNP', 'NNP', 'NNP', 'NN', '.']",38
natural_language_inference,2,131,"In particular , on the most challenging "" Long Sentence "" and "" Quantity / Time "" categories , SAN 's result is substantially better than previous systems .","['In', 'particular', ',', 'on', 'the', 'most', 'challenging', '""', 'Long', 'Sentence', '""', 'and', '""', 'Quantity', '/', 'Time', '""', 'categories', ',', 'SAN', ""'s"", 'result', 'is', 'substantially', 'better', 'than', 'previous', 'systems', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'JJ', ',', 'IN', 'DT', 'RBS', 'JJ', 'NN', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNS', ',', 'NNP', 'POS', 'NN', 'VBZ', 'RB', 'JJR', 'IN', 'JJ', 'NNS', '.']",29
natural_language_inference,3,2,Exploring Question Understanding and Adaptation in Neural - Network - Based Question Answering,"['Exploring', 'Question', 'Understanding', 'and', 'Adaptation', 'in', 'Neural', '-', 'Network', '-', 'Based', 'Question', 'Answering']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'NNP', 'NNP', 'CC', 'NNP', 'IN', 'NNP', ':', 'NNP', ':', 'VBN', 'NN', 'VBG']",13
natural_language_inference,3,4,The last several years have seen intensive interest in exploring neural - networkbased models for machine comprehension ( MC ) and question answering ( QA ) .,"['The', 'last', 'several', 'years', 'have', 'seen', 'intensive', 'interest', 'in', 'exploring', 'neural', '-', 'networkbased', 'models', 'for', 'machine', 'comprehension', '(', 'MC', ')', 'and', 'question', 'answering', '(', 'QA', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'JJ', 'NNS', 'VBP', 'VBN', 'JJ', 'NN', 'IN', 'VBG', 'JJ', ':', 'JJ', 'NNS', 'IN', 'NN', 'NN', '(', 'NNP', ')', 'CC', 'NN', 'NN', '(', 'NNP', ')', '.']",27
natural_language_inference,3,13,"In this paper , we take a closer look at modeling questions in such an end - to - end neural network framework , since we regard question understanding is of importance for such problems .","['In', 'this', 'paper', ',', 'we', 'take', 'a', 'closer', 'look', 'at', 'modeling', 'questions', 'in', 'such', 'an', 'end', '-', 'to', '-', 'end', 'neural', 'network', 'framework', ',', 'since', 'we', 'regard', 'question', 'understanding', 'is', 'of', 'importance', 'for', 'such', 'problems', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJR', 'NN', 'IN', 'VBG', 'NNS', 'IN', 'JJ', 'DT', 'NN', ':', 'TO', ':', 'VB', 'JJ', 'NN', 'NN', ',', 'IN', 'PRP', 'VBP', 'NN', 'NN', 'VBZ', 'IN', 'NN', 'IN', 'JJ', 'NNS', '.']",36
natural_language_inference,3,14,We first introduced syntactic information to help encode questions .,"['We', 'first', 'introduced', 'syntactic', 'information', 'to', 'help', 'encode', 'questions', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-n', 'O']","['PRP', 'RB', 'VBD', 'JJ', 'NN', 'TO', 'VB', 'VB', 'NNS', '.']",10
natural_language_inference,3,15,We then viewed and modelled different types of questions and the information shared among them as an adaptation problem and proposed adaptation models for them .,"['We', 'then', 'viewed', 'and', 'modelled', 'different', 'types', 'of', 'questions', 'and', 'the', 'information', 'shared', 'among', 'them', 'as', 'an', 'adaptation', 'problem', 'and', 'proposed', 'adaptation', 'models', 'for', 'them', '.']","['O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBD', 'CC', 'VBD', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'DT', 'NN', 'VBN', 'IN', 'PRP', 'IN', 'DT', 'NN', 'NN', 'CC', 'VBN', 'NN', 'NNS', 'IN', 'PRP', '.']",26
natural_language_inference,3,163,We test our models on Stanford Question Answering Dataset ( SQuAD ) .,"['We', 'test', 'our', 'models', 'on', 'Stanford', 'Question', 'Answering', 'Dataset', '(', 'SQuAD', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",13
natural_language_inference,3,164,"The SQuAD dataset consists of more than 100,000 questions annotated by crowdsourcing workers on a selected set of Wikipedia articles , and the answer to each question is a span of text in the Wikipedia articles .","['The', 'SQuAD', 'dataset', 'consists', 'of', 'more', 'than', '100,000', 'questions', 'annotated', 'by', 'crowdsourcing', 'workers', 'on', 'a', 'selected', 'set', 'of', 'Wikipedia', 'articles', ',', 'and', 'the', 'answer', 'to', 'each', 'question', 'is', 'a', 'span', 'of', 'text', 'in', 'the', 'Wikipedia', 'articles', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'IN', 'JJR', 'IN', 'CD', 'NNS', 'VBN', 'IN', 'VBG', 'NNS', 'IN', 'DT', 'VBN', 'NN', 'IN', 'NNP', 'NNS', ',', 'CC', 'DT', 'NN', 'TO', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NN', 'IN', 'DT', 'NNP', 'NNS', '.']",37
natural_language_inference,3,168,We use pre-trained 300 - D Glove 840B vectors to initialize our word embeddings .,"['We', 'use', 'pre-trained', '300', '-', 'D', 'Glove', '840B', 'vectors', 'to', 'initialize', 'our', 'word', 'embeddings', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'CD', ':', 'NNP', 'NNP', 'CD', 'NNS', 'TO', 'VB', 'PRP$', 'NN', 'NNS', '.']",15
natural_language_inference,3,169,Out - of - vocabulary ( OOV ) words are initialized randomly with Gaussian samples .,"['Out', '-', 'of', '-', 'vocabulary', '(', 'OOV', ')', 'words', 'are', 'initialized', 'randomly', 'with', 'Gaussian', 'samples', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', ':', 'IN', ':', 'NN', '(', 'NNP', ')', 'NNS', 'VBP', 'VBN', 'RB', 'IN', 'JJ', 'NNS', '.']",16
natural_language_inference,3,170,"CharCNN filter length is 1 , 3 , 5 , each is 50 dimensions .","['CharCNN', 'filter', 'length', 'is', '1', ',', '3', ',', '5', ',', 'each', 'is', '50', 'dimensions', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NNP', 'NN', 'NN', 'VBZ', 'CD', ',', 'CD', ',', 'CD', ',', 'DT', 'VBZ', 'CD', 'NNS', '.']",15
natural_language_inference,3,172,The cluster number K in discriminative block is 100 .,"['The', 'cluster', 'number', 'K', 'in', 'discriminative', 'block', 'is', '100', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'NNP', 'IN', 'JJ', 'NN', 'VBZ', 'CD', '.']",10
natural_language_inference,3,173,The Adam method is used for optimization .,"['The', 'Adam', 'method', 'is', 'used', 'for', 'optimization', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'VBN', 'IN', 'NN', '.']",8
natural_language_inference,3,174,And the first momentum is set to be 0.9 and the second 0.999 .,"['And', 'the', 'first', 'momentum', 'is', 'set', 'to', 'be', '0.9', 'and', 'the', 'second', '0.999', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'B-n', 'O']","['CC', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'CD', 'CC', 'DT', 'JJ', 'CD', '.']",14
natural_language_inference,3,175,The initial learning rate is 0.0004 and the batch size is 32 .,"['The', 'initial', 'learning', 'rate', 'is', '0.0004', 'and', 'the', 'batch', 'size', 'is', '32', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'CD', '.']",13
natural_language_inference,3,178,"All hidden states of GRUs , and TreeLSTMs are 500 dimensions , while word - level embedding d w is 300 dimensions .","['All', 'hidden', 'states', 'of', 'GRUs', ',', 'and', 'TreeLSTMs', 'are', '500', 'dimensions', ',', 'while', 'word', '-', 'level', 'embedding', 'd', 'w', 'is', '300', 'dimensions', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'IN', 'NNP', ',', 'CC', 'NNP', 'VBP', 'CD', 'NNS', ',', 'IN', 'NN', ':', 'NN', 'VBG', 'JJ', 'NN', 'VBZ', 'CD', 'NNS', '.']",23
natural_language_inference,3,179,"We set max length of document to 500 , and drop the question - document pairs beyond this on training set .","['We', 'set', 'max', 'length', 'of', 'document', 'to', '500', ',', 'and', 'drop', 'the', 'question', '-', 'document', 'pairs', 'beyond', 'this', 'on', 'training', 'set', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'NN', 'TO', 'CD', ',', 'CC', 'VB', 'DT', 'NN', ':', 'NN', 'VBZ', 'IN', 'DT', 'IN', 'NN', 'VBN', '.']",22
natural_language_inference,3,180,Explicit question - type dimension d ET is 50 .,"['Explicit', 'question', '-', 'type', 'dimension', 'd', 'ET', 'is', '50', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['NNP', 'NN', ':', 'NN', 'NN', 'NN', 'NNP', 'VBZ', 'CD', '.']",10
natural_language_inference,3,181,We apply dropout to the Encoder layer and aggregation layer with a dropout rate of 0.5 .,"['We', 'apply', 'dropout', 'to', 'the', 'Encoder', 'layer', 'and', 'aggregation', 'layer', 'with', 'a', 'dropout', 'rate', 'of', '0.5', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'RB', 'TO', 'DT', 'NNP', 'NN', 'CC', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",17
natural_language_inference,3,192,"Our model achieves a 68.73 % EM score and 77.39 % F1 score , which is ranked among the state of the art single models ( without model ensembling shows the ablation performances of various Q- code on the development set .","['Our', 'model', 'achieves', 'a', '68.73', '%', 'EM', 'score', 'and', '77.39', '%', 'F1', 'score', ',', 'which', 'is', 'ranked', 'among', 'the', 'state', 'of', 'the', 'art', 'single', 'models', '(', 'without', 'model', 'ensembling', 'shows', 'the', 'ablation', 'performances', 'of', 'various', 'Q-', 'code', 'on', 'the', 'development', 'set', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'CD', 'NN', 'NNP', 'NN', 'CC', 'CD', 'NN', 'NNP', 'NN', ',', 'WDT', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'JJ', 'NNS', '(', 'IN', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'NNS', 'IN', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",42
natural_language_inference,3,194,"Our baseline model using no Q- code achieved a 68.00 % and 77.36 % EM and F 1 scores , respectively .","['Our', 'baseline', 'model', 'using', 'no', 'Q-', 'code', 'achieved', 'a', '68.00', '%', 'and', '77.36', '%', 'EM', 'and', 'F', '1', 'scores', ',', 'respectively', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP$', 'NN', 'NN', 'VBG', 'DT', 'JJ', 'NN', 'VBD', 'DT', 'CD', 'NN', 'CC', 'CD', 'NN', 'NNP', 'CC', 'NNP', 'CD', 'NNS', ',', 'RB', '.']",22
natural_language_inference,3,195,"When we added the explicit question type T - code into the baseline model , the performance was improved slightly to 68.16 % ( EM ) and 77.58 % ( F1 ) .","['When', 'we', 'added', 'the', 'explicit', 'question', 'type', 'T', '-', 'code', 'into', 'the', 'baseline', 'model', ',', 'the', 'performance', 'was', 'improved', 'slightly', 'to', '68.16', '%', '(', 'EM', ')', 'and', '77.58', '%', '(', 'F1', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['WRB', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'NN', 'NNP', ':', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'DT', 'NN', 'VBD', 'VBN', 'RB', 'TO', 'CD', 'NN', '(', 'NNP', ')', 'CC', 'CD', 'NN', '(', 'NNP', ')', '.']",33
natural_language_inference,3,196,"We then used TreeLSTM introduce syntactic parses for question representation and understanding ( replacing simple question type as question understanding Q-code ) , which consistently shows further improvement .","['We', 'then', 'used', 'TreeLSTM', 'introduce', 'syntactic', 'parses', 'for', 'question', 'representation', 'and', 'understanding', '(', 'replacing', 'simple', 'question', 'type', 'as', 'question', 'understanding', 'Q-code', ')', ',', 'which', 'consistently', 'shows', 'further', 'improvement', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBD', 'NNP', 'VB', 'JJ', 'NNS', 'IN', 'NN', 'NN', 'CC', 'NN', '(', 'VBG', 'JJ', 'NN', 'NN', 'IN', 'NN', 'VBG', 'NNP', ')', ',', 'WDT', 'RB', 'VBZ', 'JJ', 'NN', '.']",29
natural_language_inference,3,204,"Take our best model as an example , we observed a 78.38 % F1 score on the whole development set , which can be separated into two parts : one is where F1 score equals to 100 % , which means an exact match .","['Take', 'our', 'best', 'model', 'as', 'an', 'example', ',', 'we', 'observed', 'a', '78.38', '%', 'F1', 'score', 'on', 'the', 'whole', 'development', 'set', ',', 'which', 'can', 'be', 'separated', 'into', 'two', 'parts', ':', 'one', 'is', 'where', 'F1', 'score', 'equals', 'to', '100', '%', ',', 'which', 'means', 'an', 'exact', 'match', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VB', 'PRP$', 'JJS', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBD', 'DT', 'CD', 'NN', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'WDT', 'MD', 'VB', 'VBN', 'IN', 'CD', 'NNS', ':', 'NN', 'VBZ', 'WRB', 'NNP', 'NN', 'NNS', 'TO', 'CD', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', '.']",45
natural_language_inference,15,2,Neural Natural Language Inference Models Enhanced with External Knowledge,"['Neural', 'Natural', 'Language', 'Inference', 'Models', 'Enhanced', 'with', 'External', 'Knowledge']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",9
natural_language_inference,15,4,Modeling natural language inference is a very challenging task .,"['Modeling', 'natural', 'language', 'inference', 'is', 'a', 'very', 'challenging', 'task', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'JJ', 'NN', 'NN', 'VBZ', 'DT', 'RB', 'JJ', 'NN', '.']",10
natural_language_inference,15,5,"With the availability of large annotated data , it has recently become feasible to train complex models such as neural - network - based inference models , which have shown to achieve the state - of - the - art performance .","['With', 'the', 'availability', 'of', 'large', 'annotated', 'data', ',', 'it', 'has', 'recently', 'become', 'feasible', 'to', 'train', 'complex', 'models', 'such', 'as', 'neural', '-', 'network', '-', 'based', 'inference', 'models', ',', 'which', 'have', 'shown', 'to', 'achieve', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', 'VBN', 'NNS', ',', 'PRP', 'VBZ', 'RB', 'VBN', 'JJ', 'TO', 'VB', 'JJ', 'NNS', 'JJ', 'IN', 'JJ', ':', 'NN', ':', 'VBN', 'NN', 'NNS', ',', 'WDT', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '.']",42
natural_language_inference,15,6,"Although there exist relatively large annotated data , can machines learn all knowledge needed to perform natural language inference ( NLI ) from these data ?","['Although', 'there', 'exist', 'relatively', 'large', 'annotated', 'data', ',', 'can', 'machines', 'learn', 'all', 'knowledge', 'needed', 'to', 'perform', 'natural', 'language', 'inference', '(', 'NLI', ')', 'from', 'these', 'data', '?']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'EX', 'VBP', 'RB', 'JJ', 'VBN', 'NNS', ',', 'MD', 'NNS', 'VB', 'DT', 'NN', 'VBN', 'TO', 'VB', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'IN', 'DT', 'NNS', '.']",26
natural_language_inference,15,7,"If not , how can neural - network - based NLI models benefit from external knowledge and how to build NLI models to leverage it ?","['If', 'not', ',', 'how', 'can', 'neural', '-', 'network', '-', 'based', 'NLI', 'models', 'benefit', 'from', 'external', 'knowledge', 'and', 'how', 'to', 'build', 'NLI', 'models', 'to', 'leverage', 'it', '?']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'RB', ',', 'WRB', 'MD', 'VB', ':', 'NN', ':', 'VBN', 'NNP', 'NNS', 'VBP', 'IN', 'JJ', 'NN', 'CC', 'WRB', 'TO', 'VB', 'NNP', 'NNS', 'TO', 'VB', 'PRP', '.']",26
natural_language_inference,15,12,"Natural language inference ( NLI ) , also known as recognizing textual entailment ( RTE ) , is an important NLP problem concerned with determining inferential relationship ( e.g. , entailment , contradiction , or neutral ) between a premise p and a hypothesis h.","['Natural', 'language', 'inference', '(', 'NLI', ')', ',', 'also', 'known', 'as', 'recognizing', 'textual', 'entailment', '(', 'RTE', ')', ',', 'is', 'an', 'important', 'NLP', 'problem', 'concerned', 'with', 'determining', 'inferential', 'relationship', '(', 'e.g.', ',', 'entailment', ',', 'contradiction', ',', 'or', 'neutral', ')', 'between', 'a', 'premise', 'p', 'and', 'a', 'hypothesis', 'h.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', '(', 'NNP', ')', ',', 'RB', 'VBN', 'IN', 'VBG', 'JJ', 'NN', '(', 'NNP', ')', ',', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'VBN', 'IN', 'VBG', 'JJ', 'NN', '(', 'NN', ',', 'NN', ',', 'NN', ',', 'CC', 'JJ', ')', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN']",45
natural_language_inference,15,23,"In this paper we enrich neural - network - based NLI models with external knowledge in coattention , local inference collection , and inference composition components .","['In', 'this', 'paper', 'we', 'enrich', 'neural', '-', 'network', '-', 'based', 'NLI', 'models', 'with', 'external', 'knowledge', 'in', 'coattention', ',', 'local', 'inference', 'collection', ',', 'and', 'inference', 'composition', 'components', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'JJ', ':', 'NN', ':', 'VBN', 'NNP', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'NN', ',', 'JJ', 'NN', 'NN', ',', 'CC', 'NN', 'NN', 'NNS', '.']",27
natural_language_inference,15,24,We show the proposed model improves the state - of - the - art NLI models to achieve better performances on the SNLI and MultiNLI datasets .,"['We', 'show', 'the', 'proposed', 'model', 'improves', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'NLI', 'models', 'to', 'achieve', 'better', 'performances', 'on', 'the', 'SNLI', 'and', 'MultiNLI', 'datasets', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'VBN', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'NNS', 'TO', 'VB', 'JJR', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",27
natural_language_inference,15,25,"The advantage of using external knowledge is more significant when the size of training data is restricted , suggesting that if more knowledge can be obtained , it may bring more benefit .","['The', 'advantage', 'of', 'using', 'external', 'knowledge', 'is', 'more', 'significant', 'when', 'the', 'size', 'of', 'training', 'data', 'is', 'restricted', ',', 'suggesting', 'that', 'if', 'more', 'knowledge', 'can', 'be', 'obtained', ',', 'it', 'may', 'bring', 'more', 'benefit', '.']","['O', 'B-n', 'B-p', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'VBG', 'JJ', 'NN', 'VBZ', 'RBR', 'JJ', 'WRB', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBZ', 'VBN', ',', 'VBG', 'IN', 'IN', 'JJR', 'NN', 'MD', 'VB', 'VBN', ',', 'PRP', 'MD', 'VB', 'JJR', 'NN', '.']",33
natural_language_inference,15,160,The main training details are as follows : the dimension of the hidden states of LSTMs and word embeddings are 300 .,"['The', 'main', 'training', 'details', 'are', 'as', 'follows', ':', 'the', 'dimension', 'of', 'the', 'hidden', 'states', 'of', 'LSTMs', 'and', 'word', 'embeddings', 'are', '300', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'NNS', 'VBP', 'IN', 'VBZ', ':', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'NNP', 'CC', 'NN', 'NNS', 'VBP', 'CD', '.']",22
natural_language_inference,15,161,"The word embeddings are initialized by 300D GloVe 840B , and out - of - vocabulary words among them are initialized randomly .","['The', 'word', 'embeddings', 'are', 'initialized', 'by', '300D', 'GloVe', '840B', ',', 'and', 'out', '-', 'of', '-', 'vocabulary', 'words', 'among', 'them', 'are', 'initialized', 'randomly', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'CD', 'NNP', 'CD', ',', 'CC', 'IN', ':', 'IN', ':', 'JJ', 'NNS', 'IN', 'PRP', 'VBP', 'JJ', 'RB', '.']",23
natural_language_inference,15,163,"Adam ( Kingma and Ba , 2014 ) is used for optimization with an initial learning rate of 0.0004 .","['Adam', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', 'is', 'used', 'for', 'optimization', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.0004', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['NNP', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'VBZ', 'VBN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', '.']",20
natural_language_inference,15,164,The mini - batch size is set to 32 .,"['The', 'mini', '-', 'batch', 'size', 'is', 'set', 'to', '32', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', ':', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",10
natural_language_inference,15,170,"The proposed model , namely Knowledge - based Inference Model ( KIM ) , which enriches ESIM with external knowledge , obtains an accuracy of 88.6 % , the best single - model performance reported on the SNLI dataset .","['The', 'proposed', 'model', ',', 'namely', 'Knowledge', '-', 'based', 'Inference', 'Model', '(', 'KIM', ')', ',', 'which', 'enriches', 'ESIM', 'with', 'external', 'knowledge', ',', 'obtains', 'an', 'accuracy', 'of', '88.6', '%', ',', 'the', 'best', 'single', '-', 'model', 'performance', 'reported', 'on', 'the', 'SNLI', 'dataset', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'VBN', 'NN', ',', 'RB', 'NNP', ':', 'VBN', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'NNP', 'IN', 'JJ', 'NN', ',', 'VBZ', 'DT', 'NN', 'IN', 'CD', 'NN', ',', 'DT', 'JJS', 'JJ', ':', 'NN', 'NN', 'VBD', 'IN', 'DT', 'NNP', 'NN', '.']",40
natural_language_inference,15,171,The difference between ESIM and KIM is statistically significant under the one - tailed paired t- test at the 99 % significance level .,"['The', 'difference', 'between', 'ESIM', 'and', 'KIM', 'is', 'statistically', 'significant', 'under', 'the', 'one', '-', 'tailed', 'paired', 't-', 'test', 'at', 'the', '99', '%', 'significance', 'level', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'VBZ', 'RB', 'JJ', 'IN', 'DT', 'CD', ':', 'VBN', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'CD', 'NN', 'NN', 'NN', '.']",24
natural_language_inference,15,177,shows the performance of models on the MultiNLI dataset .,"['shows', 'the', 'performance', 'of', 'models', 'on', 'the', 'MultiNLI', 'dataset', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBZ', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NNP', 'NN', '.']",10
natural_language_inference,15,178,"The baseline ESIM achieves 76.8 % and 75.8 % on in - domain and cross - domain test set , respectively .","['The', 'baseline', 'ESIM', 'achieves', '76.8', '%', 'and', '75.8', '%', 'on', 'in', '-', 'domain', 'and', 'cross', '-', 'domain', 'test', 'set', ',', 'respectively', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['DT', 'NN', 'NNP', 'VBZ', 'CD', 'NN', 'CC', 'CD', 'NN', 'IN', 'IN', ':', 'NN', 'CC', 'NN', ':', 'NN', 'NN', 'NN', ',', 'RB', '.']",22
natural_language_inference,15,179,"If we extend the ESIM with external knowledge , we achieve significant gains to 77.2 % and 76.4 % respectively .","['If', 'we', 'extend', 'the', 'ESIM', 'with', 'external', 'knowledge', ',', 'we', 'achieve', 'significant', 'gains', 'to', '77.2', '%', 'and', '76.4', '%', 'respectively', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['IN', 'PRP', 'VBP', 'DT', 'NNP', 'IN', 'JJ', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'TO', 'CD', 'NN', 'CC', 'CD', 'NN', 'RB', '.']",21
natural_language_inference,22,2,Multi- task Sentence Encoding Model for Semantic Retrieval in Question Answering Systems,"['Multi-', 'task', 'Sentence', 'Encoding', 'Model', 'for', 'Semantic', 'Retrieval', 'in', 'Question', 'Answering', 'Systems']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['NNP', 'NN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNPS']",12
natural_language_inference,22,4,Question Answering ( QA ) systems are used to provide proper responses to users ' questions automatically .,"['Question', 'Answering', '(', 'QA', ')', 'systems', 'are', 'used', 'to', 'provide', 'proper', 'responses', 'to', 'users', ""'"", 'questions', 'automatically', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'NNP', '(', 'NNP', ')', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'JJ', 'NNS', 'TO', 'NNS', 'POS', 'NNS', 'RB', '.']",18
natural_language_inference,22,5,Sentence matching is an essential task in the QA systems and is usually reformulated as a Paraphrase Identification ( PI ) problem .,"['Sentence', 'matching', 'is', 'an', 'essential', 'task', 'in', 'the', 'QA', 'systems', 'and', 'is', 'usually', 'reformulated', 'as', 'a', 'Paraphrase', 'Identification', '(', 'PI', ')', 'problem', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NNS', 'CC', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', '.']",23
natural_language_inference,22,28,"We employ a connected graph to depict the paraphrase relation between sentences for the PI task , and propose a multi-task sentence - encoding model , which solves the paraphrase identification task and the sentence intent classification task simultaneously .","['We', 'employ', 'a', 'connected', 'graph', 'to', 'depict', 'the', 'paraphrase', 'relation', 'between', 'sentences', 'for', 'the', 'PI', 'task', ',', 'and', 'propose', 'a', 'multi-task', 'sentence', '-', 'encoding', 'model', ',', 'which', 'solves', 'the', 'paraphrase', 'identification', 'task', 'and', 'the', 'sentence', 'intent', 'classification', 'task', 'simultaneously', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NNP', 'NN', ',', 'CC', 'VB', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'NN', 'NN', 'RB', '.']",40
natural_language_inference,22,29,"We propose a semantic retrieval framework that integrates the encoding - based sentence matching model with the approximate nearest neighbor search technology , which allows us to find the most similar question very quickly from all available questions , instead of within only a few candidates , in the QA knowledge base .","['We', 'propose', 'a', 'semantic', 'retrieval', 'framework', 'that', 'integrates', 'the', 'encoding', '-', 'based', 'sentence', 'matching', 'model', 'with', 'the', 'approximate', 'nearest', 'neighbor', 'search', 'technology', ',', 'which', 'allows', 'us', 'to', 'find', 'the', 'most', 'similar', 'question', 'very', 'quickly', 'from', 'all', 'available', 'questions', ',', 'instead', 'of', 'within', 'only', 'a', 'few', 'candidates', ',', 'in', 'the', 'QA', 'knowledge', 'base', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'VBG', ':', 'VBN', 'NN', 'VBG', 'NN', 'IN', 'DT', 'JJ', 'JJS', 'NN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'PRP', 'TO', 'VB', 'DT', 'RBS', 'JJ', 'NN', 'RB', 'RB', 'IN', 'DT', 'JJ', 'NNS', ',', 'RB', 'IN', 'IN', 'RB', 'DT', 'JJ', 'NNS', ',', 'IN', 'DT', 'NNP', 'NN', 'NN', '.']",53
natural_language_inference,22,153,"For Quora dataset , we use the Glove - 840B - 300D vector as the pre-trained word embedding .","['For', 'Quora', 'dataset', ',', 'we', 'use', 'the', 'Glove', '-', '840B', '-', '300D', 'vector', 'as', 'the', 'pre-trained', 'word', 'embedding', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NNP', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', ':', 'CD', ':', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",19
natural_language_inference,22,154,The character embedding is randomly initialized with 150 D and the hidden size of BiGRU is set to 300 .,"['The', 'character', 'embedding', 'is', 'randomly', 'initialized', 'with', '150', 'D', 'and', 'the', 'hidden', 'size', 'of', 'BiGRU', 'is', 'set', 'to', '300', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'CD', 'NNP', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'VBZ', 'VBN', 'TO', 'CD', '.']",20
natural_language_inference,22,155,We set = 0.8 in the multi - task loss function .,"['We', 'set', '=', '0.8', 'in', 'the', 'multi', '-', 'task', 'loss', 'function', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'CD', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'NN', '.']",12
natural_language_inference,22,157,"Dropout layer is also applied to the output of the attentive pooling layer , with a dropout rate of 0.1 .","['Dropout', 'layer', 'is', 'also', 'applied', 'to', 'the', 'output', 'of', 'the', 'attentive', 'pooling', 'layer', ',', 'with', 'a', 'dropout', 'rate', 'of', '0.1', '.']","['B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['NNP', 'NN', 'VBZ', 'RB', 'VBN', 'TO', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",21
natural_language_inference,22,158,An Adam optimizer is used to optimize all the trainable weights .,"['An', 'Adam', 'optimizer', 'is', 'used', 'to', 'optimize', 'all', 'the', 'trainable', 'weights', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'PDT', 'DT', 'JJ', 'NNS', '.']",12
natural_language_inference,22,159,The learning rate is set to 4e - 4 and the batch size is set to 200 .,"['The', 'learning', 'rate', 'is', 'set', 'to', '4e', '-', '4', 'and', 'the', 'batch', 'size', 'is', 'set', 'to', '200', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', ':', 'CD', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",18
natural_language_inference,22,160,"When the performance of the model is no longer improved , an SGD optimizer with a learning rate of 1e - 3 is used to find a better local optimum .","['When', 'the', 'performance', 'of', 'the', 'model', 'is', 'no', 'longer', 'improved', ',', 'an', 'SGD', 'optimizer', 'with', 'a', 'learning', 'rate', 'of', '1e', '-', '3', 'is', 'used', 'to', 'find', 'a', 'better', 'local', 'optimum', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['WRB', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'RBR', 'VBN', ',', 'DT', 'NNP', 'NN', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', ':', 'CD', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJR', 'JJ', 'NN', '.']",31
natural_language_inference,22,163,ESIM : Enhanced Sequential Inference Model is an interaction - based model for natural language inference .,"['ESIM', ':', 'Enhanced', 'Sequential', 'Inference', 'Model', 'is', 'an', 'interaction', '-', 'based', 'model', 'for', 'natural', 'language', 'inference', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NN', ':', 'NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",17
natural_language_inference,22,166,BiMPM : Bilateral Multi- Perspective Matching model is an interaction - based sentence matching model with superior performance .,"['BiMPM', ':', 'Bilateral', 'Multi-', 'Perspective', 'Matching', 'model', 'is', 'an', 'interaction', '-', 'based', 'sentence', 'matching', 'model', 'with', 'superior', 'performance', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', ':', 'JJ', 'NNP', 'NNP', 'NNP', 'NN', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', 'VBG', 'NN', 'IN', 'JJ', 'NN', '.']",19
natural_language_inference,22,168,"SSE : Shortcut - Stacked Sentence Encoder is an encodingbased sentence - matching model , which enhances multi - layer BiLSTM with short - cut connections .","['SSE', ':', 'Shortcut', '-', 'Stacked', 'Sentence', 'Encoder', 'is', 'an', 'encodingbased', 'sentence', '-', 'matching', 'model', ',', 'which', 'enhances', 'multi', '-', 'layer', 'BiLSTM', 'with', 'short', '-', 'cut', 'connections', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', ':', 'NNP', ':', 'VBD', 'NNP', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', ',', 'WDT', 'VBZ', 'SYM', ':', 'NN', 'NNP', 'IN', 'JJ', ':', 'JJ', 'NNS', '.']",27
natural_language_inference,22,170,DIIN : Densely Interactive Inference Network is an interaction - based model for natural language inference ( NLI ) .,"['DIIN', ':', 'Densely', 'Interactive', 'Inference', 'Network', 'is', 'an', 'interaction', '-', 'based', 'model', 'for', 'natural', 'language', 'inference', '(', 'NLI', ')', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', ':', 'RB', 'NNP', 'NNP', 'NNP', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', 'IN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', '.']",20
natural_language_inference,22,178,"Quora dataset : BiMPM and ESIM models without any sentence interaction information , and is very close to DIIN , the state - of - the - art interaction - based model , but we do n't any external knowledge in our method .","['Quora', 'dataset', ':', 'BiMPM', 'and', 'ESIM', 'models', 'without', 'any', 'sentence', 'interaction', 'information', ',', 'and', 'is', 'very', 'close', 'to', 'DIIN', ',', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'interaction', '-', 'based', 'model', ',', 'but', 'we', 'do', ""n't"", 'any', 'external', 'knowledge', 'in', 'our', 'method', '.']","['B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ':', 'NNP', 'CC', 'NNP', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NN', ',', 'CC', 'VBZ', 'RB', 'JJ', 'TO', 'NNP', ',', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', ':', 'VBN', 'NN', ',', 'CC', 'PRP', 'VBP', 'RB', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', '.']",44
natural_language_inference,22,179,LCQMC dataset : Experimental results of LCQMC dataset compared with the existing models are shown in .,"['LCQMC', 'dataset', ':', 'Experimental', 'results', 'of', 'LCQMC', 'dataset', 'compared', 'with', 'the', 'existing', 'models', 'are', 'shown', 'in', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', ':', 'JJ', 'NNS', 'IN', 'NNP', 'NN', 'VBN', 'IN', 'DT', 'VBG', 'NNS', 'VBP', 'VBN', 'IN', '.']",17
natural_language_inference,22,180,The experimental results show that our model outperforms state - of the - art models .,"['The', 'experimental', 'results', 'show', 'that', 'our', 'model', 'outperforms', 'state', '-', 'of', 'the', '-', 'art', 'models', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'VBP', 'IN', 'PRP$', 'NN', 'NNS', 'NN', ':', 'IN', 'DT', ':', 'NN', 'NNS', '.']",16
natural_language_inference,22,181,BQ dataset : BQ dataset is a specific - domain dataset with a low average overlap rate .,"['BQ', 'dataset', ':', 'BQ', 'dataset', 'is', 'a', 'specific', '-', 'domain', 'dataset', 'with', 'a', 'low', 'average', 'overlap', 'rate', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', ':', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'JJ', 'NN', '.']",18
natural_language_inference,22,182,"As shown in , our model outperforms state - of - the - art models by a large margin , reaching 83 . 62 % , recording the state - of - the - art performance .","['As', 'shown', 'in', ',', 'our', 'model', 'outperforms', 'state', '-', 'of', '-', 'the', '-', 'art', 'models', 'by', 'a', 'large', 'margin', ',', 'reaching', '83', '.', '62', '%', ',', 'recording', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', 'IN', ',', 'PRP$', 'NN', 'NNS', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'VBG', 'CD', '.', 'CD', 'NN', ',', 'VBG', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', '.']",37
natural_language_inference,22,183,TCS dataset :,"['TCS', 'dataset', ':']","['B-n', 'I-n', 'O']","['NNP', 'NN', ':']",3
natural_language_inference,22,184,As shown in show that our MSEM model achieves the best performance .,"['As', 'shown', 'in', 'show', 'that', 'our', 'MSEM', 'model', 'achieves', 'the', 'best', 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'VBN', 'IN', 'NN', 'IN', 'PRP$', 'NNP', 'NN', 'VBZ', 'DT', 'JJS', 'NN', '.']",13
natural_language_inference,22,193,We first study the contribution of the ARU component .,"['We', 'first', 'study', 'the', 'contribution', 'of', 'the', 'ARU', 'component', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBD', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",10
natural_language_inference,22,194,"The accuracy decreases , the accuracy will drop to 88.25 % .","['The', 'accuracy', 'decreases', ',', 'the', 'accuracy', 'will', 'drop', 'to', '88.25', '%', '.']","['O', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', ',', 'DT', 'NN', 'MD', 'VB', 'TO', 'CD', 'NN', '.']",12
natural_language_inference,22,196,It turns out that the attentive pooling is better than max pooling .,"['It', 'turns', 'out', 'that', 'the', 'attentive', 'pooling', 'is', 'better', 'than', 'max', 'pooling', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'RP', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'JJR', 'IN', 'NN', 'NN', '.']",13
natural_language_inference,22,197,"Then if we remove the highway network , the accuracy will drop to 88.36 % .","['Then', 'if', 'we', 'remove', 'the', 'highway', 'network', ',', 'the', 'accuracy', 'will', 'drop', 'to', '88.36', '%', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'NN', ',', 'DT', 'NN', 'MD', 'VB', 'TO', 'CD', 'NN', '.']",16
natural_language_inference,22,198,"Finally when we remove the character - level embedding , the accuracy will drop to 88.26 % .","['Finally', 'when', 'we', 'remove', 'the', 'character', '-', 'level', 'embedding', ',', 'the', 'accuracy', 'will', 'drop', 'to', '88.26', '%', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'WRB', 'PRP', 'VBP', 'DT', 'NN', ':', 'NN', 'NN', ',', 'DT', 'NN', 'MD', 'VB', 'TO', 'CD', 'NN', '.']",18
natural_language_inference,30,2,Convolutional Neural Network Architectures for Matching Natural Language Sentences,"['Convolutional', 'Neural', 'Network', 'Architectures', 'for', 'Matching', 'Natural', 'Language', 'Sentences']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'NNS']",9
natural_language_inference,30,4,"Semantic matching is of central importance to many natural language tasks [ 2,28 ] .","['Semantic', 'matching', 'is', 'of', 'central', 'importance', 'to', 'many', 'natural', 'language', 'tasks', '[', '2,28', ']', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'VBZ', 'IN', 'JJ', 'NN', 'TO', 'JJ', 'JJ', 'NN', 'NNS', 'VBP', 'CD', 'NN', '.']",15
natural_language_inference,30,11,Matching two potentially heterogenous language objects is central to many natural language applications .,"['Matching', 'two', 'potentially', 'heterogenous', 'language', 'objects', 'is', 'central', 'to', 'many', 'natural', 'language', 'applications', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'CD', 'RB', 'JJ', 'NN', 'NNS', 'VBZ', 'JJ', 'TO', 'JJ', 'JJ', 'NN', 'NNS', '.']",14
natural_language_inference,30,14,"Natural language sentences have complicated structures , both sequential and hierarchical , that are essential for understanding them .","['Natural', 'language', 'sentences', 'have', 'complicated', 'structures', ',', 'both', 'sequential', 'and', 'hierarchical', ',', 'that', 'are', 'essential', 'for', 'understanding', 'them', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NNS', 'VBP', 'VBN', 'NNS', ',', 'DT', 'JJ', 'CC', 'JJ', ',', 'WDT', 'VBP', 'JJ', 'IN', 'VBG', 'PRP', '.']",19
natural_language_inference,30,15,A successful sentence - matching algorithm therefore needs to capture not only the internal structures of sentences but also the rich patterns in their interactions .,"['A', 'successful', 'sentence', '-', 'matching', 'algorithm', 'therefore', 'needs', 'to', 'capture', 'not', 'only', 'the', 'internal', 'structures', 'of', 'sentences', 'but', 'also', 'the', 'rich', 'patterns', 'in', 'their', 'interactions', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', ':', 'NN', 'NN', 'RB', 'VBZ', 'TO', 'VB', 'RB', 'RB', 'DT', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'RB', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'NNS', '.']",26
natural_language_inference,30,16,"Towards this end , we propose deep neural network models , which adapt the convolutional strategy ( proven successful on image and speech ) to natural language .","['Towards', 'this', 'end', ',', 'we', 'propose', 'deep', 'neural', 'network', 'models', ',', 'which', 'adapt', 'the', 'convolutional', 'strategy', '(', 'proven', 'successful', 'on', 'image', 'and', 'speech', ')', 'to', 'natural', 'language', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['NNS', 'DT', 'NN', ',', 'PRP', 'VBP', 'JJ', 'JJ', 'NN', 'NNS', ',', 'WDT', 'VBP', 'DT', 'JJ', 'NN', '(', 'RB', 'JJ', 'IN', 'NN', 'CC', 'NN', ')', 'TO', 'JJ', 'NN', '.']",28
natural_language_inference,30,17,"To further explore the relation between representing sentences and matching them , we devise a novel model that can naturally host both the hierarchical composition for sentences and the simple - to - comprehensive fusion of matching patterns with the same convolutional architecture .","['To', 'further', 'explore', 'the', 'relation', 'between', 'representing', 'sentences', 'and', 'matching', 'them', ',', 'we', 'devise', 'a', 'novel', 'model', 'that', 'can', 'naturally', 'host', 'both', 'the', 'hierarchical', 'composition', 'for', 'sentences', 'and', 'the', 'simple', '-', 'to', '-', 'comprehensive', 'fusion', 'of', 'matching', 'patterns', 'with', 'the', 'same', 'convolutional', 'architecture', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'RBR', 'VB', 'DT', 'NN', 'IN', 'VBG', 'NNS', 'CC', 'VBG', 'PRP', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'WDT', 'MD', 'RB', 'VB', 'DT', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'CC', 'DT', 'JJ', ':', 'TO', ':', 'JJ', 'NN', 'IN', 'VBG', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NN', '.']",44
natural_language_inference,30,18,"Our model is generic , requiring no prior knowledge of natural language ( e.g. , parse tree ) and putting essentially no constraints on the matching tasks .","['Our', 'model', 'is', 'generic', ',', 'requiring', 'no', 'prior', 'knowledge', 'of', 'natural', 'language', '(', 'e.g.', ',', 'parse', 'tree', ')', 'and', 'putting', 'essentially', 'no', 'constraints', 'on', 'the', 'matching', 'tasks', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'VBZ', 'JJ', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', '(', 'JJ', ',', 'JJ', 'NN', ')', 'CC', 'VBG', 'RB', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NNS', '.']",28
natural_language_inference,30,148,Experiment I : Sentence Completion,"['Experiment', 'I', ':', 'Sentence', 'Completion']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'PRP', ':', 'NN', 'NN']",5
natural_language_inference,30,157,"ARC - II outperforms ARC - I significantly , showing the power of joint modeling of matching and sentence meaning .","['ARC', '-', 'II', 'outperforms', 'ARC', '-', 'I', 'significantly', ',', 'showing', 'the', 'power', 'of', 'joint', 'modeling', 'of', 'matching', 'and', 'sentence', 'meaning', '.']","['B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NN', 'NNS', 'NNP', ':', 'PRP', 'RB', ',', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'VBG', 'CC', 'NN', 'NN', '.']",21
natural_language_inference,30,158,"As another convolutional model , SENNA + MLP performs fairly well on this task , although still running behind the proposed convolutional architectures since it is too shallow to adequately model the sentence .","['As', 'another', 'convolutional', 'model', ',', 'SENNA', '+', 'MLP', 'performs', 'fairly', 'well', 'on', 'this', 'task', ',', 'although', 'still', 'running', 'behind', 'the', 'proposed', 'convolutional', 'architectures', 'since', 'it', 'is', 'too', 'shallow', 'to', 'adequately', 'model', 'the', 'sentence', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'NNP', 'NNP', 'NNP', 'VBZ', 'RB', 'RB', 'IN', 'DT', 'NN', ',', 'IN', 'RB', 'VBG', 'IN', 'DT', 'VBN', 'NN', 'NNS', 'IN', 'PRP', 'VBZ', 'RB', 'JJ', 'TO', 'RB', 'VB', 'DT', 'NN', '.']",34
natural_language_inference,30,164,Experiment III : Paraphrase Identification,"['Experiment', 'III', ':', 'Paraphrase', 'Identification']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', ':', 'NNP', 'NNP']",5
natural_language_inference,30,170,"Nevertheless , our generic matching models still manage to perform reasonably well , achieving an accuracy and F1 score close to the best performer in 2008 based on hand - crafted features , but still significantly lower than the state - of - the - art ( 76.8%/83.6 % ) , achieved with unfolding - RAE and other features designed for this task .","['Nevertheless', ',', 'our', 'generic', 'matching', 'models', 'still', 'manage', 'to', 'perform', 'reasonably', 'well', ',', 'achieving', 'an', 'accuracy', 'and', 'F1', 'score', 'close', 'to', 'the', 'best', 'performer', 'in', '2008', 'based', 'on', 'hand', '-', 'crafted', 'features', ',', 'but', 'still', 'significantly', 'lower', 'than', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', '(', '76.8%/83.6', '%', ')', ',', 'achieved', 'with', 'unfolding', '-', 'RAE', 'and', 'other', 'features', 'designed', 'for', 'this', 'task', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP$', 'JJ', 'NN', 'NNS', 'RB', 'VB', 'TO', 'VB', 'RB', 'RB', ',', 'VBG', 'DT', 'NN', 'CC', 'NNP', 'RB', 'RB', 'TO', 'DT', 'JJS', 'NN', 'IN', 'CD', 'VBN', 'IN', 'NN', ':', 'VBN', 'NNS', ',', 'CC', 'RB', 'RB', 'JJR', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', '(', 'CD', 'NN', ')', ',', 'VBN', 'IN', 'VBG', ':', 'NN', 'CC', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NN', '.']",64
natural_language_inference,31,2,Scaling Memory - Augmented Neural Networks with Sparse Reads and Writes,"['Scaling', 'Memory', '-', 'Augmented', 'Neural', 'Networks', 'with', 'Sparse', 'Reads', 'and', 'Writes']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NNP', ':', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'CC', 'NNP']",11
natural_language_inference,31,15,We refer to this class of models as memory augmented neural networks ( MANNs ) .,"['We', 'refer', 'to', 'this', 'class', 'of', 'models', 'as', 'memory', 'augmented', 'neural', 'networks', '(', 'MANNs', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'TO', 'DT', 'NN', 'IN', 'NNS', 'IN', 'NN', 'VBN', 'JJ', 'NNS', '(', 'NNP', ')', '.']",16
natural_language_inference,31,23,"In this paper , we present a MANN named SAM ( sparse access memory ) .","['In', 'this', 'paper', ',', 'we', 'present', 'a', 'MANN', 'named', 'SAM', '(', 'sparse', 'access', 'memory', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'VBN', 'NNP', '(', 'JJ', 'NN', 'NN', ')', '.']",16
natural_language_inference,31,24,"By thresholding memory modifications to a sparse subset , and using efficient data structures for content - based read operations , our model is optimal in space and time with respect to memory size , while retaining end - to - end gradient based optimization .","['By', 'thresholding', 'memory', 'modifications', 'to', 'a', 'sparse', 'subset', ',', 'and', 'using', 'efficient', 'data', 'structures', 'for', 'content', '-', 'based', 'read', 'operations', ',', 'our', 'model', 'is', 'optimal', 'in', 'space', 'and', 'time', 'with', 'respect', 'to', 'memory', 'size', ',', 'while', 'retaining', 'end', '-', 'to', '-', 'end', 'gradient', 'based', 'optimization', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'NN', 'NNS', 'TO', 'DT', 'NN', 'NN', ',', 'CC', 'VBG', 'JJ', 'NNS', 'NNS', 'IN', 'NN', ':', 'VBN', 'JJ', 'NNS', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'IN', 'NN', 'CC', 'NN', 'IN', 'NN', 'TO', 'NN', 'NN', ',', 'IN', 'VBG', 'NN', ':', 'TO', ':', 'VB', 'NN', 'VBN', 'NN', '.']",46
natural_language_inference,31,137,Learning with sparse memory access,"['Learning', 'with', 'sparse', 'memory', 'access']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'IN', 'JJ', 'NN', 'NN']",5
natural_language_inference,31,145,"shows that sparse models are able to learn with comparable efficiency to the dense models and , surprisingly , learn more effectively for some tasks - notably priority sort and associative recall .","['shows', 'that', 'sparse', 'models', 'are', 'able', 'to', 'learn', 'with', 'comparable', 'efficiency', 'to', 'the', 'dense', 'models', 'and', ',', 'surprisingly', ',', 'learn', 'more', 'effectively', 'for', 'some', 'tasks', '-', 'notably', 'priority', 'sort', 'and', 'associative', 'recall', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNS', 'WDT', 'VBP', 'NNS', 'VBP', 'JJ', 'TO', 'VB', 'IN', 'JJ', 'NN', 'TO', 'DT', 'NN', 'NNS', 'CC', ',', 'RB', ',', 'VB', 'RBR', 'RB', 'IN', 'DT', 'NNS', ':', 'RB', 'NN', 'NN', 'CC', 'JJ', 'NN', '.']",33
natural_language_inference,31,148,Scaling with a curriculum,"['Scaling', 'with', 'a', 'curriculum']","['B-n', 'I-n', 'I-n', 'I-n']","['VBG', 'IN', 'DT', 'NN']",4
natural_language_inference,31,160,"For all tasks , SAM was able to advance further than the other models , and in the associative recall task , SAM was able to advance through the curriculum to sequences greater than 4000 ( ) .","['For', 'all', 'tasks', ',', 'SAM', 'was', 'able', 'to', 'advance', 'further', 'than', 'the', 'other', 'models', ',', 'and', 'in', 'the', 'associative', 'recall', 'task', ',', 'SAM', 'was', 'able', 'to', 'advance', 'through', 'the', 'curriculum', 'to', 'sequences', 'greater', 'than', '4000', '(', ')', '.']","['B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'NNS', ',', 'NNP', 'VBD', 'JJ', 'TO', 'VB', 'RBR', 'IN', 'DT', 'JJ', 'NNS', ',', 'CC', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'NNP', 'VBD', 'JJ', 'TO', 'VB', 'IN', 'DT', 'NN', 'TO', 'NNS', 'JJR', 'IN', 'CD', '(', ')', '.']",38
natural_language_inference,31,164,Question answering on the Babi tasks,"['Question', 'answering', 'on', 'the', 'Babi', 'tasks']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'VBG', 'IN', 'DT', 'NNP', 'NNS']",6
natural_language_inference,31,169,"The MANNs , except the NTM , are able to learn solutions comparable to the previous best results , failing at only 2 of the tasks .","['The', 'MANNs', ',', 'except', 'the', 'NTM', ',', 'are', 'able', 'to', 'learn', 'solutions', 'comparable', 'to', 'the', 'previous', 'best', 'results', ',', 'failing', 'at', 'only', '2', 'of', 'the', 'tasks', '.']","['O', 'B-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NNP', ',', 'IN', 'DT', 'NNP', ',', 'VBP', 'JJ', 'TO', 'VB', 'NNS', 'JJ', 'TO', 'DT', 'JJ', 'JJS', 'NNS', ',', 'VBG', 'IN', 'RB', 'CD', 'IN', 'DT', 'NNS', '.']",27
natural_language_inference,31,170,"The SDNC manages to solve all but 1 of the tasks , the best reported result on Babi that we are aware of .","['The', 'SDNC', 'manages', 'to', 'solve', 'all', 'but', '1', 'of', 'the', 'tasks', ',', 'the', 'best', 'reported', 'result', 'on', 'Babi', 'that', 'we', 'are', 'aware', 'of', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'VBZ', 'TO', 'VB', 'DT', 'CC', 'CD', 'IN', 'DT', 'NNS', ',', 'DT', 'JJS', 'VBD', 'NN', 'IN', 'NNP', 'IN', 'PRP', 'VBP', 'JJ', 'IN', '.']",24
natural_language_inference,31,174,We believe the NTM may perform poorly since it lacks a mechanism which allows it to allocate memory effectively .,"['We', 'believe', 'the', 'NTM', 'may', 'perform', 'poorly', 'since', 'it', 'lacks', 'a', 'mechanism', 'which', 'allows', 'it', 'to', 'allocate', 'memory', 'effectively', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'MD', 'VB', 'RB', 'IN', 'PRP', 'VBZ', 'DT', 'NN', 'WDT', 'VBZ', 'PRP', 'TO', 'VB', 'NN', 'RB', '.']",20
natural_language_inference,31,175,Learning on real world data,"['Learning', 'on', 'real', 'world', 'data']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['VBG', 'IN', 'JJ', 'NN', 'NNS']",5
natural_language_inference,31,187,"SAM outperformed other models , presumably due to its much larger memory capacity .","['SAM', 'outperformed', 'other', 'models', ',', 'presumably', 'due', 'to', 'its', 'much', 'larger', 'memory', 'capacity', '.']","['B-n', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'VBD', 'JJ', 'NNS', ',', 'RB', 'JJ', 'TO', 'PRP$', 'JJ', 'JJR', 'NN', 'NN', '.']",14
natural_language_inference,31,192,All of the MANNs were able to perform much better than chance with ?,"['All', 'of', 'the', 'MANNs', 'were', 'able', 'to', 'perform', 'much', 'better', 'than', 'chance', 'with', '?']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O']","['DT', 'IN', 'DT', 'NNP', 'VBD', 'JJ', 'TO', 'VB', 'RB', 'JJR', 'IN', 'NN', 'IN', '.']",14
natural_language_inference,12,2,FINDING REMO ( RELATED MEMORY OBJECT ) : A SIMPLE NEURAL ARCHITECTURE FOR TEXT BASED REASONING,"['FINDING', 'REMO', '(', 'RELATED', 'MEMORY', 'OBJECT', ')', ':', 'A', 'SIMPLE', 'NEURAL', 'ARCHITECTURE', 'FOR', 'TEXT', 'BASED', 'REASONING']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n']","['NN', 'NNP', '(', 'NNP', 'NNP', 'NNP', ')', ':', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NN']",16
natural_language_inference,12,4,"To solve the text - based question and answering task that requires relational reasoning , it is necessary to memorize a large amount of information and find out the question relevant information from the memory .","['To', 'solve', 'the', 'text', '-', 'based', 'question', 'and', 'answering', 'task', 'that', 'requires', 'relational', 'reasoning', ',', 'it', 'is', 'necessary', 'to', 'memorize', 'a', 'large', 'amount', 'of', 'information', 'and', 'find', 'out', 'the', 'question', 'relevant', 'information', 'from', 'the', 'memory', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'DT', 'NN', ':', 'VBN', 'NN', 'CC', 'VBG', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', ',', 'PRP', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN', 'CC', 'VB', 'RP', 'DT', 'NN', 'JJ', 'NN', 'IN', 'DT', 'NN', '.']",36
natural_language_inference,12,11,* Code is publicly available at : https://github.com/juung/RMN,"['*', 'Code', 'is', 'publicly', 'available', 'at', ':', 'https://github.com/juung/RMN']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['JJ', 'NNP', 'VBZ', 'RB', 'JJ', 'IN', ':', 'NN']",8
natural_language_inference,12,42,"Our proposed model , "" Relation Memory Network "" ( RMN ) , is able to find complex relation even when a lot of information is given .","['Our', 'proposed', 'model', ',', '""', 'Relation', 'Memory', 'Network', '""', '(', 'RMN', ')', ',', 'is', 'able', 'to', 'find', 'complex', 'relation', 'even', 'when', 'a', 'lot', 'of', 'information', 'is', 'given', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['PRP$', 'VBN', 'NN', ',', 'JJ', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'VBZ', 'JJ', 'TO', 'VB', 'JJ', 'NN', 'RB', 'WRB', 'DT', 'NN', 'IN', 'NN', 'VBZ', 'VBN', '.']",28
natural_language_inference,12,43,It uses MLP to find out relevant information with a new generalization which simply erase the information already used .,"['It', 'uses', 'MLP', 'to', 'find', 'out', 'relevant', 'information', 'with', 'a', 'new', 'generalization', 'which', 'simply', 'erase', 'the', 'information', 'already', 'used', '.']","['O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'NNP', 'TO', 'VB', 'RP', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'WDT', 'RB', 'VBD', 'DT', 'NN', 'RB', 'VBN', '.']",20
natural_language_inference,12,44,"In other words , RMN inherits RN 's MLP - based output feature map on Memory Network architecture .","['In', 'other', 'words', ',', 'RMN', 'inherits', 'RN', ""'s"", 'MLP', '-', 'based', 'output', 'feature', 'map', 'on', 'Memory', 'Network', 'architecture', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NNS', ',', 'NNP', 'VBZ', 'NNP', 'POS', 'NNP', ':', 'VBN', 'NN', 'NN', 'NN', 'IN', 'NNP', 'NNP', 'NN', '.']",19
natural_language_inference,12,125,bAbI story - based QA dataset,"['bAbI', 'story', '-', 'based', 'QA', 'dataset']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'NN', ':', 'VBN', 'NNP', 'NN']",6
natural_language_inference,12,129,"Embedding component is similar to , where story and question are embedded through different LSTMs ; 32 unit word - lookup embeddings ; 32 unit LSTM for story and question .","['Embedding', 'component', 'is', 'similar', 'to', ',', 'where', 'story', 'and', 'question', 'are', 'embedded', 'through', 'different', 'LSTMs', ';', '32', 'unit', 'word', '-', 'lookup', 'embeddings', ';', '32', 'unit', 'LSTM', 'for', 'story', 'and', 'question', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'O', 'O', 'O']","['VBG', 'NN', 'VBZ', 'JJ', 'TO', ',', 'WRB', 'NN', 'CC', 'NN', 'VBP', 'VBN', 'IN', 'JJ', 'NNP', ':', 'CD', 'NN', 'NN', ':', 'NN', 'NNS', ':', 'CD', 'NN', 'NNP', 'IN', 'NN', 'CC', 'NN', '.']",31
natural_language_inference,12,130,"For attention component , as we use 2 hop RMN , there are g 1 ?","['For', 'attention', 'component', ',', 'as', 'we', 'use', '2', 'hop', 'RMN', ',', 'there', 'are', 'g', '1', '?']","['B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'NN', ',', 'IN', 'PRP', 'VBP', 'CD', 'NN', 'NNP', ',', 'EX', 'VBP', 'JJ', 'CD', '.']",16
natural_language_inference,12,132,"For regularization , we use batch normalization for all MLPs .","['For', 'regularization', ',', 'we', 'use', 'batch', 'normalization', 'for', 'all', 'MLPs', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NNP', '.']",11
natural_language_inference,12,133,The softmax output was optimized with a cross - entropy loss function using the Adam optimizer with a learning rate of 2 e ?4 .,"['The', 'softmax', 'output', 'was', 'optimized', 'with', 'a', 'cross', '-', 'entropy', 'loss', 'function', 'using', 'the', 'Adam', 'optimizer', 'with', 'a', 'learning', 'rate', 'of', '2', 'e', '?4', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NN', ':', 'JJ', 'NN', 'NN', 'VBG', 'DT', 'NNP', 'NN', 'IN', 'DT', 'VBG', 'NN', 'IN', 'CD', 'NN', 'NN', '.']",25
natural_language_inference,12,134,bAbI dialog dataset,"['bAbI', 'dialog', 'dataset']","['B-n', 'I-n', 'I-n']","['NN', 'NN', 'NN']",3
natural_language_inference,12,135,"We trained on full dialog scripts with every model response as answer , all previous dialog history as sentences to be memorized , and the last user utterance as question .","['We', 'trained', 'on', 'full', 'dialog', 'scripts', 'with', 'every', 'model', 'response', 'as', 'answer', ',', 'all', 'previous', 'dialog', 'history', 'as', 'sentences', 'to', 'be', 'memorized', ',', 'and', 'the', 'last', 'user', 'utterance', 'as', 'question', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NNS', 'TO', 'VB', 'VBN', ',', 'CC', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'NN', '.']",31
natural_language_inference,12,136,"Model selects the most probable response from 4,212 candidates which are ranked from a set of all bot utterances appearing in training , validation and test sets ( plain and OOV ) for all tasks combined .","['Model', 'selects', 'the', 'most', 'probable', 'response', 'from', '4,212', 'candidates', 'which', 'are', 'ranked', 'from', 'a', 'set', 'of', 'all', 'bot', 'utterances', 'appearing', 'in', 'training', ',', 'validation', 'and', 'test', 'sets', '(', 'plain', 'and', 'OOV', ')', 'for', 'all', 'tasks', 'combined', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'VBZ', 'DT', 'RBS', 'JJ', 'NN', 'IN', 'CD', 'NNS', 'WDT', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'VBG', 'IN', 'NN', ',', 'NN', 'CC', 'NN', 'NNS', '(', 'NN', 'CC', 'NNP', ')', 'IN', 'DT', 'NNS', 'VBN', '.']",37
natural_language_inference,12,154,BABI DIALOG,"['BABI', 'DIALOG']","['B-n', 'I-n']","['NNP', 'NNP']",2
natural_language_inference,12,156,"Without any match type , RN and RMN outperform previous memory - augmented models on both normal and OOV tasks .","['Without', 'any', 'match', 'type', ',', 'RN', 'and', 'RMN', 'outperform', 'previous', 'memory', '-', 'augmented', 'models', 'on', 'both', 'normal', 'and', 'OOV', 'tasks', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', ',', 'NNP', 'CC', 'NNP', 'VBP', 'JJ', 'NN', ':', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'CC', 'NNP', 'NNS', '.']",21
natural_language_inference,12,160,"We converted RMN 's attention component to inner product based attention , and the results revealed the error rate increased to 11.3 % .","['We', 'converted', 'RMN', ""'s"", 'attention', 'component', 'to', 'inner', 'product', 'based', 'attention', ',', 'and', 'the', 'results', 'revealed', 'the', 'error', 'rate', 'increased', 'to', '11.3', '%', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'NNP', 'POS', 'NN', 'NN', 'TO', 'VB', 'NN', 'VBN', 'NN', ',', 'CC', 'DT', 'NNS', 'VBD', 'DT', 'NN', 'NN', 'VBD', 'TO', 'CD', 'NN', '.']",24
natural_language_inference,12,162,The number of unnecessary object pairs created by the RN not only increases the processing time but also decreases the accuracy .,"['The', 'number', 'of', 'unnecessary', 'object', 'pairs', 'created', 'by', 'the', 'RN', 'not', 'only', 'increases', 'the', 'processing', 'time', 'but', 'also', 'decreases', 'the', 'accuracy', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'RB', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'RB', 'VBZ', 'DT', 'NN', '.']",22
natural_language_inference,12,163,"With the match type feature , all models other than RMN have significantly improved their performance except for task 3 compared to the plain condition .","['With', 'the', 'match', 'type', 'feature', ',', 'all', 'models', 'other', 'than', 'RMN', 'have', 'significantly', 'improved', 'their', 'performance', 'except', 'for', 'task', '3', 'compared', 'to', 'the', 'plain', 'condition', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', 'NN', ',', 'DT', 'NNS', 'JJ', 'IN', 'NNP', 'VBP', 'RB', 'VBN', 'PRP$', 'NN', 'IN', 'IN', 'NN', 'CD', 'VBN', 'TO', 'DT', 'NN', 'NN', '.']",26
natural_language_inference,12,171,"Different from other tasks , RMN yields the same error rate 25.1 % with MemN2N and GMe m N2N on the task 3 .","['Different', 'from', 'other', 'tasks', ',', 'RMN', 'yields', 'the', 'same', 'error', 'rate', '25.1', '%', 'with', 'MemN2N', 'and', 'GMe', 'm', 'N2N', 'on', 'the', 'task', '3', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NN', 'IN', 'JJ', 'NNS', ',', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'CD', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NN', 'CD', '.']",24
natural_language_inference,0,2,Neural Models for Reasoning over Multiple Mentions using Coreference,"['Neural', 'Models', 'for', 'Reasoning', 'over', 'Multiple', 'Mentions', 'using', 'Coreference']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'IN', 'VBG', 'RP', 'JJ', 'NNS', 'VBG', 'NN']",9
natural_language_inference,0,12,"We call this coreference - based reasoning since multiple pieces of information , which may lie across sentence , paragraph or document boundaries , are tied together with the help of referring expressions which denote the same real - world entity .","['We', 'call', 'this', 'coreference', '-', 'based', 'reasoning', 'since', 'multiple', 'pieces', 'of', 'information', ',', 'which', 'may', 'lie', 'across', 'sentence', ',', 'paragraph', 'or', 'document', 'boundaries', ',', 'are', 'tied', 'together', 'with', 'the', 'help', 'of', 'referring', 'expressions', 'which', 'denote', 'the', 'same', 'real', '-', 'world', 'entity', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', ':', 'VBN', 'VBG', 'IN', 'JJ', 'NNS', 'IN', 'NN', ',', 'WDT', 'MD', 'VB', 'IN', 'NN', ',', 'NN', 'CC', 'NN', 'NNS', ',', 'VBP', 'VBN', 'RB', 'IN', 'DT', 'NN', 'IN', 'VBG', 'NNS', 'WDT', 'VBP', 'DT', 'JJ', 'JJ', ':', 'NN', 'NN', '.']",42
natural_language_inference,0,20,"Specifically , given an input sequence and coreference clusters extracted from an external system , we introduce a term in the update equations for Gated Recurrent Units ( GRU ) which depends on the hidden state of the coreferent antecedent of the current token ( if it exists ) .","['Specifically', ',', 'given', 'an', 'input', 'sequence', 'and', 'coreference', 'clusters', 'extracted', 'from', 'an', 'external', 'system', ',', 'we', 'introduce', 'a', 'term', 'in', 'the', 'update', 'equations', 'for', 'Gated', 'Recurrent', 'Units', '(', 'GRU', ')', 'which', 'depends', 'on', 'the', 'hidden', 'state', 'of', 'the', 'coreferent', 'antecedent', 'of', 'the', 'current', 'token', '(', 'if', 'it', 'exists', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'VBN', 'DT', 'NN', 'NN', 'CC', 'NN', 'NNS', 'VBD', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'WDT', 'VBZ', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', '(', 'IN', 'PRP', 'VBZ', ')', '.']",50
natural_language_inference,0,21,This way hidden states are propagated along coreference chains and the original sequence in parallel .,"['This', 'way', 'hidden', 'states', 'are', 'propagated', 'along', 'coreference', 'chains', 'and', 'the', 'original', 'sequence', 'in', 'parallel', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O']","['DT', 'NN', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'NN', 'NNS', 'CC', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",16
natural_language_inference,0,22,We compare our Coref - GRU layer with the regular GRU layer by incorporating it in a recent model for reading comprehension .,"['We', 'compare', 'our', 'Coref', '-', 'GRU', 'layer', 'with', 'the', 'regular', 'GRU', 'layer', 'by', 'incorporating', 'it', 'in', 'a', 'recent', 'model', 'for', 'reading', 'comprehension', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NNP', ':', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'VBG', 'PRP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'NN', '.']",23
natural_language_inference,0,94,BAbi AI tasks .,"['BAbi', 'AI', 'tasks', '.']","['B-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'NNS', '.']",4
natural_language_inference,0,100,In each case we see clear improvements of using C - GRU layers over GRU layers .,"['In', 'each', 'case', 'we', 'see', 'clear', 'improvements', 'of', 'using', 'C', '-', 'GRU', 'layers', 'over', 'GRU', 'layers', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'VBG', 'NNP', ':', 'NNP', 'NNS', 'IN', 'NNP', 'NNS', '.']",17
natural_language_inference,0,105,"Comparing to the QRN baseline , we found that C - GRU was significantly worse on task 15 ( basic deduction ) .","['Comparing', 'to', 'the', 'QRN', 'baseline', ',', 'we', 'found', 'that', 'C', '-', 'GRU', 'was', 'significantly', 'worse', 'on', 'task', '15', '(', 'basic', 'deduction', ')', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'TO', 'DT', 'NNP', 'NN', ',', 'PRP', 'VBD', 'IN', 'NNP', ':', 'NNP', 'VBD', 'RB', 'JJR', 'IN', 'NN', 'CD', '(', 'JJ', 'NN', ')', '.']",23
natural_language_inference,0,107,"On the other hand , C - GRU was significantly better than QRN on task 16 ( basic induction ) .","['On', 'the', 'other', 'hand', ',', 'C', '-', 'GRU', 'was', 'significantly', 'better', 'than', 'QRN', 'on', 'task', '16', '(', 'basic', 'induction', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'NNP', ':', 'NNP', 'VBD', 'RB', 'JJR', 'IN', 'NNP', 'IN', 'NN', 'CD', '(', 'JJ', 'NN', ')', '.']",21
natural_language_inference,0,112,Wikihop dataset .,"['Wikihop', 'dataset', '.']","['B-n', 'I-n', 'O']","['NNP', 'NN', '.']",3
natural_language_inference,0,120,"We see higher performance for the C - GRU model in the low data regime , and better generalization throughout the training curve for all three settings .","['We', 'see', 'higher', 'performance', 'for', 'the', 'C', '-', 'GRU', 'model', 'in', 'the', 'low', 'data', 'regime', ',', 'and', 'better', 'generalization', 'throughout', 'the', 'training', 'curve', 'for', 'all', 'three', 'settings', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJR', 'NN', 'IN', 'DT', 'NNP', ':', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'CC', 'JJR', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'CD', 'NNS', '.']",28
document_classification,16,2,A C - LSTM Neural Network for Text Classification,"['A', 'C', '-', 'LSTM', 'Neural', 'Network', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['DT', 'NNP', ':', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",9
document_classification,16,29,"In this paper , we introduce a new architecture short for C - LSTM by combining CNN and LSTM to model sentences .","['In', 'this', 'paper', ',', 'we', 'introduce', 'a', 'new', 'architecture', 'short', 'for', 'C', '-', 'LSTM', 'by', 'combining', 'CNN', 'and', 'LSTM', 'to', 'model', 'sentences', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'JJ', 'IN', 'NNP', ':', 'NN', 'IN', 'VBG', 'NNP', 'CC', 'NNP', 'TO', 'VB', 'NNS', '.']",23
document_classification,16,30,"To benefit from the advantages of both CNN and RNN , we design a simple end - to - end , unified architecture by feeding the output of a one - layer CNN into LSTM .","['To', 'benefit', 'from', 'the', 'advantages', 'of', 'both', 'CNN', 'and', 'RNN', ',', 'we', 'design', 'a', 'simple', 'end', '-', 'to', '-', 'end', ',', 'unified', 'architecture', 'by', 'feeding', 'the', 'output', 'of', 'a', 'one', '-', 'layer', 'CNN', 'into', 'LSTM', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['TO', 'VB', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'TO', ':', 'NN', ',', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'CD', ':', 'NN', 'NNP', 'IN', 'NNP', '.']",36
document_classification,16,31,The CNN is constructed on top of the pre-trained word vectors from massive unlabeled text data to learn higher - level representions of n-grams .,"['The', 'CNN', 'is', 'constructed', 'on', 'top', 'of', 'the', 'pre-trained', 'word', 'vectors', 'from', 'massive', 'unlabeled', 'text', 'data', 'to', 'learn', 'higher', '-', 'level', 'representions', 'of', 'n-grams', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNP', 'VBZ', 'VBN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'JJ', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'JJR', ':', 'NN', 'NNS', 'IN', 'NNS', '.']",25
document_classification,16,32,"Then to learn sequential correlations from higher - level suqence representations , the feature maps of CNN are organized as sequential window features to serve as the input of LSTM .","['Then', 'to', 'learn', 'sequential', 'correlations', 'from', 'higher', '-', 'level', 'suqence', 'representations', ',', 'the', 'feature', 'maps', 'of', 'CNN', 'are', 'organized', 'as', 'sequential', 'window', 'features', 'to', 'serve', 'as', 'the', 'input', 'of', 'LSTM', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O']","['RB', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJR', ':', 'NN', 'NN', 'NNS', ',', 'DT', 'NN', 'NNS', 'IN', 'NNP', 'VBP', 'VBN', 'IN', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'IN', 'DT', 'NN', 'IN', 'NNP', '.']",31
document_classification,16,34,"We choose sequence - based input other than relying on the syntactic parse trees before feeding in the neural network , thus our model does n't rely on any external language knowledge and complicated pre-processing .","['We', 'choose', 'sequence', '-', 'based', 'input', 'other', 'than', 'relying', 'on', 'the', 'syntactic', 'parse', 'trees', 'before', 'feeding', 'in', 'the', 'neural', 'network', ',', 'thus', 'our', 'model', 'does', ""n't"", 'rely', 'on', 'any', 'external', 'language', 'knowledge', 'and', 'complicated', 'pre-processing', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', ':', 'VBN', 'NN', 'JJ', 'IN', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'VBG', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', 'PRP$', 'NN', 'VBZ', 'RB', 'VB', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CC', 'VBD', 'NN', '.']",36
document_classification,16,142,"We implement our model based on Theano ) - a python library , which supports efficient symbolic differentiation and transparent use of a GPU .","['We', 'implement', 'our', 'model', 'based', 'on', 'Theano', ')', '-', 'a', 'python', 'library', ',', 'which', 'supports', 'efficient', 'symbolic', 'differentiation', 'and', 'transparent', 'use', 'of', 'a', 'GPU', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'VBN', 'IN', 'NNP', ')', ':', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'NN', 'JJ', 'NN', 'CC', 'NN', 'NN', 'IN', 'DT', 'NNP', '.']",25
document_classification,16,143,"To benefit from the efficiency of parallel computation of the tensors , we train the model on a GPU .","['To', 'benefit', 'from', 'the', 'efficiency', 'of', 'parallel', 'computation', 'of', 'the', 'tensors', ',', 'we', 'train', 'the', 'model', 'on', 'a', 'GPU', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['TO', 'VB', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NNP', '.']",20
document_classification,16,147,"In our final settings , we only use one convolutional layer and one LSTM layer for both tasks .","['In', 'our', 'final', 'settings', ',', 'we', 'only', 'use', 'one', 'convolutional', 'layer', 'and', 'one', 'LSTM', 'layer', 'for', 'both', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'PRP$', 'JJ', 'NNS', ',', 'PRP', 'RB', 'VBP', 'CD', 'JJ', 'NN', 'CC', 'CD', 'NNP', 'NN', 'IN', 'DT', 'NNS', '.']",19
document_classification,16,167,"For TREC , the number of filters is set to be 300 and the memory dimension is set to be 300 .","['For', 'TREC', ',', 'the', 'number', 'of', 'filters', 'is', 'set', 'to', 'be', '300', 'and', 'the', 'memory', 'dimension', 'is', 'set', 'to', 'be', '300', '.']","['B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O']","['IN', 'NNP', ',', 'DT', 'NN', 'IN', 'NNS', 'VBZ', 'VBN', 'TO', 'VB', 'CD', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'CD', '.']",22
document_classification,16,168,The word vector layer and the LSTM layer are dropped outwith a probability of 0.5 .,"['The', 'word', 'vector', 'layer', 'and', 'the', 'LSTM', 'layer', 'are', 'dropped', 'outwith', 'a', 'probability', 'of', '0.5', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'NN', 'CC', 'DT', 'NNP', 'NN', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'IN', 'CD', '.']",16
document_classification,16,169,We also add L2 regularization with a factor of 0.001 to the weights in the softmax layer for both tasks .,"['We', 'also', 'add', 'L2', 'regularization', 'with', 'a', 'factor', 'of', '0.001', 'to', 'the', 'weights', 'in', 'the', 'softmax', 'layer', 'for', 'both', 'tasks', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'NNP', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'TO', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNS', '.']",21
document_classification,16,170,Results and Model Analysis,"['Results', 'and', 'Model', 'Analysis']","['B-n', 'O', 'O', 'O']","['NNS', 'CC', 'NNP', 'NNP']",4
document_classification,16,173,Sentiment Classification,"['Sentiment', 'Classification']","['B-n', 'I-n']","['NN', 'NN']",2
document_classification,16,184,"To the best of our knowledge , we achieve the fourth best published result for the 5 - class classification task on this dataset .","['To', 'the', 'best', 'of', 'our', 'knowledge', ',', 'we', 'achieve', 'the', 'fourth', 'best', 'published', 'result', 'for', 'the', '5', '-', 'class', 'classification', 'task', 'on', 'this', 'dataset', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['TO', 'DT', 'JJS', 'IN', 'PRP$', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'RBS', 'VBN', 'NN', 'IN', 'DT', 'CD', ':', 'NN', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",25
document_classification,16,185,"For the binary classification task , we achieve comparable results with respect to the state - of - the - art ones .","['For', 'the', 'binary', 'classification', 'task', ',', 'we', 'achieve', 'comparable', 'results', 'with', 'respect', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'ones', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'NN', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",23
document_classification,16,191,Question Type Classification,"['Question', 'Type', 'Classification']","['B-n', 'I-n', 'I-n']","['NN', 'NNP', 'NN']",3
document_classification,16,198,"( 1 ) Our result consistently outperforms all published neural baseline models , which means that C - LSTM captures intentions of TREC questions well .","['(', '1', ')', 'Our', 'result', 'consistently', 'outperforms', 'all', 'published', 'neural', 'baseline', 'models', ',', 'which', 'means', 'that', 'C', '-', 'LSTM', 'captures', 'intentions', 'of', 'TREC', 'questions', 'well', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'CD', ')', 'PRP$', 'NN', 'RB', 'VBZ', 'DT', 'VBN', 'JJ', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'IN', 'NNP', ':', 'NNP', 'VBZ', 'NNS', 'IN', 'NNP', 'NNS', 'RB', '.']",26
document_classification,16,199,( 2 ) Our result is close to that of the state - of - the - art SVM that depends on highly engineered features .,"['(', '2', ')', 'Our', 'result', 'is', 'close', 'to', 'that', 'of', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'SVM', 'that', 'depends', 'on', 'highly', 'engineered', 'features', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'CD', ')', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'DT', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNP', 'WDT', 'VBZ', 'IN', 'RB', 'VBN', 'NNS', '.']",26
document_classification,16,206,"However , we found in our experiments that single convolutional layer with filter length 3 always outperforms the other cases .","['However', ',', 'we', 'found', 'in', 'our', 'experiments', 'that', 'single', 'convolutional', 'layer', 'with', 'filter', 'length', '3', 'always', 'outperforms', 'the', 'other', 'cases', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'PRP', 'VBD', 'IN', 'PRP$', 'NNS', 'IN', 'JJ', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'CD', 'RB', 'VBP', 'DT', 'JJ', 'NNS', '.']",21
document_classification,16,210,It it shown that single convolutional layer with filter length 3 performs best among all filter configurations .,"['It', 'it', 'shown', 'that', 'single', 'convolutional', 'layer', 'with', 'filter', 'length', '3', 'performs', 'best', 'among', 'all', 'filter', 'configurations', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'PRP', 'VBN', 'IN', 'JJ', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'CD', 'NNS', 'RBS', 'IN', 'DT', 'NN', 'NNS', '.']",18
document_classification,16,211,"For the case of multiple convolutional layers in parallel , it is shown that filter configurations with filter length 3 performs better that those without tri-gram filters , which further confirms that tri-gram features do play a significant role in capturing local features in our tasks .","['For', 'the', 'case', 'of', 'multiple', 'convolutional', 'layers', 'in', 'parallel', ',', 'it', 'is', 'shown', 'that', 'filter', 'configurations', 'with', 'filter', 'length', '3', 'performs', 'better', 'that', 'those', 'without', 'tri-gram', 'filters', ',', 'which', 'further', 'confirms', 'that', 'tri-gram', 'features', 'do', 'play', 'a', 'significant', 'role', 'in', 'capturing', 'local', 'features', 'in', 'our', 'tasks', '.']","['B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'NN', ',', 'PRP', 'VBZ', 'VBN', 'IN', 'NN', 'NNS', 'IN', 'NN', 'NN', 'CD', 'NNS', 'RBR', 'IN', 'DT', 'IN', 'JJ', 'NNS', ',', 'WDT', 'RB', 'VBZ', 'IN', 'JJ', 'NNS', 'VBP', 'VB', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'PRP$', 'NNS', '.']",47
document_classification,13,2,Deep Pyramid Convolutional Neural Networks for Text Categorization,"['Deep', 'Pyramid', 'Convolutional', 'Neural', 'Networks', 'for', 'Text', 'Categorization']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",8
document_classification,13,29,"We call it deep pyramid CNN ( DPCNN ) , as the computation time per layer decreases exponentially in a ' pyramid shape ' .","['We', 'call', 'it', 'deep', 'pyramid', 'CNN', '(', 'DPCNN', ')', ',', 'as', 'the', 'computation', 'time', 'per', 'layer', 'decreases', 'exponentially', 'in', 'a', ""'"", 'pyramid', 'shape', ""'"", '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'PRP', 'JJ', 'NN', 'NNP', '(', 'NNP', ')', ',', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', 'NNS', 'RB', 'IN', 'DT', 'POS', 'JJ', 'NN', 'POS', '.']",25
document_classification,13,30,"After converting discrete text to continuous representation , the DPCNN architecture simply alternates a convolution block and a downsampling layer over and over 1 , leading to a deep network in which internal data size ( as well as per-layer computation ) shrinks in a pyramid shape .","['After', 'converting', 'discrete', 'text', 'to', 'continuous', 'representation', ',', 'the', 'DPCNN', 'architecture', 'simply', 'alternates', 'a', 'convolution', 'block', 'and', 'a', 'downsampling', 'layer', 'over', 'and', 'over', '1', ',', 'leading', 'to', 'a', 'deep', 'network', 'in', 'which', 'internal', 'data', 'size', '(', 'as', 'well', 'as', 'per-layer', 'computation', ')', 'shrinks', 'in', 'a', 'pyramid', 'shape', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBG', 'JJ', 'NN', 'TO', 'JJ', 'NN', ',', 'DT', 'NNP', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'IN', 'CC', 'IN', 'CD', ',', 'VBG', 'TO', 'DT', 'JJ', 'NN', 'IN', 'WDT', 'JJ', 'NNS', 'NN', '(', 'RB', 'RB', 'IN', 'JJ', 'NN', ')', 'VBZ', 'IN', 'DT', 'JJ', 'NN', '.']",48
document_classification,13,31,The network depth can be treated as a meta-parameter .,"['The', 'network', 'depth', 'can', 'be', 'treated', 'as', 'a', 'meta-parameter', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['DT', 'NN', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', '.']",10
document_classification,13,32,The computational complexity of this network is bounded to be no more than twice that of one convolution block .,"['The', 'computational', 'complexity', 'of', 'this', 'network', 'is', 'bounded', 'to', 'be', 'no', 'more', 'than', 'twice', 'that', 'of', 'one', 'convolution', 'block', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'RB', 'JJR', 'IN', 'RB', 'IN', 'IN', 'CD', 'NN', 'NN', '.']",20
document_classification,13,36,We show that DPCNN with 15 weight layers outperforms the previous best models on six benchmark datasets for sentiment classification and topic classification ..,"['We', 'show', 'that', 'DPCNN', 'with', '15', 'weight', 'layers', 'outperforms', 'the', 'previous', 'best', 'models', 'on', 'six', 'benchmark', 'datasets', 'for', 'sentiment', 'classification', 'and', 'topic', 'classification', '..']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'NNP', 'IN', 'CD', 'NN', 'NNS', 'VBZ', 'DT', 'JJ', 'JJS', 'NNS', 'IN', 'CD', 'NN', 'NNS', 'IN', 'NN', 'NN', 'CC', 'NN', 'NN', 'NN']",24
document_classification,13,37,"The first layer performs text region embedding , which generalizes commonly used word embedding to the embedding of text regions covering one or more words .","['The', 'first', 'layer', 'performs', 'text', 'region', 'embedding', ',', 'which', 'generalizes', 'commonly', 'used', 'word', 'embedding', 'to', 'the', 'embedding', 'of', 'text', 'regions', 'covering', 'one', 'or', 'more', 'words', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'NNS', 'JJ', 'NN', 'NN', ',', 'WDT', 'VBZ', 'RB', 'VBN', 'NN', 'VBG', 'TO', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'VBG', 'CD', 'CC', 'JJR', 'NNS', '.']",26
document_classification,13,38,It is followed by stacking of convolution blocks ( two convolution layers and a shortcut ) interleaved with pooling layers with stride 2 for downsampling .,"['It', 'is', 'followed', 'by', 'stacking', 'of', 'convolution', 'blocks', '(', 'two', 'convolution', 'layers', 'and', 'a', 'shortcut', ')', 'interleaved', 'with', 'pooling', 'layers', 'with', 'stride', '2', 'for', 'downsampling', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBZ', 'VBN', 'IN', 'VBG', 'IN', 'NN', 'NNS', '(', 'CD', 'NN', 'NNS', 'CC', 'DT', 'NN', ')', 'VBD', 'IN', 'VBG', 'NNS', 'IN', 'JJ', 'CD', 'IN', 'NN', '.']",26
document_classification,13,39,The final pooling layer aggregates internal data for each document into one vector .,"['The', 'final', 'pooling', 'layer', 'aggregates', 'internal', 'data', 'for', 'each', 'document', 'into', 'one', 'vector', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'NN', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",14
document_classification,13,40,We use max pooling for all pooling layers .,"['We', 'use', 'max', 'pooling', 'for', 'all', 'pooling', 'layers', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",9
document_classification,13,150,Results,['Results'],['B-n'],['NNS'],1
document_classification,13,155,Large data results,"['Large', 'data', 'results']","['B-n', 'I-n', 'I-n']","['JJ', 'NNS', 'NNS']",3
document_classification,13,159,"On all the five datasets , DPCNN outperforms all of the previous results , which validates the effectiveness of our approach .","['On', 'all', 'the', 'five', 'datasets', ',', 'DPCNN', 'outperforms', 'all', 'of', 'the', 'previous', 'results', ',', 'which', 'validates', 'the', 'effectiveness', 'of', 'our', 'approach', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PDT', 'DT', 'CD', 'NNS', ',', 'NNP', 'VBZ', 'DT', 'IN', 'DT', 'JJ', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NN', '.']",22
document_classification,13,191,Small data results,"['Small', 'data', 'results']","['B-n', 'I-n', 'I-n']","['NNP', 'NNS', 'NNS']",3
document_classification,13,194,"For these small datasets , the DPCNN performances with 100 - dim unsupervised embed - dings are shown , which turned out to be as good as those with 300 - dim unsupervised embeddings .","['For', 'these', 'small', 'datasets', ',', 'the', 'DPCNN', 'performances', 'with', '100', '-', 'dim', 'unsupervised', 'embed', '-', 'dings', 'are', 'shown', ',', 'which', 'turned', 'out', 'to', 'be', 'as', 'good', 'as', 'those', 'with', '300', '-', 'dim', 'unsupervised', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NNS', ',', 'DT', 'NNP', 'NNS', 'IN', 'CD', ':', 'NN', 'JJ', 'VBD', ':', 'NNS', 'VBP', 'VBN', ',', 'WDT', 'VBD', 'RP', 'TO', 'VB', 'RB', 'JJ', 'IN', 'DT', 'IN', 'CD', ':', 'NN', 'JJ', 'NNS', '.']",35
document_classification,13,196,"ShallowCNN ( row 2 ) rivals DPCNN ( row 1 ) , and Zhang et al. 's best linear model ( row 3 ) moved up from the worst performer to the third best performer .","['ShallowCNN', '(', 'row', '2', ')', 'rivals', 'DPCNN', '(', 'row', '1', ')', ',', 'and', 'Zhang', 'et', 'al.', ""'s"", 'best', 'linear', 'model', '(', 'row', '3', ')', 'moved', 'up', 'from', 'the', 'worst', 'performer', 'to', 'the', 'third', 'best', 'performer', '.']","['B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', '(', 'VB', 'CD', ')', 'NNS', 'NNP', '(', 'VB', 'CD', ')', ',', 'CC', 'NNP', 'VBP', 'NN', 'POS', 'JJS', 'JJ', 'NN', '(', 'VB', 'CD', ')', 'VBD', 'RB', 'IN', 'DT', 'JJS', 'NN', 'TO', 'DT', 'JJ', 'JJS', 'NN', '.']",36
document_classification,8,2,Disconnected Recurrent Neural Networks for Text Categorization,"['Disconnected', 'Recurrent', 'Neural', 'Networks', 'for', 'Text', 'Categorization']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBN', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",7
document_classification,8,23,"In this paper , we incorporate positioninvariance into RNN and propose a novel model named Disconnected Recurrent Neural Network ( DRNN ) .","['In', 'this', 'paper', ',', 'we', 'incorporate', 'positioninvariance', 'into', 'RNN', 'and', 'propose', 'a', 'novel', 'model', 'named', 'Disconnected', 'Recurrent', 'Neural', 'Network', '(', 'DRNN', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NN', 'IN', 'NNP', 'CC', 'VB', 'DT', 'JJ', 'NN', 'VBN', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', '.']",23
document_classification,8,27,"To maintain the position - invariance , we utilize max pooling to extract the important information , which has been suggested by .","['To', 'maintain', 'the', 'position', '-', 'invariance', ',', 'we', 'utilize', 'max', 'pooling', 'to', 'extract', 'the', 'important', 'information', ',', 'which', 'has', 'been', 'suggested', 'by', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['TO', 'VB', 'DT', 'NN', ':', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'VBN', 'VBN', 'IN', '.']",23
document_classification,8,28,Our proposed model can also be regarded as a special 1D CNN where convolution kernels are replaced with recurrent units .,"['Our', 'proposed', 'model', 'can', 'also', 'be', 'regarded', 'as', 'a', 'special', '1D', 'CNN', 'where', 'convolution', 'kernels', 'are', 'replaced', 'with', 'recurrent', 'units', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP$', 'VBN', 'NN', 'MD', 'RB', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'CD', 'NNP', 'WRB', 'NN', 'NNS', 'VBP', 'VBN', 'IN', 'JJ', 'NNS', '.']",21
document_classification,8,156,"We utilize the 300D Glo Ve 840B vectors ( Pennington et al. , 2014 ) as our pre-trained word embeddings .","['We', 'utilize', 'the', '300D', 'Glo', 'Ve', '840B', 'vectors', '(', 'Pennington', 'et', 'al.', ',', '2014', ')', 'as', 'our', 'pre-trained', 'word', 'embeddings', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'CD', 'NNP', 'NNP', 'CD', 'NNS', '(', 'NNP', 'VBZ', 'RB', ',', 'CD', ')', 'IN', 'PRP$', 'JJ', 'NN', 'NNS', '.']",21
document_classification,8,159,"We use Adadelta ( Zeiler , 2012 ) to optimize all the trainable parameters .","['We', 'use', 'Adadelta', '(', 'Zeiler', ',', '2012', ')', 'to', 'optimize', 'all', 'the', 'trainable', 'parameters', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'NNP', '(', 'NNP', ',', 'CD', ')', 'TO', 'VB', 'PDT', 'DT', 'JJ', 'NNS', '.']",15
document_classification,8,160,The hyperparameter of Adadelta is set as Zeiler ( 2012 ) suggest that is 1 e ? 6 and ? is 0.95 .,"['The', 'hyperparameter', 'of', 'Adadelta', 'is', 'set', 'as', 'Zeiler', '(', '2012', ')', 'suggest', 'that', 'is', '1', 'e', '?', '6', 'and', '?', 'is', '0.95', '.']","['O', 'O', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'IN', 'NNP', 'VBZ', 'VBN', 'IN', 'NNP', '(', 'CD', ')', 'VBP', 'DT', 'VBZ', 'CD', 'NN', '.', 'CD', 'CC', '.', 'VBZ', 'CD', '.']",23
document_classification,8,161,"To avoid the gradient explosion problem , we apply gradient norm clipping .","['To', 'avoid', 'the', 'gradient', 'explosion', 'problem', ',', 'we', 'apply', 'gradient', 'norm', 'clipping', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'NN', '.']",13
document_classification,8,162,The batch size is set to 128 and all the dimensions of input vectors and hidden shows that our proposed model significantly outperforms all the other models in 7 datasets .,"['The', 'batch', 'size', 'is', 'set', 'to', '128', 'and', 'all', 'the', 'dimensions', 'of', 'input', 'vectors', 'and', 'hidden', 'shows', 'that', 'our', 'proposed', 'model', 'significantly', 'outperforms', 'all', 'the', 'other', 'models', 'in', '7', 'datasets', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'CC', 'PDT', 'DT', 'NNS', 'IN', 'NN', 'NNS', 'CC', 'NN', 'NNS', 'IN', 'PRP$', 'VBN', 'NN', 'RB', 'VBZ', 'PDT', 'DT', 'JJ', 'NNS', 'IN', 'CD', 'NNS', '.']",31
document_classification,8,172,We can see that very deep CNN ( VDCNN ) performs well in large datasets .,"['We', 'can', 'see', 'that', 'very', 'deep', 'CNN', '(', 'VDCNN', ')', 'performs', 'well', 'in', 'large', 'datasets', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'MD', 'VB', 'DT', 'RB', 'JJ', 'NNP', '(', 'NNP', ')', 'VBZ', 'RB', 'IN', 'JJ', 'NNS', '.']",16
document_classification,8,180,shows that our model achieves 10 - 50 % relative error reduction compared with char - CRNN in these datasets .,"['shows', 'that', 'our', 'model', 'achieves', '10', '-', '50', '%', 'relative', 'error', 'reduction', 'compared', 'with', 'char', '-', 'CRNN', 'in', 'these', 'datasets', '.']","['B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NNS', 'WDT', 'PRP$', 'NN', 'VBZ', 'CD', ':', 'CD', 'NN', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'JJ', ':', 'NN', 'IN', 'DT', 'NNS', '.']",21
document_classification,8,186,shows that DRNN performs far better than CNN .,"['shows', 'that', 'DRNN', 'performs', 'far', 'better', 'than', 'CNN', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['NNS', 'WDT', 'NNP', 'VBZ', 'RB', 'JJR', 'IN', 'NNP', '.']",9
document_classification,8,193,Our model DRNN achieves much better performance than GRU and LSTM .,"['Our', 'model', 'DRNN', 'achieves', 'much', 'better', 'performance', 'than', 'GRU', 'and', 'LSTM', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NNP', 'VBZ', 'RB', 'JJR', 'NN', 'IN', 'NNP', 'CC', 'NNP', '.']",12
document_classification,9,2,Investigating Capsule Networks with Dynamic Routing for Text Classification,"['Investigating', 'Capsule', 'Networks', 'with', 'Dynamic', 'Routing', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBG', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",9
document_classification,9,10,1 Codes are publicly available at : https : //github.com/andyweizhao/capsule_text_ classification .,"['1', 'Codes', 'are', 'publicly', 'available', 'at', ':', 'https', ':', '//github.com/andyweizhao/capsule_text_', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', 'NNS', 'VBP', 'RB', 'JJ', 'IN', ':', 'NN', ':', 'JJ', 'NN', '.']",12
document_classification,9,31,A recent method called capsule network introduced by possesses this attractive potential to address the aforementioned issue .,"['A', 'recent', 'method', 'called', 'capsule', 'network', 'introduced', 'by', 'possesses', 'this', 'attractive', 'potential', 'to', 'address', 'the', 'aforementioned', 'issue', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'VBN', 'NN', 'NN', 'VBN', 'IN', 'NNS', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', '.']",18
document_classification,9,32,They introduce an iterative routing process to decide the credit attribution between nodes from lower and higher layers .,"['They', 'introduce', 'an', 'iterative', 'routing', 'process', 'to', 'decide', 'the', 'credit', 'attribution', 'between', 'nodes', 'from', 'lower', 'and', 'higher', 'layers', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'NNS', 'IN', 'JJR', 'CC', 'JJR', 'NNS', '.']",19
document_classification,9,36,"Three strategies are proposed to stabilize the dynamic routing process to alleviate the disturbance of some noise capsules which may contain "" background "" information such as stop words and the words thatare unrelated to specific categories .","['Three', 'strategies', 'are', 'proposed', 'to', 'stabilize', 'the', 'dynamic', 'routing', 'process', 'to', 'alleviate', 'the', 'disturbance', 'of', 'some', 'noise', 'capsules', 'which', 'may', 'contain', '""', 'background', '""', 'information', 'such', 'as', 'stop', 'words', 'and', 'the', 'words', 'thatare', 'unrelated', 'to', 'specific', 'categories', '.']","['B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['CD', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'WDT', 'MD', 'VB', 'JJ', 'NN', 'NNP', 'NN', 'JJ', 'IN', 'JJ', 'NNS', 'CC', 'DT', 'NNS', 'NN', 'JJ', 'TO', 'JJ', 'NNS', '.']",38
document_classification,9,139,"In the experiments , we use 300 - dimensional word2vec vectors to initialize embedding vectors .","['In', 'the', 'experiments', ',', 'we', 'use', '300', '-', 'dimensional', 'word2vec', 'vectors', 'to', 'initialize', 'embedding', 'vectors', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'CD', ':', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'VBG', 'NNS', '.']",16
document_classification,9,140,We conduct mini-batch with size 50 for AG 's news and size 25 for other datasets .,"['We', 'conduct', 'mini-batch', 'with', 'size', '50', 'for', 'AG', ""'s"", 'news', 'and', 'size', '25', 'for', 'other', 'datasets', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'IN', 'NN', 'CD', 'IN', 'NNP', 'POS', 'NN', 'CC', 'NN', 'CD', 'IN', 'JJ', 'NNS', '.']",17
document_classification,9,141,We use Adam optimization algorithm with 1e - 3 learning rate to train the model .,"['We', 'use', 'Adam', 'optimization', 'algorithm', 'with', '1e', '-', '3', 'learning', 'rate', 'to', 'train', 'the', 'model', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'CD', ':', 'CD', 'VBG', 'NN', 'TO', 'VB', 'DT', 'NN', '.']",16
document_classification,9,144,"In the experiments , we evaluate and compare our model with several strong baseline methods including : LSTM / Bi - LSTM , tree - structured LSTM ( Tree - LSTM ) , LSTM regularized by linguistic knowledge ( LR - LSTM ) , CNNrand / CNN - static / CNN - non-static ( Kim , 2014 ) , very deep convolutional network ( VD - CNN ) , and character - level convolutional network ( CL - CNN ) .","['In', 'the', 'experiments', ',', 'we', 'evaluate', 'and', 'compare', 'our', 'model', 'with', 'several', 'strong', 'baseline', 'methods', 'including', ':', 'LSTM', '/', 'Bi', '-', 'LSTM', ',', 'tree', '-', 'structured', 'LSTM', '(', 'Tree', '-', 'LSTM', ')', ',', 'LSTM', 'regularized', 'by', 'linguistic', 'knowledge', '(', 'LR', '-', 'LSTM', ')', ',', 'CNNrand', '/', 'CNN', '-', 'static', '/', 'CNN', '-', 'non-static', '(', 'Kim', ',', '2014', ')', ',', 'very', 'deep', 'convolutional', 'network', '(', 'VD', '-', 'CNN', ')', ',', 'and', 'character', '-', 'level', 'convolutional', 'network', '(', 'CL', '-', 'CNN', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'CC', 'VBP', 'PRP$', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'NNS', 'VBG', ':', 'NNP', 'NNP', 'NNP', ':', 'NNP', ',', 'JJ', ':', 'VBN', 'NNP', '(', 'NNP', ':', 'NNP', ')', ',', 'NNP', 'VBN', 'IN', 'JJ', 'NN', '(', 'NNP', ':', 'NNP', ')', ',', 'NNP', 'NNP', 'NNP', ':', 'JJ', 'NN', 'NNP', ':', 'JJ', '(', 'NNP', ',', 'CD', ')', ',', 'RB', 'JJ', 'NN', 'NN', '(', 'NNP', ':', 'NN', ')', ',', 'CC', 'SYM', ':', 'NN', 'JJ', 'NN', '(', 'NNP', ':', 'NN', ')', '.']",81
document_classification,9,145,Experimental Results,"['Experimental', 'Results']","['O', 'B-n']","['JJ', 'NNS']",2
document_classification,9,149,"From the results , we observe that the capsule networks achieve best results on 4 out of 6 benchmarks , which verifies the effectiveness of the capsule networks .","['From', 'the', 'results', ',', 'we', 'observe', 'that', 'the', 'capsule', 'networks', 'achieve', 'best', 'results', 'on', '4', 'out', 'of', '6', 'benchmarks', ',', 'which', 'verifies', 'the', 'effectiveness', 'of', 'the', 'capsule', 'networks', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'NNS', 'VBP', 'JJS', 'NNS', 'IN', 'CD', 'IN', 'IN', 'CD', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', '.']",29
document_classification,9,156,Single - Label to Multi - Label Text Classification,"['Single', '-', 'Label', 'to', 'Multi', '-', 'Label', 'Text', 'Classification']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'TO', 'NNP', ':', 'NNP', 'NNP', 'NNP']",9
document_classification,9,163,"In this section , we investigate the capability of capsule network on multi-label text classification by using only the single - label samples as training data .","['In', 'this', 'section', ',', 'we', 'investigate', 'the', 'capability', 'of', 'capsule', 'network', 'on', 'multi-label', 'text', 'classification', 'by', 'using', 'only', 'the', 'single', '-', 'label', 'samples', 'as', 'training', 'data', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'NN', 'IN', 'NN', 'NN', 'NN', 'IN', 'VBG', 'RB', 'DT', 'JJ', ':', 'NN', 'NNS', 'IN', 'NN', 'NNS', '.']",27
document_classification,9,175,"From the results , we can observe that the capsule networks have substantial and significant improvement in terms of all four evaluation metrics over the strong baseline methods on the test sets in both Reuters - Multi-label and Reuters - Full datasets .","['From', 'the', 'results', ',', 'we', 'can', 'observe', 'that', 'the', 'capsule', 'networks', 'have', 'substantial', 'and', 'significant', 'improvement', 'in', 'terms', 'of', 'all', 'four', 'evaluation', 'metrics', 'over', 'the', 'strong', 'baseline', 'methods', 'on', 'the', 'test', 'sets', 'in', 'both', 'Reuters', '-', 'Multi-label', 'and', 'Reuters', '-', 'Full', 'datasets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'MD', 'VB', 'IN', 'DT', 'NN', 'NNS', 'VBP', 'JJ', 'CC', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'DT', 'CD', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NNP', ':', 'NN', 'CC', 'NNP', ':', 'NNP', 'NNS', '.']",43
document_classification,9,176,"In particular , larger improvement is achieved on Reuters - Multi - label dataset which only contains the multi-label documents in the test set .","['In', 'particular', ',', 'larger', 'improvement', 'is', 'achieved', 'on', 'Reuters', '-', 'Multi', '-', 'label', 'dataset', 'which', 'only', 'contains', 'the', 'multi-label', 'documents', 'in', 'the', 'test', 'set', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'JJ', ',', 'JJR', 'NN', 'VBZ', 'VBN', 'IN', 'NNP', ':', 'NNP', ':', 'NN', 'NN', 'WDT', 'RB', 'VBZ', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",25
document_classification,9,178,The capsule network has much stronger transferring capability than the conventional deep neural networks .,"['The', 'capsule', 'network', 'has', 'much', 'stronger', 'transferring', 'capability', 'than', 'the', 'conventional', 'deep', 'neural', 'networks', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'RB', 'JJR', 'VBG', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'JJ', 'NNS', '.']",15
document_classification,9,179,"In addition , the good results on Reuters - Full also indicate that the capsule network has robust superiority over competitors on single - label documents .","['In', 'addition', ',', 'the', 'good', 'results', 'on', 'Reuters', '-', 'Full', 'also', 'indicate', 'that', 'the', 'capsule', 'network', 'has', 'robust', 'superiority', 'over', 'competitors', 'on', 'single', '-', 'label', 'documents', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'DT', 'JJ', 'NNS', 'IN', 'NNP', ':', 'NNP', 'RB', 'VBP', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'JJ', 'NN', 'IN', 'NNS', 'IN', 'JJ', ':', 'NN', 'NNS', '.']",27
document_classification,9,180,Connection Strength Visualization,"['Connection', 'Strength', 'Visualization']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
document_classification,9,188,"From the results , we observe that capsule networks can correctly recognize and cluster the important phrases with respect to the text categories .","['From', 'the', 'results', ',', 'we', 'observe', 'that', 'capsule', 'networks', 'can', 'correctly', 'recognize', 'and', 'cluster', 'the', 'important', 'phrases', 'with', 'respect', 'to', 'the', 'text', 'categories', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'NNS', 'MD', 'VB', 'VB', 'CC', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NN', 'TO', 'DT', 'NN', 'NNS', '.']",24
document_classification,1,2,BRIDGING THE DOMAIN GAP IN CROSS - LINGUAL DOCUMENT CLASSIFICATION,"['BRIDGING', 'THE', 'DOMAIN', 'GAP', 'IN', 'CROSS', '-', 'LINGUAL', 'DOCUMENT', 'CLASSIFICATION']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['IN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'NNP']",10
document_classification,1,5,"Recent developments in cross - lingual understanding ( XLU ) has made progress in this area , trying to bridge the language barrier using language universal representations .","['Recent', 'developments', 'in', 'cross', '-', 'lingual', 'understanding', '(', 'XLU', ')', 'has', 'made', 'progress', 'in', 'this', 'area', ',', 'trying', 'to', 'bridge', 'the', 'language', 'barrier', 'using', 'language', 'universal', 'representations', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'IN', 'NN', ':', 'JJ', 'NN', '(', 'NNP', ')', 'VBZ', 'VBN', 'NN', 'IN', 'DT', 'NN', ',', 'VBG', 'TO', 'VB', 'DT', 'NN', 'NN', 'VBG', 'NN', 'JJ', 'NNS', '.']",28
document_classification,1,8,We combine state - of - the - art cross - lingual methods with recently proposed methods for weakly supervised learning such as unsupervised pre-training and unsupervised data augmentation to simultaneously close both the language gap and the domain gap in XLU .,"['We', 'combine', 'state', '-', 'of', '-', 'the', '-', 'art', 'cross', '-', 'lingual', 'methods', 'with', 'recently', 'proposed', 'methods', 'for', 'weakly', 'supervised', 'learning', 'such', 'as', 'unsupervised', 'pre-training', 'and', 'unsupervised', 'data', 'augmentation', 'to', 'simultaneously', 'close', 'both', 'the', 'language', 'gap', 'and', 'the', 'domain', 'gap', 'in', 'XLU', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['PRP', 'VBP', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', ':', 'JJ', 'NNS', 'IN', 'RB', 'VBN', 'NNS', 'IN', 'NN', 'VBD', 'VBG', 'JJ', 'IN', 'JJ', 'NN', 'CC', 'JJ', 'NNS', 'NN', 'TO', 'RB', 'VB', 'DT', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'IN', 'NNP', '.']",43
document_classification,1,38,"In particular , we focus on two approaches for domain adaptation .","['In', 'particular', ',', 'we', 'focus', 'on', 'two', 'approaches', 'for', 'domain', 'adaptation', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'JJ', ',', 'PRP', 'VBP', 'IN', 'CD', 'NNS', 'IN', 'NN', 'NN', '.']",12
document_classification,1,39,The first method is based on masked language model ( MLM ) pre-training ( as in ) using unlabeled target language corpora .,"['The', 'first', 'method', 'is', 'based', 'on', 'masked', 'language', 'model', '(', 'MLM', ')', 'pre-training', '(', 'as', 'in', ')', 'using', 'unlabeled', 'target', 'language', 'corpora', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'NN', '(', 'NNP', ')', 'NN', '(', 'IN', 'IN', ')', 'VBG', 'JJ', 'NN', 'NN', 'NN', '.']",23
document_classification,1,41,"The second method is unsupervised data augmentation ( UDA ) ) , where synthetic paraphrases are generated from the unlabeled corpus , and the model is trained on a label consistency loss .","['The', 'second', 'method', 'is', 'unsupervised', 'data', 'augmentation', '(', 'UDA', ')', ')', ',', 'where', 'synthetic', 'paraphrases', 'are', 'generated', 'from', 'the', 'unlabeled', 'corpus', ',', 'and', 'the', 'model', 'is', 'trained', 'on', 'a', 'label', 'consistency', 'loss', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'JJ', 'NNS', 'NN', '(', 'NNP', ')', ')', ',', 'WRB', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",33
document_classification,1,152,Fine-tune ( Ft ) : Fine - tuning the pre-trained model with the source - domain training set .,"['Fine-tune', '(', 'Ft', ')', ':', 'Fine', '-', 'tuning', 'the', 'pre-trained', 'model', 'with', 'the', 'source', '-', 'domain', 'training', 'set', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', '(', 'NNP', ')', ':', 'JJ', ':', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', 'NN', '.']",19
document_classification,1,154,Fine - tune with UDA ( UDA ) :,"['Fine', '-', 'tune', 'with', 'UDA', '(', 'UDA', ')', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'NN', 'IN', 'NNP', '(', 'NNP', ')', ':']",9
document_classification,1,155,This method utilizes the unlabeled data from the target domain by optimizing the UDA loss function ( Eq. ) .,"['This', 'method', 'utilizes', 'the', 'unlabeled', 'data', 'from', 'the', 'target', 'domain', 'by', 'optimizing', 'the', 'UDA', 'loss', 'function', '(', 'Eq.', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NNP', 'NN', 'NN', '(', 'NNP', ')', '.']",20
document_classification,1,156,Self - training based on the UDA model ( UDA + Self ) :,"['Self', '-', 'training', 'based', 'on', 'the', 'UDA', 'model', '(', 'UDA', '+', 'Self', ')', ':']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'NN', '(', 'NNP', 'NNP', 'NNP', ')', ':']",14
document_classification,1,157,"We first train the Ft model and UDA model , and choose the better one as the teacher model .","['We', 'first', 'train', 'the', 'Ft', 'model', 'and', 'UDA', 'model', ',', 'and', 'choose', 'the', 'better', 'one', 'as', 'the', 'teacher', 'model', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'NNP', 'NN', 'CC', 'NNP', 'NN', ',', 'CC', 'VBP', 'DT', 'JJR', 'CD', 'IN', 'DT', 'NN', 'NN', '.']",20
document_classification,1,158,"The teacher model is used to train a new XLM student using only unlabeled data U tgt in the target domain , as described above .","['The', 'teacher', 'model', 'is', 'used', 'to', 'train', 'a', 'new', 'XLM', 'student', 'using', 'only', 'unlabeled', 'data', 'U', 'tgt', 'in', 'the', 'target', 'domain', ',', 'as', 'described', 'above', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NNP', 'NN', 'VBG', 'RB', 'JJ', 'NNS', 'NNP', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'IN', 'VBN', 'IN', '.']",26
document_classification,1,171,"Looking at Ft ( XLM ) results , it is clear that without the help of unlabeled data from the target domain , there still exists a substantial gap between the model performance of the cross -lingual settings and the monolingual baselines , even when using state - of - the - art pre-trained cross -lingual representations .","['Looking', 'at', 'Ft', '(', 'XLM', ')', 'results', ',', 'it', 'is', 'clear', 'that', 'without', 'the', 'help', 'of', 'unlabeled', 'data', 'from', 'the', 'target', 'domain', ',', 'there', 'still', 'exists', 'a', 'substantial', 'gap', 'between', 'the', 'model', 'performance', 'of', 'the', 'cross', '-lingual', 'settings', 'and', 'the', 'monolingual', 'baselines', ',', 'even', 'when', 'using', 'state', '-', 'of', '-', 'the', '-', 'art', 'pre-trained', 'cross', '-lingual', 'representations', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'IN', 'NNP', '(', 'NNP', ')', 'NNS', ',', 'PRP', 'VBZ', 'JJ', 'IN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', ',', 'EX', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'JJ', 'NNS', 'CC', 'DT', 'JJ', 'NNS', ',', 'RB', 'WRB', 'VBG', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'JJ', 'NN', 'JJ', 'NNS', '.']",58
document_classification,1,172,Both the UDA algorithm and MLM pre-training can offer significant improvements by utilizing the unlabeled data .,"['Both', 'the', 'UDA', 'algorithm', 'and', 'MLM', 'pre-training', 'can', 'offer', 'significant', 'improvements', 'by', 'utilizing', 'the', 'unlabeled', 'data', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'DT', 'NNP', 'NN', 'CC', 'NNP', 'NN', 'MD', 'VB', 'JJ', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NNS', '.']",17
document_classification,1,173,"In the sentiment classification task , where the unlabeled data size is larger , Ft ( XLM ft ) model usnig MLM pre-training consistently provides larger improvements compared with the UDA method .","['In', 'the', 'sentiment', 'classification', 'task', ',', 'where', 'the', 'unlabeled', 'data', 'size', 'is', 'larger', ',', 'Ft', '(', 'XLM', 'ft', ')', 'model', 'usnig', 'MLM', 'pre-training', 'consistently', 'provides', 'larger', 'improvements', 'compared', 'with', 'the', 'UDA', 'method', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', 'NN', ',', 'WRB', 'DT', 'JJ', 'NNS', 'NN', 'VBZ', 'JJR', ',', 'NNP', '(', 'NNP', 'NN', ')', 'NN', 'JJ', 'NNP', 'NN', 'RB', 'VBZ', 'JJR', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']",33
document_classification,1,174,"On the other hand , the MLM method is relatively more resource intensive and takes longer to converge ( see Appendix A.5 ) .","['On', 'the', 'other', 'hand', ',', 'the', 'MLM', 'method', 'is', 'relatively', 'more', 'resource', 'intensive', 'and', 'takes', 'longer', 'to', 'converge', '(', 'see', 'Appendix', 'A.5', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'DT', 'NNP', 'NN', 'VBZ', 'RB', 'RBR', 'JJ', 'JJ', 'CC', 'VBZ', 'JJR', 'TO', 'VB', '(', 'VB', 'NNP', 'NNP', ')', '.']",24
document_classification,1,175,"In contrast , in the MLdoc dataset , when the size of the unlabeled samples is limited , the UDA method is more helpful .","['In', 'contrast', ',', 'in', 'the', 'MLdoc', 'dataset', ',', 'when', 'the', 'size', 'of', 'the', 'unlabeled', 'samples', 'is', 'limited', ',', 'the', 'UDA', 'method', 'is', 'more', 'helpful', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'NN', ',', 'IN', 'DT', 'NNP', 'NN', ',', 'WRB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'VBZ', 'JJ', ',', 'DT', 'NNP', 'NN', 'VBZ', 'RBR', 'JJ', '.']",25
document_classification,1,178,"In the sentiment classification task , we observe the self - training technique consistently improves over its teacher model .","['In', 'the', 'sentiment', 'classification', 'task', ',', 'we', 'observe', 'the', 'self', '-', 'training', 'technique', 'consistently', 'improves', 'over', 'its', 'teacher', 'model', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'NN', 'NN', 'RB', 'VBZ', 'RP', 'PRP$', 'JJ', 'NN', '.']",20
document_classification,1,179,It offers best results in both XLM and XLM ft based classifiers .,"['It', 'offers', 'best', 'results', 'in', 'both', 'XLM', 'and', 'XLM', 'ft', 'based', 'classifiers', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'RBS', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'VBP', 'VBN', 'NNS', '.']",13
document_classification,1,181,"In the MLdoc dataset , self - training also achieves the best results over all , however the gains are less clear .","['In', 'the', 'MLdoc', 'dataset', ',', 'self', '-', 'training', 'also', 'achieves', 'the', 'best', 'results', 'over', 'all', ',', 'however', 'the', 'gains', 'are', 'less', 'clear', '.']","['O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNP', 'NN', ',', 'PRP', ':', 'NN', 'RB', 'VBZ', 'DT', 'JJS', 'NNS', 'IN', 'DT', ',', 'RB', 'DT', 'NNS', 'VBP', 'RBR', 'JJ', '.']",23
document_classification,1,183,"Finally , comparing with the best cross - lingual results and monolingual fine - tune baseline , we are able to completely close the performance gap by utilizing unlabeled data in the target language .","['Finally', ',', 'comparing', 'with', 'the', 'best', 'cross', '-', 'lingual', 'results', 'and', 'monolingual', 'fine', '-', 'tune', 'baseline', ',', 'we', 'are', 'able', 'to', 'completely', 'close', 'the', 'performance', 'gap', 'by', 'utilizing', 'unlabeled', 'data', 'in', 'the', 'target', 'language', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'VBG', 'IN', 'DT', 'JJS', 'NN', ':', 'JJ', 'NNS', 'CC', 'JJ', 'JJ', ':', 'NN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'TO', 'RB', 'VB', 'DT', 'NN', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",35
document_classification,1,184,"Furthermore , our framework reaches new state - of - the - art results , improving over vanilla XLM baselines by 44 % on average .","['Furthermore', ',', 'our', 'framework', 'reaches', 'new', 'state', '-', 'of', '-', 'the', '-', 'art', 'results', ',', 'improving', 'over', 'vanilla', 'XLM', 'baselines', 'by', '44', '%', 'on', 'average', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'NN', 'VBZ', 'JJ', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', ',', 'VBG', 'IN', 'NN', 'NNP', 'NNS', 'IN', 'CD', 'NN', 'IN', 'NN', '.']",26
document_classification,1,214,"Leveraging the unlabeled data from other domains does not offer consistent improvement , however can provide additional value in isolated cases .","['Leveraging', 'the', 'unlabeled', 'data', 'from', 'other', 'domains', 'does', 'not', 'offer', 'consistent', 'improvement', ',', 'however', 'can', 'provide', 'additional', 'value', 'in', 'isolated', 'cases', '.']","['B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', 'VBZ', 'RB', 'VB', 'JJ', 'NN', ',', 'RB', 'MD', 'VB', 'JJ', 'NN', 'IN', 'JJ', 'NNS', '.']",22
document_classification,5,2,HDLTex : Hierarchical Deep Learning for Text Classification,"['HDLTex', ':', 'Hierarchical', 'Deep', 'Learning', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NN', ':', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",8
document_classification,5,5,"Central to these information processing methods is document classification , which has become an important application for supervised learning .","['Central', 'to', 'these', 'information', 'processing', 'methods', 'is', 'document', 'classification', ',', 'which', 'has', 'become', 'an', 'important', 'application', 'for', 'supervised', 'learning', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'TO', 'DT', 'NN', 'NN', 'NNS', 'VBZ', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'VBN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', '.']",20
document_classification,5,9,Instead we perform hierarchical classification using an approach we call Hierarchical Deep Learning for Text classification ( HDLTex ) .,"['Instead', 'we', 'perform', 'hierarchical', 'classification', 'using', 'an', 'approach', 'we', 'call', 'Hierarchical', 'Deep', 'Learning', 'for', 'Text', 'classification', '(', 'HDLTex', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'PRP', 'VBP', 'JJ', 'NN', 'VBG', 'DT', 'NN', 'PRP', 'VBP', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NN', '(', 'NNP', ')', '.']",20
document_classification,5,24,This paper presents a new approach to hierarchical document classification that we call Hierarchical Deep Learning for Text classification ( HDLTex ) .,"['This', 'paper', 'presents', 'a', 'new', 'approach', 'to', 'hierarchical', 'document', 'classification', 'that', 'we', 'call', 'Hierarchical', 'Deep', 'Learning', 'for', 'Text', 'classification', '(', 'HDLTex', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'JJ', 'NN', 'NN', 'IN', 'PRP', 'VBP', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NN', '(', 'NNP', ')', '.']",23
document_classification,5,25,HDLTex combines deep learning architectures to allow both over all and specialized learning by level of the document hierarchy .,"['HDLTex', 'combines', 'deep', 'learning', 'architectures', 'to', 'allow', 'both', 'over', 'all', 'and', 'specialized', 'learning', 'by', 'level', 'of', 'the', 'document', 'hierarchy', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'NNS', 'RB', 'VBG', 'NNS', 'TO', 'VB', 'DT', 'IN', 'DT', 'CC', 'VBN', 'NN', 'IN', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",20
document_classification,5,231,The following results were obtained using a combination of central processing units ( CPUs ) and graphical processing units ( GPUs ) .,"['The', 'following', 'results', 'were', 'obtained', 'using', 'a', 'combination', 'of', 'central', 'processing', 'units', '(', 'CPUs', ')', 'and', 'graphical', 'processing', 'units', '(', 'GPUs', ')', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNS', 'VBD', 'VBN', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'VBG', 'NNS', '(', 'NNP', ')', 'CC', 'JJ', 'VBG', 'NNS', '(', 'NNP', ')', '.']",23
document_classification,5,232,"The processing was done on a Xeon E5 ? 2640 ( 2.6 GHz ) with 32 cores and 64GB memory , and the GPU cards were N vidia Quadro K620 and N vidia Tesla K20c .","['The', 'processing', 'was', 'done', 'on', 'a', 'Xeon', 'E5', '?', '2640', '(', '2.6', 'GHz', ')', 'with', '32', 'cores', 'and', '64GB', 'memory', ',', 'and', 'the', 'GPU', 'cards', 'were', 'N', 'vidia', 'Quadro', 'K620', 'and', 'N', 'vidia', 'Tesla', 'K20c', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'NNP', '.', 'CD', '(', 'CD', 'NNP', ')', 'IN', 'CD', 'NNS', 'CC', 'CD', 'NN', ',', 'CC', 'DT', 'NNP', 'NNS', 'VBD', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'NNP', '.']",36
document_classification,5,233,"We implemented our approaches in Python using the Compute Unified Device Architecture ( CUDA ) , which is a parallel computing platform and Application Programming Interface ( API ) model created by N vidia .","['We', 'implemented', 'our', 'approaches', 'in', 'Python', 'using', 'the', 'Compute', 'Unified', 'Device', 'Architecture', '(', 'CUDA', ')', ',', 'which', 'is', 'a', 'parallel', 'computing', 'platform', 'and', 'Application', 'Programming', 'Interface', '(', 'API', ')', 'model', 'created', 'by', 'N', 'vidia', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'PRP$', 'NNS', 'IN', 'NNP', 'VBG', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'CC', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NN', 'VBN', 'IN', 'NNP', 'NN', '.']",35
document_classification,5,234,"We also used Keras and Tensor Flow libraries for creating the neural networks , .","['We', 'also', 'used', 'Keras', 'and', 'Tensor', 'Flow', 'libraries', 'for', 'creating', 'the', 'neural', 'networks', ',', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O']","['PRP', 'RB', 'VBD', 'NNP', 'CC', 'NNP', 'NNP', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NNS', ',', '.']",15
document_classification,5,236,"The baseline tests compare three conventional document classification approaches ( nave Bayes and two versions of SVM ) and stacking SVM with three deep learning approaches ( DNN , RNN , and CNN ) .","['The', 'baseline', 'tests', 'compare', 'three', 'conventional', 'document', 'classification', 'approaches', '(', 'nave', 'Bayes', 'and', 'two', 'versions', 'of', 'SVM', ')', 'and', 'stacking', 'SVM', 'with', 'three', 'deep', 'learning', 'approaches', '(', 'DNN', ',', 'RNN', ',', 'and', 'CNN', ')', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'O']","['DT', 'NN', 'NNS', 'VBP', 'CD', 'JJ', 'NN', 'NN', 'NNS', '(', 'JJ', 'NNP', 'CC', 'CD', 'NNS', 'IN', 'NNP', ')', 'CC', 'VBG', 'NNP', 'IN', 'CD', 'JJ', 'VBG', 'NNS', '(', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', ')', '.']",35
document_classification,5,237,In this set of tests the RNN outperforms the others for all three W OS data sets .,"['In', 'this', 'set', 'of', 'tests', 'the', 'RNN', 'outperforms', 'the', 'others', 'for', 'all', 'three', 'W', 'OS', 'data', 'sets', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'NNS', 'DT', 'NNP', 'VBZ', 'DT', 'NNS', 'IN', 'DT', 'CD', 'NNP', 'NNP', 'NNS', 'NNS', '.']",18
document_classification,5,238,CNN performs secondbest for three data sets .,"['CNN', 'performs', 'secondbest', 'for', 'three', 'data', 'sets', '.']","['B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['NNP', 'VBZ', 'JJS', 'IN', 'CD', 'NNS', 'NNS', '.']",8
document_classification,5,239,SVM with term weighting is third for the first two sets while the multi-word approach of is in third place for the third data set .,"['SVM', 'with', 'term', 'weighting', 'is', 'third', 'for', 'the', 'first', 'two', 'sets', 'while', 'the', 'multi-word', 'approach', 'of', 'is', 'in', 'third', 'place', 'for', 'the', 'third', 'data', 'set', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'IN', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'JJ', 'CD', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'VBZ', 'IN', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'NN', '.']",26
document_classification,5,242,"Overall , nave Bayes does much worse than the other methods throughout these tests .","['Overall', ',', 'nave', 'Bayes', 'does', 'much', 'worse', 'than', 'the', 'other', 'methods', 'throughout', 'these', 'tests', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['JJ', ',', 'JJ', 'NNP', 'VBZ', 'RB', 'JJR', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NNS', '.']",15
document_classification,5,243,"As for the tests of classifying these documents within a hierarchy , the HDLTex approaches with stacked , deep learning architectures clearly provide superior performance .","['As', 'for', 'the', 'tests', 'of', 'classifying', 'these', 'documents', 'within', 'a', 'hierarchy', ',', 'the', 'HDLTex', 'approaches', 'with', 'stacked', ',', 'deep', 'learning', 'architectures', 'clearly', 'provide', 'superior', 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'IN', 'DT', 'NNS', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', ',', 'DT', 'NNP', 'NNS', 'IN', 'JJ', ',', 'JJ', 'NN', 'NNS', 'RB', 'VBP', 'JJ', 'NN', '.']",26
document_classification,5,244,"For data set W OS ? 11967 , the best accuracy is obtained by the combination RNN for the first level of classification and DNN for the second level .","['For', 'data', 'set', 'W', 'OS', '?', '11967', ',', 'the', 'best', 'accuracy', 'is', 'obtained', 'by', 'the', 'combination', 'RNN', 'for', 'the', 'first', 'level', 'of', 'classification', 'and', 'DNN', 'for', 'the', 'second', 'level', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNS', 'VBN', 'NNP', 'NNP', '.', 'CD', ',', 'DT', 'JJS', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', 'CC', 'NNP', 'IN', 'DT', 'JJ', 'NN', '.']",30
document_classification,5,245,"This gives accuracies of 94 % for the first level , 92 % for the second level and 86 % over all .","['This', 'gives', 'accuracies', 'of', '94', '%', 'for', 'the', 'first', 'level', ',', '92', '%', 'for', 'the', 'second', 'level', 'and', '86', '%', 'over', 'all', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'O']","['DT', 'VBZ', 'NNS', 'IN', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'CD', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'CD', 'NN', 'IN', 'DT', '.']",23
document_classification,5,247,For data set W OS ? 46985 the best scores are again achieved by RNN for level one but this time with RNN for level 2 .,"['For', 'data', 'set', 'W', 'OS', '?', '46985', 'the', 'best', 'scores', 'are', 'again', 'achieved', 'by', 'RNN', 'for', 'level', 'one', 'but', 'this', 'time', 'with', 'RNN', 'for', 'level', '2', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNS', 'VBN', 'NNP', 'NNP', '.', 'CD', 'DT', 'JJS', 'NNS', 'VBP', 'RB', 'VBN', 'IN', 'NNP', 'IN', 'NN', 'CD', 'CC', 'DT', 'NN', 'IN', 'NNP', 'IN', 'NN', 'CD', '.']",27
document_classification,11,2,Task - oriented Word Embedding for Text Classification,"['Task', '-', 'oriented', 'Word', 'Embedding', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', ':', 'VBD', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",8
document_classification,11,30,"In this paper , we propose a task - oriented word embedding method ( denoted as ToWE ) to solve the aforementioned problem .","['In', 'this', 'paper', ',', 'we', 'propose', 'a', 'task', '-', 'oriented', 'word', 'embedding', 'method', '(', 'denoted', 'as', 'ToWE', ')', 'to', 'solve', 'the', 'aforementioned', 'problem', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ':', 'VBN', 'NN', 'VBG', 'NN', '(', 'VBN', 'IN', 'NNP', ')', 'TO', 'VB', 'DT', 'JJ', 'NN', '.']",24
document_classification,11,38,"In our method , the words ' contextual information and task information are inherently jointed to construct the word embeddings .","['In', 'our', 'method', ',', 'the', 'words', ""'"", 'contextual', 'information', 'and', 'task', 'information', 'are', 'inherently', 'jointed', 'to', 'construct', 'the', 'word', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP$', 'NN', ',', 'DT', 'NNS', 'POS', 'JJ', 'NN', 'CC', 'NN', 'NN', 'VBP', 'RB', 'VBN', 'TO', 'VB', 'DT', 'NN', 'NNS', '.']",21
document_classification,11,40,"To model the task information , we regularize the distribution of the salient words to have a clear classification boundary , and then adjust the distribution of the other words in the embedding space correspondingly .","['To', 'model', 'the', 'task', 'information', ',', 'we', 'regularize', 'the', 'distribution', 'of', 'the', 'salient', 'words', 'to', 'have', 'a', 'clear', 'classification', 'boundary', ',', 'and', 'then', 'adjust', 'the', 'distribution', 'of', 'the', 'other', 'words', 'in', 'the', 'embedding', 'space', 'correspondingly', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O']","['TO', 'VB', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', ',', 'CC', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'VBG', 'NN', 'RB', '.']",36
document_classification,11,146,"To evaluate our method , we consider the following baselines : ( 1 ) the BOW method is employed as a basic baseline .","['To', 'evaluate', 'our', 'method', ',', 'we', 'consider', 'the', 'following', 'baselines', ':', '(', '1', ')', 'the', 'BOW', 'method', 'is', 'employed', 'as', 'a', 'basic', 'baseline', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O']","['TO', 'VB', 'PRP$', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NNS', ':', '(', 'CD', ')', 'DT', 'NNP', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', '.']",24
document_classification,11,147,It represents each document as a bag of words and the weighting scheme is TFIDF .,"['It', 'represents', 'each', 'document', 'as', 'a', 'bag', 'of', 'words', 'and', 'the', 'weighting', 'scheme', 'is', 'TFIDF', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['PRP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'CC', 'DT', 'JJ', 'NN', 'VBZ', 'NNP', '.']",16
document_classification,11,149,( 2 ) the Word2 Vec method is a neural network language method which learns word embeddings by maximizing the conditional probability leveraging contextual information .,"['(', '2', ')', 'the', 'Word2', 'Vec', 'method', 'is', 'a', 'neural', 'network', 'language', 'method', 'which', 'learns', 'word', 'embeddings', 'by', 'maximizing', 'the', 'conditional', 'probability', 'leveraging', 'contextual', 'information', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['(', 'CD', ')', 'DT', 'NNP', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'NN', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'VBG', 'JJ', 'NN', '.']",26
document_classification,11,183,"( 1 ) Our method performs better than the other methods , and are proved to be highly reliable for the text classification task .","['(', '1', ')', 'Our', 'method', 'performs', 'better', 'than', 'the', 'other', 'methods', ',', 'and', 'are', 'proved', 'to', 'be', 'highly', 'reliable', 'for', 'the', 'text', 'classification', 'task', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'CD', ')', 'PRP$', 'NN', 'VBZ', 'JJR', 'IN', 'DT', 'JJ', 'NNS', ',', 'CC', 'VBP', 'VBN', 'TO', 'VB', 'RB', 'JJ', 'IN', 'DT', 'NN', 'NN', 'NN', '.']",25
document_classification,11,184,"In particular , the ToWE - SG method significantly outperforms the other baselines on the 20 New s Group , 5 Abstract s Group , and MR .","['In', 'particular', ',', 'the', 'ToWE', '-', 'SG', 'method', 'significantly', 'outperforms', 'the', 'other', 'baselines', 'on', 'the', '20', 'New', 's', 'Group', ',', '5', 'Abstract', 's', 'Group', ',', 'and', 'MR', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O']","['IN', 'JJ', ',', 'DT', 'NNP', ':', 'NNP', 'VBZ', 'RB', 'VBZ', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'CD', 'NNP', 'NN', 'NNP', ',', 'CD', 'NNP', 'NN', 'NNP', ',', 'CC', 'NNP', '.']",28
document_classification,11,186,"( 2 ) The word embedding methods outperform the basic bag - of - words methods in most cases , indicating the superiority of distributed word representation over the one - hot representation .","['(', '2', ')', 'The', 'word', 'embedding', 'methods', 'outperform', 'the', 'basic', 'bag', '-', 'of', '-', 'words', 'methods', 'in', 'most', 'cases', ',', 'indicating', 'the', 'superiority', 'of', 'distributed', 'word', 'representation', 'over', 'the', 'one', '-', 'hot', 'representation', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'CD', ')', 'DT', 'NN', 'VBG', 'NNS', 'IN', 'DT', 'JJ', 'NN', ':', 'IN', ':', 'NNS', 'NNS', 'IN', 'JJS', 'NNS', ',', 'VBG', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', 'IN', 'DT', 'CD', ':', 'JJ', 'NN', '.']",34
document_classification,11,190,"Our method achieves better performance over Retrofit method , indicating that the task - specific features could be more effective compared with general semantic relations constructed by humans in the knowledge bases .","['Our', 'method', 'achieves', 'better', 'performance', 'over', 'Retrofit', 'method', ',', 'indicating', 'that', 'the', 'task', '-', 'specific', 'features', 'could', 'be', 'more', 'effective', 'compared', 'with', 'general', 'semantic', 'relations', 'constructed', 'by', 'humans', 'in', 'the', 'knowledge', 'bases', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'JJR', 'NN', 'IN', 'NNP', 'NN', ',', 'VBG', 'IN', 'DT', 'NN', ':', 'JJ', 'NNS', 'MD', 'VB', 'RBR', 'JJ', 'VBN', 'IN', 'JJ', 'JJ', 'NNS', 'VBN', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NNS', '.']",33
document_classification,11,193,"Our method outperforms the TWE method on both the document - level and sentence - level tasks , which shows the stability and reliability of modeling taskspecific features in real - world applications .","['Our', 'method', 'outperforms', 'the', 'TWE', 'method', 'on', 'both', 'the', 'document', '-', 'level', 'and', 'sentence', '-', 'level', 'tasks', ',', 'which', 'shows', 'the', 'stability', 'and', 'reliability', 'of', 'modeling', 'taskspecific', 'features', 'in', 'real', '-', 'world', 'applications', '.']","['O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'NNP', 'NN', 'IN', 'CC', 'DT', 'NN', ':', 'NN', 'CC', 'NN', ':', 'NN', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'JJ', ':', 'NN', 'NNS', '.']",34
document_classification,14,2,Supervised and Semi- Supervised Text Categorization using LSTM for Region Embeddings,"['Supervised', 'and', 'Semi-', 'Supervised', 'Text', 'Categorization', 'using', 'LSTM', 'for', 'Region', 'Embeddings']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['VBN', 'CC', 'NNP', 'VBD', 'NNP', 'NNP', 'VBG', 'NNP', 'IN', 'NNP', 'NNS']",11
document_classification,14,4,"One - hot CNN ( convolutional neural network ) has been shown to be effective for text categorization ( Johnson & Zhang , 2015a ; b ) .","['One', '-', 'hot', 'CNN', '(', 'convolutional', 'neural', 'network', ')', 'has', 'been', 'shown', 'to', 'be', 'effective', 'for', 'text', 'categorization', '(', 'Johnson', '&', 'Zhang', ',', '2015a', ';', 'b', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', ':', 'JJ', 'NNP', '(', 'JJ', 'JJ', 'NN', ')', 'VBZ', 'VBN', 'VBN', 'TO', 'VB', 'JJ', 'IN', 'JJ', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ':', 'NN', ')', '.']",28
document_classification,14,31,"In this work , we build on the general framework of ' region embedding + pooling ' and explore a more sophisticated region embedding via Long Short - Term Memory ( LSTM ) , seeking to overcome the shortcomings above , in the supervised and semi-supervised settings .","['In', 'this', 'work', ',', 'we', 'build', 'on', 'the', 'general', 'framework', 'of', ""'"", 'region', 'embedding', '+', 'pooling', ""'"", 'and', 'explore', 'a', 'more', 'sophisticated', 'region', 'embedding', 'via', 'Long', 'Short', '-', 'Term', 'Memory', '(', 'LSTM', ')', ',', 'seeking', 'to', 'overcome', 'the', 'shortcomings', 'above', ',', 'in', 'the', 'supervised', 'and', 'semi-supervised', 'settings', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'POS', 'NN', 'VBG', 'JJ', 'VBG', 'POS', 'CC', 'VB', 'DT', 'RBR', 'JJ', 'NN', 'VBG', 'IN', 'NNP', 'NNP', ':', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'VBG', 'TO', 'VB', 'DT', 'NNS', 'IN', ',', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NNS', '.']",48
document_classification,14,35,It is designed to enable learning of dependencies over larger time lags than feasible with traditional recurrent networks .,"['It', 'is', 'designed', 'to', 'enable', 'learning', 'of', 'dependencies', 'over', 'larger', 'time', 'lags', 'than', 'feasible', 'with', 'traditional', 'recurrent', 'networks', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'VBN', 'TO', 'VB', 'NN', 'IN', 'NNS', 'IN', 'JJR', 'NN', 'NNS', 'IN', 'JJ', 'IN', 'JJ', 'NN', 'NNS', '.']",19
document_classification,14,36,"That is , an LSTM can be used to embed text regions of variable ( and possibly large ) sizes .","['That', 'is', ',', 'an', 'LSTM', 'can', 'be', 'used', 'to', 'embed', 'text', 'regions', 'of', 'variable', '(', 'and', 'possibly', 'large', ')', 'sizes', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBZ', ',', 'DT', 'NNP', 'MD', 'VB', 'VBN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJ', '(', 'CC', 'RB', 'JJ', ')', 'VBZ', '.']",21
document_classification,14,38,"Our strategy is to simplify the model as much as possible , including elimination of a word embedding layer routinely used to produce input to LSTM .","['Our', 'strategy', 'is', 'to', 'simplify', 'the', 'model', 'as', 'much', 'as', 'possible', ',', 'including', 'elimination', 'of', 'a', 'word', 'embedding', 'layer', 'routinely', 'used', 'to', 'produce', 'input', 'to', 'LSTM', '.']","['O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'B-n', 'O']","['PRP$', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'RB', 'RB', 'IN', 'JJ', ',', 'VBG', 'NN', 'IN', 'DT', 'NN', 'VBG', 'NN', 'RB', 'VBN', 'TO', 'VB', 'NN', 'TO', 'NNP', '.']",27
document_classification,14,46,Our code and experimental details are available at http://riejohnson.com/cnn download.html .,"['Our', 'code', 'and', 'experimental', 'details', 'are', 'available', 'at', 'http://riejohnson.com/cnn', 'download.html', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'CC', 'JJ', 'NNS', 'VBP', 'JJ', 'IN', 'JJ', 'NN', '.']",11
document_classification,14,124,Experiments ( supervised ),"['Experiments', '(', 'supervised', ')']","['B-n', 'I-n', 'I-n', 'I-n']","['NNS', '(', 'VBN', ')']",4
document_classification,14,135,Optimization was done with SGD with mini-batch size 50 or 100 with momentum or optionally rmsprop for acceleration .,"['Optimization', 'was', 'done', 'with', 'SGD', 'with', 'mini-batch', 'size', '50', 'or', '100', 'with', 'momentum', 'or', 'optionally', 'rmsprop', 'for', 'acceleration', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['NN', 'VBD', 'VBN', 'IN', 'NNP', 'IN', 'JJ', 'NN', 'CD', 'CC', 'CD', 'IN', 'NN', 'CC', 'RB', 'VB', 'IN', 'NN', '.']",19
document_classification,14,139,"Comparing the two types of LSTM in , we see that our one - hot bidirectional LSTM with pooling ( oh - 2 LSTMp ) outperforms word - vector LSTM ( wv - LSTM ) on all the datasets , confirming the effectiveness of our approach .","['Comparing', 'the', 'two', 'types', 'of', 'LSTM', 'in', ',', 'we', 'see', 'that', 'our', 'one', '-', 'hot', 'bidirectional', 'LSTM', 'with', 'pooling', '(', 'oh', '-', '2', 'LSTMp', ')', 'outperforms', 'word', '-', 'vector', 'LSTM', '(', 'wv', '-', 'LSTM', ')', 'on', 'all', 'the', 'datasets', ',', 'confirming', 'the', 'effectiveness', 'of', 'our', 'approach', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'CD', 'NNS', 'IN', 'NNP', 'IN', ',', 'PRP', 'VBP', 'IN', 'PRP$', 'CD', ':', 'JJ', 'JJ', 'NNP', 'IN', 'NN', '(', 'UH', ':', 'CD', 'NNP', ')', 'VBZ', 'NN', ':', 'NN', 'NNP', '(', 'SYM', ':', 'NNP', ')', 'IN', 'PDT', 'DT', 'NNS', ',', 'VBG', 'DT', 'NN', 'IN', 'PRP$', 'NN', '.']",47
document_classification,14,140,Now we review the non -LSTM baseline methods .,"['Now', 'we', 'review', 'the', 'non', '-LSTM', 'baseline', 'methods', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'PRP', 'VBP', 'DT', 'JJ', 'NNP', 'NN', 'NNS', '.']",9
document_classification,14,143,"In , on three out of the four datasets , oh - 2 LSTMp outperforms SVM and the CNN .","['In', ',', 'on', 'three', 'out', 'of', 'the', 'four', 'datasets', ',', 'oh', '-', '2', 'LSTMp', 'outperforms', 'SVM', 'and', 'the', 'CNN', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'O', 'O', 'B-n', 'O']","['IN', ',', 'IN', 'CD', 'IN', 'IN', 'DT', 'CD', 'NNS', ',', 'SYM', ':', 'CD', 'NNP', 'NNS', 'NNP', 'CC', 'DT', 'NNP', '.']",20
document_classification,14,147,"Only on RCV1 , n-gram SVM is no better than bag - of - word SVM , and only on RCV1 , bow - CNN outperforms seq-CNN .","['Only', 'on', 'RCV1', ',', 'n-gram', 'SVM', 'is', 'no', 'better', 'than', 'bag', '-', 'of', '-', 'word', 'SVM', ',', 'and', 'only', 'on', 'RCV1', ',', 'bow', '-', 'CNN', 'outperforms', 'seq-CNN', '.']","['O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'O']","['RB', 'IN', 'NNP', ',', 'JJ', 'NNP', 'VBZ', 'DT', 'JJR', 'IN', 'SYM', ':', 'IN', ':', 'NN', 'NNP', ',', 'CC', 'RB', 'IN', 'NNP', ',', 'SYM', ':', 'NN', 'VBZ', 'NN', '.']",28
document_classification,14,158,"Overall , one - hot CNN works surprising well considering its simplicity , and this observation motivates the idea of combining the two types of region embeddings , discussed later .","['Overall', ',', 'one', '-', 'hot', 'CNN', 'works', 'surprising', 'well', 'considering', 'its', 'simplicity', ',', 'and', 'this', 'observation', 'motivates', 'the', 'idea', 'of', 'combining', 'the', 'two', 'types', 'of', 'region', 'embeddings', ',', 'discussed', 'later', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'CD', ':', 'JJ', 'NNP', 'VBZ', 'JJ', 'RB', 'VBG', 'PRP$', 'NN', ',', 'CC', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'VBG', 'DT', 'CD', 'NNS', 'IN', 'NN', 'NNS', ',', 'VBN', 'RB', '.']",31
document_classification,14,160,"The previous best performance on 20NG is 15.3 ( not shown in the table ) of DL15 , obtained by pre-training wv - LSTM of 1024 units with labeled training data .","['The', 'previous', 'best', 'performance', 'on', '20NG', 'is', '15.3', '(', 'not', 'shown', 'in', 'the', 'table', ')', 'of', 'DL15', ',', 'obtained', 'by', 'pre-training', 'wv', '-', 'LSTM', 'of', '1024', 'units', 'with', 'labeled', 'training', 'data', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'JJS', 'NN', 'IN', 'CD', 'VBZ', 'CD', '(', 'RB', 'VBN', 'IN', 'DT', 'NN', ')', 'IN', 'NNP', ',', 'VBN', 'IN', 'JJ', 'NN', ':', 'NN', 'IN', 'CD', 'NNS', 'IN', 'JJ', 'NN', 'NNS', '.']",32
document_classification,14,161,"Our oh - 2 LSTMp achieved 13.32 , which is 2 % better .","['Our', 'oh', '-', '2', 'LSTMp', 'achieved', '13.32', ',', 'which', 'is', '2', '%', 'better', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'SYM', ':', 'CD', 'NNP', 'VBD', 'CD', ',', 'WDT', 'VBZ', 'CD', 'NN', 'JJR', '.']",14
document_classification,14,195,Semi-supervised experiments,"['Semi-supervised', 'experiments']","['B-n', 'I-n']","['JJ', 'NNS']",2
document_classification,14,210,"Although the pre-trained wv - LSTM clearly outperformed the supervised wv - LSTM , it underperformed the models with region tv-embeddings .","['Although', 'the', 'pre-trained', 'wv', '-', 'LSTM', 'clearly', 'outperformed', 'the', 'supervised', 'wv', '-', 'LSTM', ',', 'it', 'underperformed', 'the', 'models', 'with', 'region', 'tv-embeddings', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NN', ':', 'NNP', 'RB', 'VBD', 'DT', 'JJ', 'NN', ':', 'NN', ',', 'PRP', 'VBD', 'DT', 'NNS', 'IN', 'NN', 'NNS', '.']",22
document_classification,14,216,"On our tasks , wv - 2 LSTMp using the Google News vectors ( row # 2 ) performed relatively poorly .","['On', 'our', 'tasks', ',', 'wv', '-', '2', 'LSTMp', 'using', 'the', 'Google', 'News', 'vectors', '(', 'row', '#', '2', ')', 'performed', 'relatively', 'poorly', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'PRP$', 'NNS', ',', 'SYM', ':', 'CD', 'NNP', 'VBG', 'DT', 'NNP', 'NNP', 'NNS', '(', 'VB', '#', 'CD', ')', 'VBD', 'RB', 'JJ', '.']",22
document_classification,14,220,"Now we review the performance of one - hot CNN with one 200 - dim CNN tv-embedding row # 5 ) , which is comparable with our LSTM with two 100 - dim LSTM tv-embeddings ( row # 4 ) in terms of the dimensionality of tv-embeddings .","['Now', 'we', 'review', 'the', 'performance', 'of', 'one', '-', 'hot', 'CNN', 'with', 'one', '200', '-', 'dim', 'CNN', 'tv-embedding', 'row', '#', '5', ')', ',', 'which', 'is', 'comparable', 'with', 'our', 'LSTM', 'with', 'two', '100', '-', 'dim', 'LSTM', 'tv-embeddings', '(', 'row', '#', '4', ')', 'in', 'terms', 'of', 'the', 'dimensionality', 'of', 'tv-embeddings', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'CD', ':', 'JJ', 'NNP', 'IN', 'CD', 'CD', ':', 'NN', 'NNP', 'NN', 'NN', '#', 'CD', ')', ',', 'WDT', 'VBZ', 'JJ', 'IN', 'PRP$', 'NNP', 'IN', 'CD', 'CD', ':', 'NN', 'NNP', 'NNS', '(', 'VB', '#', 'CD', ')', 'IN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NNS', '.']",48
document_classification,14,221,The LSTM ( row # 4 ) rivals or outperforms the CNN ( row # 5 ) on IMDB / Elec but underperforms it on RCV1 .,"['The', 'LSTM', '(', 'row', '#', '4', ')', 'rivals', 'or', 'outperforms', 'the', 'CNN', '(', 'row', '#', '5', ')', 'on', 'IMDB', '/', 'Elec', 'but', 'underperforms', 'it', 'on', 'RCV1', '.']","['O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'B-n', 'O']","['DT', 'NNP', '(', 'VB', '#', 'CD', ')', 'NNS', 'CC', 'VBZ', 'DT', 'NNP', '(', 'VB', '#', 'CD', ')', 'IN', 'NNP', 'NNP', 'NNP', 'CC', 'VBZ', 'PRP', 'IN', 'NNP', '.']",27
document_classification,14,222,"Increasing the dimensionality of LSTM tvembeddings from 100 to 300 on RCV1 , we obtain 8.62 , but it still does not reach 7.97 of the CNN .","['Increasing', 'the', 'dimensionality', 'of', 'LSTM', 'tvembeddings', 'from', '100', 'to', '300', 'on', 'RCV1', ',', 'we', 'obtain', '8.62', ',', 'but', 'it', 'still', 'does', 'not', 'reach', '7.97', 'of', 'the', 'CNN', '.']","['B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'DT', 'NN', 'IN', 'NNP', 'NNS', 'IN', 'CD', 'TO', 'CD', 'IN', 'NNP', ',', 'PRP', 'VB', 'CD', ',', 'CC', 'PRP', 'RB', 'VBZ', 'RB', 'VB', 'CD', 'IN', 'DT', 'NNP', '.']",28
document_classification,7,2,A Corpus for Multilingual Document Classification in Eight Languages,"['A', 'Corpus', 'for', 'Multilingual', 'Document', 'Classification', 'in', 'Eight', 'Languages']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['DT', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",9
document_classification,7,4,Cross - lingual document classification aims at training a document classifier on resources in one language and transferring it to a different language without any additional resources .,"['Cross', '-', 'lingual', 'document', 'classification', 'aims', 'at', 'training', 'a', 'document', 'classifier', 'on', 'resources', 'in', 'one', 'language', 'and', 'transferring', 'it', 'to', 'a', 'different', 'language', 'without', 'any', 'additional', 'resources', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'JJ', 'NN', 'NN', 'VBZ', 'IN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'NNS', 'IN', 'CD', 'NN', 'CC', 'VBG', 'PRP', 'TO', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', '.']",28
document_classification,7,31,"We extend previous works and use the data in the Reuters Corpus Volume 2 to define new cross - lingual document classification tasks for eight very different languages , namely English , French , Spanish , Italian , German , Russian , Chinese and Japanese .","['We', 'extend', 'previous', 'works', 'and', 'use', 'the', 'data', 'in', 'the', 'Reuters', 'Corpus', 'Volume', '2', 'to', 'define', 'new', 'cross', '-', 'lingual', 'document', 'classification', 'tasks', 'for', 'eight', 'very', 'different', 'languages', ',', 'namely', 'English', ',', 'French', ',', 'Spanish', ',', 'Italian', ',', 'German', ',', 'Russian', ',', 'Chinese', 'and', 'Japanese', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O']","['PRP', 'VBP', 'JJ', 'NNS', 'CC', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NNP', 'NNP', 'NN', 'CD', 'TO', 'VB', 'JJ', 'NN', ':', 'JJ', 'NN', 'NN', 'NNS', 'IN', 'CD', 'RB', 'JJ', 'NNS', ',', 'RB', 'JJ', ',', 'JJ', ',', 'JJ', ',', 'JJ', ',', 'JJ', ',', 'JJ', ',', 'JJ', 'CC', 'JJ', '.']",46
document_classification,7,32,"For each language , we define a train , development and test corpus .","['For', 'each', 'language', ',', 'we', 'define', 'a', 'train', ',', 'development', 'and', 'test', 'corpus', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', ',', 'NN', 'CC', 'NN', 'NN', '.']",14
document_classification,7,114,Zero - shot cross - lingual document classification,"['Zero', '-', 'shot', 'cross', '-', 'lingual', 'document', 'classification']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'NN', ':', 'JJ', 'NN', 'NN']",8
document_classification,7,116,The classifiers based on the MultiCCA embeddings perform very well on the development corpus ( accuracies close or exceeding 90 % ) .,"['The', 'classifiers', 'based', 'on', 'the', 'MultiCCA', 'embeddings', 'perform', 'very', 'well', 'on', 'the', 'development', 'corpus', '(', 'accuracies', 'close', 'or', 'exceeding', '90', '%', ')', '.']","['O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'NNS', 'VB', 'RB', 'RB', 'IN', 'DT', 'NN', 'NN', '(', 'NNS', 'RB', 'CC', 'VBG', 'CD', 'NN', ')', '.']",23
document_classification,7,117,"The system trained on English also achieves excellent results when transfered to a different languages , it scores best for three out of seven languages ( DE , IT and ZH ) .","['The', 'system', 'trained', 'on', 'English', 'also', 'achieves', 'excellent', 'results', 'when', 'transfered', 'to', 'a', 'different', 'languages', ',', 'it', 'scores', 'best', 'for', 'three', 'out', 'of', 'seven', 'languages', '(', 'DE', ',', 'IT', 'and', 'ZH', ')', '.']","['O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O']","['DT', 'NN', 'VBD', 'IN', 'NNP', 'RB', 'VBZ', 'JJ', 'NNS', 'WRB', 'VBN', 'TO', 'DT', 'JJ', 'NNS', ',', 'PRP', 'VBZ', 'RBS', 'IN', 'CD', 'IN', 'IN', 'CD', 'NNS', '(', 'NNP', ',', 'NNP', 'CC', 'NNP', ')', '.']",33
document_classification,7,119,"However , the transfer accuracies are quite low when training the classifiers on other languages than English , in particular for Russian , Chinese and Japanese .","['However', ',', 'the', 'transfer', 'accuracies', 'are', 'quite', 'low', 'when', 'training', 'the', 'classifiers', 'on', 'other', 'languages', 'than', 'English', ',', 'in', 'particular', 'for', 'Russian', ',', 'Chinese', 'and', 'Japanese', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O']","['RB', ',', 'DT', 'NN', 'NNS', 'VBP', 'RB', 'JJ', 'WRB', 'VBG', 'DT', 'NNS', 'IN', 'JJ', 'NNS', 'IN', 'NNP', ',', 'IN', 'JJ', 'IN', 'JJ', ',', 'JJ', 'CC', 'JJ', '.']",27
document_classification,7,120,The systems using multilingual sentence embeddings seem to be over all more robust and less language specific .,"['The', 'systems', 'using', 'multilingual', 'sentence', 'embeddings', 'seem', 'to', 'be', 'over', 'all', 'more', 'robust', 'and', 'less', 'language', 'specific', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBG', 'JJ', 'NN', 'NNS', 'VBP', 'TO', 'VB', 'IN', 'DT', 'RBR', 'JJ', 'CC', 'JJ', 'NN', 'NN', '.']",18
document_classification,7,122,Training on German or French actually leads to better transfer performance than training on English .,"['Training', 'on', 'German', 'or', 'French', 'actually', 'leads', 'to', 'better', 'transfer', 'performance', 'than', 'training', 'on', 'English', '.']","['B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['VBG', 'IN', 'JJ', 'CC', 'JJ', 'RB', 'VBZ', 'TO', 'RBR', 'VB', 'NN', 'IN', 'VBG', 'IN', 'NNP', '.']",16
document_classification,7,123,Crosslingual transfer between very different languages like Chinese and Russian also achieves remarkable results .,"['Crosslingual', 'transfer', 'between', 'very', 'different', 'languages', 'like', 'Chinese', 'and', 'Russian', 'also', 'achieves', 'remarkable', 'results', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['JJ', 'NN', 'IN', 'RB', 'JJ', 'NNS', 'IN', 'NNP', 'CC', 'NNP', 'RB', 'VBZ', 'JJ', 'NNS', '.']",15
document_classification,7,130,Joint multilingual document classification,"['Joint', 'multilingual', 'document', 'classification']","['B-n', 'I-n', 'I-n', 'I-n']","['JJ', 'JJ', 'NN', 'NN']",4
document_classification,7,134,"This leads to important improvement for all languages , in comparison to zero - shot or targeted transfer learning .","['This', 'leads', 'to', 'important', 'improvement', 'for', 'all', 'languages', ',', 'in', 'comparison', 'to', 'zero', '-', 'shot', 'or', 'targeted', 'transfer', 'learning', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBZ', 'TO', 'JJ', 'NN', 'IN', 'DT', 'NNS', ',', 'IN', 'NN', 'TO', 'CD', ':', 'NN', 'CC', 'VBN', 'NN', 'NN', '.']",20
document_classification,19,2,Text Classification Improved by Integrating Bidirectional LSTM with Two - dimensional Max Pooling,"['Text', 'Classification', 'Improved', 'by', 'Integrating', 'Bidirectional', 'LSTM', 'with', 'Two', '-', 'dimensional', 'Max', 'Pooling']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NNP', 'IN', 'CD', ':', 'JJ', 'NNP', 'NNP']",13
document_classification,19,31,"Above all , this paper proposes Bidirectional Long Short - Term Memory Networks with Two - Dimensional Max Pooling ( BLSTM - 2DPooling ) to capture features on both the time - step dimension and the feature vector dimension .","['Above', 'all', ',', 'this', 'paper', 'proposes', 'Bidirectional', 'Long', 'Short', '-', 'Term', 'Memory', 'Networks', 'with', 'Two', '-', 'Dimensional', 'Max', 'Pooling', '(', 'BLSTM', '-', '2DPooling', ')', 'to', 'capture', 'features', 'on', 'both', 'the', 'time', '-', 'step', 'dimension', 'and', 'the', 'feature', 'vector', 'dimension', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', ',', 'DT', 'NN', 'VBZ', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'NNP', 'IN', 'CD', ':', 'JJ', 'NNP', 'NNP', '(', 'NNP', ':', 'VBG', ')', 'TO', 'VB', 'NNS', 'IN', 'DT', 'DT', 'NN', ':', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'NN', '.']",40
document_classification,19,32,It first utilizes Bidirectional Long Short - Term Memory Networks ( BLSTM ) to transform the text into vectors .,"['It', 'first', 'utilizes', 'Bidirectional', 'Long', 'Short', '-', 'Term', 'Memory', 'Networks', '(', 'BLSTM', ')', 'to', 'transform', 'the', 'text', 'into', 'vectors', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'RB', 'VBZ', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'DT', 'NN', 'IN', 'NNS', '.']",20
document_classification,19,33,And then 2D max pooling operation is utilized to obtain a fixed - length vector .,"['And', 'then', '2D', 'max', 'pooling', 'operation', 'is', 'utilized', 'to', 'obtain', 'a', 'fixed', '-', 'length', 'vector', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['CC', 'RB', 'CD', 'NNS', 'VBG', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'JJ', ':', 'NN', 'NN', '.']",16
document_classification,19,34,This paper also applies 2D convolution ( BLSTM - 2DCNN ) to capture more meaningful features to represent the input text .,"['This', 'paper', 'also', 'applies', '2D', 'convolution', '(', 'BLSTM', '-', '2DCNN', ')', 'to', 'capture', 'more', 'meaningful', 'features', 'to', 'represent', 'the', 'input', 'text', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'RB', 'VBZ', 'CD', 'NN', '(', 'NNP', ':', 'CD', ')', 'TO', 'VB', 'RBR', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",22
document_classification,19,170,"The dimension of word embeddings is 300 , the hidden units of LSTM is 300 .","['The', 'dimension', 'of', 'word', 'embeddings', 'is', '300', ',', 'the', 'hidden', 'units', 'of', 'LSTM', 'is', '300', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'NN', 'NNS', 'VBZ', 'CD', ',', 'DT', 'JJ', 'NNS', 'IN', 'NNP', 'VBZ', 'CD', '.']",16
document_classification,19,171,"We use 100 convolutional filters each for window sizes of ( 3 , 3 ) , 2D pooling size of ( 2 , 2 ) .","['We', 'use', '100', 'convolutional', 'filters', 'each', 'for', 'window', 'sizes', 'of', '(', '3', ',', '3', ')', ',', '2D', 'pooling', 'size', 'of', '(', '2', ',', '2', ')', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', 'DT', 'IN', 'NN', 'NNS', 'IN', '(', 'CD', ',', 'CD', ')', ',', 'CD', 'VBG', 'NN', 'IN', '(', 'CD', ',', 'CD', ')', '.']",26
document_classification,19,172,We set the mini-batch size as 10 and the learning rate of AdaDelta as the default value 1.0 .,"['We', 'set', 'the', 'mini-batch', 'size', 'as', '10', 'and', 'the', 'learning', 'rate', 'of', 'AdaDelta', 'as', 'the', 'default', 'value', '1.0', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'CD', 'CC', 'DT', 'VBG', 'NN', 'IN', 'NNP', 'IN', 'DT', 'NN', 'NN', 'CD', '.']",19
document_classification,19,173,"For regularization , we employ Dropout operation with dropout rate of 0.5 for the word embeddings , 0.2 for the BLSTM layer and 0.4 for the penultimate layer , we also use l 2 penalty with coefficient 10 ? 5 over the parameters .","['For', 'regularization', ',', 'we', 'employ', 'Dropout', 'operation', 'with', 'dropout', 'rate', 'of', '0.5', 'for', 'the', 'word', 'embeddings', ',', '0.2', 'for', 'the', 'BLSTM', 'layer', 'and', '0.4', 'for', 'the', 'penultimate', 'layer', ',', 'we', 'also', 'use', 'l', '2', 'penalty', 'with', 'coefficient', '10', '?', '5', 'over', 'the', 'parameters', '.']","['B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'IN', 'NN', 'IN', 'NN', 'NN', 'IN', 'CD', 'IN', 'DT', 'NN', 'VBZ', ',', 'CD', 'IN', 'DT', 'NNP', 'NN', 'CC', 'CD', 'IN', 'DT', 'NN', 'NN', ',', 'PRP', 'RB', 'VBP', 'JJ', 'CD', 'NN', 'IN', 'NN', 'CD', '.', 'CD', 'IN', 'DT', 'NNS', '.']",44
document_classification,19,176,Results,['Results'],['B-n'],['NNS'],1
document_classification,19,179,The BLSTM - 2DCNN model achieves excellent performance on 4 out of 6 tasks .,"['The', 'BLSTM', '-', '2DCNN', 'model', 'achieves', 'excellent', 'performance', 'on', '4', 'out', 'of', '6', 'tasks', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', ':', 'CD', 'NN', 'NNS', 'JJ', 'NN', 'IN', 'CD', 'IN', 'IN', 'CD', 'NNS', '.']",15
document_classification,19,180,"Especially , it achieves 52.4 % and 89.5 % test accuracies on SST - 1 and SST - 2 respectively .","['Especially', ',', 'it', 'achieves', '52.4', '%', 'and', '89.5', '%', 'test', 'accuracies', 'on', 'SST', '-', '1', 'and', 'SST', '-', '2', 'respectively', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O']","['RB', ',', 'PRP', 'VBZ', 'CD', 'NN', 'CC', 'CD', 'NN', 'NN', 'NNS', 'IN', 'NNP', ':', 'CD', 'CC', 'NNP', ':', 'CD', 'RB', '.']",21
document_classification,19,181,BLSTM - 2DPooling performs worse than the state - of - the - art models .,"['BLSTM', '-', '2DPooling', 'performs', 'worse', 'than', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'models', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'CD', 'NNS', 'JJR', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NNS', '.']",16
document_classification,19,183,"BLSTM - CNN beats all baselines on SST - 1 , SST - 2 , and TREC datasets .","['BLSTM', '-', 'CNN', 'beats', 'all', 'baselines', 'on', 'SST', '-', '1', ',', 'SST', '-', '2', ',', 'and', 'TREC', 'datasets', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['NNP', ':', 'NNP', 'VBZ', 'DT', 'NNS', 'IN', 'NNP', ':', 'CD', ',', 'NNP', ':', 'CD', ',', 'CC', 'NNP', 'NNS', '.']",19
document_classification,19,184,"As for Subj and MR datasets , BLSTM - 2DCNN gets a second higher accuracies .","['As', 'for', 'Subj', 'and', 'MR', 'datasets', ',', 'BLSTM', '-', '2DCNN', 'gets', 'a', 'second', 'higher', 'accuracies', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'IN', 'NNP', 'CC', 'NNP', 'NNS', ',', 'NNP', ':', 'CD', 'VBZ', 'DT', 'JJ', 'JJR', 'NNS', '.']",16
document_classification,19,188,"Compared with RCNN , BLSTM - 2DCNN achieves a comparable result .","['Compared', 'with', 'RCNN', ',', 'BLSTM', '-', '2DCNN', 'achieves', 'a', 'comparable', 'result', '.']","['B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBN', 'IN', 'NNP', ',', 'NNP', ':', 'CD', 'VBZ', 'DT', 'JJ', 'NN', '.']",12
document_classification,19,190,"Compared with ReNN , the proposed two models do not depend on external language - specific features such as dependency parse trees .","['Compared', 'with', 'ReNN', ',', 'the', 'proposed', 'two', 'models', 'do', 'not', 'depend', 'on', 'external', 'language', '-', 'specific', 'features', 'such', 'as', 'dependency', 'parse', 'trees', '.']","['O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['VBN', 'IN', 'NNP', ',', 'DT', 'VBN', 'CD', 'NNS', 'VBP', 'RB', 'VB', 'IN', 'JJ', 'NN', ':', 'JJ', 'NNS', 'JJ', 'IN', 'NN', 'NN', 'NNS', '.']",23
document_classification,19,194,"Compared with DSCNN , BLSTM - 2DCNN outperforms it on five datasets .","['Compared', 'with', 'DSCNN', ',', 'BLSTM', '-', '2DCNN', 'outperforms', 'it', 'on', 'five', 'datasets', '.']","['O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['VBN', 'IN', 'NNP', ',', 'NNP', ':', 'CD', 'NNS', 'PRP', 'IN', 'CD', 'NNS', '.']",13
document_classification,20,2,Practical Text Classification With Large Pre-Trained Language Models,"['Practical', 'Text', 'Classification', 'With', 'Large', 'Pre-Trained', 'Language', 'Models']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNP', 'NNP', 'IN', 'NNP', 'JJ', 'NNP', 'NNP']",8
document_classification,20,17,"In this work , we train both mLSTM and Transformer language models on a large 40 GB text dataset , then transfer those models to two text classification problems : binary sentiment ( including Neutral labels ) , and multidimensional emotion classification based on the Plutchik wheel of emotions .","['In', 'this', 'work', ',', 'we', 'train', 'both', 'mLSTM', 'and', 'Transformer', 'language', 'models', 'on', 'a', 'large', '40', 'GB', 'text', 'dataset', ',', 'then', 'transfer', 'those', 'models', 'to', 'two', 'text', 'classification', 'problems', ':', 'binary', 'sentiment', '(', 'including', 'Neutral', 'labels', ')', ',', 'and', 'multidimensional', 'emotion', 'classification', 'based', 'on', 'the', 'Plutchik', 'wheel', 'of', 'emotions', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'NNP', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'CD', 'NNP', 'NN', 'NN', ',', 'RB', 'VB', 'DT', 'NNS', 'TO', 'CD', 'JJ', 'NN', 'NNS', ':', 'JJ', 'NN', '(', 'VBG', 'NNP', 'NNS', ')', ',', 'CC', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'NNS', '.']",50
document_classification,20,139,Results,['Results'],['B-n'],['NNS'],1
document_classification,20,140,Binary Sentiment Tweets,"['Binary', 'Sentiment', 'Tweets']","['B-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNS']",3
document_classification,20,143,"While the Transformer gets close but does not exceed the state of the art on the SST dataset , it exceeds both the mL - STM and ELMo baseline as well as both Watson and Google Sentiment APIs on the company tweets .","['While', 'the', 'Transformer', 'gets', 'close', 'but', 'does', 'not', 'exceed', 'the', 'state', 'of', 'the', 'art', 'on', 'the', 'SST', 'dataset', ',', 'it', 'exceeds', 'both', 'the', 'mL', '-', 'STM', 'and', 'ELMo', 'baseline', 'as', 'well', 'as', 'both', 'Watson', 'and', 'Google', 'Sentiment', 'APIs', 'on', 'the', 'company', 'tweets', '.']","['O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', 'VBZ', 'RB', 'CC', 'VBZ', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', ',', 'PRP', 'VBZ', 'CC', 'DT', 'NN', ':', 'NN', 'CC', 'NNP', 'NN', 'RB', 'RB', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NN', 'VBZ', '.']",43
document_classification,20,145,Multi - Label Emotion Tweets,"['Multi', '-', 'Label', 'Emotion', 'Tweets']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NNP', 'NNP', 'NNS']",5
document_classification,20,148,We find that our models outperform Watson on every emotion category .,"['We', 'find', 'that', 'our', 'models', 'outperform', 'Watson', 'on', 'every', 'emotion', 'category', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'PRP$', 'NNS', 'VBP', 'NNP', 'IN', 'DT', 'NN', 'NN', '.']",12
document_classification,20,149,Sem Eval Tweets,"['Sem', 'Eval', 'Tweets']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
document_classification,20,152,"Our model achieved the top macro-averaged F1 score among all submission , with competitive but lower scores for the micro -average F1 an the Jaccard Index accuracy 8 .","['Our', 'model', 'achieved', 'the', 'top', 'macro-averaged', 'F1', 'score', 'among', 'all', 'submission', ',', 'with', 'competitive', 'but', 'lower', 'scores', 'for', 'the', 'micro', '-average', 'F1', 'an', 'the', 'Jaccard', 'Index', 'accuracy', '8', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBD', 'DT', 'JJ', 'JJ', 'NNP', 'NN', 'IN', 'DT', 'NN', ',', 'IN', 'JJ', 'CC', 'JJR', 'NNS', 'IN', 'DT', 'NN', 'NN', 'NNP', 'DT', 'DT', 'NNP', 'NNP', 'VBD', 'CD', '.']",29
document_classification,20,154,We also compare the deep learning architectures of the Transformer and m LSTM on this dataset in and find that the Transformer outperforms the m LSTM across Plutchik categories .,"['We', 'also', 'compare', 'the', 'deep', 'learning', 'architectures', 'of', 'the', 'Transformer', 'and', 'm', 'LSTM', 'on', 'this', 'dataset', 'in', 'and', 'find', 'that', 'the', 'Transformer', 'outperforms', 'the', 'm', 'LSTM', 'across', 'Plutchik', 'categories', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNP', 'IN', 'DT', 'NN', 'IN', 'CC', 'VB', 'IN', 'DT', 'NNP', 'VBZ', 'DT', 'NN', 'NNP', 'IN', 'NNP', 'NNS', '.']",30
document_classification,20,162,Our models gets lower F 1 scores on the company tweets dataset than on equivalent Se -m Eval categories .,"['Our', 'models', 'gets', 'lower', 'F', '1', 'scores', 'on', 'the', 'company', 'tweets', 'dataset', 'than', 'on', 'equivalent', 'Se', '-m', 'Eval', 'categories', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBZ', 'JJR', 'NNP', 'CD', 'NNS', 'IN', 'DT', 'NN', 'VBZ', 'JJR', 'IN', 'IN', 'JJ', 'NNP', 'NNP', 'NNP', 'NNS', '.']",20
document_classification,18,2,Character - level Convolutional Networks for Text Classification,"['Character', '-', 'level', 'Convolutional', 'Networks', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', ':', 'NN', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",8
document_classification,18,18,"In this article we explore treating text as a kind of raw signal at character level , and applying temporal ( one-dimensional ) ConvNets to it .","['In', 'this', 'article', 'we', 'explore', 'treating', 'text', 'as', 'a', 'kind', 'of', 'raw', 'signal', 'at', 'character', 'level', ',', 'and', 'applying', 'temporal', '(', 'one-dimensional', ')', 'ConvNets', 'to', 'it', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'VBG', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'IN', 'JJR', 'NN', ',', 'CC', 'VBG', 'JJ', '(', 'JJ', ')', 'NNPS', 'TO', 'PRP', '.']",27
document_classification,18,103,Traditional Methods,"['Traditional', 'Methods']","['B-n', 'I-n']","['JJ', 'NNS']",2
document_classification,18,106,Bag - of - words and its TFIDF .,"['Bag', '-', 'of', '-', 'words', 'and', 'its', 'TFIDF', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'IN', ':', 'NNS', 'CC', 'PRP$', 'NNP', '.']",9
document_classification,18,107,"For each dataset , the bag - of - words model is constructed by selecting 50,000 most frequent words from the training subset .","['For', 'each', 'dataset', ',', 'the', 'bag', '-', 'of', '-', 'words', 'model', 'is', 'constructed', 'by', 'selecting', '50,000', 'most', 'frequent', 'words', 'from', 'the', 'training', 'subset', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'NN', ':', 'IN', ':', 'NNS', 'NN', 'VBZ', 'VBN', 'IN', 'VBG', 'CD', 'JJS', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",24
document_classification,18,112,Bag - of - ngrams and its TFIDF .,"['Bag', '-', 'of', '-', 'ngrams', 'and', 'its', 'TFIDF', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'IN', ':', 'NNS', 'CC', 'PRP$', 'NNP', '.']",9
document_classification,18,113,"The bag - of - ngrams models are constructed by selecting the 500,000 most frequent n-grams ( up to 5 - grams ) from the training subset for each dataset .","['The', 'bag', '-', 'of', '-', 'ngrams', 'models', 'are', 'constructed', 'by', 'selecting', 'the', '500,000', 'most', 'frequent', 'n-grams', '(', 'up', 'to', '5', '-', 'grams', ')', 'from', 'the', 'training', 'subset', 'for', 'each', 'dataset', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', ':', 'IN', ':', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'VBG', 'DT', 'CD', 'JJS', 'JJ', 'NNS', '(', 'IN', 'TO', 'CD', ':', 'NNS', ')', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', '.']",31
document_classification,18,115,Bag - of - means on word embedding .,"['Bag', '-', 'of', '-', 'means', 'on', 'word', 'embedding', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'IN', ':', 'NNS', 'IN', 'NN', 'NN', '.']",9
document_classification,18,116,"We also have an experimental model that uses k-means on word2vec learnt from the training subset of each dataset , and then use these learnt means as representatives of the clustered words .","['We', 'also', 'have', 'an', 'experimental', 'model', 'that', 'uses', 'k-means', 'on', 'word2vec', 'learnt', 'from', 'the', 'training', 'subset', 'of', 'each', 'dataset', ',', 'and', 'then', 'use', 'these', 'learnt', 'means', 'as', 'representatives', 'of', 'the', 'clustered', 'words', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'NNS', 'IN', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', ',', 'CC', 'RB', 'VB', 'DT', 'NNS', 'VBZ', 'IN', 'NNS', 'IN', 'DT', 'JJ', 'NNS', '.']",33
document_classification,18,121,Deep Learning Methods,"['Deep', 'Learning', 'Methods']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNS']",3
document_classification,18,124,Word - based ConvNets .,"['Word', '-', 'based', 'ConvNets', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'VBN', 'NNS', '.']",5
document_classification,18,131,Long - short term memory .,"['Long', '-', 'short', 'term', 'memory', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'JJ', 'NN', 'NN', '.']",6
document_classification,18,194,The most important conclusion from our experiments is that character - level ConvNets could work for text classification without the need for words .,"['The', 'most', 'important', 'conclusion', 'from', 'our', 'experiments', 'is', 'that', 'character', '-', 'level', 'ConvNets', 'could', 'work', 'for', 'text', 'classification', 'without', 'the', 'need', 'for', 'words', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'RBS', 'JJ', 'NN', 'IN', 'PRP$', 'NNS', 'VBZ', 'IN', 'NN', ':', 'NN', 'NNS', 'MD', 'VB', 'IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', '.']",24
document_classification,18,199,"Traditional methods like n-grams TFIDF remain strong candidates for dataset of size up to several hundreds of thousands , and only until the dataset goes to the scale of several millions do we observe that character - level ConvNets start to do better .","['Traditional', 'methods', 'like', 'n-grams', 'TFIDF', 'remain', 'strong', 'candidates', 'for', 'dataset', 'of', 'size', 'up', 'to', 'several', 'hundreds', 'of', 'thousands', ',', 'and', 'only', 'until', 'the', 'dataset', 'goes', 'to', 'the', 'scale', 'of', 'several', 'millions', 'do', 'we', 'observe', 'that', 'character', '-', 'level', 'ConvNets', 'start', 'to', 'do', 'better', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O']","['JJ', 'NNS', 'IN', 'JJ', 'NNP', 'VBP', 'JJ', 'NNS', 'IN', 'NN', 'IN', 'NN', 'IN', 'TO', 'JJ', 'NNS', 'IN', 'NNS', ',', 'CC', 'RB', 'IN', 'DT', 'NN', 'VBZ', 'TO', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'VBP', 'PRP', 'VB', 'DT', 'NN', ':', 'NN', 'NNS', 'VBP', 'TO', 'VB', 'JJR', '.']",44
document_classification,18,200,Conv Nets may work well for user - generated data .,"['Conv', 'Nets', 'may', 'work', 'well', 'for', 'user', '-', 'generated', 'data', '.']","['B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'NNP', 'MD', 'VB', 'RB', 'IN', 'JJ', ':', 'VBN', 'NNS', '.']",11
document_classification,18,207,Choice of alphabet makes a difference .,"['Choice', 'of', 'alphabet', 'makes', 'a', 'difference', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['NNP', 'IN', 'NN', 'VBZ', 'DT', 'NN', '.']",7
document_classification,18,211,Semantics of tasks may not matter .,"['Semantics', 'of', 'tasks', 'may', 'not', 'matter', '.']","['B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'O']","['NNS', 'IN', 'NNS', 'MD', 'RB', 'VB', '.']",7
document_classification,4,2,Joint Embedding of Words and Labels for Text Classification,"['Joint', 'Embedding', 'of', 'Words', 'and', 'Labels', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['JJ', 'NNP', 'IN', 'NNP', 'CC', 'NNP', 'IN', 'NNP', 'NNP']",9
document_classification,4,35,"Our primary contribution is therefore to propose such a solution by making use of the label embedding framework , and propose the Label - Embedding Attentive Model ( LEAM ) to improve text classification .","['Our', 'primary', 'contribution', 'is', 'therefore', 'to', 'propose', 'such', 'a', 'solution', 'by', 'making', 'use', 'of', 'the', 'label', 'embedding', 'framework', ',', 'and', 'propose', 'the', 'Label', '-', 'Embedding', 'Attentive', 'Model', '(', 'LEAM', ')', 'to', 'improve', 'text', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'RB', 'TO', 'VB', 'PDT', 'DT', 'NN', 'IN', 'VBG', 'NN', 'IN', 'DT', 'NN', 'VBG', 'NN', ',', 'CC', 'VB', 'DT', 'NNP', ':', 'VBG', 'JJ', 'NNP', '(', 'NNP', ')', 'TO', 'VB', 'NN', 'NN', '.']",35
document_classification,4,37,"The proposed LEAM is implemented by jointly embedding the word and label in the same latent space , and the text representations are constructed directly using the text - label compatibility .","['The', 'proposed', 'LEAM', 'is', 'implemented', 'by', 'jointly', 'embedding', 'the', 'word', 'and', 'label', 'in', 'the', 'same', 'latent', 'space', ',', 'and', 'the', 'text', 'representations', 'are', 'constructed', 'directly', 'using', 'the', 'text', '-', 'label', 'compatibility', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'VBN', 'NNP', 'VBZ', 'VBN', 'IN', 'RB', 'VBG', 'DT', 'NN', 'CC', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', ',', 'CC', 'DT', 'NN', 'NNS', 'VBP', 'VBN', 'RB', 'VBG', 'DT', 'NN', ':', 'NN', 'NN', '.']",32
document_classification,4,38,"Our label embedding framework has the following salutary properties : ( i ) Label - attentive text representation is informative for the downstream classification task , as it directly learns from a shared joint space , whereas traditional methods proceed in multiple steps by solving intermediate problems .","['Our', 'label', 'embedding', 'framework', 'has', 'the', 'following', 'salutary', 'properties', ':', '(', 'i', ')', 'Label', '-', 'attentive', 'text', 'representation', 'is', 'informative', 'for', 'the', 'downstream', 'classification', 'task', ',', 'as', 'it', 'directly', 'learns', 'from', 'a', 'shared', 'joint', 'space', ',', 'whereas', 'traditional', 'methods', 'proceed', 'in', 'multiple', 'steps', 'by', 'solving', 'intermediate', 'problems', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBG', 'NN', 'VBZ', 'DT', 'JJ', 'JJ', 'NNS', ':', '(', 'NN', ')', 'NNP', ':', 'JJ', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'DT', 'NN', 'NN', 'NN', ',', 'IN', 'PRP', 'RB', 'VBZ', 'IN', 'DT', 'VBN', 'JJ', 'NN', ',', 'JJ', 'JJ', 'NNS', 'VBN', 'IN', 'JJ', 'NNS', 'IN', 'VBG', 'JJ', 'NNS', '.']",48
document_classification,4,39,"( ii ) The LEAM learning procedure only involves a series of basic algebraic operations , and hence it retains the interpretability of simple models , especially when the label description is available .","['(', 'ii', ')', 'The', 'LEAM', 'learning', 'procedure', 'only', 'involves', 'a', 'series', 'of', 'basic', 'algebraic', 'operations', ',', 'and', 'hence', 'it', 'retains', 'the', 'interpretability', 'of', 'simple', 'models', ',', 'especially', 'when', 'the', 'label', 'description', 'is', 'available', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['(', 'NN', ')', 'DT', 'NNP', 'NN', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', ',', 'CC', 'NN', 'PRP', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'NNS', ',', 'RB', 'WRB', 'DT', 'NN', 'NN', 'VBZ', 'JJ', '.']",34
document_classification,4,199,Setup We use 300 - dimensional Glo Ve word embeddings as initialization for word embeddings and label embeddings in our model .,"['Setup', 'We', 'use', '300', '-', 'dimensional', 'Glo', 'Ve', 'word', 'embeddings', 'as', 'initialization', 'for', 'word', 'embeddings', 'and', 'label', 'embeddings', 'in', 'our', 'model', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['NN', 'PRP', 'VBP', 'CD', ':', 'JJ', 'NNP', 'NNP', 'NN', 'NNS', 'IN', 'NN', 'IN', 'NN', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', '.']",22
document_classification,4,200,"Out - Of - Vocabulary ( OOV ) words are initialized from a uniform distribution with range [ ? 0.01 , 0.01 ] .","['Out', '-', 'Of', '-', 'Vocabulary', '(', 'OOV', ')', 'words', 'are', 'initialized', 'from', 'a', 'uniform', 'distribution', 'with', 'range', '[', '?', '0.01', ',', '0.01', ']', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', ':', 'IN', ':', 'NNP', '(', 'NNP', ')', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', 'NN', '.', 'CD', ',', 'CD', 'NN', '.']",24
document_classification,4,201,The final classifier is implemented as an MLP layer followed by a sigmoid or softmax function depending on specific task .,"['The', 'final', 'classifier', 'is', 'implemented', 'as', 'an', 'MLP', 'layer', 'followed', 'by', 'a', 'sigmoid', 'or', 'softmax', 'function', 'depending', 'on', 'specific', 'task', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'VBN', 'IN', 'DT', 'NN', 'CC', 'JJ', 'NN', 'VBG', 'IN', 'JJ', 'NN', '.']",21
document_classification,4,202,"We train our model 's parameters with the Adam Optimizer ( Kingma and Ba , 2014 ) , with an initial learning rate of 0.001 , and a minibatch size of 100 .","['We', 'train', 'our', 'model', ""'s"", 'parameters', 'with', 'the', 'Adam', 'Optimizer', '(', 'Kingma', 'and', 'Ba', ',', '2014', ')', ',', 'with', 'an', 'initial', 'learning', 'rate', 'of', '0.001', ',', 'and', 'a', 'minibatch', 'size', 'of', '100', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'POS', 'NNS', 'IN', 'DT', 'NNP', 'NNP', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', ',', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'CC', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",33
document_classification,4,203,"Dropout regularization is employed on the final MLP layer , with dropout rate 0.5 .","['Dropout', 'regularization', 'is', 'employed', 'on', 'the', 'final', 'MLP', 'layer', ',', 'with', 'dropout', 'rate', '0.5', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'O']","['NNP', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NN', ',', 'IN', 'NN', 'NN', 'CD', '.']",15
document_classification,4,204,The model is implemented using Tensorflow and is trained on GPU Titan X.,"['The', 'model', 'is', 'implemented', 'using', 'Tensorflow', 'and', 'is', 'trained', 'on', 'GPU', 'Titan', 'X.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n']","['DT', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'CC', 'VBZ', 'VBN', 'IN', 'NNP', 'NNP', 'NNP']",13
document_classification,4,205,The code to reproduce the experimental results is at https://github.com/guoyinwang/LEAM :,"['The', 'code', 'to', 'reproduce', 'the', 'experimental', 'results', 'is', 'at', 'https://github.com/guoyinwang/LEAM', ':']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O']","['DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'VBZ', 'IN', 'NN', ':']",11
document_classification,4,249,"We compare against the three baselines : a logistic regression model with bag - ofwords , a bidirectional gated recurrent unit ( Bi - GRU ) and a single - layer 1 D convolutional network .","['We', 'compare', 'against', 'the', 'three', 'baselines', ':', 'a', 'logistic', 'regression', 'model', 'with', 'bag', '-', 'ofwords', ',', 'a', 'bidirectional', 'gated', 'recurrent', 'unit', '(', 'Bi', '-', 'GRU', ')', 'and', 'a', 'single', '-', 'layer', '1', 'D', 'convolutional', 'network', '.']","['O', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'CD', 'NNS', ':', 'DT', 'JJ', 'NN', 'NN', 'IN', 'JJ', ':', 'NNS', ',', 'DT', 'JJ', 'JJ', 'NN', 'NN', '(', 'NNP', ':', 'NNP', ')', 'CC', 'DT', 'JJ', ':', 'NN', 'CD', 'NNP', 'JJ', 'NN', '.']",36
document_classification,4,250,"We also compare with three recent methods for multi-label classification of clinical text , including Condensed Memory Networks ( C - MemNN ) , Attentive LSTM and Convolutional Attention ( CAML ) .","['We', 'also', 'compare', 'with', 'three', 'recent', 'methods', 'for', 'multi-label', 'classification', 'of', 'clinical', 'text', ',', 'including', 'Condensed', 'Memory', 'Networks', '(', 'C', '-', 'MemNN', ')', ',', 'Attentive', 'LSTM', 'and', 'Convolutional', 'Attention', '(', 'CAML', ')', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'IN', 'CD', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'IN', 'JJ', 'NN', ',', 'VBG', 'JJ', 'NN', 'NNP', '(', 'NNP', ':', 'NNP', ')', ',', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', '(', 'NNP', ')', '.']",33
document_classification,4,256,"LEAM provides the best AUC score , and better F1 and P@5 values than all methods except CNN .","['LEAM', 'provides', 'the', 'best', 'AUC', 'score', ',', 'and', 'better', 'F1', 'and', 'P@5', 'values', 'than', 'all', 'methods', 'except', 'CNN', '.']","['B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['NNP', 'VBZ', 'DT', 'JJS', 'NNP', 'NN', ',', 'CC', 'JJR', 'NNP', 'CC', 'NNP', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'NNP', '.']",19
document_classification,4,257,"CNN consistently outperforms the basic Bi - GRU architecture , and the logistic regression baseline performs worse than all deep learning architectures .","['CNN', 'consistently', 'outperforms', 'the', 'basic', 'Bi', '-', 'GRU', 'architecture', ',', 'and', 'the', 'logistic', 'regression', 'baseline', 'performs', 'worse', 'than', 'all', 'deep', 'learning', 'architectures', '.']","['B-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', 'RB', 'VBZ', 'DT', 'JJ', 'NNP', ':', 'NNP', 'NN', ',', 'CC', 'DT', 'JJ', 'NN', 'NN', 'NNS', 'JJR', 'IN', 'DT', 'JJ', 'NN', 'NNS', '.']",23
document_classification,6,2,Explicit Interaction Model towards Text Classification,"['Explicit', 'Interaction', 'Model', 'towards', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNS', 'NNP', 'NN']",6
document_classification,6,31,"To address the aforementioned problems , we introduce the interaction mechanism ( Wang and Jiang 2016 b ) , which is capable of incorporating the word - level matching signals for text classification .","['To', 'address', 'the', 'aforementioned', 'problems', ',', 'we', 'introduce', 'the', 'interaction', 'mechanism', '(', 'Wang', 'and', 'Jiang', '2016', 'b', ')', ',', 'which', 'is', 'capable', 'of', 'incorporating', 'the', 'word', '-', 'level', 'matching', 'signals', 'for', 'text', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'DT', 'NN', 'NN', '(', 'NNP', 'CC', 'NNP', 'CD', 'NN', ')', ',', 'WDT', 'VBZ', 'JJ', 'IN', 'VBG', 'DT', 'NN', ':', 'NN', 'JJ', 'NNS', 'IN', 'JJ', 'NN', '.']",34
document_classification,6,35,"Based upon the interaction mechanism , we devise an EXplicit interAction Model ( dubbed as EXAM ) .","['Based', 'upon', 'the', 'interaction', 'mechanism', ',', 'we', 'devise', 'an', 'EXplicit', 'interAction', 'Model', '(', 'dubbed', 'as', 'EXAM', ')', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O']","['VBN', 'IN', 'DT', 'NN', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'NNP', '(', 'VBN', 'IN', 'NNP', ')', '.']",18
document_classification,6,36,"Specifically , the proposed framework consists of three main components : word - level encoder , interaction layer , and aggregation layer .","['Specifically', ',', 'the', 'proposed', 'framework', 'consists', 'of', 'three', 'main', 'components', ':', 'word', '-', 'level', 'encoder', ',', 'interaction', 'layer', ',', 'and', 'aggregation', 'layer', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'VBN', 'NN', 'VBZ', 'IN', 'CD', 'JJ', 'NNS', ':', 'NN', ':', 'NN', 'NN', ',', 'NN', 'NN', ',', 'CC', 'NN', 'NN', '.']",23
document_classification,6,37,The word - level encoder projects the textual contents into the word - level representations .,"['The', 'word', '-', 'level', 'encoder', 'projects', 'the', 'textual', 'contents', 'into', 'the', 'word', '-', 'level', 'representations', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', ':', 'NN', 'NN', 'NNS', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', ':', 'NN', 'NNS', '.']",16
document_classification,6,38,"Hereafter , the interaction layer calculates the matching scores between the words and classes ( i.e. , constructs the interaction matrix ) .","['Hereafter', ',', 'the', 'interaction', 'layer', 'calculates', 'the', 'matching', 'scores', 'between', 'the', 'words', 'and', 'classes', '(', 'i.e.', ',', 'constructs', 'the', 'interaction', 'matrix', ')', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ',', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'VBG', 'NNS', 'IN', 'DT', 'NNS', 'CC', 'NNS', '(', 'FW', ',', 'VBZ', 'DT', 'NN', 'NN', ')', '.']",23
document_classification,6,39,"Then , the last layer aggregates those matching scores into predictions over each class , respectively .","['Then', ',', 'the', 'last', 'layer', 'aggregates', 'those', 'matching', 'scores', 'into', 'predictions', 'over', 'each', 'class', ',', 'respectively', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O']","['RB', ',', 'DT', 'JJ', 'NN', 'NNS', 'DT', 'JJ', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NN', ',', 'RB', '.']",17
document_classification,6,129,Experiments,['Experiments'],['B-n'],['NNS'],1
document_classification,6,130,Multi - Class Classification,"['Multi', '-', 'Class', 'Classification']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NN', 'NN']",4
document_classification,6,141,"For the multi -class task , we chose region embedding as the Encoder in EXAM .","['For', 'the', 'multi', '-class', 'task', ',', 'we', 'chose', 'region', 'embedding', 'as', 'the', 'Encoder', 'in', 'EXAM', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['IN', 'DT', 'NN', 'NNP', 'NN', ',', 'PRP', 'VBD', 'NN', 'VBG', 'IN', 'DT', 'NNP', 'IN', 'NNP', '.']",16
document_classification,6,142,The region size is 7 and embedding size is 128 .,"['The', 'region', 'size', 'is', '7', 'and', 'embedding', 'size', 'is', '128', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'CD', 'CC', 'VBG', 'NN', 'VBZ', 'CD', '.']",11
document_classification,6,143,We used adam ( Kingma and Ba 2014 ) as the optimizer with the initial learning rate 0.0001 and the batch size is set to 16 .,"['We', 'used', 'adam', '(', 'Kingma', 'and', 'Ba', '2014', ')', 'as', 'the', 'optimizer', 'with', 'the', 'initial', 'learning', 'rate', '0.0001', 'and', 'the', 'batch', 'size', 'is', 'set', 'to', '16', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['PRP', 'VBD', 'NN', '(', 'NNP', 'CC', 'NNP', 'CD', ')', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'CD', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', '.']",27
document_classification,6,144,"As for the aggregation MLP , we set the size of the hidden layer as 2 times interaction feature length .","['As', 'for', 'the', 'aggregation', 'MLP', ',', 'we', 'set', 'the', 'size', 'of', 'the', 'hidden', 'layer', 'as', '2', 'times', 'interaction', 'feature', 'length', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'IN', 'DT', 'NN', 'NNP', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NNS', 'JJ', 'NN', 'NN', '.']",21
document_classification,6,145,Our models are implemented and trained by MXNet ( Chen et al. ) with a single NVIDIA TITAN Xp .,"['Our', 'models', 'are', 'implemented', 'and', 'trained', 'by', 'MXNet', '(', 'Chen', 'et', 'al.', ')', 'with', 'a', 'single', 'NVIDIA', 'TITAN', 'Xp', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NNS', 'VBP', 'VBN', 'CC', 'VBN', 'IN', 'NNP', '(', 'NNP', 'RB', 'VBZ', ')', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', '.']",20
document_classification,6,146,Baselines,['Baselines'],['B-n'],['NNS'],1
document_classification,6,148,The baselines are mainly in three variants :,"['The', 'baselines', 'are', 'mainly', 'in', 'three', 'variants', ':']","['O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'RB', 'IN', 'CD', 'NNS', ':']",8
document_classification,6,149,1 ) models based on feature engineering ;,"['1', ')', 'models', 'based', 'on', 'feature', 'engineering', ';']","['O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['CD', ')', 'NNS', 'VBN', 'IN', 'NN', 'NN', ':']",8
document_classification,6,150,"2 ) Char - based deep models , and 3 ) Word - based deep models .","['2', ')', 'Char', '-', 'based', 'deep', 'models', ',', 'and', '3', ')', 'Word', '-', 'based', 'deep', 'models', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', ')', 'NNP', ':', 'VBN', 'JJ', 'NNS', ',', 'CC', 'CD', ')', 'NNP', ':', 'VBN', 'JJ', 'NNS', '.']",17
document_classification,6,154,Models based on feature engineering get the worst results on all the five datasets compared to the other methods .,"['Models', 'based', 'on', 'feature', 'engineering', 'get', 'the', 'worst', 'results', 'on', 'all', 'the', 'five', 'datasets', 'compared', 'to', 'the', 'other', 'methods', '.']","['B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['NNS', 'VBN', 'IN', 'NN', 'NN', 'VB', 'DT', 'JJS', 'NNS', 'IN', 'PDT', 'DT', 'CD', 'NNS', 'VBN', 'TO', 'DT', 'JJ', 'NNS', '.']",20
document_classification,6,156,Char - based models get the highest over all scores on the two Amazon datasets .,"['Char', '-', 'based', 'models', 'get', 'the', 'highest', 'over', 'all', 'scores', 'on', 'the', 'two', 'Amazon', 'datasets', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'VBN', 'NNS', 'VBP', 'DT', 'JJS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'CD', 'NNP', 'NNS', '.']",16
document_classification,6,160,Word - based baselines exceed the other variants on three datasets and lose on the two Amazon datasets .,"['Word', '-', 'based', 'baselines', 'exceed', 'the', 'other', 'variants', 'on', 'three', 'datasets', 'and', 'lose', 'on', 'the', 'two', 'Amazon', 'datasets', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'VBN', 'NNS', 'VBP', 'DT', 'JJ', 'NNS', 'IN', 'CD', 'NNS', 'CC', 'VB', 'IN', 'DT', 'CD', 'NNP', 'NNS', '.']",19
document_classification,6,162,"For the five baselines , W.C Region Emb performs the best , because it learns the region embedding to utilize the N- grams feature from the text .","['For', 'the', 'five', 'baselines', ',', 'W.C', 'Region', 'Emb', 'performs', 'the', 'best', ',', 'because', 'it', 'learns', 'the', 'region', 'embedding', 'to', 'utilize', 'the', 'N-', 'grams', 'feature', 'from', 'the', 'text', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'CD', 'NNS', ',', 'NNP', 'NNP', 'NNP', 'VBZ', 'DT', 'JJS', ',', 'IN', 'PRP', 'VBZ', 'DT', 'NN', 'VBG', 'TO', 'VB', 'DT', 'NNP', 'NNS', 'NN', 'IN', 'DT', 'NN', '.']",28
document_classification,6,163,"It is clear to see that EXAM achieves the best performance over the three datasets : AG , Yah. A. and DBP .","['It', 'is', 'clear', 'to', 'see', 'that', 'EXAM', 'achieves', 'the', 'best', 'performance', 'over', 'the', 'three', 'datasets', ':', 'AG', ',', 'Yah.', 'A.', 'and', 'DBP', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['PRP', 'VBZ', 'JJ', 'TO', 'VB', 'IN', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'DT', 'CD', 'NNS', ':', 'NNP', ',', 'NNP', 'NN', 'CC', 'NNP', '.']",23
document_classification,6,164,"For the Yah.A. , EXAM improves the best performance by 1.1 % .","['For', 'the', 'Yah.A.', ',', 'EXAM', 'improves', 'the', 'best', 'performance', 'by', '1.1', '%', '.']","['O', 'O', 'B-n', 'O', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNP', ',', 'NNP', 'VBZ', 'DT', 'JJS', 'NN', 'IN', 'CD', 'NN', '.']",13
document_classification,6,176,Multi - Label Classification,"['Multi', '-', 'Label', 'Classification']","['B-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'NNP', 'NNP']",4
document_classification,6,194,We implemented the baseline models and EXAM by MXNet .,"['We', 'implemented', 'the', 'baseline', 'models', 'and', 'EXAM', 'by', 'MXNet', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'NNS', 'CC', 'NNP', 'IN', 'NNP', '.']",10
document_classification,6,195,"We used the matrix trained by word2vec to initialize the embedding layer , and the embedding size is 256 .","['We', 'used', 'the', 'matrix', 'trained', 'by', 'word2vec', 'to', 'initialize', 'the', 'embedding', 'layer', ',', 'and', 'the', 'embedding', 'size', 'is', '256', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'DT', 'NN', 'VBN', 'IN', 'NN', 'TO', 'VB', 'DT', 'VBG', 'NN', ',', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'CD', '.']",20
document_classification,6,196,"We adopted GRU as the Encoder , and each GRU Cell has 1,024 hidden states .","['We', 'adopted', 'GRU', 'as', 'the', 'Encoder', ',', 'and', 'each', 'GRU', 'Cell', 'has', '1,024', 'hidden', 'states', '.']","['O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'NNP', 'IN', 'DT', 'NNP', ',', 'CC', 'DT', 'NNP', 'NNP', 'VBZ', 'CD', 'JJ', 'NNS', '.']",16
document_classification,6,197,The accumulated MLP has 60 hidden units .,"['The', 'accumulated', 'MLP', 'has', '60', 'hidden', 'units', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NNP', 'VBZ', 'CD', 'VBN', 'NNS', '.']",8
document_classification,6,198,We applied Adam to optimize models on one NVIDIA TITAN Xp with the batch size of 1000 and the initial learning rate is 0.001 .,"['We', 'applied', 'Adam', 'to', 'optimize', 'models', 'on', 'one', 'NVIDIA', 'TITAN', 'Xp', 'with', 'the', 'batch', 'size', 'of', '1000', 'and', 'the', 'initial', 'learning', 'rate', 'is', '0.001', '.']","['O', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'NNP', 'TO', 'VB', 'NNS', 'IN', 'CD', 'NNP', 'NNP', 'NNP', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', 'CC', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', '.']",25
document_classification,6,199,The validation set is applied for early - stopping to avoid overfitting .,"['The', 'validation', 'set', 'is', 'applied', 'for', 'early', '-', 'stopping', 'to', 'avoid', 'overfitting', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', ':', 'VBG', 'TO', 'VB', 'NN', '.']",13
document_classification,6,210,Word - based models are better than char - based models in Kanshan - Cup dataset .,"['Word', '-', 'based', 'models', 'are', 'better', 'than', 'char', '-', 'based', 'models', 'in', 'Kanshan', '-', 'Cup', 'dataset', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'VBN', 'NNS', 'VBP', 'JJR', 'IN', 'JJR', ':', 'VBN', 'NNS', 'IN', 'NNP', ':', 'NNP', 'NN', '.']",17
document_classification,6,213,Our models achieve the state - of - the - art performance over two different datasets though we only slightly modified Text RNN to build EXAM .,"['Our', 'models', 'achieve', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'performance', 'over', 'two', 'different', 'datasets', 'though', 'we', 'only', 'slightly', 'modified', 'Text', 'RNN', 'to', 'build', 'EXAM', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NNS', 'VBP', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'IN', 'CD', 'JJ', 'NNS', 'IN', 'PRP', 'RB', 'RB', 'VBN', 'NNP', 'NNP', 'TO', 'VB', 'NNP', '.']",27
document_classification,10,2,Neural Attentive Bag - of - Entities Model for Text Classification,"['Neural', 'Attentive', 'Bag', '-', 'of', '-', 'Entities', 'Model', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['JJ', 'NNP', 'NNP', ':', 'IN', ':', 'NNS', 'NNP', 'IN', 'NNP', 'NNP']",11
document_classification,10,9,The source code of the proposed model is available online at https://github.com/wikipedia2vec/wikipedia2vec.,"['The', 'source', 'code', 'of', 'the', 'proposed', 'model', 'is', 'available', 'online', 'at', 'https://github.com/wikipedia2vec/wikipedia2vec.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n']","['DT', 'NN', 'NN', 'IN', 'DT', 'VBN', 'NN', 'VBZ', 'JJ', 'NN', 'IN', 'NN']",12
document_classification,10,21,"This study proposes the Neural Attentive Bagof - Entities ( NABoE ) model , which is a neural network model that addresses the text classification problem by modeling the semantics in the target documents using entities in the KB .","['This', 'study', 'proposes', 'the', 'Neural', 'Attentive', 'Bagof', '-', 'Entities', '(', 'NABoE', ')', 'model', ',', 'which', 'is', 'a', 'neural', 'network', 'model', 'that', 'addresses', 'the', 'text', 'classification', 'problem', 'by', 'modeling', 'the', 'semantics', 'in', 'the', 'target', 'documents', 'using', 'entities', 'in', 'the', 'KB', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NNP', 'NNP', 'NNP', ':', 'NNS', '(', 'NNP', ')', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'VBG', 'NNS', 'IN', 'DT', 'NNP', '.']",40
document_classification,10,22,"For each entity name in a document ( e.g. , "" Apple "" ) , our model first detects entities that maybe referred to by this name ( e.g. , Apple Inc. , Apple ( food ) ) , and then represents the document using the weighted average of the embeddings of these entities .","['For', 'each', 'entity', 'name', 'in', 'a', 'document', '(', 'e.g.', ',', '""', 'Apple', '""', ')', ',', 'our', 'model', 'first', 'detects', 'entities', 'that', 'maybe', 'referred', 'to', 'by', 'this', 'name', '(', 'e.g.', ',', 'Apple', 'Inc.', ',', 'Apple', '(', 'food', ')', ')', ',', 'and', 'then', 'represents', 'the', 'document', 'using', 'the', 'weighted', 'average', 'of', 'the', 'embeddings', 'of', 'these', 'entities', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', '(', 'UH', ',', 'JJ', 'NNP', 'NNP', ')', ',', 'PRP$', 'NN', 'JJ', 'VBZ', 'NNS', 'IN', 'RB', 'VBN', 'TO', 'IN', 'DT', 'NN', '(', 'JJ', ',', 'NNP', 'NNP', ',', 'NNP', '(', 'NN', ')', ')', ',', 'CC', 'RB', 'VBZ', 'DT', 'NN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNS', '.']",55
document_classification,10,23,The weights are computed using a novel neural attention mechanism that enables the model to focus on a small subset of the entities that are less ambiguous in meaning and more relevant to the document .,"['The', 'weights', 'are', 'computed', 'using', 'a', 'novel', 'neural', 'attention', 'mechanism', 'that', 'enables', 'the', 'model', 'to', 'focus', 'on', 'a', 'small', 'subset', 'of', 'the', 'entities', 'that', 'are', 'less', 'ambiguous', 'in', 'meaning', 'and', 'more', 'relevant', 'to', 'the', 'document', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'WDT', 'VBP', 'RBR', 'JJ', 'IN', 'VBG', 'CC', 'RBR', 'JJ', 'TO', 'DT', 'NN', '.']",36
document_classification,10,24,"In other words , the attention mechanism is designed to compute weights by jointly addressing entity linking and entity salience detection tasks .","['In', 'other', 'words', ',', 'the', 'attention', 'mechanism', 'is', 'designed', 'to', 'compute', 'weights', 'by', 'jointly', 'addressing', 'entity', 'linking', 'and', 'entity', 'salience', 'detection', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NNS', ',', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'NNS', 'IN', 'RB', 'VBG', 'NN', 'VBG', 'CC', 'NN', 'NN', 'NN', 'NNS', '.']",23
document_classification,10,81,The model was trained using mini-batch SGD with its learning rate controlled by Adam and its mini-batch size set to 32 .,"['The', 'model', 'was', 'trained', 'using', 'mini-batch', 'SGD', 'with', 'its', 'learning', 'rate', 'controlled', 'by', 'Adam', 'and', 'its', 'mini-batch', 'size', 'set', 'to', '32', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'VBD', 'VBN', 'VBG', 'JJ', 'NNP', 'IN', 'PRP$', 'VBG', 'NN', 'VBN', 'IN', 'NNP', 'CC', 'PRP$', 'JJ', 'NN', 'VBN', 'TO', 'CD', '.']",22
document_classification,10,83,The size of the embeddings of words and entities was set to d = 300 .,"['The', 'size', 'of', 'the', 'embeddings', 'of', 'words', 'and', 'entities', 'was', 'set', 'to', 'd', '=', '300', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NNS', 'IN', 'NNS', 'CC', 'NNS', 'VBD', 'VBN', 'TO', 'VB', 'JJ', 'CD', '.']",16
document_classification,10,86,Baselines,['Baselines'],['B-n'],['NNS'],1
document_classification,10,88,BoW,['BoW'],['B-n'],['NN'],1
document_classification,10,89,This model is based on a logistic regression classifier with conventional binary BoW features .,"['This', 'model', 'is', 'based', 'on', 'a', 'logistic', 'regression', 'classifier', 'with', 'conventional', 'binary', 'BoW', 'features', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'JJ', 'NNP', 'NNS', '.']",15
document_classification,10,90,FTS- BRNN,"['FTS-', 'BRNN']","['B-n', 'I-n']","['CD', 'NNP']",2
document_classification,10,91,This model is based on a bidirectional RNN with gated recurrent units ( GRU ) .,"['This', 'model', 'is', 'based', 'on', 'a', 'bidirectional', 'RNN', 'with', 'gated', 'recurrent', 'units', '(', 'GRU', ')', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'IN', 'JJ', 'JJ', 'NNS', '(', 'NNP', ')', '.']",16
document_classification,10,93,NTEE This model is a state - of - the - art model that uses a multi - layer perceptron classifier with the features computed using the embeddings of words and entities trained on Wikipedia using the neural network model proposed in their paper .,"['NTEE', 'This', 'model', 'is', 'a', 'state', '-', 'of', '-', 'the', '-', 'art', 'model', 'that', 'uses', 'a', 'multi', '-', 'layer', 'perceptron', 'classifier', 'with', 'the', 'features', 'computed', 'using', 'the', 'embeddings', 'of', 'words', 'and', 'entities', 'trained', 'on', 'Wikipedia', 'using', 'the', 'neural', 'network', 'model', 'proposed', 'in', 'their', 'paper', '.']","['B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NN', 'DT', 'NN', 'VBZ', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'JJ', ':', 'NN', 'NN', 'NN', 'IN', 'DT', 'NNS', 'VBD', 'VBG', 'DT', 'NNS', 'IN', 'NNS', 'CC', 'NNS', 'VBN', 'IN', 'NNP', 'VBG', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'PRP$', 'NN', '.']",45
document_classification,10,100,Results,['Results'],['B-n'],['NNS'],1
document_classification,10,101,"Relative to the baselines , our models yielded enhanced over all performance on both datasets .","['Relative', 'to', 'the', 'baselines', ',', 'our', 'models', 'yielded', 'enhanced', 'over', 'all', 'performance', 'on', 'both', 'datasets', '.']","['B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['JJ', 'TO', 'DT', 'NNS', ',', 'PRP$', 'NNS', 'VBN', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', '.']",16
document_classification,10,102,The NABoE - full model outperformed all baseline models in terms of both measures on both datasets .,"['The', 'NABoE', '-', 'full', 'model', 'outperformed', 'all', 'baseline', 'models', 'in', 'terms', 'of', 'both', 'measures', 'on', 'both', 'datasets', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNP', ':', 'JJ', 'NN', 'VBD', 'DT', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'NNS', '.']",18
document_classification,10,103,"Furthermore , the NABoE-entity model outperformed all the baseline models in terms of both measures on the 20NG dataset , and the F 1 score on the R8 dataset .","['Furthermore', ',', 'the', 'NABoE-entity', 'model', 'outperformed', 'all', 'the', 'baseline', 'models', 'in', 'terms', 'of', 'both', 'measures', 'on', 'the', '20NG', 'dataset', ',', 'and', 'the', 'F', '1', 'score', 'on', 'the', 'R8', 'dataset', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'NNP', 'NN', 'VBD', 'PDT', 'DT', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'CD', 'NN', ',', 'CC', 'DT', 'NNP', 'CD', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",30
document_classification,17,2,Very Deep Convolutional Networks for Text Classification,"['Very', 'Deep', 'Convolutional', 'Networks', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['RB', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",7
document_classification,17,34,"We believe that a challenge in NLP is to develop deep architectures which are able to learn hierarchical representations of whole sentences , jointly with the task .","['We', 'believe', 'that', 'a', 'challenge', 'in', 'NLP', 'is', 'to', 'develop', 'deep', 'architectures', 'which', 'are', 'able', 'to', 'learn', 'hierarchical', 'representations', 'of', 'whole', 'sentences', ',', 'jointly', 'with', 'the', 'task', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'NNP', 'VBZ', 'TO', 'VB', 'JJ', 'NNS', 'WDT', 'VBP', 'JJ', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'RB', 'IN', 'DT', 'NN', '.']",28
document_classification,17,35,"In this paper , we propose to use deep architectures of many convolutional layers to approach this goal , using up to 29 layers .","['In', 'this', 'paper', ',', 'we', 'propose', 'to', 'use', 'deep', 'architectures', 'of', 'many', 'convolutional', 'layers', 'to', 'approach', 'this', 'goal', ',', 'using', 'up', 'to', '29', 'layers', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'JJ', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'NN', ',', 'VBG', 'RP', 'TO', 'CD', 'NNS', '.']",25
document_classification,17,196,"The dictionary consists of the following characters "" abcdefghijklmnopqrstuvwxyz0123456 789-,;.!?:'"" / | # $ % & *' +=<>( ) [ ]{} "" plus a special padding , space and unknown token which add up to a total of 69 tokens .","['The', 'dictionary', 'consists', 'of', 'the', 'following', 'characters', '""', 'abcdefghijklmnopqrstuvwxyz0123456', '789-,;.!?:\'""', '/', '|', '#', '$', '%', '&', ""*'"", '+=<>(', ')', '[', ']{}', '""', 'plus', 'a', 'special', 'padding', ',', 'space', 'and', 'unknown', 'token', 'which', 'add', 'up', 'to', 'a', 'total', 'of', '69', 'tokens', '.']","['O', 'B-n', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NNS', 'VBP', 'JJ', 'JJ', 'NNP', 'NNP', '#', '$', 'NN', 'CC', 'NNP', 'NNP', ')', 'VBP', 'JJ', 'NNP', 'CC', 'DT', 'JJ', 'NN', ',', 'NN', 'CC', 'JJ', 'NN', 'WDT', 'VBZ', 'RP', 'TO', 'DT', 'NN', 'IN', 'CD', 'NNS', '.']",41
document_classification,17,197,"The input text is padded to a fixed size of 1014 , larger text are truncated .","['The', 'input', 'text', 'is', 'padded', 'to', 'a', 'fixed', 'size', 'of', '1014', ',', 'larger', 'text', 'are', 'truncated', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'IN', 'CD', ',', 'JJR', 'NN', 'VBP', 'VBN', '.']",17
document_classification,17,198,The character embedding is of size 16 .,"['The', 'character', 'embedding', 'is', 'of', 'size', '16', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBG', 'VBZ', 'IN', 'NN', 'CD', '.']",8
document_classification,17,199,"Training is performed with SGD , using a mini-batch of size 128 , an initial learning rate of 0.01 and momentum of 0.9 .","['Training', 'is', 'performed', 'with', 'SGD', ',', 'using', 'a', 'mini-batch', 'of', 'size', '128', ',', 'an', 'initial', 'learning', 'rate', 'of', '0.01', 'and', 'momentum', 'of', '0.9', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'O']","['NN', 'VBZ', 'VBN', 'IN', 'NNP', ',', 'VBG', 'DT', 'NN', 'IN', 'NN', 'CD', ',', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CC', 'NN', 'IN', 'CD', '.']",24
document_classification,17,204,The implementation is done using Torch 7 .,"['The', 'implementation', 'is', 'done', 'using', 'Torch', '7', '.']","['O', 'B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'VBN', 'VBG', 'NNP', 'CD', '.']",8
document_classification,17,205,All experiments are performed on a single NVidia K40 GPU .,"['All', 'experiments', 'are', 'performed', 'on', 'a', 'single', 'NVidia', 'K40', 'GPU', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNP', 'NNP', 'NNP', '.']",11
document_classification,17,206,"Unlike previous research on the use of ConvNets for text processing , we use temporal batch norm without dropout .","['Unlike', 'previous', 'research', 'on', 'the', 'use', 'of', 'ConvNets', 'for', 'text', 'processing', ',', 'we', 'use', 'temporal', 'batch', 'norm', 'without', 'dropout', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'IN', 'NN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'NN', '.']",20
document_classification,17,210,"Our deep architecture works well on big data sets in particular , even for small depths .","['Our', 'deep', 'architecture', 'works', 'well', 'on', 'big', 'data', 'sets', 'in', 'particular', ',', 'even', 'for', 'small', 'depths', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'NN', 'VBZ', 'RB', 'IN', 'JJ', 'NNS', 'NNS', 'IN', 'JJ', ',', 'RB', 'IN', 'JJ', 'NNS', '.']",17
document_classification,17,212,"For the smallest depth we use ( 9 convolutional layers ) , we see that our model already performs better than Zhang 's convolutional baselines ( which includes 6 convolutional layers and has a different architecture ) on the biggest data sets :","['For', 'the', 'smallest', 'depth', 'we', 'use', '(', '9', 'convolutional', 'layers', ')', ',', 'we', 'see', 'that', 'our', 'model', 'already', 'performs', 'better', 'than', 'Zhang', ""'s"", 'convolutional', 'baselines', '(', 'which', 'includes', '6', 'convolutional', 'layers', 'and', 'has', 'a', 'different', 'architecture', ')', 'on', 'the', 'biggest', 'data', 'sets', ':']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJS', 'NN', 'PRP', 'VBP', '(', 'CD', 'JJ', 'NNS', ')', ',', 'PRP', 'VBP', 'IN', 'PRP$', 'NN', 'RB', 'VBZ', 'JJR', 'IN', 'NNP', 'POS', 'JJ', 'NNS', '(', 'WDT', 'VBZ', 'CD', 'JJ', 'NNS', 'CC', 'VBZ', 'DT', 'JJ', 'NN', ')', 'IN', 'DT', 'JJS', 'NNS', 'NNS', ':']",43
document_classification,17,214,The most important decrease in classification error can be observed on the largest data set Amazon Full which has more than 3 Million training samples . :,"['The', 'most', 'important', 'decrease', 'in', 'classification', 'error', 'can', 'be', 'observed', 'on', 'the', 'largest', 'data', 'set', 'Amazon', 'Full', 'which', 'has', 'more', 'than', '3', 'Million', 'training', 'samples', '.', ':']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'RBS', 'JJ', 'NN', 'IN', 'NN', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'JJS', 'NN', 'NN', 'NNP', 'NNP', 'WDT', 'VBZ', 'JJR', 'IN', 'CD', 'NNP', 'NN', 'NNS', '.', ':']",27
document_classification,17,217,"We also observe that for a small depth , temporal max - pooling works best on all data sets .","['We', 'also', 'observe', 'that', 'for', 'a', 'small', 'depth', ',', 'temporal', 'max', '-', 'pooling', 'works', 'best', 'on', 'all', 'data', 'sets', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'IN', 'IN', 'DT', 'JJ', 'NN', ',', 'JJ', 'SYM', ':', 'VBG', 'NNS', 'RB', 'IN', 'DT', 'NNS', 'NNS', '.']",20
document_classification,2,2,Rethinking Complex Neural Network Architectures for Document Classification,"['Rethinking', 'Complex', 'Neural', 'Network', 'Architectures', 'for', 'Document', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBG', 'NNP', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",8
document_classification,2,21,"Like the papers cited above , we question the need for overly complex neural architectures , focusing on the problem of document classification .","['Like', 'the', 'papers', 'cited', 'above', ',', 'we', 'question', 'the', 'need', 'for', 'overly', 'complex', 'neural', 'architectures', ',', 'focusing', 'on', 'the', 'problem', 'of', 'document', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NNS', 'VBD', 'IN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'RB', 'JJ', 'JJ', 'NNS', ',', 'VBG', 'IN', 'DT', 'NN', 'IN', 'NN', 'NN', '.']",24
document_classification,2,22,"Starting with a large - scale reproducibility study of several recent neural models , we find that a simple bi-directional LSTM ( BiLSTM ) architecture with appropriate regularization yields accuracy and F 1 that are either competitive or exceed the state of the art on four standard benchmark datasets .","['Starting', 'with', 'a', 'large', '-', 'scale', 'reproducibility', 'study', 'of', 'several', 'recent', 'neural', 'models', ',', 'we', 'find', 'that', 'a', 'simple', 'bi-directional', 'LSTM', '(', 'BiLSTM', ')', 'architecture', 'with', 'appropriate', 'regularization', 'yields', 'accuracy', 'and', 'F', '1', 'that', 'are', 'either', 'competitive', 'or', 'exceed', 'the', 'state', 'of', 'the', 'art', 'on', 'four', 'standard', 'benchmark', 'datasets', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['VBG', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', 'NN', 'IN', 'JJ', 'JJ', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'JJ', 'NNP', '(', 'NNP', ')', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'NN', 'CC', 'NNP', 'CD', 'WDT', 'VBP', 'DT', 'JJ', 'CC', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'CD', 'NN', 'NN', 'NNS', '.']",50
document_classification,2,60,"We conduct a large - scale reproducibility study involving HAN , XML - CNN , KimCNN , and SGM .","['We', 'conduct', 'a', 'large', '-', 'scale', 'reproducibility', 'study', 'involving', 'HAN', ',', 'XML', '-', 'CNN', ',', 'KimCNN', ',', 'and', 'SGM', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', ':', 'NN', 'NN', 'NN', 'VBG', 'NNP', ',', 'NNP', ':', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', '.']",20
document_classification,2,64,"In addition , we compare the neural approaches to logistic regression ( LR ) and support vector machines ( SVMs ) .","['In', 'addition', ',', 'we', 'compare', 'the', 'neural', 'approaches', 'to', 'logistic', 'regression', '(', 'LR', ')', 'and', 'support', 'vector', 'machines', '(', 'SVMs', ')', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NNS', 'TO', 'JJ', 'NN', '(', 'NNP', ')', 'CC', 'NN', 'NN', 'NNS', '(', 'NNP', ')', '.']",22
document_classification,2,65,"The LR model is trained using a one - vs - rest multi-label objective , while the SVM is trained with a linear kernel .","['The', 'LR', 'model', 'is', 'trained', 'using', 'a', 'one', '-', 'vs', '-', 'rest', 'multi-label', 'objective', ',', 'while', 'the', 'SVM', 'is', 'trained', 'with', 'a', 'linear', 'kernel', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'VBN', 'VBG', 'DT', 'CD', ':', 'NN', ':', 'NN', 'JJ', 'NN', ',', 'IN', 'DT', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', '.']",25
document_classification,2,67,"All of our experiments are performed on Nvidia GTX 1080 and RTX 2080 Ti GPUs , with PyTorch 0.4.1 as the backend framework .","['All', 'of', 'our', 'experiments', 'are', 'performed', 'on', 'Nvidia', 'GTX', '1080', 'and', 'RTX', '2080', 'Ti', 'GPUs', ',', 'with', 'PyTorch', '0.4.1', 'as', 'the', 'backend', 'framework', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['DT', 'IN', 'PRP$', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', 'CD', 'CC', 'NNP', 'CD', 'NNP', 'NNP', ',', 'IN', 'NNP', 'CD', 'IN', 'DT', 'NN', 'NN', '.']",24
document_classification,2,68,We use Scikitlearn 0.19.2 for computing the tf - idf vectors and implementing LR and SVMs .,"['We', 'use', 'Scikitlearn', '0.19.2', 'for', 'computing', 'the', 'tf', '-', 'idf', 'vectors', 'and', 'implementing', 'LR', 'and', 'SVMs', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'CD', 'IN', 'VBG', 'DT', 'NN', ':', 'NN', 'NNS', 'CC', 'VBG', 'NNP', 'CC', 'NNP', '.']",17
document_classification,2,111,"We see that our simple LSTM reg model achieves state of the art on Reuters and IMDB ( see , rows 9 and 10 ) , establishing mean scores of 87.0 and 52.8 for F 1 score and accuracy on the test sets of Reuters and IMDB , respectively .","['We', 'see', 'that', 'our', 'simple', 'LSTM', 'reg', 'model', 'achieves', 'state', 'of', 'the', 'art', 'on', 'Reuters', 'and', 'IMDB', '(', 'see', ',', 'rows', '9', 'and', '10', ')', ',', 'establishing', 'mean', 'scores', 'of', '87.0', 'and', '52.8', 'for', 'F', '1', 'score', 'and', 'accuracy', 'on', 'the', 'test', 'sets', 'of', 'Reuters', 'and', 'IMDB', ',', 'respectively', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'IN', 'PRP$', 'JJ', 'NNP', 'NN', 'NN', 'VBZ', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS', 'CC', 'NNP', '(', 'VB', ',', 'VBZ', 'CD', 'CC', 'CD', ')', ',', 'VBG', 'JJ', 'NNS', 'IN', 'CD', 'CC', 'CD', 'IN', 'NNP', 'CD', 'NN', 'CC', 'NN', 'IN', 'DT', 'NN', 'NNS', 'IN', 'NNP', 'CC', 'NNP', ',', 'RB', '.']",50
document_classification,2,113,"We observe that LSTM reg consistently improves upon the performance of LSTM base across all of the tasks - see rows 9 and 10 , where , on average , regularization yields increases of 1.5 and 0.5 points for F 1 score and accuracy , respectively .","['We', 'observe', 'that', 'LSTM', 'reg', 'consistently', 'improves', 'upon', 'the', 'performance', 'of', 'LSTM', 'base', 'across', 'all', 'of', 'the', 'tasks', '-', 'see', 'rows', '9', 'and', '10', ',', 'where', ',', 'on', 'average', ',', 'regularization', 'yields', 'increases', 'of', '1.5', 'and', '0.5', 'points', 'for', 'F', '1', 'score', 'and', 'accuracy', ',', 'respectively', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NNP', 'VBZ', 'RB', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NN', 'IN', 'DT', 'IN', 'DT', 'NNS', ':', 'NN', 'VBZ', 'CD', 'CC', 'CD', ',', 'WRB', ',', 'IN', 'NN', ',', 'NN', 'NNS', 'NNS', 'IN', 'CD', 'CC', 'CD', 'NNS', 'IN', 'NNP', 'CD', 'NN', 'CC', 'NN', ',', 'RB', '.']",47
document_classification,2,114,A few of our LSTM reg runs attain state - of - theart test F 1 scores on AAPD .,"['A', 'few', 'of', 'our', 'LSTM', 'reg', 'runs', 'attain', 'state', '-', 'of', '-', 'theart', 'test', 'F', '1', 'scores', 'on', 'AAPD', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'JJ', 'IN', 'PRP$', 'NNP', 'NN', 'VBZ', 'VBP', 'NN', ':', 'IN', ':', 'JJ', 'NN', 'NNP', 'CD', 'NNS', 'IN', 'NNP', '.']",20
document_classification,2,119,"Interestingly , the non-neural LR and SVM baselines perform remarkably well .","['Interestingly', ',', 'the', 'non-neural', 'LR', 'and', 'SVM', 'baselines', 'perform', 'remarkably', 'well', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', ',', 'DT', 'JJ', 'NNP', 'CC', 'NNP', 'NNS', 'NN', 'RB', 'RB', '.']",12
document_classification,2,120,"On Reuters , for example , the SVM beats many neural baselines , including our non-regularized LSTM base ( rows 2 - 9 ) .","['On', 'Reuters', ',', 'for', 'example', ',', 'the', 'SVM', 'beats', 'many', 'neural', 'baselines', ',', 'including', 'our', 'non-regularized', 'LSTM', 'base', '(', 'rows', '2', '-', '9', ')', '.']","['B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNS', ',', 'IN', 'NN', ',', 'DT', 'NNP', 'VBZ', 'JJ', 'JJ', 'NNS', ',', 'VBG', 'PRP$', 'JJ', 'NNP', 'NN', '(', 'VBZ', 'CD', ':', 'CD', ')', '.']",25
document_classification,2,121,"On AAPD , the SVM either ties or beats the other models , losing only to SGM ( rows 2 - 8 ) .","['On', 'AAPD', ',', 'the', 'SVM', 'either', 'ties', 'or', 'beats', 'the', 'other', 'models', ',', 'losing', 'only', 'to', 'SGM', '(', 'rows', '2', '-', '8', ')', '.']","['O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NNP', ',', 'DT', 'NNP', 'CC', 'NNS', 'CC', 'NNS', 'DT', 'JJ', 'NNS', ',', 'VBG', 'RB', 'TO', 'NNP', '(', 'VBZ', 'CD', ':', 'CD', ')', '.']",24
document_classification,2,122,"Compared to the SVM , the LR baseline appears better suited for the single - label datasets IMDB and Yelp 2014 , where it achieves better accuracy than the SVM does .","['Compared', 'to', 'the', 'SVM', ',', 'the', 'LR', 'baseline', 'appears', 'better', 'suited', 'for', 'the', 'single', '-', 'label', 'datasets', 'IMDB', 'and', 'Yelp', '2014', ',', 'where', 'it', 'achieves', 'better', 'accuracy', 'than', 'the', 'SVM', 'does', '.']","['B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O']","['VBN', 'TO', 'DT', 'NNP', ',', 'DT', 'NNP', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'JJ', ':', 'NN', 'NNS', 'NNP', 'CC', 'NNP', 'CD', ',', 'WRB', 'PRP', 'VBZ', 'RBR', 'NN', 'IN', 'DT', 'NNP', 'VBZ', '.']",32
document_classification,3,2,Squeezed Very Deep Convolutional Neural Networks for Text Classification,"['Squeezed', 'Very', 'Deep', 'Convolutional', 'Neural', 'Networks', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['VBN', 'RB', 'JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",9
document_classification,3,30,"In this paper , we investigate modifications on the network proposed by Conneau et al. with the aim of reducing its number of parameters , storage size and latency with minimal performance degradation .","['In', 'this', 'paper', ',', 'we', 'investigate', 'modifications', 'on', 'the', 'network', 'proposed', 'by', 'Conneau', 'et', 'al.', 'with', 'the', 'aim', 'of', 'reducing', 'its', 'number', 'of', 'parameters', ',', 'storage', 'size', 'and', 'latency', 'with', 'minimal', 'performance', 'degradation', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNS', 'IN', 'DT', 'NN', 'VBN', 'IN', 'NNP', 'CC', 'NN', 'IN', 'DT', 'NN', 'IN', 'VBG', 'PRP$', 'NN', 'IN', 'NNS', ',', 'NN', 'NN', 'CC', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",34
document_classification,3,31,To achieve these improvements we used Temporal Depthwise Separable Convolution and Global Average Pooling techniques .,"['To', 'achieve', 'these', 'improvements', 'we', 'used', 'Temporal', 'Depthwise', 'Separable', 'Convolution', 'and', 'Global', 'Average', 'Pooling', 'techniques', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NNS', 'PRP', 'VBD', 'NNP', 'NNP', 'NNP', 'NNP', 'CC', 'NNP', 'NNP', 'VBG', 'NNS', '.']",16
document_classification,3,32,"Therefore , our main contribution is to propose the Squeezed Very Deep Convolutional Neural Networks ( SVDCNN ) , a text classification model which requires significantly fewer parameters compared to the stateof - the - art CNNs .","['Therefore', ',', 'our', 'main', 'contribution', 'is', 'to', 'propose', 'the', 'Squeezed', 'Very', 'Deep', 'Convolutional', 'Neural', 'Networks', '(', 'SVDCNN', ')', ',', 'a', 'text', 'classification', 'model', 'which', 'requires', 'significantly', 'fewer', 'parameters', 'compared', 'to', 'the', 'stateof', '-', 'the', '-', 'art', 'CNNs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'DT', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'RB', 'JJR', 'NNS', 'VBN', 'TO', 'DT', 'NN', ':', 'DT', ':', 'NN', 'NNP', '.']",38
document_classification,3,141,"For SVDCNN and Char - CNN , we calculated the abovementioned number from the network architecture implemented in PyTorch .","['For', 'SVDCNN', 'and', 'Char', '-', 'CNN', ',', 'we', 'calculated', 'the', 'abovementioned', 'number', 'from', 'the', 'network', 'architecture', 'implemented', 'in', 'PyTorch', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'O']","['IN', 'NNP', 'CC', 'NNP', ':', 'NN', ',', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBN', 'IN', 'NNP', '.']",20
document_classification,3,146,"The SVDCNN experimental settings are similar to the original VDCNN paper , using the same dictionary and the same embedding size of 16 .","['The', 'SVDCNN', 'experimental', 'settings', 'are', 'similar', 'to', 'the', 'original', 'VDCNN', 'paper', ',', 'using', 'the', 'same', 'dictionary', 'and', 'the', 'same', 'embedding', 'size', 'of', '16', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNP', 'JJ', 'NNS', 'VBP', 'JJ', 'TO', 'DT', 'JJ', 'NNP', 'NN', ',', 'VBG', 'DT', 'JJ', 'NN', 'CC', 'DT', 'JJ', 'VBG', 'NN', 'IN', 'CD', '.']",24
document_classification,3,147,"The training is also performed with SGD , utilizing size batch of 64 , with a maximum of 100 epochs .","['The', 'training', 'is', 'also', 'performed', 'with', 'SGD', ',', 'utilizing', 'size', 'batch', 'of', '64', ',', 'with', 'a', 'maximum', 'of', '100', 'epochs', '.']","['O', 'B-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'NNP', ',', 'VBG', 'NN', 'NN', 'IN', 'CD', ',', 'IN', 'DT', 'NN', 'IN', 'CD', 'NNS', '.']",21
document_classification,3,148,"We use an initial learning rate of 0.01 , a momentum of 0.9 and a weight decay of 0.001 .","['We', 'use', 'an', 'initial', 'learning', 'rate', 'of', '0.01', ',', 'a', 'momentum', 'of', '0.9', 'and', 'a', 'weight', 'decay', 'of', '0.001', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', ',', 'DT', 'NN', 'IN', 'CD', 'CC', 'DT', 'JJ', 'NN', 'IN', 'CD', '.']",20
document_classification,3,149,All the experiments were performed on an NVIDIA GTX 1060 GPU + Intel Core i 7 4770s CPU .,"['All', 'the', 'experiments', 'were', 'performed', 'on', 'an', 'NVIDIA', 'GTX', '1060', 'GPU', '+', 'Intel', 'Core', 'i', '7', '4770s', 'CPU', '.']","['O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PDT', 'DT', 'NNS', 'VBD', 'VBN', 'IN', 'DT', 'NNP', 'NNP', 'CD', 'NNP', 'NNP', 'NNP', 'NNP', 'VBD', 'CD', 'CD', 'NNP', '.']",19
document_classification,3,158,The network reduction obtained by the GAP is even more representative since both compared models use three FC layers for their classification tasks .,"['The', 'network', 'reduction', 'obtained', 'by', 'the', 'GAP', 'is', 'even', 'more', 'representative', 'since', 'both', 'compared', 'models', 'use', 'three', 'FC', 'layers', 'for', 'their', 'classification', 'tasks', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'VBZ', 'RB', 'RBR', 'JJ', 'IN', 'DT', 'VBN', 'NNS', 'VBP', 'CD', 'NNP', 'NNS', 'IN', 'PRP$', 'NN', 'NNS', '.']",24
document_classification,3,159,"Considering a dataset with four target classes , and comparing SVDCNN with VDCNN , the number of parameters of the FC layers has passed from 12.59 to 0.02 million parameters , representing a reduction of 99.84 % .","['Considering', 'a', 'dataset', 'with', 'four', 'target', 'classes', ',', 'and', 'comparing', 'SVDCNN', 'with', 'VDCNN', ',', 'the', 'number', 'of', 'parameters', 'of', 'the', 'FC', 'layers', 'has', 'passed', 'from', '12.59', 'to', '0.02', 'million', 'parameters', ',', 'representing', 'a', 'reduction', 'of', '99.84', '%', '.']","['B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'NN', 'IN', 'CD', 'NN', 'NNS', ',', 'CC', 'VBG', 'NNP', 'IN', 'NNP', ',', 'DT', 'NN', 'IN', 'NNS', 'IN', 'DT', 'NNP', 'NNS', 'VBZ', 'VBN', 'IN', 'CD', 'TO', 'CD', 'CD', 'NNS', ',', 'VBG', 'DT', 'NN', 'IN', 'CD', 'NN', '.']",38
document_classification,3,160,"Following with the same comparison , but to Char - CNN , the proposed model is 99.82 % smaller , 0.02 against 11.36 million of FC parameters .","['Following', 'with', 'the', 'same', 'comparison', ',', 'but', 'to', 'Char', '-', 'CNN', ',', 'the', 'proposed', 'model', 'is', '99.82', '%', 'smaller', ',', '0.02', 'against', '11.36', 'million', 'of', 'FC', 'parameters', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'TO', 'NNP', ':', 'NN', ',', 'DT', 'VBN', 'NN', 'VBZ', 'CD', 'NN', 'JJR', ',', 'CD', 'IN', 'CD', 'CD', 'IN', 'NNP', 'NNS', '.']",28
document_classification,3,162,"While our most in - depth model ( 29 ) occupies only 6 MB , VDCNN with the same depth occupies 64. 16 MB of storage .","['While', 'our', 'most', 'in', '-', 'depth', 'model', '(', '29', ')', 'occupies', 'only', '6', 'MB', ',', 'VDCNN', 'with', 'the', 'same', 'depth', 'occupies', '64.', '16', 'MB', 'of', 'storage', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP$', 'JJS', 'IN', ':', 'NN', 'NN', '(', 'CD', ')', 'VBZ', 'RB', 'CD', 'NNP', ',', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'CD', 'CD', 'NNP', 'IN', 'NN', '.']",27
document_classification,3,166,"Regarding accuracy results , usually , a model with such parameter reduction should present some loss of accuracy in comparison to the original model .","['Regarding', 'accuracy', 'results', ',', 'usually', ',', 'a', 'model', 'with', 'such', 'parameter', 'reduction', 'should', 'present', 'some', 'loss', 'of', 'accuracy', 'in', 'comparison', 'to', 'the', 'original', 'model', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBG', 'NN', 'NNS', ',', 'RB', ',', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', 'MD', 'VB', 'DT', 'NN', 'IN', 'NN', 'IN', 'NN', 'TO', 'DT', 'JJ', 'NN', '.']",25
document_classification,3,167,"Nevertheless , the performance difference between VDCNN and SVDCNN models varies between 0.4 and 1.3 % , which is pretty modest considering the parameters and storage size reduction aforementioned .","['Nevertheless', ',', 'the', 'performance', 'difference', 'between', 'VDCNN', 'and', 'SVDCNN', 'models', 'varies', 'between', '0.4', 'and', '1.3', '%', ',', 'which', 'is', 'pretty', 'modest', 'considering', 'the', 'parameters', 'and', 'storage', 'size', 'reduction', 'aforementioned', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'DT', 'NN', 'NN', 'IN', 'NNP', 'CC', 'NNP', 'NNS', 'NNS', 'IN', 'CD', 'CC', 'CD', 'NN', ',', 'WDT', 'VBZ', 'JJ', 'JJ', 'VBG', 'DT', 'NNS', 'CC', 'NN', 'NN', 'NN', 'VBD', '.']",30
document_classification,15,2,ADVERSARIAL TRAINING METHODS FOR SEMI - SUPERVISED TEXT CLASSIFICATION,"['ADVERSARIAL', 'TRAINING', 'METHODS', 'FOR', 'SEMI', '-', 'SUPERVISED', 'TEXT', 'CLASSIFICATION']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP', 'NNP', 'NNP', ':', 'NNP', 'NNP', 'NNP']",9
document_classification,15,18,Previous work has primarily applied adversarial and virtual adversarial training to image classification tasks .,"['Previous', 'work', 'has', 'primarily', 'applied', 'adversarial', 'and', 'virtual', 'adversarial', 'training', 'to', 'image', 'classification', 'tasks', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'VBZ', 'RB', 'VBN', 'JJ', 'CC', 'JJ', 'JJ', 'NN', 'TO', 'NN', 'NN', 'NNS', '.']",15
document_classification,15,19,"In this work , we extend these techniques to text classification tasks and sequence models .","['In', 'this', 'work', ',', 'we', 'extend', 'these', 'techniques', 'to', 'text', 'classification', 'tasks', 'and', 'sequence', 'models', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NNS', 'TO', 'VB', 'NN', 'NNS', 'CC', 'NN', 'NNS', '.']",16
document_classification,15,20,Adversarial perturbations typically consist of making small modifications to very many real - valued inputs .,"['Adversarial', 'perturbations', 'typically', 'consist', 'of', 'making', 'small', 'modifications', 'to', 'very', 'many', 'real', '-', 'valued', 'inputs', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['JJ', 'NNS', 'RB', 'VBP', 'IN', 'VBG', 'JJ', 'NNS', 'TO', 'RB', 'JJ', 'JJ', ':', 'VBN', 'NNS', '.']",16
document_classification,15,21,"For text classification , the input is discrete , and usually represented as a series of highdimensional one - hot vectors .","['For', 'text', 'classification', ',', 'the', 'input', 'is', 'discrete', ',', 'and', 'usually', 'represented', 'as', 'a', 'series', 'of', 'highdimensional', 'one', '-', 'hot', 'vectors', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'JJ', 'NN', ',', 'DT', 'NN', 'VBZ', 'JJ', ',', 'CC', 'RB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'CD', ':', 'JJ', 'NNS', '.']",22
document_classification,15,22,"Because the set of high - dimensional one - hot vectors does not admit infinitesimal perturbation , we define the perturbation on continuous word embeddings instead of discrete word inputs .","['Because', 'the', 'set', 'of', 'high', '-', 'dimensional', 'one', '-', 'hot', 'vectors', 'does', 'not', 'admit', 'infinitesimal', 'perturbation', ',', 'we', 'define', 'the', 'perturbation', 'on', 'continuous', 'word', 'embeddings', 'instead', 'of', 'discrete', 'word', 'inputs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'IN', 'JJ', ':', 'JJ', 'CD', ':', 'JJ', 'NNS', 'VBZ', 'RB', 'VB', 'JJ', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'RB', 'IN', 'JJ', 'NN', 'NNS', '.']",31
document_classification,15,25,We thus propose this approach exclusively as a means of regularizing a text classifier by stabilizing the classification function .,"['We', 'thus', 'propose', 'this', 'approach', 'exclusively', 'as', 'a', 'means', 'of', 'regularizing', 'a', 'text', 'classifier', 'by', 'stabilizing', 'the', 'classification', 'function', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'RB', 'VB', 'DT', 'NN', 'RB', 'IN', 'DT', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', '.']",20
document_classification,15,100,All experiments used TensorFlow on GPUs .,"['All', 'experiments', 'used', 'TensorFlow', 'on', 'GPUs', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['DT', 'NNS', 'VBN', 'NNP', 'IN', 'NNP', '.']",7
document_classification,15,101,Code will be available at https://github.com/tensorflow/models/tree/master/adversarial_text.,"['Code', 'will', 'be', 'available', 'at', 'https://github.com/tensorflow/models/tree/master/adversarial_text.']","['O', 'O', 'O', 'O', 'O', 'B-n']","['NNP', 'MD', 'VB', 'JJ', 'IN', 'NN']",6
document_classification,15,112,"We trained for 100,000 steps .","['We', 'trained', 'for', '100,000', 'steps', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'IN', 'CD', 'NNS', '.']",6
document_classification,15,113,We applied gradient clipping with norm set to 1.0 on all the parameters except word embeddings .,"['We', 'applied', 'gradient', 'clipping', 'with', 'norm', 'set', 'to', '1.0', 'on', 'all', 'the', 'parameters', 'except', 'word', 'embeddings', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'JJ', 'VBG', 'IN', 'NN', 'VBN', 'TO', 'CD', 'IN', 'PDT', 'DT', 'NNS', 'IN', 'NN', 'NNS', '.']",17
document_classification,15,115,"For regularization of the recurrent language model , we applied dropout on the word embedding layer with 0.5 dropout rate .","['For', 'regularization', 'of', 'the', 'recurrent', 'language', 'model', ',', 'we', 'applied', 'dropout', 'on', 'the', 'word', 'embedding', 'layer', 'with', '0.5', 'dropout', 'rate', '.']","['B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'PRP', 'VBD', 'NN', 'IN', 'DT', 'NN', 'VBG', 'NN', 'IN', 'CD', 'NN', 'NN', '.']",21
document_classification,15,116,"For the bidirectional LSTM model , we used 512 hidden units LSTM for both the standard order and reversed order sequences , and we used 256 dimensional word embeddings which are shared with both of the LSTMs .","['For', 'the', 'bidirectional', 'LSTM', 'model', ',', 'we', 'used', '512', 'hidden', 'units', 'LSTM', 'for', 'both', 'the', 'standard', 'order', 'and', 'reversed', 'order', 'sequences', ',', 'and', 'we', 'used', '256', 'dimensional', 'word', 'embeddings', 'which', 'are', 'shared', 'with', 'both', 'of', 'the', 'LSTMs', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'NNP', 'NN', ',', 'PRP', 'VBD', 'CD', 'JJ', 'NNS', 'NNP', 'IN', 'DT', 'DT', 'JJ', 'NN', 'CC', 'VBD', 'NN', 'NNS', ',', 'CC', 'PRP', 'VBD', 'CD', 'JJ', 'NN', 'NNS', 'WDT', 'VBP', 'VBN', 'IN', 'DT', 'IN', 'DT', 'NNP', '.']",38
document_classification,15,163,We saw that cosine distance on adversarial and virtual adversarial training ( 0.159-0.331 ) were much smaller than ones on the baseline and random perturbation method ( 0.244-0.399 ) .,"['We', 'saw', 'that', 'cosine', 'distance', 'on', 'adversarial', 'and', 'virtual', 'adversarial', 'training', '(', '0.159-0.331', ')', 'were', 'much', 'smaller', 'than', 'ones', 'on', 'the', 'baseline', 'and', 'random', 'perturbation', 'method', '(', '0.244-0.399', ')', '.']","['O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'IN', 'JJ', 'NN', 'IN', 'JJ', 'CC', 'JJ', 'JJ', 'NN', '(', 'JJ', ')', 'VBD', 'RB', 'JJR', 'IN', 'NNS', 'IN', 'DT', 'NN', 'CC', 'JJ', 'NN', 'NN', '(', 'JJ', ')', '.']",30
document_classification,15,165,shows the test performance on the Elec and RCV1 datasets .,"['shows', 'the', 'test', 'performance', 'on', 'the', 'Elec', 'and', 'RCV1', 'datasets', '.']","['B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['VBZ', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",11
document_classification,15,166,"We can see our proposed method improved test performance on the baseline method and achieved state of the art performance on both datasets , even though the state of the art method uses a combination of CNN and bidirectional LSTM models .","['We', 'can', 'see', 'our', 'proposed', 'method', 'improved', 'test', 'performance', 'on', 'the', 'baseline', 'method', 'and', 'achieved', 'state', 'of', 'the', 'art', 'performance', 'on', 'both', 'datasets', ',', 'even', 'though', 'the', 'state', 'of', 'the', 'art', 'method', 'uses', 'a', 'combination', 'of', 'CNN', 'and', 'bidirectional', 'LSTM', 'models', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'VB', 'PRP$', 'VBN', 'NN', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'VBD', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNS', ',', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNP', 'CC', 'JJ', 'NNP', 'NNS', '.']",42
document_classification,15,167,Our unidirectional LSTM model improves on the state of the art method and our method with a bidirectional LSTM further improves results on RCV1 .,"['Our', 'unidirectional', 'LSTM', 'model', 'improves', 'on', 'the', 'state', 'of', 'the', 'art', 'method', 'and', 'our', 'method', 'with', 'a', 'bidirectional', 'LSTM', 'further', 'improves', 'results', 'on', 'RCV1', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'O']","['PRP$', 'JJ', 'NNP', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'PRP$', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'RBR', 'VBZ', 'NNS', 'IN', 'NNP', '.']",25
document_classification,15,169,shows test performance on the Rotten Tomatoes dataset .,"['shows', 'test', 'performance', 'on', 'the', 'Rotten', 'Tomatoes', 'dataset', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NNS', 'VBP', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'NN', '.']",9
document_classification,15,170,"Adversarial training was able to improve over the baseline method , and with both adversarial and virtual adversarial cost , achieved almost the same performance as the current state of the art method .","['Adversarial', 'training', 'was', 'able', 'to', 'improve', 'over', 'the', 'baseline', 'method', ',', 'and', 'with', 'both', 'adversarial', 'and', 'virtual', 'adversarial', 'cost', ',', 'achieved', 'almost', 'the', 'same', 'performance', 'as', 'the', 'current', 'state', 'of', 'the', 'art', 'method', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'VBD', 'JJ', 'TO', 'VB', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'NN', ',', 'VBD', 'RB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",34
document_classification,15,171,However the test performance of only virtual adversarial training was worse than the baseline .,"['However', 'the', 'test', 'performance', 'of', 'only', 'virtual', 'adversarial', 'training', 'was', 'worse', 'than', 'the', 'baseline', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'O']","['RB', 'DT', 'NN', 'NN', 'IN', 'RB', 'JJ', 'JJ', 'NN', 'VBD', 'JJR', 'IN', 'DT', 'NN', '.']",15
document_classification,12,2,Graph Convolutional Networks for Text Classification,"['Graph', 'Convolutional', 'Networks', 'for', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",6
document_classification,12,22,"In this work , we propose a new graph neural networkbased method for text classification .","['In', 'this', 'work', ',', 'we', 'propose', 'a', 'new', 'graph', 'neural', 'networkbased', 'method', 'for', 'text', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'JJ', 'VBN', 'NN', 'IN', 'JJ', 'NN', '.']",16
document_classification,12,23,"We construct a single large graph from an entire corpus , which contains words and documents as nodes .","['We', 'construct', 'a', 'single', 'large', 'graph', 'from', 'an', 'entire', 'corpus', ',', 'which', 'contains', 'words', 'and', 'documents', 'as', 'nodes', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'NNS', 'CC', 'NNS', 'IN', 'NNS', '.']",19
document_classification,12,24,"We model the graph with a Graph Convolutional Network ( GCN ) , a simple and effective graph neural network that captures high order neighborhoods information .","['We', 'model', 'the', 'graph', 'with', 'a', 'Graph', 'Convolutional', 'Network', '(', 'GCN', ')', ',', 'a', 'simple', 'and', 'effective', 'graph', 'neural', 'network', 'that', 'captures', 'high', 'order', 'neighborhoods', 'information', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', ',', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'JJ', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', 'NN', '.']",27
document_classification,12,25,The edge between two word nodes is built byword co-occurrence information and the edge between a word node and document node is built using word frequency and word 's document frequency .,"['The', 'edge', 'between', 'two', 'word', 'nodes', 'is', 'built', 'byword', 'co-occurrence', 'information', 'and', 'the', 'edge', 'between', 'a', 'word', 'node', 'and', 'document', 'node', 'is', 'built', 'using', 'word', 'frequency', 'and', 'word', ""'s"", 'document', 'frequency', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'IN', 'CD', 'NN', 'NNS', 'VBZ', 'VBN', 'IN', 'NN', 'NN', 'CC', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'NN', 'NN', 'VBZ', 'VBN', 'VBG', 'NN', 'NN', 'CC', 'NN', 'POS', 'NN', 'NN', '.']",32
document_classification,12,26,We then turn text classification problem into anode classification problem .,"['We', 'then', 'turn', 'text', 'classification', 'problem', 'into', 'anode', 'classification', 'problem', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'NN', 'NN', '.']",11
document_classification,12,28,Our source code is available at https://github. com/yao8839836/text_gcn .,"['Our', 'source', 'code', 'is', 'available', 'at', 'https://github.', 'com/yao8839836/text_gcn', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'NN', 'NN', 'VBZ', 'JJ', 'IN', 'JJ', 'NN', '.']",9
document_classification,12,114,Baselines .,"['Baselines', '.']","['B-n', 'O']","['NNS', '.']",2
document_classification,12,115,We compare our Text GCN with multiple stateof - the - art text classification and embedding methods as follows :,"['We', 'compare', 'our', 'Text', 'GCN', 'with', 'multiple', 'stateof', '-', 'the', '-', 'art', 'text', 'classification', 'and', 'embedding', 'methods', 'as', 'follows', ':']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'NNP', 'NNP', 'IN', 'JJ', 'NN', ':', 'DT', ':', 'NN', 'NN', 'NN', 'CC', 'VBG', 'NNS', 'IN', 'VBZ', ':']",20
document_classification,12,116,TF - IDF + LR : bag - of - words model with term frequencyinverse document frequency weighting .,"['TF', '-', 'IDF', '+', 'LR', ':', 'bag', '-', 'of', '-', 'words', 'model', 'with', 'term', 'frequencyinverse', 'document', 'frequency', 'weighting', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['NNP', ':', 'NNP', 'NNP', 'NNP', ':', 'NN', ':', 'IN', ':', 'NNS', 'NN', 'IN', 'NN', 'NN', 'NN', 'NN', 'NN', '.']",19
document_classification,12,117,Logistic Regression is used as the classifier .,"['Logistic', 'Regression', 'is', 'used', 'as', 'the', 'classifier', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O']","['JJ', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NN', '.']",8
document_classification,12,118,CNN : Convolutional Neural Network ( Kim 2014 ) .,"['CNN', ':', 'Convolutional', 'Neural', 'Network', '(', 'Kim', '2014', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NN', ':', 'JJ', 'NNP', 'NNP', '(', 'NNP', 'CD', ')', '.']",10
document_classification,12,119,We explored CNN -rand which uses randomly initialized word embeddings and CNN - non- static which uses pre-trained word embeddings .,"['We', 'explored', 'CNN', '-rand', 'which', 'uses', 'randomly', 'initialized', 'word', 'embeddings', 'and', 'CNN', '-', 'non-', 'static', 'which', 'uses', 'pre-trained', 'word', 'embeddings', '.']","['O', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBD', 'NNP', 'NNP', 'WDT', 'VBZ', 'RB', 'VBN', 'NN', 'NNS', 'CC', 'NNP', ':', 'JJ', 'JJ', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', '.']",21
document_classification,12,120,LSTM : The LSTM model defined in which uses the last hidden state as the representation of the whole text .,"['LSTM', ':', 'The', 'LSTM', 'model', 'defined', 'in', 'which', 'uses', 'the', 'last', 'hidden', 'state', 'as', 'the', 'representation', 'of', 'the', 'whole', 'text', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NN', ':', 'DT', 'NNP', 'NN', 'VBD', 'IN', 'WDT', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",21
document_classification,12,122,"Bi- LSTM : a bi-directional LSTM , commonly used in text classification .","['Bi-', 'LSTM', ':', 'a', 'bi-directional', 'LSTM', ',', 'commonly', 'used', 'in', 'text', 'classification', '.']","['B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['JJ', 'NNP', ':', 'DT', 'JJ', 'NNP', ',', 'RB', 'VBN', 'IN', 'JJ', 'NN', '.']",13
document_classification,12,124,"PV - DBOW : a paragraph vector model proposed by , the orders of words in text are ignored .","['PV', '-', 'DBOW', ':', 'a', 'paragraph', 'vector', 'model', 'proposed', 'by', ',', 'the', 'orders', 'of', 'words', 'in', 'text', 'are', 'ignored', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['NNP', ':', 'NN', ':', 'DT', 'NN', 'NN', 'NN', 'VBN', 'IN', ',', 'DT', 'NNS', 'IN', 'NNS', 'IN', 'NN', 'VBP', 'VBN', '.']",20
document_classification,12,125,We used Logistic Regression as the classifier .,"['We', 'used', 'Logistic', 'Regression', 'as', 'the', 'classifier', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBD', 'JJ', 'NNP', 'IN', 'DT', 'NN', '.']",8
document_classification,12,126,"PV - DM : a paragraph vector model proposed by , which considers the word order .","['PV', '-', 'DM', ':', 'a', 'paragraph', 'vector', 'model', 'proposed', 'by', ',', 'which', 'considers', 'the', 'word', 'order', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', ':', 'NN', ':', 'DT', 'NN', 'NN', 'NN', 'VBN', 'IN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'NN', '.']",17
document_classification,12,127,We used Logistic Regression as the classifier .,"['We', 'used', 'Logistic', 'Regression', 'as', 'the', 'classifier', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O']","['PRP', 'VBD', 'JJ', 'NNP', 'IN', 'DT', 'NN', '.']",8
document_classification,12,128,"PTE : predictive text embedding , which firstly learns word embedding based on heterogeneous text network containing words , documents and labels as nodes , then averages word embeddings as document embeddings for text classification .","['PTE', ':', 'predictive', 'text', 'embedding', ',', 'which', 'firstly', 'learns', 'word', 'embedding', 'based', 'on', 'heterogeneous', 'text', 'network', 'containing', 'words', ',', 'documents', 'and', 'labels', 'as', 'nodes', ',', 'then', 'averages', 'word', 'embeddings', 'as', 'document', 'embeddings', 'for', 'text', 'classification', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', ':', 'JJ', 'NN', 'NN', ',', 'WDT', 'RB', 'VBZ', 'NN', 'VBG', 'VBN', 'IN', 'JJ', 'NN', 'NN', 'VBG', 'NNS', ',', 'NNS', 'CC', 'NNS', 'IN', 'NNS', ',', 'RB', 'VBZ', 'NN', 'NNS', 'IN', 'NN', 'NNS', 'IN', 'JJ', 'NN', '.']",36
document_classification,12,129,"fast Text : a simple and efficient text classification method , which treats the average of word / n- grams embeddings as document embeddings , then feeds document embeddings into a linear classifier .","['fast', 'Text', ':', 'a', 'simple', 'and', 'efficient', 'text', 'classification', 'method', ',', 'which', 'treats', 'the', 'average', 'of', 'word', '/', 'n-', 'grams', 'embeddings', 'as', 'document', 'embeddings', ',', 'then', 'feeds', 'document', 'embeddings', 'into', 'a', 'linear', 'classifier', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['JJ', 'NN', ':', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'NN', 'NNP', 'JJ', 'NNS', 'NNS', 'IN', 'NN', 'NNS', ',', 'RB', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",34
document_classification,12,131,"SWEM : simple word embedding models , which employs simple pooling strategies operated over word embeddings .","['SWEM', ':', 'simple', 'word', 'embedding', 'models', ',', 'which', 'employs', 'simple', 'pooling', 'strategies', 'operated', 'over', 'word', 'embeddings', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['NN', ':', 'JJ', 'NN', 'VBG', 'NNS', ',', 'WDT', 'VBZ', 'JJ', 'VBG', 'NNS', 'VBN', 'IN', 'NN', 'NNS', '.']",17
document_classification,12,132,"LEAM : label - embedding attentive models , which embeds the words and labels in the same joint space for text classification .","['LEAM', ':', 'label', '-', 'embedding', 'attentive', 'models', ',', 'which', 'embeds', 'the', 'words', 'and', 'labels', 'in', 'the', 'same', 'joint', 'space', 'for', 'text', 'classification', '.']","['B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NN', ':', 'NN', ':', 'VBG', 'JJ', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NNS', 'CC', 'NNS', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'IN', 'JJ', 'NN', '.']",23
document_classification,12,133,It utilizes label descriptions .,"['It', 'utilizes', 'label', 'descriptions', '.']","['O', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'JJ', 'NNS', '.']",5
document_classification,12,134,"Graph - CNN - C : a graph CNN model that operates convolutions over word embedding similarity graphs ( Defferrard , Bresson , and Vandergheynst 2016 ) , in which Chebyshev filter is used .","['Graph', '-', 'CNN', '-', 'C', ':', 'a', 'graph', 'CNN', 'model', 'that', 'operates', 'convolutions', 'over', 'word', 'embedding', 'similarity', 'graphs', '(', 'Defferrard', ',', 'Bresson', ',', 'and', 'Vandergheynst', '2016', ')', ',', 'in', 'which', 'Chebyshev', 'filter', 'is', 'used', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O']","['NNP', ':', 'NNP', ':', 'NN', ':', 'DT', 'NN', 'NNP', 'NN', 'WDT', 'VBZ', 'NNS', 'IN', 'NN', 'VBG', 'NN', 'NN', '(', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', 'CD', ')', ',', 'IN', 'WDT', 'NNP', 'NN', 'VBZ', 'VBN', '.']",35
document_classification,12,135,Graph - CNN - S : the same as Graph - CNN - C but using Spline filter ) .,"['Graph', '-', 'CNN', '-', 'S', ':', 'the', 'same', 'as', 'Graph', '-', 'CNN', '-', 'C', 'but', 'using', 'Spline', 'filter', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O']","['NNP', ':', 'NNP', ':', 'NN', ':', 'DT', 'JJ', 'IN', 'NNP', ':', 'NNP', ':', 'NN', 'CC', 'VBG', 'NNP', 'NN', ')', '.']",20
document_classification,12,136,Graph - CNN - F : the same as Graph - CNN - C but using Fourier filter .,"['Graph', '-', 'CNN', '-', 'F', ':', 'the', 'same', 'as', 'Graph', '-', 'CNN', '-', 'C', 'but', 'using', 'Fourier', 'filter', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['NNP', ':', 'NNP', ':', 'NN', ':', 'DT', 'JJ', 'IN', 'NNP', ':', 'NNP', ':', 'NN', 'CC', 'VBG', 'NNP', 'NN', '.']",19
document_classification,12,155,"For Text GCN , we set the embedding size of the first convolution layer as 200 and set the window size as 20 .","['For', 'Text', 'GCN', ',', 'we', 'set', 'the', 'embedding', 'size', 'of', 'the', 'first', 'convolution', 'layer', 'as', '200', 'and', 'set', 'the', 'window', 'size', 'as', '20', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NNP', 'NNP', ',', 'PRP', 'VBP', 'DT', 'VBG', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'CD', 'CC', 'VBD', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",24
document_classification,12,157,"We tuned other parameters and set the learning rate as 0.02 , dropout For baseline models , we used default parameter settings as in their original papers or implementations .","['We', 'tuned', 'other', 'parameters', 'and', 'set', 'the', 'learning', 'rate', 'as', '0.02', ',', 'dropout', 'For', 'baseline', 'models', ',', 'we', 'used', 'default', 'parameter', 'settings', 'as', 'in', 'their', 'original', 'papers', 'or', 'implementations', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBD', 'JJ', 'NNS', 'CC', 'VB', 'DT', 'NN', 'NN', 'IN', 'CD', ',', 'NN', 'IN', 'NN', 'NNS', ',', 'PRP', 'VBD', 'NN', 'NN', 'NNS', 'IN', 'IN', 'PRP$', 'JJ', 'NNS', 'CC', 'NNS', '.']",30
document_classification,12,158,"For baseline models using pre-trained word embeddings , we used 300 dimensional Glo Ve word embeddings ( Pennington , Socher , and Manning 2014 )","['For', 'baseline', 'models', 'using', 'pre-trained', 'word', 'embeddings', ',', 'we', 'used', '300', 'dimensional', 'Glo', 'Ve', 'word', 'embeddings', '(', 'Pennington', ',', 'Socher', ',', 'and', 'Manning', '2014', ')']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'NNS', 'VBG', 'JJ', 'NN', 'NNS', ',', 'PRP', 'VBD', 'CD', 'JJ', 'NNP', 'NNP', 'NN', 'NNS', '(', 'NNP', ',', 'NNP', ',', 'CC', 'NNP', 'CD', ')']",25
document_classification,12,161,"Text GCN performs the best and significantly outperforms all baseline models ( p < 0.05 based on student t- test ) on four datasets , which showcases the effectiveness of the proposed method on long text datasets .","['Text', 'GCN', 'performs', 'the', 'best', 'and', 'significantly', 'outperforms', 'all', 'baseline', 'models', '(', 'p', '<', '0.05', 'based', 'on', 'student', 't-', 'test', ')', 'on', 'four', 'datasets', ',', 'which', 'showcases', 'the', 'effectiveness', 'of', 'the', 'proposed', 'method', 'on', 'long', 'text', 'datasets', '.']","['B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NNP', 'VBZ', 'DT', 'JJS', 'CC', 'RB', 'VBZ', 'DT', 'NN', 'NNS', '(', 'JJ', 'VBP', 'CD', 'VBN', 'IN', 'NN', 'JJ', 'NN', ')', 'IN', 'CD', 'NNS', ',', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'VBN', 'NN', 'IN', 'JJ', 'JJ', 'NNS', '.']",38
document_classification,12,163,"When pre-trained Glo Ve word embeddings are provided , CNN performs much better , especially on Ohsumed and 20 NG .","['When', 'pre-trained', 'Glo', 'Ve', 'word', 'embeddings', 'are', 'provided', ',', 'CNN', 'performs', 'much', 'better', ',', 'especially', 'on', 'Ohsumed', 'and', '20', 'NG', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['WRB', 'JJ', 'NNP', 'NNP', 'NN', 'NNS', 'VBP', 'VBN', ',', 'NNP', 'VBZ', 'RB', 'JJR', ',', 'RB', 'IN', 'NNP', 'CC', 'CD', 'NNP', '.']",21
document_classification,12,165,"Similarly , LSTM - based models also rely on pre-trained word embeddings and tend to perform better when documents are shorter .","['Similarly', ',', 'LSTM', '-', 'based', 'models', 'also', 'rely', 'on', 'pre-trained', 'word', 'embeddings', 'and', 'tend', 'to', 'perform', 'better', 'when', 'documents', 'are', 'shorter', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['RB', ',', 'NNP', ':', 'VBN', 'NNS', 'RB', 'VBP', 'IN', 'JJ', 'NN', 'NNS', 'CC', 'VBP', 'TO', 'VB', 'JJR', 'WRB', 'NNS', 'VBP', 'JJR', '.']",22
document_classification,12,166,"PV - DBOW achieves comparable results to strong baselines on 20 NG and Ohsumed , but the results on shorter text are clearly inferior to others .","['PV', '-', 'DBOW', 'achieves', 'comparable', 'results', 'to', 'strong', 'baselines', 'on', '20', 'NG', 'and', 'Ohsumed', ',', 'but', 'the', 'results', 'on', 'shorter', 'text', 'are', 'clearly', 'inferior', 'to', 'others', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NNP', 'VBZ', 'JJ', 'NNS', 'TO', 'JJ', 'NNS', 'IN', 'CD', 'NNP', 'CC', 'NNP', ',', 'CC', 'DT', 'NNS', 'IN', 'JJR', 'NN', 'VBP', 'RB', 'JJ', 'TO', 'NNS', '.']",27
document_classification,12,168,"PV - DM performs worse than PV - DBOW , the only comparable results are on MR , where word orders are more essential .","['PV', '-', 'DM', 'performs', 'worse', 'than', 'PV', '-', 'DBOW', ',', 'the', 'only', 'comparable', 'results', 'are', 'on', 'MR', ',', 'where', 'word', 'orders', 'are', 'more', 'essential', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'NN', 'NNS', 'JJR', 'IN', 'NNP', ':', 'NN', ',', 'DT', 'JJ', 'JJ', 'NNS', 'VBP', 'IN', 'NNP', ',', 'WRB', 'NN', 'NNS', 'VBP', 'RBR', 'JJ', '.']",25
document_classification,12,172,Graph - CNN models also show competitive performances .,"['Graph', '-', 'CNN', 'models', 'also', 'show', 'competitive', 'performances', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['NNP', ':', 'NNP', 'NNS', 'RB', 'VBP', 'JJ', 'NNS', '.']",9
document_classification,0,2,Bag of Tricks for Efficient Text Classification,"['Bag', 'of', 'Tricks', 'for', 'Efficient', 'Text', 'Classification']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'IN', 'NNP', 'IN', 'NNP', 'NNP', 'NNP']",7
document_classification,0,14,"In this work , we explore ways to scale these baselines to very large corpus with a large output space , in the context of text classification .","['In', 'this', 'work', ',', 'we', 'explore', 'ways', 'to', 'scale', 'these', 'baselines', 'to', 'very', 'large', 'corpus', 'with', 'a', 'large', 'output', 'space', ',', 'in', 'the', 'context', 'of', 'text', 'classification', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'NNS', 'TO', 'VB', 'DT', 'NNS', 'TO', 'RB', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', '.']",28
document_classification,0,15,"Inspired by the recent work in efficient word representation learning , we show that linear models with a rank constraint and a fast loss approximation can train on a billion words within ten minutes , while achieving performance on par with the state - of - the - art .","['Inspired', 'by', 'the', 'recent', 'work', 'in', 'efficient', 'word', 'representation', 'learning', ',', 'we', 'show', 'that', 'linear', 'models', 'with', 'a', 'rank', 'constraint', 'and', 'a', 'fast', 'loss', 'approximation', 'can', 'train', 'on', 'a', 'billion', 'words', 'within', 'ten', 'minutes', ',', 'while', 'achieving', 'performance', 'on', 'par', 'with', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'NN', 'NN', 'NN', ',', 'PRP', 'VBP', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'MD', 'VB', 'IN', 'DT', 'CD', 'NNS', 'IN', 'JJ', 'NNS', ',', 'IN', 'VBG', 'NN', 'IN', 'NN', 'IN', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', '.']",50
document_classification,0,53,Sentiment analysis,"['Sentiment', 'analysis']","['B-n', 'I-n']","['NN', 'NN']",2
document_classification,0,60,"We use 10 hidden units and run fastText for 5 epochs with a learning rate selected on a validation set from { 0.05 , 0.1 , 0.25 , 0.5 } .","['We', 'use', '10', 'hidden', 'units', 'and', 'run', 'fastText', 'for', '5', 'epochs', 'with', 'a', 'learning', 'rate', 'selected', 'on', 'a', 'validation', 'set', 'from', '{', '0.05', ',', '0.1', ',', '0.25', ',', '0.5', '}', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBP', 'CD', 'JJ', 'NNS', 'CC', 'VB', 'NN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'VBG', 'NN', 'VBN', 'IN', 'DT', 'NN', 'VBN', 'IN', '(', 'CD', ',', 'CD', ',', 'CD', ',', 'CD', ')', '.']",31
document_classification,0,61,"On this task , adding bigram information improves the performance by 1 - 4 % .","['On', 'this', 'task', ',', 'adding', 'bigram', 'information', 'improves', 'the', 'performance', 'by', '1', '-', '4', '%', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'VBG', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'CD', ':', 'CD', 'NN', '.']",16
document_classification,0,62,"Overall our accuracy is slightly better than char - CNN and char - CRNN and , a bit worse than VDCNN .","['Overall', 'our', 'accuracy', 'is', 'slightly', 'better', 'than', 'char', '-', 'CNN', 'and', 'char', '-', 'CRNN', 'and', ',', 'a', 'bit', 'worse', 'than', 'VDCNN', '.']","['O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['JJ', 'PRP$', 'NN', 'VBZ', 'RB', 'JJR', 'IN', 'JJR', ':', 'NN', 'CC', 'NN', ':', 'NN', 'CC', ',', 'DT', 'NN', 'JJR', 'IN', 'NNP', '.']",22
document_classification,0,63,"Note that we can increase the accuracy slightly by using more n-grams , for example with trigrams , the performance on Sogou goes up to 97.1 % .","['Note', 'that', 'we', 'can', 'increase', 'the', 'accuracy', 'slightly', 'by', 'using', 'more', 'n-grams', ',', 'for', 'example', 'with', 'trigrams', ',', 'the', 'performance', 'on', 'Sogou', 'goes', 'up', 'to', '97.1', '%', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['NN', 'IN', 'PRP', 'MD', 'VB', 'DT', 'NN', 'RB', 'IN', 'VBG', 'JJR', 'JJ', ',', 'IN', 'NN', 'IN', 'NNS', ',', 'DT', 'NN', 'IN', 'NNP', 'VBZ', 'RB', 'TO', 'CD', 'NN', '.']",28
document_classification,0,65,We tune the hyperparameters on the validation set and observe that using n-grams up to 5 leads to the best performance .,"['We', 'tune', 'the', 'hyperparameters', 'on', 'the', 'validation', 'set', 'and', 'observe', 'that', 'using', 'n-grams', 'up', 'to', '5', 'leads', 'to', 'the', 'best', 'performance', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', 'CC', 'NN', 'IN', 'VBG', 'JJ', 'IN', 'TO', 'CD', 'NNS', 'TO', 'DT', 'JJS', 'NN', '.']",22
document_classification,0,69,Tag prediction,"['Tag', 'prediction']","['B-n', 'I-n']","['NNP', 'NN']",2
document_classification,0,79,We consider a frequency - based baseline which predicts the most frequent tag .,"['We', 'consider', 'a', 'frequency', '-', 'based', 'baseline', 'which', 'predicts', 'the', 'most', 'frequent', 'tag', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'NN', ':', 'VBN', 'NN', 'WDT', 'VBZ', 'DT', 'RBS', 'JJ', 'NN', '.']",14
document_classification,0,80,"We also compare with Tagspace ( Weston et al. , 2014 ) , which is a tag prediction model similar to ours , but based on the Wsabie model of .","['We', 'also', 'compare', 'with', 'Tagspace', '(', 'Weston', 'et', 'al.', ',', '2014', ')', ',', 'which', 'is', 'a', 'tag', 'prediction', 'model', 'similar', 'to', 'ours', ',', 'but', 'based', 'on', 'the', 'Wsabie', 'model', 'of', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'IN', 'NNP', '(', 'NNP', 'VBZ', 'RB', ',', 'CD', ')', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'JJ', 'TO', 'VB', ',', 'CC', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'IN', '.']",31
document_classification,0,82,Results and training time . and 200 .,"['Results', 'and', 'training', 'time', '.', 'and', '200', '.']","['B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNS', 'CC', 'JJ', 'NN', '.', 'CC', 'CD', '.']",8
document_classification,0,83,"Both models achieve a similar performance with a small hidden layer , but adding bigrams gives us a significant boost in accuracy .","['Both', 'models', 'achieve', 'a', 'similar', 'performance', 'with', 'a', 'small', 'hidden', 'layer', ',', 'but', 'adding', 'bigrams', 'gives', 'us', 'a', 'significant', 'boost', 'in', 'accuracy', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ',', 'CC', 'VBG', 'JJ', 'VBZ', 'PRP', 'DT', 'JJ', 'NN', 'IN', 'NN', '.']",23
data-to-text_generation,1,2,A Deep Ensemble Model with Slot Alignment for Sequence - to - Sequence Natural Language Generation,"['A', 'Deep', 'Ensemble', 'Model', 'with', 'Slot', 'Alignment', 'for', 'Sequence', '-', 'to', '-', 'Sequence', 'Natural', 'Language', 'Generation']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'IN', 'NNP', ':', 'TO', ':', 'NNP', 'NNP', 'NNP', 'NNP']",16
data-to-text_generation,1,4,Natural language generation lies at the core of generative dialogue systems and conversational agents .,"['Natural', 'language', 'generation', 'lies', 'at', 'the', 'core', 'of', 'generative', 'dialogue', 'systems', 'and', 'conversational', 'agents', '.']","['B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', 'CC', 'JJ', 'NNS', '.']",15
data-to-text_generation,1,28,"Here we present a neural ensemble natural language generator , which we train and test on three large unaligned datasets in the restaurant , television , and laptop domains .","['Here', 'we', 'present', 'a', 'neural', 'ensemble', 'natural', 'language', 'generator', ',', 'which', 'we', 'train', 'and', 'test', 'on', 'three', 'large', 'unaligned', 'datasets', 'in', 'the', 'restaurant', ',', 'television', ',', 'and', 'laptop', 'domains', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', 'JJ', 'NN', 'NN', ',', 'WDT', 'PRP', 'VBP', 'CC', 'NN', 'IN', 'CD', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'NN', ',', 'NN', ',', 'CC', 'JJ', 'NNS', '.']",30
data-to-text_generation,1,29,"We explore novel ways to represent the MR inputs , including novel methods for delexicalizing slots and their values , automatic slot alignment , as well as the use of a semantic reranker .","['We', 'explore', 'novel', 'ways', 'to', 'represent', 'the', 'MR', 'inputs', ',', 'including', 'novel', 'methods', 'for', 'delexicalizing', 'slots', 'and', 'their', 'values', ',', 'automatic', 'slot', 'alignment', ',', 'as', 'well', 'as', 'the', 'use', 'of', 'a', 'semantic', 'reranker', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'NNP', 'NNS', ',', 'VBG', 'JJ', 'NNS', 'IN', 'VBG', 'NNS', 'CC', 'PRP$', 'NNS', ',', 'JJ', 'NN', 'NN', ',', 'RB', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",34
data-to-text_generation,1,158,We built our ensemble model using the seq2seq framework for TensorFlow .,"['We', 'built', 'our', 'ensemble', 'model', 'using', 'the', 'seq2seq', 'framework', 'for', 'TensorFlow', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'PRP$', 'JJ', 'NN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'NNP', '.']",12
data-to-text_generation,1,159,"Our individual LSTM models use a bidirectional LSTM encoder with 512 cells per layer , and the CNN models use a pooling encoder as in .","['Our', 'individual', 'LSTM', 'models', 'use', 'a', 'bidirectional', 'LSTM', 'encoder', 'with', '512', 'cells', 'per', 'layer', ',', 'and', 'the', 'CNN', 'models', 'use', 'a', 'pooling', 'encoder', 'as', 'in', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['PRP$', 'JJ', 'NNP', 'NNS', 'VBP', 'DT', 'JJ', 'NNP', 'NN', 'IN', 'CD', 'NNS', 'IN', 'NN', ',', 'CC', 'DT', 'NNP', 'NNS', 'VBP', 'DT', 'NN', 'NN', 'IN', 'IN', '.']",26
data-to-text_generation,1,160,The decoder in all models was a 4 - layer RNN decoder with 512 LSTM cells per layer and with attention .,"['The', 'decoder', 'in', 'all', 'models', 'was', 'a', '4', '-', 'layer', 'RNN', 'decoder', 'with', '512', 'LSTM', 'cells', 'per', 'layer', 'and', 'with', 'attention', '.']","['O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NNS', 'VBD', 'DT', 'CD', ':', 'NN', 'NNP', 'NN', 'IN', 'CD', 'NNP', 'NNS', 'IN', 'NN', 'CC', 'IN', 'NN', '.']",22
data-to-text_generation,1,165,Experiments on the E2E Dataset,"['Experiments', 'on', 'the', 'E2E', 'Dataset']","['O', 'O', 'O', 'B-n', 'I-n']","['NNS', 'IN', 'DT', 'NNP', 'NNP']",5
data-to-text_generation,1,170,Automatic Metric Evaluation,"['Automatic', 'Metric', 'Evaluation']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NNP']",3
data-to-text_generation,1,172,The results in show that both the LSTM and the CNN models clearly benefit from additional pseudo - samples in the training set .,"['The', 'results', 'in', 'show', 'that', 'both', 'the', 'LSTM', 'and', 'the', 'CNN', 'models', 'clearly', 'benefit', 'from', 'additional', 'pseudo', '-', 'samples', 'in', 'the', 'training', 'set', '.']","['O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NNS', 'IN', 'NN', 'IN', 'DT', 'DT', 'NNP', 'CC', 'DT', 'NNP', 'NNS', 'RB', 'VBP', 'IN', 'JJ', 'NN', ':', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",24
data-to-text_generation,1,180,"On the official E2E test set , our ensemble model performs comparably to the baseline model , TGen , in terms of automatic metrics ) .","['On', 'the', 'official', 'E2E', 'test', 'set', ',', 'our', 'ensemble', 'model', 'performs', 'comparably', 'to', 'the', 'baseline', 'model', ',', 'TGen', ',', 'in', 'terms', 'of', 'automatic', 'metrics', ')', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NNP', 'NN', 'NN', ',', 'PRP$', 'JJ', 'NN', 'NNS', 'RB', 'TO', 'DT', 'NN', 'NN', ',', 'NNP', ',', 'IN', 'NNS', 'IN', 'JJ', 'NNS', ')', '.']",26
data-to-text_generation,1,210,Experiments on TV and Laptop Datasets,"['Experiments', 'on', 'TV', 'and', 'Laptop', 'Datasets']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n']","['NNS', 'IN', 'NN', 'CC', 'NNP', 'NNS']",6
data-to-text_generation,1,212,"As shows , our ensemble model performs competitively with the baseline on the TV dataset , and it outperforms it on the Laptop dataset by a wide margin .","['As', 'shows', ',', 'our', 'ensemble', 'model', 'performs', 'competitively', 'with', 'the', 'baseline', 'on', 'the', 'TV', 'dataset', ',', 'and', 'it', 'outperforms', 'it', 'on', 'the', 'Laptop', 'dataset', 'by', 'a', 'wide', 'margin', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'NNS', ',', 'PRP$', 'JJ', 'NN', 'NNS', 'RB', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', ',', 'CC', 'PRP', 'VBZ', 'PRP', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",29
data-to-text_generation,5,2,Step - by - Step : Separating Planning from Realization in Neural Data - to - Text Generation,"['Step', '-', 'by', '-', 'Step', ':', 'Separating', 'Planning', 'from', 'Realization', 'in', 'Neural', 'Data', '-', 'to', '-', 'Text', 'Generation']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', ':', 'IN', ':', 'NN', ':', 'VBG', 'VBG', 'IN', 'NNP', 'IN', 'NNP', 'NNP', ':', 'TO', ':', 'NN', 'NN']",18
data-to-text_generation,5,5,"Data - to - text generation can be conceptually divided into two parts : ordering and structuring the information ( planning ) , and generating fluent language describing the information ( realization ) .","['Data', '-', 'to', '-', 'text', 'generation', 'can', 'be', 'conceptually', 'divided', 'into', 'two', 'parts', ':', 'ordering', 'and', 'structuring', 'the', 'information', '(', 'planning', ')', ',', 'and', 'generating', 'fluent', 'language', 'describing', 'the', 'information', '(', 'realization', ')', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'TO', ':', 'NN', 'NN', 'MD', 'VB', 'RB', 'VBN', 'IN', 'CD', 'NNS', ':', 'NN', 'CC', 'VBG', 'DT', 'NN', '(', 'NN', ')', ',', 'CC', 'VBG', 'JJ', 'NN', 'VBG', 'DT', 'NN', '(', 'NN', ')', '.']",34
data-to-text_generation,5,49,"Proposal we propose an explicit , symbolic , text planning stage , whose output is fed into a neural generation system .","['Proposal', 'we', 'propose', 'an', 'explicit', ',', 'symbolic', ',', 'text', 'planning', 'stage', ',', 'whose', 'output', 'is', 'fed', 'into', 'a', 'neural', 'generation', 'system', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['NN', 'PRP', 'VBP', 'DT', 'NN', ',', 'JJ', ',', 'JJ', 'NN', 'NN', ',', 'WP$', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', '.']",22
data-to-text_generation,5,50,The text planner determines the information structure and expresses it unambiguously - in our case as a sequence of ordered trees .,"['The', 'text', 'planner', 'determines', 'the', 'information', 'structure', 'and', 'expresses', 'it', 'unambiguously', '-', 'in', 'our', 'case', 'as', 'a', 'sequence', 'of', 'ordered', 'trees', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'VBZ', 'PRP', 'RB', ':', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', '.']",22
data-to-text_generation,5,52,"Once the plan is determined , 2 a neural generation system is used to transform it into fluent , natural language text .","['Once', 'the', 'plan', 'is', 'determined', ',', '2', 'a', 'neural', 'generation', 'system', 'is', 'used', 'to', 'transform', 'it', 'into', 'fluent', ',', 'natural', 'language', 'text', '.']","['O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'DT', 'NN', 'VBZ', 'VBN', ',', 'CD', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'PRP', 'IN', 'NN', ',', 'JJ', 'NN', 'NN', '.']",23
data-to-text_generation,5,57,We release our code and the corpus extended with matching plans in https://github.com/AmitMY/ chimera .,"['We', 'release', 'our', 'code', 'and', 'the', 'corpus', 'extended', 'with', 'matching', 'plans', 'in', 'https://github.com/AmitMY/', 'chimera', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'CC', 'DT', 'NN', 'VBD', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'NN', '.']",15
data-to-text_generation,5,208,"We compare to the best submissions in the WebNLG challenge : Melbourne , an end - to - end system that scored best on all categories in the automatic evaluation , and UPF - FORGe , a classic grammar - based NLG system that scored best in the human evaluation .","['We', 'compare', 'to', 'the', 'best', 'submissions', 'in', 'the', 'WebNLG', 'challenge', ':', 'Melbourne', ',', 'an', 'end', '-', 'to', '-', 'end', 'system', 'that', 'scored', 'best', 'on', 'all', 'categories', 'in', 'the', 'automatic', 'evaluation', ',', 'and', 'UPF', '-', 'FORGe', ',', 'a', 'classic', 'grammar', '-', 'based', 'NLG', 'system', 'that', 'scored', 'best', 'in', 'the', 'human', 'evaluation', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'TO', 'DT', 'JJS', 'NNS', 'IN', 'DT', 'NNP', 'NN', ':', 'NNP', ',', 'DT', 'NN', ':', 'TO', ':', 'NN', 'NN', 'WDT', 'VBD', 'RBS', 'IN', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', ',', 'CC', 'NNP', ':', 'NNP', ',', 'DT', 'JJ', 'NN', ':', 'VBN', 'NNP', 'NN', 'WDT', 'VBD', 'RBS', 'IN', 'DT', 'JJ', 'NN', '.']",51
data-to-text_generation,5,209,"Additionally , we developed an end - to - end neural baseline which outperforms the WebNLG neural systems .","['Additionally', ',', 'we', 'developed', 'an', 'end', '-', 'to', '-', 'end', 'neural', 'baseline', 'which', 'outperforms', 'the', 'WebNLG', 'neural', 'systems', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBD', 'DT', 'NN', ':', 'TO', ':', 'VB', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'JJ', 'NNS', '.']",19
data-to-text_generation,5,210,"It uses a set encoder , an LSTM decoder with attention , a copy - attention mechanism and a neural checklist model , as well as applying entity dropout .","['It', 'uses', 'a', 'set', 'encoder', ',', 'an', 'LSTM', 'decoder', 'with', 'attention', ',', 'a', 'copy', '-', 'attention', 'mechanism', 'and', 'a', 'neural', 'checklist', 'model', ',', 'as', 'well', 'as', 'applying', 'entity', 'dropout', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'DT', 'NN', 'NN', ',', 'DT', 'NNP', 'NN', 'IN', 'NN', ',', 'DT', 'NN', ':', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', ',', 'RB', 'RB', 'IN', 'VBG', 'NN', 'NN', '.']",30
data-to-text_generation,5,213,6 Experiments and Results,"['6', 'Experiments', 'and', 'Results']","['O', 'O', 'O', 'B-n']","['CD', 'NNS', 'CC', 'NNS']",4
data-to-text_generation,5,217,Both the StrongNeural and BestPlan systems outperform all the WebNLG participating systems on all automatic metrics,"['Both', 'the', 'StrongNeural', 'and', 'BestPlan', 'systems', 'outperform', 'all', 'the', 'WebNLG', 'participating', 'systems', 'on', 'all', 'automatic', 'metrics']","['O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n']","['DT', 'DT', 'NNP', 'CC', 'NNP', 'NNS', 'VBP', 'PDT', 'DT', 'NNP', 'VBG', 'NNS', 'IN', 'DT', 'JJ', 'NNS']",16
data-to-text_generation,4,2,Data - to - Text Generation with Content Selection and Planning,"['Data', '-', 'to', '-', 'Text', 'Generation', 'with', 'Content', 'Selection', 'and', 'Planning']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O']","['NNP', ':', 'TO', ':', 'NN', 'NN', 'IN', 'NNP', 'NNP', 'CC', 'NNP']",11
data-to-text_generation,4,20,Our model learns a content plan from the input and conditions on the content plan in order to generate the output document ( see for an illustration ) .,"['Our', 'model', 'learns', 'a', 'content', 'plan', 'from', 'the', 'input', 'and', 'conditions', 'on', 'the', 'content', 'plan', 'in', 'order', 'to', 'generate', 'the', 'output', 'document', '(', 'see', 'for', 'an', 'illustration', ')', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'CC', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', '(', 'VB', 'IN', 'DT', 'NN', ')', '.']",29
data-to-text_generation,4,22,"We train our model end - to - end using neural networks and evaluate its performance on ROTOWIRE , a recently released dataset which contains statistics of NBA basketball games paired with human - written summaries ( see ) .","['We', 'train', 'our', 'model', 'end', '-', 'to', '-', 'end', 'using', 'neural', 'networks', 'and', 'evaluate', 'its', 'performance', 'on', 'ROTOWIRE', ',', 'a', 'recently', 'released', 'dataset', 'which', 'contains', 'statistics', 'of', 'NBA', 'basketball', 'games', 'paired', 'with', 'human', '-', 'written', 'summaries', '(', 'see', ')', '.']","['O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'PRP$', 'NN', 'NN', ':', 'TO', ':', 'NN', 'VBG', 'JJ', 'NNS', 'CC', 'VB', 'PRP$', 'NN', 'IN', 'NNP', ',', 'DT', 'RB', 'VBN', 'NN', 'WDT', 'VBZ', 'NNS', 'IN', 'NNP', 'NN', 'NNS', 'VBN', 'IN', 'JJ', ':', 'VBN', 'NNS', '(', 'VB', ')', '.']",40
data-to-text_generation,4,158,"We used one - layer pointer networks during content planning , and two - layer LSTMs during text generation .","['We', 'used', 'one', '-', 'layer', 'pointer', 'networks', 'during', 'content', 'planning', ',', 'and', 'two', '-', 'layer', 'LSTMs', 'during', 'text', 'generation', '.']","['O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['PRP', 'VBD', 'CD', ':', 'NN', 'NN', 'NNS', 'IN', 'NN', 'NN', ',', 'CC', 'CD', ':', 'NN', 'NNP', 'IN', 'JJ', 'NN', '.']",20
data-to-text_generation,4,159,Input feeding was employed for the text decoder .,"['Input', 'feeding', 'was', 'employed', 'for', 'the', 'text', 'decoder', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'NN', '.']",9
data-to-text_generation,4,160,We applied dropout ) at a rate of 0.3 .,"['We', 'applied', 'dropout', ')', 'at', 'a', 'rate', 'of', '0.3', '.']","['O', 'B-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'NN', ')', 'IN', 'DT', 'NN', 'IN', 'CD', '.']",10
data-to-text_generation,4,161,"Models were trained for 25 epochs with the Adagrad optimizer ; the initial learning rate was 0.15 , learning rate decay was selected from { 0.5 , 0.97 } , and batch size was 5 .","['Models', 'were', 'trained', 'for', '25', 'epochs', 'with', 'the', 'Adagrad', 'optimizer', ';', 'the', 'initial', 'learning', 'rate', 'was', '0.15', ',', 'learning', 'rate', 'decay', 'was', 'selected', 'from', '{', '0.5', ',', '0.97', '}', ',', 'and', 'batch', 'size', 'was', '5', '.']","['B-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['NNS', 'VBD', 'VBN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'NNP', 'NN', ':', 'DT', 'JJ', 'NN', 'NN', 'VBD', 'CD', ',', 'VBG', 'NN', 'NN', 'VBD', 'VBN', 'IN', '(', 'CD', ',', 'CD', ')', ',', 'CC', 'NN', 'NN', 'VBD', 'CD', '.']",36
data-to-text_generation,4,162,"For text decoding , we made use of BPTT ) and set the truncation size to 100 .","['For', 'text', 'decoding', ',', 'we', 'made', 'use', 'of', 'BPTT', ')', 'and', 'set', 'the', 'truncation', 'size', 'to', '100', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'NN', 'NN', ',', 'PRP', 'VBD', 'NN', 'IN', 'NNP', ')', 'CC', 'VBD', 'DT', 'NN', 'NN', 'TO', 'CD', '.']",18
data-to-text_generation,4,163,We set the beam size to 5 during inference .,"['We', 'set', 'the', 'beam', 'size', 'to', '5', 'during', 'inference', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'CD', 'IN', 'NN', '.']",10
data-to-text_generation,4,164,All models are implemented in Open NMT - py .,"['All', 'models', 'are', 'implemented', 'in', 'Open', 'NMT', '-', 'py', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', ':', 'NN', '.']",10
data-to-text_generation,4,165,Results,['Results'],['B-n'],['NNS'],1
data-to-text_generation,4,179,"As can be seen , NCP improves upon vanilla encoderdecoder models ( ED + JC , ED + CC ) , irrespective of the copy mechanism being employed .","['As', 'can', 'be', 'seen', ',', 'NCP', 'improves', 'upon', 'vanilla', 'encoderdecoder', 'models', '(', 'ED', '+', 'JC', ',', 'ED', '+', 'CC', ')', ',', 'irrespective', 'of', 'the', 'copy', 'mechanism', 'being', 'employed', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O']","['IN', 'MD', 'VB', 'VBN', ',', 'NNP', 'VBZ', 'IN', 'NN', 'NN', 'NNS', '(', 'NNP', 'NNP', 'NNP', ',', 'NNP', 'NNP', 'NNP', ')', ',', 'JJ', 'IN', 'DT', 'NN', 'NN', 'VBG', 'VBN', '.']",29
data-to-text_generation,4,180,"In fact , NCP achieves comparable scores with either joint or conditional copy mechanism which indicates that it is the content planner which brings performance improvements .","['In', 'fact', ',', 'NCP', 'achieves', 'comparable', 'scores', 'with', 'either', 'joint', 'or', 'conditional', 'copy', 'mechanism', 'which', 'indicates', 'that', 'it', 'is', 'the', 'content', 'planner', 'which', 'brings', 'performance', 'improvements', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'NN', ',', 'NNP', 'VBZ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'CC', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'IN', 'PRP', 'VBZ', 'DT', 'NN', 'NN', 'WDT', 'VBZ', 'NN', 'NNS', '.']",27
data-to-text_generation,4,181,"Overall , NCP + CC achieves best content selection and content ordering scores in terms of BLEU .","['Overall', ',', 'NCP', '+', 'CC', 'achieves', 'best', 'content', 'selection', 'and', 'content', 'ordering', 'scores', 'in', 'terms', 'of', 'BLEU', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'O']","['JJ', ',', 'NNP', 'NNP', 'NNP', 'VBZ', 'RBS', 'JJ', 'NN', 'CC', 'JJ', 'NN', 'NNS', 'IN', 'NNS', 'IN', 'NNP', '.']",18
data-to-text_generation,4,182,"Compared to the best reported system in Wiseman et al. , we achieve an absolute improvement of approximately 12 % in terms of relation generation ; content selection precision also improves by 5 % and recall by 15 % , content ordering increases by 3 % , and BLEU by 1.5 points .","['Compared', 'to', 'the', 'best', 'reported', 'system', 'in', 'Wiseman', 'et', 'al.', ',', 'we', 'achieve', 'an', 'absolute', 'improvement', 'of', 'approximately', '12', '%', 'in', 'terms', 'of', 'relation', 'generation', ';', 'content', 'selection', 'precision', 'also', 'improves', 'by', '5', '%', 'and', 'recall', 'by', '15', '%', ',', 'content', 'ordering', 'increases', 'by', '3', '%', ',', 'and', 'BLEU', 'by', '1.5', 'points', '.']","['B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['VBN', 'TO', 'DT', 'JJS', 'JJ', 'NN', 'IN', 'NNP', 'CC', 'RB', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'RB', 'CD', 'NN', 'IN', 'NNS', 'IN', 'NN', 'NN', ':', 'JJ', 'NN', 'NN', 'RB', 'VBZ', 'IN', 'CD', 'NN', 'CC', 'NN', 'IN', 'CD', 'NN', ',', 'JJ', 'VBG', 'NNS', 'IN', 'CD', 'NN', ',', 'CC', 'NNP', 'IN', 'CD', 'NNS', '.']",53
data-to-text_generation,4,184,"As far as the template - based system is concerned , we observe that it obtains low BLEU and CS precision but scores high on CS recall and RG metrics .","['As', 'far', 'as', 'the', 'template', '-', 'based', 'system', 'is', 'concerned', ',', 'we', 'observe', 'that', 'it', 'obtains', 'low', 'BLEU', 'and', 'CS', 'precision', 'but', 'scores', 'high', 'on', 'CS', 'recall', 'and', 'RG', 'metrics', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'RB', 'IN', 'DT', 'NN', ':', 'VBN', 'NN', 'VBZ', 'VBN', ',', 'PRP', 'VBP', 'IN', 'PRP', 'VBZ', 'JJ', 'NNP', 'CC', 'NNP', 'NN', 'CC', 'VBZ', 'JJ', 'IN', 'NNP', 'NN', 'CC', 'NNP', 'NNS', '.']",31
data-to-text_generation,6,2,Copy Mechanism and Tailored Training for Character - based Data - to - text Generation,"['Copy', 'Mechanism', 'and', 'Tailored', 'Training', 'for', 'Character', '-', 'based', 'Data', '-', 'to', '-', 'text', 'Generation']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NN', 'NNP', 'CC', 'NNP', 'NNP', 'IN', 'NNP', ':', 'VBN', 'NNP', ':', 'TO', ':', 'NN', 'NN']",15
data-to-text_generation,6,4,"In the last few years , many different methods have been focusing on using deep recurrent neural networks for natural language generation .","['In', 'the', 'last', 'few', 'years', ',', 'many', 'different', 'methods', 'have', 'been', 'focusing', 'on', 'using', 'deep', 'recurrent', 'neural', 'networks', 'for', 'natural', 'language', 'generation', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'JJ', 'NNS', ',', 'JJ', 'JJ', 'NNS', 'VBP', 'VBN', 'VBG', 'IN', 'VBG', 'JJ', 'NN', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NN', '.']",23
data-to-text_generation,6,8,"Moreover , since characters constitute the common "" building blocks "" of every text , it also allows a more general approach to text generation , enabling the possibility to exploit transfer learning for training .","['Moreover', ',', 'since', 'characters', 'constitute', 'the', 'common', '""', 'building', 'blocks', '""', 'of', 'every', 'text', ',', 'it', 'also', 'allows', 'a', 'more', 'general', 'approach', 'to', 'text', 'generation', ',', 'enabling', 'the', 'possibility', 'to', 'exploit', 'transfer', 'learning', 'for', 'training', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'IN', 'NNS', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'NNS', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'RB', 'VBZ', 'DT', 'RBR', 'JJ', 'NN', 'TO', 'VB', 'NN', ',', 'VBG', 'DT', 'NN', 'TO', 'VB', 'NN', 'VBG', 'IN', 'NN', '.']",36
data-to-text_generation,6,23,"In order to give an original contribution to the field , in this paper we present a character - level sequence - to - sequence model with attention mechanism that results in a completely neural end - to - end architecture .","['In', 'order', 'to', 'give', 'an', 'original', 'contribution', 'to', 'the', 'field', ',', 'in', 'this', 'paper', 'we', 'present', 'a', 'character', '-', 'level', 'sequence', '-', 'to', '-', 'sequence', 'model', 'with', 'attention', 'mechanism', 'that', 'results', 'in', 'a', 'completely', 'neural', 'end', '-', 'to', '-', 'end', 'architecture', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'TO', 'DT', 'NN', ',', 'IN', 'DT', 'NN', 'PRP', 'VBD', 'DT', 'NN', ':', 'NN', 'NN', ':', 'TO', ':', 'NN', 'NN', 'IN', 'NN', 'NN', 'WDT', 'NNS', 'IN', 'DT', 'RB', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'NN', '.']",42
data-to-text_generation,6,24,"In contrast to traditional word - based ones , it does not require delexicalization , tokenization nor lowercasing ; besides , according to our experiments it never hallucinates words , nor duplicates them .","['In', 'contrast', 'to', 'traditional', 'word', '-', 'based', 'ones', ',', 'it', 'does', 'not', 'require', 'delexicalization', ',', 'tokenization', 'nor', 'lowercasing', ';', 'besides', ',', 'according', 'to', 'our', 'experiments', 'it', 'never', 'hallucinates', 'words', ',', 'nor', 'duplicates', 'them', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'TO', 'JJ', 'NN', ':', 'VBN', 'NNS', ',', 'PRP', 'VBZ', 'RB', 'VB', 'NN', ',', 'NN', 'CC', 'NN', ':', 'NNS', ',', 'VBG', 'TO', 'PRP$', 'NNS', 'PRP', 'RB', 'VBZ', 'NNS', ',', 'CC', 'VBZ', 'PRP', '.']",34
data-to-text_generation,6,25,"As we will see , such an approach achieves rather interesting performance results and produces a vocabulary - free model that is inherently more general , as it does not depend on a specific domain 's set of terms , but rather on a general alphabet .","['As', 'we', 'will', 'see', ',', 'such', 'an', 'approach', 'achieves', 'rather', 'interesting', 'performance', 'results', 'and', 'produces', 'a', 'vocabulary', '-', 'free', 'model', 'that', 'is', 'inherently', 'more', 'general', ',', 'as', 'it', 'does', 'not', 'depend', 'on', 'a', 'specific', 'domain', ""'s"", 'set', 'of', 'terms', ',', 'but', 'rather', 'on', 'a', 'general', 'alphabet', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'PRP', 'MD', 'VB', ',', 'PDT', 'DT', 'NN', 'VBZ', 'RB', 'JJ', 'NN', 'NNS', 'CC', 'VBZ', 'DT', 'JJ', ':', 'JJ', 'NN', 'WDT', 'VBZ', 'RB', 'RBR', 'JJ', ',', 'IN', 'PRP', 'VBZ', 'RB', 'VB', 'IN', 'DT', 'JJ', 'NN', 'POS', 'NN', 'IN', 'NNS', ',', 'CC', 'RB', 'IN', 'DT', 'JJ', 'NN', '.']",47
data-to-text_generation,6,27,"More specifically , our model shows two important features , with respect to the state - of - art architecture proposed by : ( i ) a character - wise copy mechanism , consisting in a soft switch between generation and copy mode , that disengages the model to learn rare and unhelpful self - correspondences , and ( ii ) a peculiar training procedure , which improves the internal representation capabilities , enhancing recall ; it consists in the exchange of encoder and decoder RNNs , ( GRUs As a further original contribution , we also introduce a new dataset , described in section 3.1 , whose particular structure allows to better highlight improvements in copying / recalling abilities with respect to character - based state - of - art approaches .","['More', 'specifically', ',', 'our', 'model', 'shows', 'two', 'important', 'features', ',', 'with', 'respect', 'to', 'the', 'state', '-', 'of', '-', 'art', 'architecture', 'proposed', 'by', ':', '(', 'i', ')', 'a', 'character', '-', 'wise', 'copy', 'mechanism', ',', 'consisting', 'in', 'a', 'soft', 'switch', 'between', 'generation', 'and', 'copy', 'mode', ',', 'that', 'disengages', 'the', 'model', 'to', 'learn', 'rare', 'and', 'unhelpful', 'self', '-', 'correspondences', ',', 'and', '(', 'ii', ')', 'a', 'peculiar', 'training', 'procedure', ',', 'which', 'improves', 'the', 'internal', 'representation', 'capabilities', ',', 'enhancing', 'recall', ';', 'it', 'consists', 'in', 'the', 'exchange', 'of', 'encoder', 'and', 'decoder', 'RNNs', ',', '(', 'GRUs', 'As', 'a', 'further', 'original', 'contribution', ',', 'we', 'also', 'introduce', 'a', 'new', 'dataset', ',', 'described', 'in', 'section', '3.1', ',', 'whose', 'particular', 'structure', 'allows', 'to', 'better', 'highlight', 'improvements', 'in', 'copying', '/', 'recalling', 'abilities', 'with', 'respect', 'to', 'character', '-', 'based', 'state', '-', 'of', '-', 'art', 'approaches', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RBR', 'RB', ',', 'PRP$', 'NN', 'VBZ', 'CD', 'JJ', 'NNS', ',', 'IN', 'NN', 'TO', 'DT', 'NN', ':', 'IN', ':', 'NN', 'NN', 'VBN', 'IN', ':', '(', 'NN', ')', 'DT', 'NN', ':', 'NN', 'NN', 'NN', ',', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NN', 'CC', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'JJ', 'CC', 'JJ', 'NN', ':', 'NNS', ',', 'CC', '(', 'NN', ')', 'DT', 'JJ', 'NN', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'NNS', ',', 'VBG', 'NN', ':', 'PRP', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'NN', 'CC', 'NN', 'NNP', ',', '(', 'NNP', 'IN', 'DT', 'JJ', 'JJ', 'NN', ',', 'PRP', 'RB', 'VBP', 'DT', 'JJ', 'NN', ',', 'VBN', 'IN', 'NN', 'CD', ',', 'WP$', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'NN', 'NNS', 'IN', 'VBG', 'JJ', 'VBG', 'NNS', 'IN', 'NN', 'TO', 'VB', ':', 'VBN', 'NN', ':', 'IN', ':', 'NN', 'NNS', '.']",133
data-to-text_generation,6,105,"We developed our system using the PyTorch framework 2 , release 0.4.1 3 .","['We', 'developed', 'our', 'system', 'using', 'the', 'PyTorch', 'framework', '2', ',', 'release', '0.4.1', '3', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['PRP', 'VBD', 'PRP$', 'NN', 'VBG', 'DT', 'NNP', 'NN', 'CD', ',', 'NN', 'CD', 'CD', '.']",14
data-to-text_generation,6,108,"We minimize the negative log - likelihood loss using teacher forcing and Adam , the latter being an optimizer that computes individual adaptive learning rates .","['We', 'minimize', 'the', 'negative', 'log', '-', 'likelihood', 'loss', 'using', 'teacher', 'forcing', 'and', 'Adam', ',', 'the', 'latter', 'being', 'an', 'optimizer', 'that', 'computes', 'individual', 'adaptive', 'learning', 'rates', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'VBG', 'CC', 'VBG', 'CC', 'NNP', ',', 'DT', 'NN', 'VBG', 'DT', 'NN', 'WDT', 'VBZ', 'JJ', 'JJ', 'NN', 'NNS', '.']",26
data-to-text_generation,6,118,Results and Discussion,"['Results', 'and', 'Discussion']","['B-n', 'O', 'O']","['NNS', 'CC', 'NNP']",3
data-to-text_generation,6,137,"A first interesting result is that our model EDA_CS always obtains higher metric values with respect to TGen on the Hotel and Restaurant datasets , and three out of five higher metrics values on the E2E dataset .","['A', 'first', 'interesting', 'result', 'is', 'that', 'our', 'model', 'EDA_CS', 'always', 'obtains', 'higher', 'metric', 'values', 'with', 'respect', 'to', 'TGen', 'on', 'the', 'Hotel', 'and', 'Restaurant', 'datasets', ',', 'and', 'three', 'out', 'of', 'five', 'higher', 'metrics', 'values', 'on', 'the', 'E2E', 'dataset', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'JJ', 'NN', 'VBZ', 'IN', 'PRP$', 'NN', 'NNP', 'RB', 'VBZ', 'JJR', 'JJ', 'NNS', 'IN', 'NN', 'TO', 'VB', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', ',', 'CC', 'CD', 'IN', 'IN', 'CD', 'JJR', 'NNS', 'NNS', 'IN', 'DT', 'NNP', 'NN', '.']",38
data-to-text_generation,6,138,"However , in the case of E2E + , TGen achieves three out of five higher metrics values .","['However', ',', 'in', 'the', 'case', 'of', 'E2E', '+', ',', 'TGen', 'achieves', 'three', 'out', 'of', 'five', 'higher', 'metrics', 'values', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'O']","['RB', ',', 'IN', 'DT', 'NN', 'IN', 'NNP', 'NNP', ',', 'NNP', 'VBZ', 'CD', 'IN', 'IN', 'CD', 'JJR', 'NN', 'NNS', '.']",19
data-to-text_generation,6,140,"A more surprising result is that the approach EDA_CS TL allows to obtain better performance with respect to training EDA_CS in the standard way on the Hotel and Restaurant datasets ( for the majority of metrics ) ; on E2E , EDA_CS TL outperforms EDA_CS only in one case ( i.e. meteor metric ) .","['A', 'more', 'surprising', 'result', 'is', 'that', 'the', 'approach', 'EDA_CS', 'TL', 'allows', 'to', 'obtain', 'better', 'performance', 'with', 'respect', 'to', 'training', 'EDA_CS', 'in', 'the', 'standard', 'way', 'on', 'the', 'Hotel', 'and', 'Restaurant', 'datasets', '(', 'for', 'the', 'majority', 'of', 'metrics', ')', ';', 'on', 'E2E', ',', 'EDA_CS', 'TL', 'outperforms', 'EDA_CS', 'only', 'in', 'one', 'case', '(', 'i.e.', 'meteor', 'metric', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'RBR', 'JJ', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NNP', 'NNP', 'VBZ', 'TO', 'VB', 'JJR', 'NN', 'IN', 'NN', 'TO', 'VBG', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '(', 'IN', 'DT', 'NN', 'IN', 'NNS', ')', ':', 'IN', 'NNP', ',', 'NNP', 'NNP', 'VBZ', 'NNP', 'RB', 'IN', 'CD', 'NN', '(', 'JJ', 'NN', 'JJ', ')', '.']",55
data-to-text_generation,6,141,"Moreover , EDA_CS TL shows a bleu increment of at least 14 % with respect to TGen 's score when compared to both Hotel and Restaurant datasets .","['Moreover', ',', 'EDA_CS', 'TL', 'shows', 'a', 'bleu', 'increment', 'of', 'at', 'least', '14', '%', 'with', 'respect', 'to', 'TGen', ""'s"", 'score', 'when', 'compared', 'to', 'both', 'Hotel', 'and', 'Restaurant', 'datasets', '.']","['O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'IN', 'JJS', 'CD', 'NN', 'IN', 'NN', 'TO', 'NNP', 'POS', 'NN', 'WRB', 'VBN', 'TO', 'DT', 'NNP', 'CC', 'NNP', 'NNS', '.']",28
data-to-text_generation,6,142,"Finally , the baseline model , EDA , is largely outperformed by all other examined methods .","['Finally', ',', 'the', 'baseline', 'model', ',', 'EDA', ',', 'is', 'largely', 'outperformed', 'by', 'all', 'other', 'examined', 'methods', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'DT', 'NN', 'NN', ',', 'NNP', ',', 'VBZ', 'RB', 'VBN', 'IN', 'DT', 'JJ', 'VBN', 'NNS', '.']",17
data-to-text_generation,2,2,Deep Graph Convolutional Encoders for Structured Data to Text Generation,"['Deep', 'Graph', 'Convolutional', 'Encoders', 'for', 'Structured', 'Data', 'to', 'Text', 'Generation']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n']","['JJ', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'TO', 'NNP', 'NNP']",10
data-to-text_generation,2,4,Most previous work on neural text generation from graph - structured data relies on standard sequence - to - sequence methods .,"['Most', 'previous', 'work', 'on', 'neural', 'text', 'generation', 'from', 'graph', '-', 'structured', 'data', 'relies', 'on', 'standard', 'sequence', '-', 'to', '-', 'sequence', 'methods', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJS', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'NN', 'IN', 'JJ', ':', 'VBN', 'NNS', 'NNS', 'IN', 'JJ', 'NN', ':', 'TO', ':', 'NN', 'NNS', '.']",22
data-to-text_generation,2,22,Most previous work casts the graph structured data to text generation task as a sequenceto - sequence problem .,"['Most', 'previous', 'work', 'casts', 'the', 'graph', 'structured', 'data', 'to', 'text', 'generation', 'task', 'as', 'a', 'sequenceto', '-', 'sequence', 'problem', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJS', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'VBD', 'NNS', 'TO', 'VB', 'NN', 'NN', 'IN', 'DT', 'NN', ':', 'NN', 'NN', '.']",19
data-to-text_generation,2,131,Results,['Results'],['B-n'],['NNS'],1
data-to-text_generation,2,132,WebNLG task,"['WebNLG', 'task']","['B-n', 'I-n']","['NNP', 'NN']",2
data-to-text_generation,2,134,"In this setting , the model with GCN encoder outperforms a strong baseline that employs the LSTM encoder , with .009 BLEU points .","['In', 'this', 'setting', ',', 'the', 'model', 'with', 'GCN', 'encoder', 'outperforms', 'a', 'strong', 'baseline', 'that', 'employs', 'the', 'LSTM', 'encoder', ',', 'with', '.009', 'BLEU', 'points', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-n', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'DT', 'NN', 'IN', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'NN', ',', 'IN', 'NNP', 'NNP', 'NNS', '.']",24
data-to-text_generation,2,135,The GCN model is also more stable than the baseline with a standard deviation of .004 vs . 010 .,"['The', 'GCN', 'model', 'is', 'also', 'more', 'stable', 'than', 'the', 'baseline', 'with', 'a', 'standard', 'deviation', 'of', '.004', 'vs', '.', '010', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NN', 'VBZ', 'RB', 'RBR', 'JJ', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NN', '.', 'CD', '.']",20
data-to-text_generation,2,137,The GCN EC model outperforms PKUWRITER that uses an ensemble of 7 models and a further reinforcement learning step by .047 BLEU points ; and MELBOURNE by .014 BLEU points .,"['The', 'GCN', 'EC', 'model', 'outperforms', 'PKUWRITER', 'that', 'uses', 'an', 'ensemble', 'of', '7', 'models', 'and', 'a', 'further', 'reinforcement', 'learning', 'step', 'by', '.047', 'BLEU', 'points', ';', 'and', 'MELBOURNE', 'by', '.014', 'BLEU', 'points', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-n', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNP', 'NNP', 'NN', 'NNS', 'VBP', 'IN', 'VBZ', 'DT', 'NN', 'IN', 'CD', 'NNS', 'CC', 'DT', 'JJ', 'NN', 'VBG', 'NN', 'IN', 'NNP', 'NNP', 'NNS', ':', 'CC', 'NNP', 'IN', 'NNP', 'NNP', 'NNS', '.']",31
data-to-text_generation,2,139,SR11 Deep task,"['SR11', 'Deep', 'task']","['B-n', 'I-n', 'I-n']","['NNP', 'NNP', 'NN']",3
data-to-text_generation,2,150,"We also compare the neural models with upper bound results on the same dataset by the pipeline model of The STUMBA - D and TBDIL model obtains respectively .794 and . 805 BLUE , outperforming the GCN - based model .","['We', 'also', 'compare', 'the', 'neural', 'models', 'with', 'upper', 'bound', 'results', 'on', 'the', 'same', 'dataset', 'by', 'the', 'pipeline', 'model', 'of', 'The', 'STUMBA', '-', 'D', 'and', 'TBDIL', 'model', 'obtains', 'respectively', '.794', 'and', '.', '805', 'BLUE', ',', 'outperforming', 'the', 'GCN', '-', 'based', 'model', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNP', ':', 'NN', 'CC', 'NNP', 'NN', 'VBZ', 'RB', 'JJ', 'CC', '.', 'CD', 'NNP', ',', 'VBG', 'DT', 'NNP', ':', 'VBN', 'NN', '.']",41
data-to-text_generation,2,163,The first thing we notice is the importance of skip connections between GCN layers .,"['The', 'first', 'thing', 'we', 'notice', 'is', 'the', 'importance', 'of', 'skip', 'connections', 'between', 'GCN', 'layers', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'PRP', 'VBP', 'VBZ', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'NNP', 'NNS', '.']",15
data-to-text_generation,2,164,Residual and dense connections lead to similar results .,"['Residual', 'and', 'dense', 'connections', 'lead', 'to', 'similar', 'results', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['JJ', 'CC', 'JJ', 'NNS', 'VBP', 'TO', 'JJ', 'NNS', '.']",9
data-to-text_generation,2,165,"Dense connections ( Table 4 ( SIZE ) ) produce models bigger , but slightly less accurate , than residual connections .","['Dense', 'connections', '(', 'Table', '4', '(', 'SIZE', ')', ')', 'produce', 'models', 'bigger', ',', 'but', 'slightly', 'less', 'accurate', ',', 'than', 'residual', 'connections', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'O']","['NNP', 'NNS', '(', 'JJ', 'CD', '(', 'NNP', ')', ')', 'VBP', 'NNS', 'JJR', ',', 'CC', 'RB', 'JJR', 'NN', ',', 'IN', 'JJ', 'NNS', '.']",22
data-to-text_generation,3,2,Pragmatically Informative Text Generation,"['Pragmatically', 'Informative', 'Text', 'Generation']","['O', 'O', 'B-n', 'I-n']","['RB', 'NNP', 'NNP', 'NNP']",4
data-to-text_generation,3,10,Computational approaches to pragmatics cast language generation and interpretation as gametheoretic or Bayesian inference procedures .,"['Computational', 'approaches', 'to', 'pragmatics', 'cast', 'language', 'generation', 'and', 'interpretation', 'as', 'gametheoretic', 'or', 'Bayesian', 'inference', 'procedures', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NNS', 'TO', 'NNS', 'JJ', 'NN', 'NN', 'CC', 'NN', 'IN', 'JJ', 'CC', 'JJ', 'NN', 'NNS', '.']",16
data-to-text_generation,3,13,"Our work builds on a line of learned Rational Speech Acts ( RSA ) models , in which generated strings are selected to optimize the behav - Human - written A cheap coffee shop in riverside with a 5 out of 5 customer rating is Fitzbillies .","['Our', 'work', 'builds', 'on', 'a', 'line', 'of', 'learned', 'Rational', 'Speech', 'Acts', '(', 'RSA', ')', 'models', ',', 'in', 'which', 'generated', 'strings', 'are', 'selected', 'to', 'optimize', 'the', 'behav', '-', 'Human', '-', 'written', 'A', 'cheap', 'coffee', 'shop', 'in', 'riverside', 'with', 'a', '5', 'out', 'of', '5', 'customer', 'rating', 'is', 'Fitzbillies', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'NNS', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', ',', 'IN', 'WDT', 'JJ', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'NN', ':', 'NNP', ':', 'VBN', 'NNP', 'JJ', 'NN', 'NN', 'IN', 'NN', 'IN', 'DT', 'CD', 'IN', 'IN', 'CD', 'NN', 'NN', 'VBZ', 'NNP', '.']",47
data-to-text_generation,3,26,"The canonical presentation of the RSA framework ( Frank and Goodman , 2012 ) is grounded in reference resolution : models of speakers attempt to describe referents in the presence of distractors , and models of listeners attempt to resolve descriptors to referents .","['The', 'canonical', 'presentation', 'of', 'the', 'RSA', 'framework', '(', 'Frank', 'and', 'Goodman', ',', '2012', ')', 'is', 'grounded', 'in', 'reference', 'resolution', ':', 'models', 'of', 'speakers', 'attempt', 'to', 'describe', 'referents', 'in', 'the', 'presence', 'of', 'distractors', ',', 'and', 'models', 'of', 'listeners', 'attempt', 'to', 'resolve', 'descriptors', 'to', 'referents', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-p', 'B-n', 'B-p', 'I-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', '(', 'NNP', 'CC', 'NNP', ',', 'CD', ')', 'VBZ', 'VBN', 'IN', 'NN', 'NN', ':', 'NNS', 'IN', 'NNS', 'VBP', 'TO', 'VB', 'NNS', 'IN', 'DT', 'NN', 'IN', 'NNS', ',', 'CC', 'NNS', 'IN', 'NNS', 'VBP', 'TO', 'VB', 'NNS', 'TO', 'NNS', '.']",44
data-to-text_generation,3,89,Abstractive Summarization,"['Abstractive', 'Summarization']","['B-n', 'I-n']","['JJ', 'NN']",2
data-to-text_generation,3,94,"The pragmatic methods obtain improvements of 0.2-0.5 in ROUGE scores and 0.2-1.8 METEOR over the base S 0 model , with the distractor - based approach SD 1 outperforming the reconstructorbased approach S R 1 .","['The', 'pragmatic', 'methods', 'obtain', 'improvements', 'of', '0.2-0.5', 'in', 'ROUGE', 'scores', 'and', '0.2-1.8', 'METEOR', 'over', 'the', 'base', 'S', '0', 'model', ',', 'with', 'the', 'distractor', '-', 'based', 'approach', 'SD', '1', 'outperforming', 'the', 'reconstructorbased', 'approach', 'S', 'R', '1', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'JJ', 'NNS', 'VB', 'NNS', 'IN', 'NN', 'IN', 'NNP', 'NNS', 'CC', 'JJ', 'NNP', 'IN', 'DT', 'NN', 'NNP', 'CD', 'NN', ',', 'IN', 'DT', 'NN', ':', 'VBN', 'NN', 'NNP', 'CD', 'VBG', 'DT', 'JJ', 'NN', 'NNP', 'NNP', 'CD', '.']",36
data-to-text_generation,3,95,"SD 1 is strong across all metrics , obtaining results competitive to the best previous abstractive systems . ( b ) Coverage ratios by attribute type ( columns ) for the base model S0 , and for the pragmatic system SD 1 when constructing the distractor by masking the specified attribute ( rows ) .","['SD', '1', 'is', 'strong', 'across', 'all', 'metrics', ',', 'obtaining', 'results', 'competitive', 'to', 'the', 'best', 'previous', 'abstractive', 'systems', '.', '(', 'b', ')', 'Coverage', 'ratios', 'by', 'attribute', 'type', '(', 'columns', ')', 'for', 'the', 'base', 'model', 'S0', ',', 'and', 'for', 'the', 'pragmatic', 'system', 'SD', '1', 'when', 'constructing', 'the', 'distractor', 'by', 'masking', 'the', 'specified', 'attribute', '(', 'rows', ')', '.']","['B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'CD', 'VBZ', 'JJ', 'IN', 'DT', 'NNS', ',', 'VBG', 'NNS', 'JJ', 'TO', 'DT', 'JJS', 'JJ', 'JJ', 'NNS', '.', '(', 'NN', ')', 'NN', 'NNS', 'IN', 'NN', 'NN', '(', 'NN', ')', 'IN', 'DT', 'NN', 'NN', 'NNP', ',', 'CC', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'CD', 'WRB', 'VBG', 'DT', 'NN', 'IN', 'VBG', 'DT', 'VBN', 'NN', '(', 'NNS', ')', '.']",55
data-to-text_generation,0,2,A Hierarchical Model for Data - to - Text Generation,"['A', 'Hierarchical', 'Model', 'for', 'Data', '-', 'to', '-', 'Text', 'Generation']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['DT', 'NNP', 'NNP', 'IN', 'NNP', ':', 'TO', ':', 'NN', 'NN']",10
data-to-text_generation,0,4,"Transcribing structured data into natural language descriptions has emerged as a challenging task , referred to as "" data - to - text "" .","['Transcribing', 'structured', 'data', 'into', 'natural', 'language', 'descriptions', 'has', 'emerged', 'as', 'a', 'challenging', 'task', ',', 'referred', 'to', 'as', '""', 'data', '-', 'to', '-', 'text', '""', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['VBG', 'VBN', 'NNS', 'IN', 'JJ', 'NN', 'NNS', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', ',', 'VBD', 'TO', 'IN', 'NNP', 'VBZ', ':', 'TO', ':', 'NN', 'NN', '.']",25
data-to-text_generation,0,36,"To address these shortcomings , we propose a new structured - data encoder assuming that structures should be hierarchically captured .","['To', 'address', 'these', 'shortcomings', ',', 'we', 'propose', 'a', 'new', 'structured', '-', 'data', 'encoder', 'assuming', 'that', 'structures', 'should', 'be', 'hierarchically', 'captured', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NNS', ',', 'PRP', 'VBP', 'DT', 'JJ', 'JJ', ':', 'NNS', 'VBP', 'VBG', 'IN', 'NNS', 'MD', 'VB', 'RB', 'VBN', '.']",21
data-to-text_generation,0,37,"Our contribution focuses on the encoding of the data - structure , thus the decoder is chosen to be a classical module as used in .","['Our', 'contribution', 'focuses', 'on', 'the', 'encoding', 'of', 'the', 'data', '-', 'structure', ',', 'thus', 'the', 'decoder', 'is', 'chosen', 'to', 'be', 'a', 'classical', 'module', 'as', 'used', 'in', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', ':', 'NN', ',', 'RB', 'DT', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'VBN', 'IN', '.']",26
data-to-text_generation,0,39,"- We model the general structure of the data using a two - level architecture , first encoding all entities on the basis of their elements , then encoding the data structure on the basis of its entities ; - We introduce the Transformer encoder in data - to - text models to ensure robust encoding of each element / entities in comparison to all others , no matter their initial positioning ; - We integrate a hierarchical attention mechanism to compute the hierarchical context fed into the decoder .","['-', 'We', 'model', 'the', 'general', 'structure', 'of', 'the', 'data', 'using', 'a', 'two', '-', 'level', 'architecture', ',', 'first', 'encoding', 'all', 'entities', 'on', 'the', 'basis', 'of', 'their', 'elements', ',', 'then', 'encoding', 'the', 'data', 'structure', 'on', 'the', 'basis', 'of', 'its', 'entities', ';', '-', 'We', 'introduce', 'the', 'Transformer', 'encoder', 'in', 'data', '-', 'to', '-', 'text', 'models', 'to', 'ensure', 'robust', 'encoding', 'of', 'each', 'element', '/', 'entities', 'in', 'comparison', 'to', 'all', 'others', ',', 'no', 'matter', 'their', 'initial', 'positioning', ';', '-', 'We', 'integrate', 'a', 'hierarchical', 'attention', 'mechanism', 'to', 'compute', 'the', 'hierarchical', 'context', 'fed', 'into', 'the', 'decoder', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'I-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'O']","[':', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'VBG', 'DT', 'CD', ':', 'NN', 'NN', ',', 'JJ', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'NNS', ',', 'RB', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'NNS', ':', ':', 'PRP', 'VBP', 'DT', 'NNP', 'NN', 'IN', 'NNS', ':', 'TO', ':', 'NN', 'NNS', 'TO', 'VB', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NNS', 'IN', 'NN', 'TO', 'DT', 'NNS', ',', 'DT', 'NN', 'PRP$', 'JJ', 'NN', ':', ':', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'DT', 'NN', '.']",90
data-to-text_generation,0,188,Baselines,['Baselines'],['B-n'],['NNS'],1
data-to-text_generation,0,191,Wiseman is a standard encoder - decoder system with copy mechanism .,"['Wiseman', 'is', 'a', 'standard', 'encoder', '-', 'decoder', 'system', 'with', 'copy', 'mechanism', '.']","['B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'NN', 'NN', 'IN', 'NN', 'NN', '.']",12
data-to-text_generation,0,192,"Li is a standard encoder - decoder with a delayed copy mechanism : text is first generated with placeholders , which are replaced by salient records extracted from the table by a pointer network .","['Li', 'is', 'a', 'standard', 'encoder', '-', 'decoder', 'with', 'a', 'delayed', 'copy', 'mechanism', ':', 'text', 'is', 'first', 'generated', 'with', 'placeholders', ',', 'which', 'are', 'replaced', 'by', 'salient', 'records', 'extracted', 'from', 'the', 'table', 'by', 'a', 'pointer', 'network', '.']","['B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'DT', 'JJ', 'NN', ':', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', ':', 'NN', 'VBZ', 'RB', 'VBN', 'IN', 'NNS', ',', 'WDT', 'VBP', 'VBN', 'IN', 'NN', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.']",35
data-to-text_generation,0,193,"Puduppully - plan acts in two steps : a first standard encoder - decoder generates a plan , i.e. a list of salient records from the table ; a second standard encoder - decoder generates text from this plan .","['Puduppully', '-', 'plan', 'acts', 'in', 'two', 'steps', ':', 'a', 'first', 'standard', 'encoder', '-', 'decoder', 'generates', 'a', 'plan', ',', 'i.e.', 'a', 'list', 'of', 'salient', 'records', 'from', 'the', 'table', ';', 'a', 'second', 'standard', 'encoder', '-', 'decoder', 'generates', 'text', 'from', 'this', 'plan', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'O']","['RB', ':', 'NN', 'VBZ', 'IN', 'CD', 'NNS', ':', 'DT', 'JJ', 'NN', 'NN', ':', 'NN', 'VBZ', 'DT', 'NN', ',', 'FW', 'DT', 'NN', 'IN', 'NN', 'NNS', 'IN', 'DT', 'NN', ':', 'DT', 'JJ', 'NN', 'NN', ':', 'NN', 'NNS', 'VBP', 'IN', 'DT', 'NN', '.']",40
data-to-text_generation,0,194,Puduppully - updt .,"['Puduppully', '-', 'updt', '.']","['B-n', 'I-n', 'I-n', 'O']","['RB', ':', 'NN', '.']",4
data-to-text_generation,0,195,"It consists in a standard encoder - decoder , with an added module aimed at updating record representations during the generation process .","['It', 'consists', 'in', 'a', 'standard', 'encoder', '-', 'decoder', ',', 'with', 'an', 'added', 'module', 'aimed', 'at', 'updating', 'record', 'representations', 'during', 'the', 'generation', 'process', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBZ', 'IN', 'DT', 'JJ', 'NN', ':', 'NN', ',', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'VBG', 'NN', 'NNS', 'IN', 'DT', 'NN', 'NN', '.']",23
data-to-text_generation,0,196,"At each decoding step , a gated recurrent network computes which records should be updated and what should be their new representation .","['At', 'each', 'decoding', 'step', ',', 'a', 'gated', 'recurrent', 'network', 'computes', 'which', 'records', 'should', 'be', 'updated', 'and', 'what', 'should', 'be', 'their', 'new', 'representation', '.']","['B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'VBG', 'NN', ',', 'DT', 'JJ', 'NN', 'NN', 'NNS', 'WDT', 'NNS', 'MD', 'VB', 'VBN', 'CC', 'WP', 'MD', 'VB', 'PRP$', 'JJ', 'NN', '.']",23
data-to-text_generation,0,208,The size of the record value embeddings and hidden layers of the Transformer encoders are both set to 300 .,"['The', 'size', 'of', 'the', 'record', 'value', 'embeddings', 'and', 'hidden', 'layers', 'of', 'the', 'Transformer', 'encoders', 'are', 'both', 'set', 'to', '300', '.']","['O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'IN', 'DT', 'NN', 'NN', 'NNS', 'CC', 'JJ', 'NNS', 'IN', 'DT', 'NNP', 'NNS', 'VBP', 'DT', 'VBN', 'TO', 'CD', '.']",20
data-to-text_generation,0,209,We use dropout at rate 0.5 .,"['We', 'use', 'dropout', 'at', 'rate', '0.5', '.']","['O', 'B-p', 'B-n', 'B-p', 'B-n', 'B-n', 'O']","['PRP', 'VBP', 'RB', 'IN', 'NN', 'CD', '.']",7
data-to-text_generation,0,210,The models are trained with a batch size of 64 .,"['The', 'models', 'are', 'trained', 'with', 'a', 'batch', 'size', 'of', '64', '.']","['O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['DT', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'NN', 'NN', 'IN', 'CD', '.']",11
data-to-text_generation,0,211,"We follow the training procedure in and train the model for a fixed number of 25 K updates , and average the weights of the last 5 checkpoints ( at every 1 K updates ) to ensure more stability across runs .","['We', 'follow', 'the', 'training', 'procedure', 'in', 'and', 'train', 'the', 'model', 'for', 'a', 'fixed', 'number', 'of', '25', 'K', 'updates', ',', 'and', 'average', 'the', 'weights', 'of', 'the', 'last', '5', 'checkpoints', '(', 'at', 'every', '1', 'K', 'updates', ')', 'to', 'ensure', 'more', 'stability', 'across', 'runs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-p', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP', 'VBP', 'DT', 'NN', 'NN', 'IN', 'CC', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NNP', 'NNS', ',', 'CC', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'CD', 'NNS', '(', 'IN', 'DT', 'CD', 'NNP', 'NNS', ')', 'TO', 'VB', 'JJR', 'NN', 'IN', 'NNS', '.']",42
data-to-text_generation,0,212,"All models were trained with the Adam optimizer ; the initial learning rate is 0.001 , and is reduced by half every 10 K steps .","['All', 'models', 'were', 'trained', 'with', 'the', 'Adam', 'optimizer', ';', 'the', 'initial', 'learning', 'rate', 'is', '0.001', ',', 'and', 'is', 'reduced', 'by', 'half', 'every', '10', 'K', 'steps', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NNS', 'VBD', 'VBN', 'IN', 'DT', 'NNP', 'NN', ':', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'CD', ',', 'CC', 'VBZ', 'VBN', 'IN', 'NN', 'DT', 'CD', 'NNP', 'NNS', '.']",26
data-to-text_generation,0,213,We used beam search with beam size of 5 during inference .,"['We', 'used', 'beam', 'search', 'with', 'beam', 'size', 'of', '5', 'during', 'inference', '.']","['O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'O']","['PRP', 'VBD', 'NN', 'NN', 'IN', 'NN', 'NN', 'IN', 'CD', 'IN', 'NN', '.']",12
data-to-text_generation,0,214,All the models are implemented in Open NMT - py .,"['All', 'the', 'models', 'are', 'implemented', 'in', 'Open', 'NMT', '-', 'py', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PDT', 'DT', 'NNS', 'VBP', 'VBN', 'IN', 'NNP', 'NNP', ':', 'NN', '.']",11
data-to-text_generation,0,215,All code is available at https://github.com/KaijuML/data-to-text-hierarchical,"['All', 'code', 'is', 'available', 'at', 'https://github.com/KaijuML/data-to-text-hierarchical']","['O', 'O', 'O', 'O', 'O', 'B-n']","['DT', 'NN', 'VBZ', 'JJ', 'IN', 'JJ']",6
data-to-text_generation,0,226,"As shown in , we can see the lower results obtained by the Flat scenario compared to the other scenarios ( e.g. BLEU 16.7 vs. 17.5 for resp .","['As', 'shown', 'in', ',', 'we', 'can', 'see', 'the', 'lower', 'results', 'obtained', 'by', 'the', 'Flat', 'scenario', 'compared', 'to', 'the', 'other', 'scenarios', '(', 'e.g.', 'BLEU', '16.7', 'vs.', '17.5', 'for', 'resp', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'PRP', 'MD', 'VB', 'DT', 'JJR', 'NNS', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'VBN', 'TO', 'DT', 'JJ', 'NNS', '(', 'JJ', 'NNP', 'CD', 'FW', 'CD', 'IN', 'NN', '.']",29
data-to-text_generation,0,229,"Second , the comparison between scenario Hierarchical - kv and Hierarchical -k shows that omitting entirely the influence of the record values in the attention mechanism is more effective : this last variant performs slightly better in all metrics excepted CS - R% , reinforcing our intuition that focusing on the structure modeling is an important part of data encoding as well as confirming the intuition explained in Section 3.3 : once an entity is selected , facts about this entity are relevant based on their key , not value which might add noise .","['Second', ',', 'the', 'comparison', 'between', 'scenario', 'Hierarchical', '-', 'kv', 'and', 'Hierarchical', '-k', 'shows', 'that', 'omitting', 'entirely', 'the', 'influence', 'of', 'the', 'record', 'values', 'in', 'the', 'attention', 'mechanism', 'is', 'more', 'effective', ':', 'this', 'last', 'variant', 'performs', 'slightly', 'better', 'in', 'all', 'metrics', 'excepted', 'CS', '-', 'R%', ',', 'reinforcing', 'our', 'intuition', 'that', 'focusing', 'on', 'the', 'structure', 'modeling', 'is', 'an', 'important', 'part', 'of', 'data', 'encoding', 'as', 'well', 'as', 'confirming', 'the', 'intuition', 'explained', 'in', 'Section', '3.3', ':', 'once', 'an', 'entity', 'is', 'selected', ',', 'facts', 'about', 'this', 'entity', 'are', 'relevant', 'based', 'on', 'their', 'key', ',', 'not', 'value', 'which', 'might', 'add', 'noise', '.']","['O', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['JJ', ',', 'DT', 'NN', 'IN', 'NN', 'NNP', ':', 'NN', 'CC', 'NNP', 'NN', 'VBZ', 'IN', 'VBG', 'RB', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RBR', 'JJ', ':', 'DT', 'JJ', 'JJ', 'NNS', 'RB', 'RBR', 'IN', 'DT', 'NNS', 'VBD', 'NNP', ':', 'NNP', ',', 'VBG', 'PRP$', 'NN', 'IN', 'VBG', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'NNS', 'VBG', 'RB', 'RB', 'IN', 'VBG', 'DT', 'NN', 'VBD', 'IN', 'NN', 'CD', ':', 'RB', 'DT', 'NN', 'VBZ', 'VBN', ',', 'VBZ', 'IN', 'DT', 'NN', 'VBP', 'JJ', 'VBN', 'IN', 'PRP$', 'NN', ',', 'RB', 'NN', 'WDT', 'MD', 'VB', 'NN', '.']",95
data-to-text_generation,0,244,"Our hierarchical models achieve significantly better scores on all metrics when compared to the flat architecture Wiseman , reinforcing the crucial role of structure in data semantics and saliency .","['Our', 'hierarchical', 'models', 'achieve', 'significantly', 'better', 'scores', 'on', 'all', 'metrics', 'when', 'compared', 'to', 'the', 'flat', 'architecture', 'Wiseman', ',', 'reinforcing', 'the', 'crucial', 'role', 'of', 'structure', 'in', 'data', 'semantics', 'and', 'saliency', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'NNS', 'VBP', 'RB', 'JJR', 'NNS', 'IN', 'DT', 'NNS', 'WRB', 'VBN', 'TO', 'DT', 'JJ', 'NN', 'NNP', ',', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'NN', 'IN', 'NNS', 'NNS', 'CC', 'NN', '.']",30
data-to-text_generation,0,251,Results shows that our Flat scenario obtains a significant higher BLEU score ( 16.7 vs. 14.5 ) and generates fluent descriptions with accurate mentions ( RG - P % ) thatare also included in the gold descriptions ( CS - R% ) .,"['Results', 'shows', 'that', 'our', 'Flat', 'scenario', 'obtains', 'a', 'significant', 'higher', 'BLEU', 'score', '(', '16.7', 'vs.', '14.5', ')', 'and', 'generates', 'fluent', 'descriptions', 'with', 'accurate', 'mentions', '(', 'RG', '-', 'P', '%', ')', 'thatare', 'also', 'included', 'in', 'the', 'gold', 'descriptions', '(', 'CS', '-', 'R%', ')', '.']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O']","['NNS', 'VBZ', 'IN', 'PRP$', 'NNP', 'NN', 'VBZ', 'DT', 'JJ', 'JJR', 'NNP', 'NN', '(', 'CD', 'FW', 'CD', ')', 'CC', 'VBZ', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', '(', 'NNP', ':', 'NNP', 'NN', ')', 'NN', 'RB', 'VBD', 'IN', 'DT', 'NN', 'NNS', '(', 'NNP', ':', 'NN', ')', '.']",43
data-to-text_generation,0,253,"Our hierarchical models outperform the two - step decoders of Li and Puduppully - plan on both BLEU and all qualitative metrics , showing that capturing structure in the encoding process is more effective that predicting a structure in the decoder ( i.e. , planning or templating ) .","['Our', 'hierarchical', 'models', 'outperform', 'the', 'two', '-', 'step', 'decoders', 'of', 'Li', 'and', 'Puduppully', '-', 'plan', 'on', 'both', 'BLEU', 'and', 'all', 'qualitative', 'metrics', ',', 'showing', 'that', 'capturing', 'structure', 'in', 'the', 'encoding', 'process', 'is', 'more', 'effective', 'that', 'predicting', 'a', 'structure', 'in', 'the', 'decoder', '(', 'i.e.', ',', 'planning', 'or', 'templating', ')', '.']","['O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP$', 'JJ', 'NNS', 'IN', 'DT', 'CD', ':', 'NN', 'NNS', 'IN', 'NNP', 'CC', 'NNP', ':', 'NN', 'IN', 'DT', 'NNP', 'CC', 'DT', 'JJ', 'NNS', ',', 'VBG', 'IN', 'VBG', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'RBR', 'JJ', 'IN', 'VBG', 'DT', 'NN', 'IN', 'DT', 'NN', '(', 'FW', ',', 'VBG', 'CC', 'VBG', ')', '.']",49
hypernym_discovery,8,2,Apollo at SemEval-2018 Task 9 : Detecting Hypernymy Relations Using Syntactic Dependencies,"['Apollo', 'at', 'SemEval-2018', 'Task', '9', ':', 'Detecting', 'Hypernymy', 'Relations', 'Using', 'Syntactic', 'Dependencies']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['NNP', 'IN', 'NNP', 'NNP', 'CD', ':', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNS']",12
hypernym_discovery,8,8,This paper presents the Apollo team 's system for hypernym discovery which participated in task 9 of Semeval 2018 based on unsupervised machine learning .,"['This', 'paper', 'presents', 'the', 'Apollo', 'team', ""'s"", 'system', 'for', 'hypernym', 'discovery', 'which', 'participated', 'in', 'task', '9', 'of', 'Semeval', '2018', 'based', 'on', 'unsupervised', 'machine', 'learning', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NNP', 'NN', 'POS', 'NN', 'IN', 'NN', 'NN', 'WDT', 'VBD', 'IN', 'NN', 'CD', 'IN', 'NNP', 'CD', 'VBN', 'IN', 'JJ', 'NN', 'NN', '.']",25
hypernym_discovery,8,9,It is a rule - based system that exploits syntactic dependency paths that generalize Hearst - style lexical patterns .,"['It', 'is', 'a', 'rule', '-', 'based', 'system', 'that', 'exploits', 'syntactic', 'dependency', 'paths', 'that', 'generalize', 'Hearst', '-', 'style', 'lexical', 'patterns', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', 'WDT', 'VBZ', 'JJ', 'NN', 'NNS', 'WDT', 'VBP', 'NNP', ':', 'NN', 'JJ', 'NNS', '.']",20
hypernym_discovery,8,60,Results,['Results'],['B-n'],['NNS'],1
hypernym_discovery,8,63,"While some relations have not been very fruitful ( such as X "" obj "" Y , for insance ) , others , instead , have been very productive , generating tens of thousands relations .","['While', 'some', 'relations', 'have', 'not', 'been', 'very', 'fruitful', '(', 'such', 'as', 'X', '""', 'obj', '""', 'Y', ',', 'for', 'insance', ')', ',', 'others', ',', 'instead', ',', 'have', 'been', 'very', 'productive', ',', 'generating', 'tens', 'of', 'thousands', 'relations', '.']","['O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'NNS', 'VBP', 'RB', 'VBN', 'RB', 'JJ', '(', 'JJ', 'IN', 'NNP', 'NNP', 'MD', 'VB', 'NNP', ',', 'IN', 'NN', ')', ',', 'NNS', ',', 'RB', ',', 'VBP', 'VBN', 'RB', 'JJ', ',', 'VBG', 'NNS', 'IN', 'NNS', 'NNS', '.']",36
hypernym_discovery,8,64,"The project 's results show that we have managed to accomplish the main objective of this project , to outperform the random strategy .","['The', 'project', ""'s"", 'results', 'show', 'that', 'we', 'have', 'managed', 'to', 'accomplish', 'the', 'main', 'objective', 'of', 'this', 'project', ',', 'to', 'outperform', 'the', 'random', 'strategy', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'POS', 'NNS', 'VBP', 'IN', 'PRP', 'VBP', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', ',', 'TO', 'VB', 'DT', 'NN', 'NN', '.']",24
hypernym_discovery,8,65,"The lower scores have been obtained for multiword expressions , for which we plan to add dedicated modules .","['The', 'lower', 'scores', 'have', 'been', 'obtained', 'for', 'multiword', 'expressions', ',', 'for', 'which', 'we', 'plan', 'to', 'add', 'dedicated', 'modules', '.']","['O', 'B-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJR', 'NNS', 'VBP', 'VBN', 'VBN', 'IN', 'NN', 'NNS', ',', 'IN', 'WDT', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNS', '.']",19
hypernym_discovery,1,2,SJTU- NLP at SemEval-2018 Task 9 : Neural Hypernym Discovery with Term Embeddings,"['SJTU-', 'NLP', 'at', 'SemEval-2018', 'Task', '9', ':', 'Neural', 'Hypernym', 'Discovery', 'with', 'Term', 'Embeddings']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['JJ', 'NNP', 'IN', 'NNP', 'NNP', 'CD', ':', 'JJ', 'NNP', 'NNP', 'IN', 'NNP', 'NNS']",13
hypernym_discovery,1,4,"This paper describes a hypernym discovery system for our participation in the SemEval - 2018 Task 9 , which aims to discover the best ( set of ) candidate hypernyms for input concepts or entities , given the search space of a pre-defined vocabulary .","['This', 'paper', 'describes', 'a', 'hypernym', 'discovery', 'system', 'for', 'our', 'participation', 'in', 'the', 'SemEval', '-', '2018', 'Task', '9', ',', 'which', 'aims', 'to', 'discover', 'the', 'best', '(', 'set', 'of', ')', 'candidate', 'hypernyms', 'for', 'input', 'concepts', 'or', 'entities', ',', 'given', 'the', 'search', 'space', 'of', 'a', 'pre-defined', 'vocabulary', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'NN', 'IN', 'PRP$', 'NN', 'IN', 'DT', 'NNP', ':', 'CD', 'NNP', 'CD', ',', 'WDT', 'VBZ', 'TO', 'VB', 'DT', 'JJS', '(', 'NN', 'IN', ')', 'NN', 'NN', 'IN', 'NN', 'NNS', 'CC', 'NNS', ',', 'VBN', 'DT', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']",45
hypernym_discovery,1,14,"A relevant well - known scenario is hypernym detection , which is a binary task to decide whether a hypernymic relationship holds between a pair of words or not .","['A', 'relevant', 'well', '-', 'known', 'scenario', 'is', 'hypernym', 'detection', ',', 'which', 'is', 'a', 'binary', 'task', 'to', 'decide', 'whether', 'a', 'hypernymic', 'relationship', 'holds', 'between', 'a', 'pair', 'of', 'words', 'or', 'not', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NN', ':', 'VBN', 'NN', 'VBZ', 'JJ', 'NN', ',', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'NNS', 'CC', 'RB', '.']",30
hypernym_discovery,1,23,"In this work , we introduce a neural network architecture for the concerned task and empirically study various neural networks to model the distributed representations for words and phrases .","['In', 'this', 'work', ',', 'we', 'introduce', 'a', 'neural', 'network', 'architecture', 'for', 'the', 'concerned', 'task', 'and', 'empirically', 'study', 'various', 'neural', 'networks', 'to', 'model', 'the', 'distributed', 'representations', 'for', 'words', 'and', 'phrases', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'RB', 'VBP', 'JJ', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NNS', 'CC', 'NNS', '.']",30
hypernym_discovery,1,24,"In our system , we leverage an unambiguous vector representation via term embedding , and we take advantage of deep neural networks to discover the hypernym relationships between terms .","['In', 'our', 'system', ',', 'we', 'leverage', 'an', 'unambiguous', 'vector', 'representation', 'via', 'term', 'embedding', ',', 'and', 'we', 'take', 'advantage', 'of', 'deep', 'neural', 'networks', 'to', 'discover', 'the', 'hypernym', 'relationships', 'between', 'terms', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'PRP$', 'NN', ',', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'NN', ',', 'CC', 'PRP', 'VBP', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NNS', '.']",30
hypernym_discovery,1,83,Our model was implemented using the Theano 1 .,"['Our', 'model', 'was', 'implemented', 'using', 'the', 'Theano', '1', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'O', 'O']","['PRP$', 'NN', 'VBD', 'VBN', 'VBG', 'DT', 'NNP', 'CD', '.']",9
hypernym_discovery,1,84,The diagonal variant of Ada - Grad is used for neural network training .,"['The', 'diagonal', 'variant', 'of', 'Ada', '-', 'Grad', 'is', 'used', 'for', 'neural', 'network', 'training', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'NNP', ':', 'NN', 'VBZ', 'VBN', 'IN', 'JJ', 'NN', 'NN', '.']",14
hypernym_discovery,1,85,We tune the hyper - parameters with the following range of values : learning rate ?,"['We', 'tune', 'the', 'hyper', '-', 'parameters', 'with', 'the', 'following', 'range', 'of', 'values', ':', 'learning', 'rate', '?']","['O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O']","['PRP', 'VBP', 'DT', 'JJR', ':', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNS', ':', 'VBG', 'NN', '.']",16
hypernym_discovery,1,86,"{ 1 e ? 3 , 1 e ? 2 } , dropout probability ? { 0.1 , 0.2 } , CNN filter width ? { 2 , 3 , 4 }.","['{', '1', 'e', '?', '3', ',', '1', 'e', '?', '2', '}', ',', 'dropout', 'probability', '?', '{', '0.1', ',', '0.2', '}', ',', 'CNN', 'filter', 'width', '?', '{', '2', ',', '3', ',', '4', '}.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['(', 'CD', 'NN', '.', 'CD', ',', 'CD', 'NN', '.', 'CD', ')', ',', 'RB', 'NN', '.', '(', 'CD', ',', 'CD', ')', ',', 'NNP', 'NN', 'NN', '.', '(', 'CD', ',', 'CD', ',', 'CD', 'NN']",32
hypernym_discovery,1,87,The hidden dimension of all neural models are 200 .,"['The', 'hidden', 'dimension', 'of', 'all', 'neural', 'models', 'are', '200', '.']","['O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O']","['DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'VBP', 'CD', '.']",10
hypernym_discovery,1,88,The batch size is set to 20 and the word embedding and sense embedding sizes are set to 300 .,"['The', 'batch', 'size', 'is', 'set', 'to', '20', 'and', 'the', 'word', 'embedding', 'and', 'sense', 'embedding', 'sizes', 'are', 'set', 'to', '300', '.']","['O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O']","['DT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'CD', 'CC', 'DT', 'NN', 'NN', 'CC', 'NN', 'NN', 'NNS', 'VBP', 'VBN', 'TO', 'CD', '.']",20
hypernym_discovery,1,89,"All of our models are trained on a single GPU ( NVIDIA GTX 980 Ti ) , with roughly 1.5h for general - purpose subtask for English and 0.5h domain - specific domain - specific ones for medical and music .","['All', 'of', 'our', 'models', 'are', 'trained', 'on', 'a', 'single', 'GPU', '(', 'NVIDIA', 'GTX', '980', 'Ti', ')', ',', 'with', 'roughly', '1.5h', 'for', 'general', '-', 'purpose', 'subtask', 'for', 'English', 'and', '0.5h', 'domain', '-', 'specific', 'domain', '-', 'specific', 'ones', 'for', 'medical', 'and', 'music', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['DT', 'IN', 'PRP$', 'NNS', 'VBP', 'VBN', 'IN', 'DT', 'JJ', 'NNP', '(', 'NNP', 'NNP', 'CD', 'NNP', ')', ',', 'IN', 'RB', 'CD', 'IN', 'JJ', ':', 'NN', 'NN', 'IN', 'NNP', 'CC', 'CD', 'NN', ':', 'JJ', 'NN', ':', 'JJ', 'NNS', 'IN', 'JJ', 'CC', 'NN', '.']",41
hypernym_discovery,1,96,"Convolution or recurrent gated mechanisms in either CNN - based ( CNN , RCNN ) or RNN ( GRU , LSTM ) based neural networks could essentially be helpful of modeling the semantic connections between words in a phrase , and guide the networks to discover the hypernym relationships .","['Convolution', 'or', 'recurrent', 'gated', 'mechanisms', 'in', 'either', 'CNN', '-', 'based', '(', 'CNN', ',', 'RCNN', ')', 'or', 'RNN', '(', 'GRU', ',', 'LSTM', ')', 'based', 'neural', 'networks', 'could', 'essentially', 'be', 'helpful', 'of', 'modeling', 'the', 'semantic', 'connections', 'between', 'words', 'in', 'a', 'phrase', ',', 'and', 'guide', 'the', 'networks', 'to', 'discover', 'the', 'hypernym', 'relationships', '.']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NN', 'CC', 'NN', 'VBN', 'NNS', 'IN', 'DT', 'NNP', ':', 'VBN', '(', 'NNP', ',', 'NNP', ')', 'CC', 'NNP', '(', 'NNP', ',', 'NNP', ')', 'VBN', 'JJ', 'NNS', 'MD', 'RB', 'VB', 'JJ', 'IN', 'VBG', 'DT', 'JJ', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NN', ',', 'CC', 'VB', 'DT', 'NNS', 'TO', 'VB', 'DT', 'JJ', 'NNS', '.']",50
hypernym_discovery,1,97,"We also observe CNN - based network performance is better than RNN - based , which indicates local features between words could be more important than long - term dependency in this task where the term length is up to trigrams .","['We', 'also', 'observe', 'CNN', '-', 'based', 'network', 'performance', 'is', 'better', 'than', 'RNN', '-', 'based', ',', 'which', 'indicates', 'local', 'features', 'between', 'words', 'could', 'be', 'more', 'important', 'than', 'long', '-', 'term', 'dependency', 'in', 'this', 'task', 'where', 'the', 'term', 'length', 'is', 'up', 'to', 'trigrams', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'RB', 'VBP', 'NNP', ':', 'VBN', 'NN', 'NN', 'VBZ', 'JJR', 'IN', 'NNP', ':', 'VBN', ',', 'WDT', 'VBZ', 'JJ', 'NNS', 'IN', 'NNS', 'MD', 'VB', 'RBR', 'JJ', 'IN', 'JJ', ':', 'NN', 'NN', 'IN', 'DT', 'NN', 'WRB', 'DT', 'NN', 'NN', 'VBZ', 'RP', 'TO', 'NNS', '.']",42
hypernym_discovery,1,98,"To investigate the performance of neural models on specific domains , we conduct experiments on medical and medicine subtask .","['To', 'investigate', 'the', 'performance', 'of', 'neural', 'models', 'on', 'specific', 'domains', ',', 'we', 'conduct', 'experiments', 'on', 'medical', 'and', 'medicine', 'subtask', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'JJ', 'NNS', ',', 'PRP', 'VBP', 'NNS', 'IN', 'JJ', 'CC', 'JJ', 'NN', '.']",20
hypernym_discovery,1,100,"All the neural models outperform term embedding averaging in terms of all the metrics and CNN - based network also performs better than RNN - based ones in most of the metrics using word embedding , which verifies our hypothesis in the general - purpose task .","['All', 'the', 'neural', 'models', 'outperform', 'term', 'embedding', 'averaging', 'in', 'terms', 'of', 'all', 'the', 'metrics', 'and', 'CNN', '-', 'based', 'network', 'also', 'performs', 'better', 'than', 'RNN', '-', 'based', 'ones', 'in', 'most', 'of', 'the', 'metrics', 'using', 'word', 'embedding', ',', 'which', 'verifies', 'our', 'hypothesis', 'in', 'the', 'general', '-', 'purpose', 'task', '.']","['O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PDT', 'DT', 'JJ', 'NNS', 'VBP', 'NN', 'VBG', 'VBG', 'IN', 'NNS', 'IN', 'PDT', 'DT', 'NNS', 'CC', 'NNP', ':', 'VBN', 'NN', 'RB', 'VBZ', 'JJR', 'IN', 'NNP', ':', 'VBN', 'NNS', 'IN', 'JJS', 'IN', 'DT', 'NNS', 'VBG', 'NN', 'NN', ',', 'WDT', 'VBZ', 'PRP$', 'NN', 'IN', 'DT', 'JJ', ':', 'NN', 'NN', '.']",47
hypernym_discovery,1,101,"Compared with word embedding , the sense embedding shows a much poorer result though they work closely in generalpurpose subtask .","['Compared', 'with', 'word', 'embedding', ',', 'the', 'sense', 'embedding', 'shows', 'a', 'much', 'poorer', 'result', 'though', 'they', 'work', 'closely', 'in', 'generalpurpose', 'subtask', '.']","['B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['VBN', 'IN', 'NN', 'NN', ',', 'DT', 'NN', 'NN', 'VBZ', 'DT', 'RB', 'JJR', 'NN', 'IN', 'PRP', 'VBP', 'RB', 'IN', 'JJ', 'NN', '.']",21
hypernym_discovery,5,2,CRIM at SemEval-2018 Task 9 : A Hybrid Approach to Hypernym Discovery,"['CRIM', 'at', 'SemEval-2018', 'Task', '9', ':', 'A', 'Hybrid', 'Approach', 'to', 'Hypernym', 'Discovery']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NN', 'IN', 'NNP', 'NNP', 'CD', ':', 'DT', 'NNP', 'NNP', 'TO', 'NNP', 'NNP']",12
hypernym_discovery,5,12,"The system developed by the CRIM team for the task of hypernym discovery exploits a combination of two approaches : an unsupervised , pattern - based approach and a supervised , projection learning approach .","['The', 'system', 'developed', 'by', 'the', 'CRIM', 'team', 'for', 'the', 'task', 'of', 'hypernym', 'discovery', 'exploits', 'a', 'combination', 'of', 'two', 'approaches', ':', 'an', 'unsupervised', ',', 'pattern', '-', 'based', 'approach', 'and', 'a', 'supervised', ',', 'projection', 'learning', 'approach', '.']","['O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'B-p', 'O', 'O', 'B-p', 'O', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'CD', 'NNS', ':', 'DT', 'JJ', ',', 'JJ', ':', 'VBN', 'NN', 'CC', 'DT', 'JJ', ',', 'NN', 'VBG', 'NN', '.']",35
hypernym_discovery,5,134,Our hybrid system was ranked 1st on all three sub - tasks for which we submitted runs .,"['Our', 'hybrid', 'system', 'was', 'ranked', '1st', 'on', 'all', 'three', 'sub', '-', 'tasks', 'for', 'which', 'we', 'submitted', 'runs', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['PRP$', 'JJ', 'NN', 'VBD', 'VBN', 'CD', 'IN', 'DT', 'CD', 'SYM', ':', 'NNS', 'IN', 'WDT', 'PRP', 'VBD', 'NNS', '.']",18
hypernym_discovery,5,135,"As shown in , the scores obtained using this system are much higher than the strongest baselines for this task .","['As', 'shown', 'in', ',', 'the', 'scores', 'obtained', 'using', 'this', 'system', 'are', 'much', 'higher', 'than', 'the', 'strongest', 'baselines', 'for', 'this', 'task', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', ',', 'DT', 'NNS', 'VBD', 'VBG', 'DT', 'NN', 'VBP', 'RB', 'JJR', 'IN', 'DT', 'JJS', 'NNS', 'IN', 'DT', 'NN', '.']",21
hypernym_discovery,5,136,"Furthermore , it is likely that we could improve our scores on 2A and 2B , since we only tuned the system on 1A .","['Furthermore', ',', 'it', 'is', 'likely', 'that', 'we', 'could', 'improve', 'our', 'scores', 'on', '2A', 'and', '2B', ',', 'since', 'we', 'only', 'tuned', 'the', 'system', 'on', '1A', '.']","['O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBZ', 'JJ', 'IN', 'PRP', 'MD', 'VB', 'PRP$', 'NNS', 'IN', 'CD', 'CC', 'CD', ',', 'IN', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'IN', 'CD', '.']",25
hypernym_discovery,5,137,"If we compare runs 1 and 2 of our hybrid system , we see that data augmentation improved our scores slightly on 1A and 2B , and increased them by several points on 2A .","['If', 'we', 'compare', 'runs', '1', 'and', '2', 'of', 'our', 'hybrid', 'system', ',', 'we', 'see', 'that', 'data', 'augmentation', 'improved', 'our', 'scores', 'slightly', 'on', '1A', 'and', '2B', ',', 'and', 'increased', 'them', 'by', 'several', 'points', 'on', '2A', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'O']","['IN', 'PRP', 'VBP', 'VBZ', 'CD', 'CC', 'CD', 'IN', 'PRP$', 'JJ', 'NN', ',', 'PRP', 'VBP', 'IN', 'NNS', 'NN', 'VBD', 'PRP$', 'NNS', 'RB', 'IN', 'CD', 'CC', 'CD', ',', 'CC', 'VBD', 'PRP', 'IN', 'JJ', 'NNS', 'IN', 'CD', '.']",35
hypernym_discovery,5,138,"Our cross-evaluation results are better than the supervised baseline computed using the normal evaluation setup , so training our system on general - purpose data produced better results on a domain - specific test set than a strong , supervised baseline trained on the domain - specific data .","['Our', 'cross-evaluation', 'results', 'are', 'better', 'than', 'the', 'supervised', 'baseline', 'computed', 'using', 'the', 'normal', 'evaluation', 'setup', ',', 'so', 'training', 'our', 'system', 'on', 'general', '-', 'purpose', 'data', 'produced', 'better', 'results', 'on', 'a', 'domain', '-', 'specific', 'test', 'set', 'than', 'a', 'strong', ',', 'supervised', 'baseline', 'trained', 'on', 'the', 'domain', '-', 'specific', 'data', '.']","['B-n', 'I-n', 'I-n', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'NNS', 'VBP', 'JJR', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'VBG', 'DT', 'JJ', 'NN', 'NN', ',', 'RB', 'VBG', 'PRP$', 'NN', 'IN', 'JJ', ':', 'NN', 'NNS', 'VBD', 'JJR', 'NNS', 'IN', 'DT', 'NN', ':', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', ',', 'JJ', 'NN', 'VBN', 'IN', 'DT', 'NN', ':', 'JJ', 'NNS', '.']",49
hypernym_discovery,5,140,"Note that the unsupervised system outperformed all other unsupervised systems evaluated on this task , and even outperformed the supervised baseline on 2A .","['Note', 'that', 'the', 'unsupervised', 'system', 'outperformed', 'all', 'other', 'unsupervised', 'systems', 'evaluated', 'on', 'this', 'task', ',', 'and', 'even', 'outperformed', 'the', 'supervised', 'baseline', 'on', '2A', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O']","['NN', 'IN', 'DT', 'JJ', 'NN', 'VBN', 'DT', 'JJ', 'JJ', 'NNS', 'VBN', 'IN', 'DT', 'NN', ',', 'CC', 'RB', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'CD', '.']",24
hypernym_discovery,5,143,"Given this observation , we find it somewhat surprising that run 1 is the best on all 3 test sets when we use the hybrid system .","['Given', 'this', 'observation', ',', 'we', 'find', 'it', 'somewhat', 'surprising', 'that', 'run', '1', 'is', 'the', 'best', 'on', 'all', '3', 'test', 'sets', 'when', 'we', 'use', 'the', 'hybrid', 'system', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O']","['VBN', 'DT', 'NN', ',', 'PRP', 'VBP', 'PRP', 'RB', 'JJ', 'IN', 'VBP', 'CD', 'VBZ', 'DT', 'JJS', 'IN', 'DT', 'CD', 'NN', 'NNS', 'WRB', 'PRP', 'VBP', 'DT', 'NN', 'NN', '.']",27
hypernym_discovery,5,146,"To assess the influence of different aspects of the supervised system and its training algorithm , we carried out a few simple ablation tests on subtask 1 A .","['To', 'assess', 'the', 'influence', 'of', 'different', 'aspects', 'of', 'the', 'supervised', 'system', 'and', 'its', 'training', 'algorithm', ',', 'we', 'carried', 'out', 'a', 'few', 'simple', 'ablation', 'tests', 'on', 'subtask', '1', 'A', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'CC', 'PRP$', 'NN', 'NN', ',', 'PRP', 'VBD', 'RP', 'DT', 'JJ', 'JJ', 'NN', 'NNS', 'IN', 'NN', 'CD', 'NNP', '.']",29
hypernym_discovery,5,165,"These results show that 2 of the techniques we used , namely subsampling and multitask learning , actually harmed our system 's performance on test set 1 A , although our experiments on the trial set suggested that they would be beneficial .","['These', 'results', 'show', 'that', '2', 'of', 'the', 'techniques', 'we', 'used', ',', 'namely', 'subsampling', 'and', 'multitask', 'learning', ',', 'actually', 'harmed', 'our', 'system', ""'s"", 'performance', 'on', 'test', 'set', '1', 'A', ',', 'although', 'our', 'experiments', 'on', 'the', 'trial', 'set', 'suggested', 'that', 'they', 'would', 'be', 'beneficial', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNS', 'VBP', 'IN', 'CD', 'IN', 'DT', 'NNS', 'PRP', 'VBD', ',', 'RB', 'VBG', 'CC', 'NN', 'NN', ',', 'RB', 'VBN', 'PRP$', 'NN', 'POS', 'NN', 'IN', 'NN', 'VBN', 'CD', 'NNP', ',', 'IN', 'PRP$', 'NNS', 'IN', 'DT', 'NN', 'NN', 'VBD', 'IN', 'PRP', 'MD', 'VB', 'JJ', '.']",43
hypernym_discovery,5,167,"On the other hand , fine - tuning the word embeddings during training seems to be one of the keys to the success of this approach , as are the use of multiple projection matrices , and the sampling of multiple negative examples for each positive example .","['On', 'the', 'other', 'hand', ',', 'fine', '-', 'tuning', 'the', 'word', 'embeddings', 'during', 'training', 'seems', 'to', 'be', 'one', 'of', 'the', 'keys', 'to', 'the', 'success', 'of', 'this', 'approach', ',', 'as', 'are', 'the', 'use', 'of', 'multiple', 'projection', 'matrices', ',', 'and', 'the', 'sampling', 'of', 'multiple', 'negative', 'examples', 'for', 'each', 'positive', 'example', '.']","['O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-p', 'B-p', 'I-p', 'I-p', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NN', ',', 'JJ', ':', 'VBG', 'DT', 'NN', 'VBZ', 'IN', 'VBG', 'VBZ', 'TO', 'VB', 'CD', 'IN', 'DT', 'NNS', 'TO', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'IN', 'VBP', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NNS', ',', 'CC', 'DT', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', '.']",48
hypernym_discovery,5,173,"We should also note that the supervised model is prone to overfitting , and we found early stopping to be particularly important .","['We', 'should', 'also', 'note', 'that', 'the', 'supervised', 'model', 'is', 'prone', 'to', 'overfitting', ',', 'and', 'we', 'found', 'early', 'stopping', 'to', 'be', 'particularly', 'important', '.']","['O', 'O', 'O', 'B-p', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'MD', 'RB', 'VB', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'JJ', 'TO', 'VBG', ',', 'CC', 'PRP', 'VBD', 'RB', 'VBG', 'TO', 'VB', 'RB', 'JJ', '.']",23
hypernym_discovery,7,3,"This paper describes 300 - sparsans ' participation in SemEval - 2018 Task 9 : Hypernym Discovery , with a system based on sparse coding and a formal concept hierarchy obtained from word embeddings .","['This', 'paper', 'describes', '300', '-', 'sparsans', ""'"", 'participation', 'in', 'SemEval', '-', '2018', 'Task', '9', ':', 'Hypernym', 'Discovery', ',', 'with', 'a', 'system', 'based', 'on', 'sparse', 'coding', 'and', 'a', 'formal', 'concept', 'hierarchy', 'obtained', 'from', 'word', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBZ', 'CD', ':', 'NNS', 'POS', 'NN', 'IN', 'NNP', ':', 'CD', 'NN', 'CD', ':', 'NNP', 'NNP', ',', 'IN', 'DT', 'NN', 'VBN', 'IN', 'NN', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'VBN', 'IN', 'NN', 'NNS', '.']",35
hypernym_discovery,7,14,Here we apply sparse feature pairs to hypernym extraction .,"['Here', 'we', 'apply', 'sparse', 'feature', 'pairs', 'to', 'hypernym', 'extraction', '.']","['O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O']","['RB', 'PRP', 'VBP', 'JJ', 'NN', 'NNS', 'TO', 'VB', 'NN', '.']",10
hypernym_discovery,7,16,Sparse representation is related to hypernymy in various natural ways .,"['Sparse', 'representation', 'is', 'related', 'to', 'hypernymy', 'in', 'various', 'natural', 'ways', '.']","['B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'O', 'O', 'O', 'O']","['JJ', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'IN', 'JJ', 'JJ', 'NNS', '.']",11
hypernym_discovery,7,17,One of them is through Formal concept Analysis ( FCA ) .,"['One', 'of', 'them', 'is', 'through', 'Formal', 'concept', 'Analysis', '(', 'FCA', ')', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['CD', 'IN', 'PRP', 'VBZ', 'IN', 'NNP', 'NN', 'NNP', '(', 'NNP', ')', '.']",12
hypernym_discovery,7,21,"Another natural formulation is related to hierarchical sparse coding , where trees describe the order in which variables "" enter the model "" ( i.e. , take non - zero values ) .","['Another', 'natural', 'formulation', 'is', 'related', 'to', 'hierarchical', 'sparse', 'coding', ',', 'where', 'trees', 'describe', 'the', 'order', 'in', 'which', 'variables', '""', 'enter', 'the', 'model', '""', '(', 'i.e.', ',', 'take', 'non', '-', 'zero', 'values', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'O', 'B-p', 'O', 'B-n', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O']","['DT', 'JJ', 'NN', 'VBZ', 'VBN', 'TO', 'JJ', 'NN', 'NN', ',', 'WRB', 'NNS', 'VBP', 'DT', 'NN', 'IN', 'WDT', 'NNS', 'VBP', 'VBP', 'DT', 'NN', 'NNP', '(', 'FW', ',', 'VBP', 'SYM', ':', 'NN', 'NNS', ')', '.']",33
hypernym_discovery,7,24,Exploiting the correspondence between the variable tree and the hypernym hierarchy offers itself as a natural choice .,"['Exploiting', 'the', 'correspondence', 'between', 'the', 'variable', 'tree', 'and', 'the', 'hypernym', 'hierarchy', 'offers', 'itself', 'as', 'a', 'natural', 'choice', '.']","['B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['VBG', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'PRP', 'IN', 'DT', 'JJ', 'NN', '.']",18
hypernym_discovery,7,98,"Our submission with attribute pairs achieved first place in categories ( 1B ) Italian ( all and entities ) , ( 1C ) Spanish entities , and ( 2B ) music entities .","['Our', 'submission', 'with', 'attribute', 'pairs', 'achieved', 'first', 'place', 'in', 'categories', '(', '1B', ')', 'Italian', '(', 'all', 'and', 'entities', ')', ',', '(', '1C', ')', 'Spanish', 'entities', ',', 'and', '(', '2B', ')', 'music', 'entities', '.']","['B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP$', 'NN', 'IN', 'JJ', 'NNS', 'VBN', 'JJ', 'NN', 'IN', 'NNS', '(', 'CD', ')', 'NN', '(', 'DT', 'CC', 'NNS', ')', ',', '(', 'CD', ')', 'JJ', 'NNS', ',', 'CC', '(', 'CD', ')', 'NN', 'NNS', '.']",33
hypernym_discovery,4,3,Hypernym discovery aims to discover the hypernym word sets given a hyponym word and proper corpus .,"['Hypernym', 'discovery', 'aims', 'to', 'discover', 'the', 'hypernym', 'word', 'sets', 'given', 'a', 'hyponym', 'word', 'and', 'proper', 'corpus', '.']","['B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['NNP', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN', 'NN', 'VBZ', 'VBN', 'DT', 'NN', 'NN', 'CC', 'JJ', 'NN', '.']",17
hypernym_discovery,4,11,"In the past SemEval contest ( Sem Eval - 2015 task 17 1 , SemEval - 2016 task 13 2 ) , the "" Hypernym Detection "" task was treated as a classfication task , i.e. , given a ( hyponym , hypernym ) pair , deciding whether the pair is a true hypernymic relation or not .","['In', 'the', 'past', 'SemEval', 'contest', '(', 'Sem', 'Eval', '-', '2015', 'task', '17', '1', ',', 'SemEval', '-', '2016', 'task', '13', '2', ')', ',', 'the', '""', 'Hypernym', 'Detection', '""', 'task', 'was', 'treated', 'as', 'a', 'classfication', 'task', ',', 'i.e.', ',', 'given', 'a', '(', 'hyponym', ',', 'hypernym', ')', 'pair', ',', 'deciding', 'whether', 'the', 'pair', 'is', 'a', 'true', 'hypernymic', 'relation', 'or', 'not', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'DT', 'JJ', 'NNP', 'NN', '(', 'NNP', 'NNP', ':', 'CD', 'NN', 'CD', 'CD', ',', 'NNP', ':', 'CD', 'NN', 'CD', 'CD', ')', ',', 'DT', 'NNP', 'NNP', 'NNP', 'NNP', 'NN', 'VBD', 'VBN', 'IN', 'DT', 'NN', 'NN', ',', 'FW', ',', 'VBN', 'DT', '(', 'NN', ',', 'NN', ')', 'NN', ',', 'VBG', 'IN', 'DT', 'NN', 'VBZ', 'DT', 'JJ', 'JJ', 'NN', 'CC', 'RB', '.']",58
hypernym_discovery,4,82,Word2vec is used to produce the word embeddings .,"['Word2vec', 'is', 'used', 'to', 'produce', 'the', 'word', 'embeddings', '.']","['B-n', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O']","['NNP', 'VBZ', 'VBN', 'TO', 'VB', 'DT', 'NN', 'NNS', '.']",9
hypernym_discovery,4,83,The skip - gram model ( - cbow 0 ) is used with the embedding dimension set to 300 ( - size 300 ) .,"['The', 'skip', '-', 'gram', 'model', '(', '-', 'cbow', '0', ')', 'is', 'used', 'with', 'the', 'embedding', 'dimension', 'set', 'to', '300', '(', '-', 'size', '300', ')', '.']","['O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', ':', 'NN', 'NN', '(', ':', 'NN', 'CD', ')', 'VBZ', 'VBN', 'IN', 'DT', 'VBG', 'NN', 'VBN', 'TO', 'CD', '(', ':', 'NN', 'CD', ')', '.']",25
hypernym_discovery,4,87,Results Based on Projection Learning,"['Results', 'Based', 'on', 'Projection', 'Learning']","['O', 'B-p', 'I-p', 'B-n', 'I-n']","['NNS', 'VBD', 'IN', 'NNP', 'NNP']",5
hypernym_discovery,4,91,"By using the same evaluating metrics as PRF in the cited paper , our best F - value on the validation set is 0.68 ( the paper result is 0.73 ) when the best cluster number is 2 and the threshold is ( 17.7 , 17.3 ) .","['By', 'using', 'the', 'same', 'evaluating', 'metrics', 'as', 'PRF', 'in', 'the', 'cited', 'paper', ',', 'our', 'best', 'F', '-', 'value', 'on', 'the', 'validation', 'set', 'is', '0.68', '(', 'the', 'paper', 'result', 'is', '0.73', ')', 'when', 'the', 'best', 'cluster', 'number', 'is', '2', 'and', 'the', 'threshold', 'is', '(', '17.7', ',', '17.3', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-n', 'O', 'O', 'B-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'VBG', 'DT', 'JJ', 'VBG', 'NNS', 'IN', 'NNP', 'IN', 'DT', 'JJ', 'NN', ',', 'PRP$', 'JJS', 'NNP', ':', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'CD', '(', 'DT', 'NN', 'NN', 'VBZ', 'CD', ')', 'WRB', 'DT', 'JJS', 'NN', 'NN', 'VBZ', 'CD', 'CC', 'DT', 'NN', 'VBZ', '(', 'CD', ',', 'CD', ')', '.']",48
hypernym_discovery,4,96,"This projection learning method performs not very well on task9 , we think the most probable reason is that in , the problem is formalized as a classification problem , in which the ( hyponym , hypernym ) pairs are given .","['This', 'projection', 'learning', 'method', 'performs', 'not', 'very', 'well', 'on', 'task9', ',', 'we', 'think', 'the', 'most', 'probable', 'reason', 'is', 'that', 'in', ',', 'the', 'problem', 'is', 'formalized', 'as', 'a', 'classification', 'problem', ',', 'in', 'which', 'the', '(', 'hyponym', ',', 'hypernym', ')', 'pairs', 'are', 'given', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NN', 'VBG', 'NN', 'NNS', 'RB', 'RB', 'RB', 'IN', 'NNS', ',', 'PRP', 'VBP', 'DT', 'RBS', 'JJ', 'NN', 'VBZ', 'IN', 'IN', ',', 'DT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'NN', ',', 'IN', 'WDT', 'DT', '(', 'NN', ',', 'NN', ')', 'NN', 'VBP', 'VBN', '.']",42
hypernym_discovery,4,99,Results Based on NN,"['Results', 'Based', 'on', 'NN']","['O', 'O', 'O', 'B-n']","['NNS', 'VBD', 'IN', 'NNP']",4
hypernym_discovery,4,102,The performance evaluated using either cross validation or the test data is much worse than that of a typical hypernym prediction task reported by .,"['The', 'performance', 'evaluated', 'using', 'either', 'cross', 'validation', 'or', 'the', 'test', 'data', 'is', 'much', 'worse', 'than', 'that', 'of', 'a', 'typical', 'hypernym', 'prediction', 'task', 'reported', 'by', '.']","['O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O']","['DT', 'NN', 'VBD', 'VBG', 'CC', 'JJ', 'NN', 'CC', 'DT', 'NN', 'NN', 'VBZ', 'JJ', 'JJR', 'IN', 'DT', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'VBN', 'IN', '.']",25
hypernym_discovery,4,104,"Although the method proposed by us is quite simple , our submissions are the 1st on Spanish , the 2nd on Italian , the 6th on English , ranked by the metric of MAP .","['Although', 'the', 'method', 'proposed', 'by', 'us', 'is', 'quite', 'simple', ',', 'our', 'submissions', 'are', 'the', '1st', 'on', 'Spanish', ',', 'the', '2nd', 'on', 'Italian', ',', 'the', '6th', 'on', 'English', ',', 'ranked', 'by', 'the', 'metric', 'of', 'MAP', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'VBN', 'IN', 'PRP', 'VBZ', 'RB', 'JJ', ',', 'PRP$', 'NNS', 'VBP', 'DT', 'CD', 'IN', 'JJ', ',', 'DT', 'CD', 'IN', 'JJ', ',', 'DT', 'CD', 'IN', 'NNP', ',', 'VBN', 'IN', 'DT', 'JJ', 'IN', 'NNP', '.']",35
hypernym_discovery,4,106,"Compared with the results got by cross validation , the performance evaluated on the test data ) dropped significantly on English ( MAP dropped by 4 % ) and Italian ( MAP dropped by 8 % ) , but increased by a margin on Spanish ( MAP increased by 3.6 % ) .","['Compared', 'with', 'the', 'results', 'got', 'by', 'cross', 'validation', ',', 'the', 'performance', 'evaluated', 'on', 'the', 'test', 'data', ')', 'dropped', 'significantly', 'on', 'English', '(', 'MAP', 'dropped', 'by', '4', '%', ')', 'and', 'Italian', '(', 'MAP', 'dropped', 'by', '8', '%', ')', ',', 'but', 'increased', 'by', 'a', 'margin', 'on', 'Spanish', '(', 'MAP', 'increased', 'by', '3.6', '%', ')', '.']","['B-p', 'I-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O']","['VBN', 'IN', 'DT', 'NNS', 'VBD', 'IN', 'NN', 'NN', ',', 'DT', 'NN', 'VBD', 'IN', 'DT', 'NN', 'NNS', ')', 'VBD', 'RB', 'IN', 'NNP', '(', 'NNP', 'VBN', 'IN', 'CD', 'NN', ')', 'CC', 'JJ', '(', 'NNP', 'VBN', 'IN', 'CD', 'NN', ')', ',', 'CC', 'VBN', 'IN', 'DT', 'NN', 'IN', 'JJ', '(', 'NNP', 'VBN', 'IN', 'CD', 'NN', ')', '.']",53
hypernym_discovery,6,2,EXPR at SemEval- 2018 Task 9 : A Combined Approach for Hypernym Discovery,"['EXPR', 'at', 'SemEval-', '2018', 'Task', '9', ':', 'A', 'Combined', 'Approach', 'for', 'Hypernym', 'Discovery']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NN', 'IN', 'JJ', 'CD', 'NN', 'CD', ':', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'NNP']",13
hypernym_discovery,6,32,"To tackle this task , we propose an approach that combines a path - based technique and distributional technique via concatenating two feature vectors : a feature vector constructed using dependency parser output and a feature vector obtained using term embeddings .","['To', 'tackle', 'this', 'task', ',', 'we', 'propose', 'an', 'approach', 'that', 'combines', 'a', 'path', '-', 'based', 'technique', 'and', 'distributional', 'technique', 'via', 'concatenating', 'two', 'feature', 'vectors', ':', 'a', 'feature', 'vector', 'constructed', 'using', 'dependency', 'parser', 'output', 'and', 'a', 'feature', 'vector', 'obtained', 'using', 'term', 'embeddings', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'B-n', 'I-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'O']","['TO', 'VB', 'DT', 'NN', ',', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', ':', 'VBN', 'NN', 'CC', 'JJ', 'NN', 'IN', 'VBG', 'CD', 'JJ', 'NNS', ':', 'DT', 'NN', 'NN', 'VBD', 'VBG', 'NN', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'VBD', 'VBG', 'NN', 'NNS', '.']",42
hypernym_discovery,6,33,"Then , by using the concatenated vector we create a binary supervised classifier model based on support vector machine ( SVM ) algorithm .","['Then', ',', 'by', 'using', 'the', 'concatenated', 'vector', 'we', 'create', 'a', 'binary', 'supervised', 'classifier', 'model', 'based', 'on', 'support', 'vector', 'machine', '(', 'SVM', ')', 'algorithm', '.']","['O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', ',', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'VBN', 'JJR', 'NN', 'VBN', 'IN', 'NN', 'NN', 'NN', '(', 'NNP', ')', 'NN', '.']",24
hypernym_discovery,6,34,The model predicts if a term and its candidate hypernym are hypernym related or not .,"['The', 'model', 'predicts', 'if', 'a', 'term', 'and', 'its', 'candidate', 'hypernym', 'are', 'hypernym', 'related', 'or', 'not', '.']","['O', 'B-n', 'B-n', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'CC', 'PRP$', 'NN', 'NN', 'VBP', 'VBN', 'JJ', 'CC', 'RB', '.']",16
hypernym_discovery,6,98,Results and Analysis,"['Results', 'and', 'Analysis']","['B-n', 'O', 'O']","['NNS', 'CC', 'NNP']",3
hypernym_discovery,6,101,"For the three corpora , our system performs better than STJU system , and it performs better than the MFH system on the English corpora .","['For', 'the', 'three', 'corpora', ',', 'our', 'system', 'performs', 'better', 'than', 'STJU', 'system', ',', 'and', 'it', 'performs', 'better', 'than', 'the', 'MFH', 'system', 'on', 'the', 'English', 'corpora', '.']","['B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'CD', 'NN', ',', 'PRP$', 'NN', 'VBZ', 'JJR', 'IN', 'NNP', 'NN', ',', 'CC', 'PRP', 'VBZ', 'JJR', 'IN', 'DT', 'NNP', 'NN', 'IN', 'DT', 'NNP', 'NN', '.']",26
hypernym_discovery,6,102,"In addition , the result shows that our system performs well in discovering new hypernyms not defined in the gold hypernyms where it yields good False Positive values in the three corpora and we achieve the best False Positive value in Medical corpus The evaluation results of our system and other supervised systems .","['In', 'addition', ',', 'the', 'result', 'shows', 'that', 'our', 'system', 'performs', 'well', 'in', 'discovering', 'new', 'hypernyms', 'not', 'defined', 'in', 'the', 'gold', 'hypernyms', 'where', 'it', 'yields', 'good', 'False', 'Positive', 'values', 'in', 'the', 'three', 'corpora', 'and', 'we', 'achieve', 'the', 'best', 'False', 'Positive', 'value', 'in', 'Medical', 'corpus', 'The', 'evaluation', 'results', 'of', 'our', 'system', 'and', 'other', 'supervised', 'systems', '.']","['O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'B-n', 'B-n', 'I-n', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'DT', 'NN', 'VBZ', 'IN', 'PRP$', 'NN', 'VBZ', 'RB', 'IN', 'VBG', 'JJ', 'NN', 'RB', 'VBN', 'IN', 'DT', 'NN', 'NN', 'WRB', 'PRP', 'VBZ', 'JJ', 'NNP', 'NNP', 'NNS', 'IN', 'DT', 'CD', 'NNS', 'CC', 'PRP', 'VBP', 'DT', 'JJS', 'JJ', 'NNP', 'NN', 'IN', 'NNP', 'VBD', 'DT', 'NN', 'NNS', 'IN', 'PRP$', 'NN', 'CC', 'JJ', 'JJ', 'NNS', '.']",54
hypernym_discovery,6,114,"As shown in the table 2 , the candidate hypernym extraction ( CHE ) coverage for English testing terms is 950 ( 63 % ) , that means our system is unable to extract any candidate hypernym for 550 ( 37 % ) terms ( 398 entities and 152 concepts ) .","['As', 'shown', 'in', 'the', 'table', '2', ',', 'the', 'candidate', 'hypernym', 'extraction', '(', 'CHE', ')', 'coverage', 'for', 'English', 'testing', 'terms', 'is', '950', '(', '63', '%', ')', ',', 'that', 'means', 'our', 'system', 'is', 'unable', 'to', 'extract', 'any', 'candidate', 'hypernym', 'for', '550', '(', '37', '%', ')', 'terms', '(', '398', 'entities', 'and', '152', 'concepts', ')', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', 'IN', 'DT', 'NN', 'CD', ',', 'DT', 'NN', 'NN', 'NN', '(', 'NNP', ')', 'NN', 'IN', 'NNP', 'NN', 'NNS', 'VBZ', 'CD', '(', 'CD', 'NN', ')', ',', 'DT', 'VBZ', 'PRP$', 'NN', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'NN', 'NN', 'IN', 'CD', '(', 'CD', 'NN', ')', 'NNS', '(', 'CD', 'NNS', 'CC', 'CD', 'NNS', ')', '.']",52
hypernym_discovery,2,2,Hypernyms under Siege : Linguistically - motivated Artillery for Hypernymy Detection,"['Hypernyms', 'under', 'Siege', ':', 'Linguistically', '-', 'motivated', 'Artillery', 'for', 'Hypernymy', 'Detection']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n']","['NNP', 'IN', 'NNP', ':', 'RB', ':', 'VBN', 'NNP', 'IN', 'NNP', 'NNP']",11
hypernym_discovery,2,10,"In the last two decades , the NLP community has invested a consistent effort in developing automated methods to recognize hypernymy .","['In', 'the', 'last', 'two', 'decades', ',', 'the', 'NLP', 'community', 'has', 'invested', 'a', 'consistent', 'effort', 'in', 'developing', 'automated', 'methods', 'to', 'recognize', 'hypernymy', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'JJ', 'CD', 'NNS', ',', 'DT', 'NNP', 'NN', 'VBZ', 'VBN', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'VBN', 'NNS', 'TO', 'VB', 'NN', '.']",22
hypernym_discovery,2,21,"In this paper we perform an extensive evaluation of various unsupervised distributional measures for hypernymy detection , using several distributional semantic models that differ by context type and feature weighting .","['In', 'this', 'paper', 'we', 'perform', 'an', 'extensive', 'evaluation', 'of', 'various', 'unsupervised', 'distributional', 'measures', 'for', 'hypernymy', 'detection', ',', 'using', 'several', 'distributional', 'semantic', 'models', 'that', 'differ', 'by', 'context', 'type', 'and', 'feature', 'weighting', '.']","['O', 'O', 'O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'JJ', 'NNS', 'IN', 'NN', 'NN', ',', 'VBG', 'JJ', 'JJ', 'JJ', 'NNS', 'IN', 'NN', 'IN', 'NN', 'NN', 'CC', 'NN', 'NN', '.']",31
hypernym_discovery,2,24,"We analyze the performance of the measures in different settings and suggest a principled way to select the suitable measure , context type and feature weighting according to the task setting , yielding consistent performance across datasets .","['We', 'analyze', 'the', 'performance', 'of', 'the', 'measures', 'in', 'different', 'settings', 'and', 'suggest', 'a', 'principled', 'way', 'to', 'select', 'the', 'suitable', 'measure', ',', 'context', 'type', 'and', 'feature', 'weighting', 'according', 'to', 'the', 'task', 'setting', ',', 'yielding', 'consistent', 'performance', 'across', 'datasets', '.']","['O', 'B-p', 'O', 'B-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NNS', 'IN', 'JJ', 'NNS', 'CC', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', ',', 'NN', 'NN', 'CC', 'NN', 'VBG', 'VBG', 'TO', 'DT', 'NN', 'NN', ',', 'VBG', 'JJ', 'NN', 'IN', 'NNS', '.']",38
hypernym_discovery,2,25,We also compare the unsupervised measures to the state - of - the - art supervised methods .,"['We', 'also', 'compare', 'the', 'unsupervised', 'measures', 'to', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'supervised', 'methods', '.']","['O', 'O', 'B-p', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['PRP', 'RB', 'VBP', 'DT', 'JJ', 'NNS', 'TO', 'DT', 'NN', ':', 'IN', ':', 'DT', ':', 'NN', 'VBD', 'NNS', '.']",18
hypernym_discovery,2,117,Experiments,['Experiments'],['B-n'],['NNS'],1
hypernym_discovery,2,118,Comparing Unsupervised Measures,"['Comparing', 'Unsupervised', 'Measures']","['B-n', 'I-n', 'I-n']","['VBG', 'VBN', 'NNS']",3
hypernym_discovery,2,131,"The results show preference to the syntactic context - types ( dep and joint ) , which might be explained by the fact that these contexts are richer ( as they contain both proximity and syntactic information ) and therefore more discriminative .","['The', 'results', 'show', 'preference', 'to', 'the', 'syntactic', 'context', '-', 'types', '(', 'dep', 'and', 'joint', ')', ',', 'which', 'might', 'be', 'explained', 'by', 'the', 'fact', 'that', 'these', 'contexts', 'are', 'richer', '(', 'as', 'they', 'contain', 'both', 'proximity', 'and', 'syntactic', 'information', ')', 'and', 'therefore', 'more', 'discriminative', '.']","['O', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['DT', 'NNS', 'VBP', 'NN', 'TO', 'DT', 'JJ', 'NN', ':', 'NNS', '(', 'NN', 'CC', 'NN', ')', ',', 'WDT', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNS', 'VBP', 'RB', '(', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'JJ', 'NN', ')', 'CC', 'RB', 'RBR', 'JJ', '.']",43
hypernym_discovery,2,132,"In feature weighting there is no consistency , but interestingly , raw frequency appears to be successful in hypernymy detection , contrary to previously reported results for word similarity tasks , where PPMI was shown to outperform it .","['In', 'feature', 'weighting', 'there', 'is', 'no', 'consistency', ',', 'but', 'interestingly', ',', 'raw', 'frequency', 'appears', 'to', 'be', 'successful', 'in', 'hypernymy', 'detection', ',', 'contrary', 'to', 'previously', 'reported', 'results', 'for', 'word', 'similarity', 'tasks', ',', 'where', 'PPMI', 'was', 'shown', 'to', 'outperform', 'it', '.']","['B-p', 'B-n', 'I-n', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'I-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', 'NN', 'EX', 'VBZ', 'DT', 'NN', ',', 'CC', 'RB', ',', 'JJ', 'NN', 'VBZ', 'TO', 'VB', 'JJ', 'IN', 'JJ', 'NN', ',', 'JJ', 'TO', 'RB', 'VBN', 'NNS', 'IN', 'NN', 'NN', 'NNS', ',', 'WRB', 'NNP', 'VBD', 'VBN', 'TO', 'VB', 'PRP', '.']",39
hypernym_discovery,2,133,The new SLQS variants are on top of the list in many settings .,"['The', 'new', 'SLQS', 'variants', 'are', 'on', 'top', 'of', 'the', 'list', 'in', 'many', 'settings', '.']","['O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O']","['DT', 'JJ', 'NNP', 'NNS', 'VBP', 'IN', 'NN', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NNS', '.']",14
hypernym_discovery,2,134,"In particular they perform well in discriminating hypernyms from symmetric relations ( antonymy , synonymy , coordination ) .","['In', 'particular', 'they', 'perform', 'well', 'in', 'discriminating', 'hypernyms', 'from', 'symmetric', 'relations', '(', 'antonymy', ',', 'synonymy', ',', 'coordination', ')', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'B-n', 'O', 'B-n', 'O', 'B-n', 'O', 'O']","['IN', 'JJ', 'PRP', 'VBP', 'RB', 'IN', 'VBG', 'NN', 'IN', 'JJ', 'NNS', '(', 'NN', ',', 'NN', ',', 'NN', ')', '.']",19
hypernym_discovery,2,181,Comparison to State - of - the - art Supervised Methods,"['Comparison', 'to', 'State', '-', 'of', '-', 'the', '-', 'art', 'Supervised', 'Methods']","['B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n']","['NNP', 'TO', 'NNP', ':', 'IN', ':', 'DT', ':', 'NN', 'VBD', 'NNS']",11
hypernym_discovery,2,191,"The over all performance of the embeddingbased classifiers is almost perfect , and in particular the best performance is achieved using the concatenation method with either GloVe or the dependency - based embeddings .","['The', 'over', 'all', 'performance', 'of', 'the', 'embeddingbased', 'classifiers', 'is', 'almost', 'perfect', ',', 'and', 'in', 'particular', 'the', 'best', 'performance', 'is', 'achieved', 'using', 'the', 'concatenation', 'method', 'with', 'either', 'GloVe', 'or', 'the', 'dependency', '-', 'based', 'embeddings', '.']","['O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['DT', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'VBZ', 'RB', 'JJ', ',', 'CC', 'IN', 'JJ', 'DT', 'JJS', 'NN', 'VBZ', 'VBN', 'VBG', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNP', 'CC', 'DT', 'NN', ':', 'VBN', 'NNS', '.']",34
hypernym_discovery,2,192,"As expected , the unsupervised measures perform worse than the embedding - based classifiers , though generally not bad on their own .","['As', 'expected', ',', 'the', 'unsupervised', 'measures', 'perform', 'worse', 'than', 'the', 'embedding', '-', 'based', 'classifiers', ',', 'though', 'generally', 'not', 'bad', 'on', 'their', 'own', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'VBN', ',', 'DT', 'JJ', 'NNS', 'VBP', 'JJR', 'IN', 'DT', 'VBG', ':', 'VBN', 'NNS', ',', 'RB', 'RB', 'RB', 'JJ', 'IN', 'PRP$', 'JJ', '.']",23
hypernym_discovery,3,2,Supervised Distributional Hypernym Discovery via Domain Adaptation,"['Supervised', 'Distributional', 'Hypernym', 'Discovery', 'via', 'Domain', 'Adaptation']","['O', 'O', 'B-n', 'I-n', 'O', 'B-n', 'I-n']","['VBN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP']",7
hypernym_discovery,3,18,"In addition , while not being taxonomy learning systems per se , semi-supervised systems for Information Extraction such as NELL rely crucially on taxonomized concepts and their relations within their learning process .","['In', 'addition', ',', 'while', 'not', 'being', 'taxonomy', 'learning', 'systems', 'per', 'se', ',', 'semi-supervised', 'systems', 'for', 'Information', 'Extraction', 'such', 'as', 'NELL', 'rely', 'crucially', 'on', 'taxonomized', 'concepts', 'and', 'their', 'relations', 'within', 'their', 'learning', 'process', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'NN', ',', 'IN', 'RB', 'VBG', 'JJ', 'VBG', 'NNS', 'IN', 'NN', ',', 'JJ', 'NNS', 'IN', 'NNP', 'NNP', 'JJ', 'IN', 'NNP', 'RB', 'RB', 'IN', 'VBN', 'NNS', 'CC', 'PRP$', 'NNS', 'IN', 'PRP$', 'JJ', 'NN', '.']",33
hypernym_discovery,3,25,"In this paper we propose TAXOEMBED 2 , a hypernym detection algorithm based on sense embeddings , which can be easily applied to the construction of lexical taxonomies .","['In', 'this', 'paper', 'we', 'propose', 'TAXOEMBED', '2', ',', 'a', 'hypernym', 'detection', 'algorithm', 'based', 'on', 'sense', 'embeddings', ',', 'which', 'can', 'be', 'easily', 'applied', 'to', 'the', 'construction', 'of', 'lexical', 'taxonomies', '.']","['O', 'O', 'O', 'O', 'B-p', 'B-n', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'PRP', 'VBP', 'JJ', 'CD', ',', 'DT', 'JJ', 'NN', 'NNS', 'VBN', 'IN', 'NN', 'NNS', ',', 'WDT', 'MD', 'VB', 'RB', 'VBN', 'TO', 'DT', 'NN', 'IN', 'JJ', 'NNS', '.']",29
hypernym_discovery,3,26,"It is designed to discover hypernymic relations by exploiting linear transformations in embedding spaces and , unlike previous approaches , leverages this intuition to learn a specific semanticallyaware transformation matrix for each domain of knowledge .","['It', 'is', 'designed', 'to', 'discover', 'hypernymic', 'relations', 'by', 'exploiting', 'linear', 'transformations', 'in', 'embedding', 'spaces', 'and', ',', 'unlike', 'previous', 'approaches', ',', 'leverages', 'this', 'intuition', 'to', 'learn', 'a', 'specific', 'semanticallyaware', 'transformation', 'matrix', 'for', 'each', 'domain', 'of', 'knowledge', '.']","['O', 'O', 'B-p', 'I-p', 'B-n', 'B-n', 'I-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['PRP', 'VBZ', 'VBN', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'VBG', 'JJ', 'NNS', 'IN', 'VBG', 'NNS', 'CC', ',', 'IN', 'JJ', 'NNS', ',', 'VBZ', 'DT', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', '.']",36
hypernym_discovery,3,27,Our best configuration ( ranking first in two thirds of the experiments conducted ) considers two training sources :,"['Our', 'best', 'configuration', '(', 'ranking', 'first', 'in', 'two', 'thirds', 'of', 'the', 'experiments', 'conducted', ')', 'considers', 'two', 'training', 'sources', ':']","['O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'O', 'O', 'O', 'O']","['PRP$', 'JJS', 'NN', '(', 'VBG', 'RB', 'IN', 'CD', 'NNS', 'IN', 'DT', 'NNS', 'VBN', ')', 'NNS', 'CD', 'NN', 'NNS', ':']",19
hypernym_discovery,3,28,( 1 ) Manually curated pairs from Wikidata ; and ( 2 ) Hypernymy relations from a KB which integrates several Open Information Extraction ( OIE ) systems .,"['(', '1', ')', 'Manually', 'curated', 'pairs', 'from', 'Wikidata', ';', 'and', '(', '2', ')', 'Hypernymy', 'relations', 'from', 'a', 'KB', 'which', 'integrates', 'several', 'Open', 'Information', 'Extraction', '(', 'OIE', ')', 'systems', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['(', 'CD', ')', 'RB', 'VBN', 'NNS', 'IN', 'NNP', ':', 'CC', '(', 'CD', ')', 'NNP', 'NNS', 'IN', 'DT', 'NNP', 'WDT', 'VBZ', 'JJ', 'NNP', 'NNP', 'NNP', '(', 'NNP', ')', 'NNS', '.']",29
hypernym_discovery,3,29,"Since our method uses a very large semantic network as reference sense inventory , we are able to perform jointly hypernym extraction and dis ambiguation , from which 1 The terminology is not entirely unified in this respect .","['Since', 'our', 'method', 'uses', 'a', 'very', 'large', 'semantic', 'network', 'as', 'reference', 'sense', 'inventory', ',', 'we', 'are', 'able', 'to', 'perform', 'jointly', 'hypernym', 'extraction', 'and', 'dis', 'ambiguation', ',', 'from', 'which', '1', 'The', 'terminology', 'is', 'not', 'entirely', 'unified', 'in', 'this', 'respect', '.']","['O', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['IN', 'PRP$', 'NN', 'VBZ', 'DT', 'RB', 'JJ', 'JJ', 'NN', 'IN', 'NN', 'NN', 'NN', ',', 'PRP', 'VBP', 'JJ', 'TO', 'VB', 'RB', 'JJ', 'NN', 'CC', 'JJ', 'NN', ',', 'IN', 'WDT', 'CD', 'DT', 'NN', 'VBZ', 'RB', 'RB', 'VBN', 'IN', 'DT', 'NN', '.']",39
hypernym_discovery,3,31,2 Data and source code available from the following link : www.taln.upf.edu/taxoembed . expanding existing ontologies becomes a trivial task .,"['2', 'Data', 'and', 'source', 'code', 'available', 'from', 'the', 'following', 'link', ':', 'www.taln.upf.edu/taxoembed', '.', 'expanding', 'existing', 'ontologies', 'becomes', 'a', 'trivial', 'task', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']","['CD', 'NNP', 'CC', 'NN', 'NN', 'JJ', 'IN', 'DT', 'JJ', 'NN', ':', 'NN', '.', 'VBG', 'VBG', 'NNS', 'VBZ', 'DT', 'JJ', 'NN', '.']",21
hypernym_discovery,3,131,"We compare against a number of taxonomy learning and Information Extraction systems , namely , WiBi and DefIE .","['We', 'compare', 'against', 'a', 'number', 'of', 'taxonomy', 'learning', 'and', 'Information', 'Extraction', 'systems', ',', 'namely', ',', 'WiBi', 'and', 'DefIE', '.']","['O', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O']","['PRP', 'VBP', 'IN', 'DT', 'NN', 'IN', 'JJ', 'NN', 'CC', 'NNP', 'NNP', 'NNS', ',', 'RB', ',', 'NNP', 'CC', 'NNP', '.']",19
hypernym_discovery,3,136,"Finally , DefIE is an automaic OIE system relying on the syntactic structure of pre-dis ambiguated definitions 13 .","['Finally', ',', 'DefIE', 'is', 'an', 'automaic', 'OIE', 'system', 'relying', 'on', 'the', 'syntactic', 'structure', 'of', 'pre-dis', 'ambiguated', 'definitions', '13', '.']","['O', 'O', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O', 'O']","['RB', ',', 'NNP', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'JJ', 'NNS', 'CD', '.']",19
hypernym_discovery,3,138,shows the results of TAXOEMBED and all comparison systems .,"['shows', 'the', 'results', 'of', 'TAXOEMBED', 'and', 'all', 'comparison', 'systems', '.']","['O', 'O', 'O', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['VBZ', 'DT', 'NNS', 'IN', 'NNP', 'CC', 'DT', 'NN', 'NNS', '.']",10
hypernym_discovery,3,139,"As expected , Yago and WiBi achieve the best over all results .","['As', 'expected', ',', 'Yago', 'and', 'WiBi', 'achieve', 'the', 'best', 'over', 'all', 'results', '.']","['O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-n', 'I-n', 'I-n', 'O']","['IN', 'VBN', ',', 'NNP', 'CC', 'NNP', 'VBP', 'DT', 'JJS', 'IN', 'DT', 'NNS', '.']",13
hypernym_discovery,3,140,"However , TAXOEM - BED , based solely on distributional information , performed competitively in detecting new hypernyms when compared to DefIE , improving its recall in most domains , and even surpassing Yago in technical areas like biology or health .","['However', ',', 'TAXOEM', '-', 'BED', ',', 'based', 'solely', 'on', 'distributional', 'information', ',', 'performed', 'competitively', 'in', 'detecting', 'new', 'hypernyms', 'when', 'compared', 'to', 'DefIE', ',', 'improving', 'its', 'recall', 'in', 'most', 'domains', ',', 'and', 'even', 'surpassing', 'Yago', 'in', 'technical', 'areas', 'like', 'biology', 'or', 'health', '.']","['O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'B-p', 'I-p', 'I-p', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'B-p', 'B-p', 'B-n', 'I-n', 'O', 'B-p', 'I-p', 'B-n', 'O', 'B-n', 'O', 'B-n', 'B-p', 'B-n', 'I-n', 'O', 'O', 'O', 'B-n', 'B-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'NNP', ':', 'NN', ',', 'VBN', 'RB', 'IN', 'JJ', 'NN', ',', 'VBN', 'RB', 'IN', 'VBG', 'JJ', 'NN', 'WRB', 'VBN', 'TO', 'NNP', ',', 'VBG', 'PRP$', 'NN', 'IN', 'JJS', 'NNS', ',', 'CC', 'RB', 'VBG', 'NNP', 'IN', 'JJ', 'NNS', 'IN', 'NN', 'CC', 'NN', '.']",42
hypernym_discovery,3,141,"However , our model does not perform particularly well on media and physics .","['However', ',', 'our', 'model', 'does', 'not', 'perform', 'particularly', 'well', 'on', 'media', 'and', 'physics', '.']","['O', 'O', 'B-n', 'I-n', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'O']","['RB', ',', 'PRP$', 'NN', 'VBZ', 'RB', 'VB', 'RB', 'RB', 'IN', 'NNS', 'CC', 'NNS', '.']",14
hypernym_discovery,0,2,ADAPT at SemEval- 2018 Task 9 : Skip - Gram Word Embeddings for Unsupervised Hypernym Discovery in Specialised Corpora,"['ADAPT', 'at', 'SemEval-', '2018', 'Task', '9', ':', 'Skip', '-', 'Gram', 'Word', 'Embeddings', 'for', 'Unsupervised', 'Hypernym', 'Discovery', 'in', 'Specialised', 'Corpora']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O']","['NNP', 'IN', 'NNP', 'CD', 'NNP', 'CD', ':', 'NNP', ':', 'NNP', 'NNP', 'NNP', 'IN', 'VBN', 'NNP', 'NNP', 'IN', 'JJ', 'NNP']",19
hypernym_discovery,0,4,This paper describes a simple but competitive unsupervised system for hypernym discovery .,"['This', 'paper', 'describes', 'a', 'simple', 'but', 'competitive', 'unsupervised', 'system', 'for', 'hypernym', 'discovery', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O']","['DT', 'NN', 'VBZ', 'DT', 'JJ', 'CC', 'JJ', 'JJ', 'NN', 'IN', 'JJ', 'NN', '.']",13
hypernym_discovery,0,20,The ADAPT team focused on the two specialised domain English subtasks by developing an unsupervised system that builds word embeddings from the supplied reference corpora for these domains .,"['The', 'ADAPT', 'team', 'focused', 'on', 'the', 'two', 'specialised', 'domain', 'English', 'subtasks', 'by', 'developing', 'an', 'unsupervised', 'system', 'that', 'builds', 'word', 'embeddings', 'from', 'the', 'supplied', 'reference', 'corpora', 'for', 'these', 'domains', '.']","['O', 'B-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'I-p', 'O', 'B-n', 'I-n', 'O', 'B-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['DT', 'NNP', 'NN', 'VBD', 'IN', 'DT', 'CD', 'VBD', 'NN', 'JJ', 'NNS', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'NN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NNS', '.']",29
hypernym_discovery,0,25,"Even though unsupervised systems tend to rank behind supervised systems in NLP tasks in general , our motivation to focus on an unsupervised approach is derived from the fact that they do not require explicit hand - annotated data , and from the expectation that they are able to generalise more easily to unseen hypernym - hyponym pairs .","['Even', 'though', 'unsupervised', 'systems', 'tend', 'to', 'rank', 'behind', 'supervised', 'systems', 'in', 'NLP', 'tasks', 'in', 'general', ',', 'our', 'motivation', 'to', 'focus', 'on', 'an', 'unsupervised', 'approach', 'is', 'derived', 'from', 'the', 'fact', 'that', 'they', 'do', 'not', 'require', 'explicit', 'hand', '-', 'annotated', 'data', ',', 'and', 'from', 'the', 'expectation', 'that', 'they', 'are', 'able', 'to', 'generalise', 'more', 'easily', 'to', 'unseen', 'hypernym', '-', 'hyponym', 'pairs', '.']","['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-n', 'I-n', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-p', 'I-p', 'O', 'O', 'O', 'O', 'B-n', 'B-n', 'I-n', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'O']","['RB', 'IN', 'JJ', 'NNS', 'VBP', 'TO', 'VB', 'IN', 'JJ', 'NNS', 'IN', 'NNP', 'NNS', 'IN', 'JJ', ',', 'PRP$', 'NN', 'TO', 'VB', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'IN', 'PRP', 'VBP', 'RB', 'VB', 'JJ', 'NN', ':', 'VBN', 'NNS', ',', 'CC', 'IN', 'DT', 'NN', 'IN', 'PRP', 'VBP', 'JJ', 'TO', 'VB', 'RBR', 'RB', 'TO', 'JJ', 'JJ', ':', 'NN', 'NNS', '.']",59
hypernym_discovery,0,60,Results,['Results'],['B-n'],['NNS'],1
hypernym_discovery,0,61,Our official submission ranked at eleven out of eighteen on the medical domain subtask with a Mean Average Precision ( MAP ) of 8.13 .,"['Our', 'official', 'submission', 'ranked', 'at', 'eleven', 'out', 'of', 'eighteen', 'on', 'the', 'medical', 'domain', 'subtask', 'with', 'a', 'Mean', 'Average', 'Precision', '(', 'MAP', ')', 'of', '8.13', '.']","['B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'I-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'I-n', 'I-n', 'B-p', 'B-n', 'O']","['PRP$', 'JJ', 'NN', 'VBD', 'IN', 'VBN', 'IN', 'IN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'JJ', 'NN', '(', 'NNP', ')', 'IN', 'CD', '.']",25
hypernym_discovery,0,62,"However , it ranked first place among all the unsupervised systems on this subtask .","['However', ',', 'it', 'ranked', 'first', 'place', 'among', 'all', 'the', 'unsupervised', 'systems', 'on', 'this', 'subtask', '.']","['O', 'O', 'O', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'O', 'O', 'O']","['RB', ',', 'PRP', 'VBD', 'JJ', 'NN', 'IN', 'PDT', 'DT', 'JJ', 'NNS', 'IN', 'DT', 'NN', '.']",15
hypernym_discovery,0,63,"On the music industry domain subtask , our system ranked 13th out of 16 places with a MAP of 1.88 , ranking 4th among the unsupervised systems .","['On', 'the', 'music', 'industry', 'domain', 'subtask', ',', 'our', 'system', 'ranked', '13th', 'out', 'of', '16', 'places', 'with', 'a', 'MAP', 'of', '1.88', ',', 'ranking', '4th', 'among', 'the', 'unsupervised', 'systems', '.']","['B-p', 'O', 'B-n', 'I-n', 'I-n', 'I-n', 'O', 'B-n', 'I-n', 'B-p', 'B-n', 'B-p', 'I-p', 'B-n', 'I-n', 'B-p', 'O', 'B-n', 'B-p', 'B-n', 'O', 'B-p', 'B-n', 'B-p', 'O', 'B-n', 'I-n', 'O']","['IN', 'DT', 'NN', 'NN', 'NN', 'NN', ',', 'PRP$', 'NN', 'VBD', 'CD', 'IN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'NNP', 'IN', 'CD', ',', 'VBG', 'CD', 'IN', 'DT', 'JJ', 'NNS', '.']",28
